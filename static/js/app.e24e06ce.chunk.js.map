{"version":3,"sources":["src/core/theme/index.ts","src/core/animation.ts","src/core/layouts/index.ts","src/constants/index.tsx","src/utils/index.ts","src/components/Image/index.tsx","src/components/Text/index.tsx","src/components/View/index.tsx","src/components/templates/Profile.tsx","src/core/clusters/index.ts","src/components/Graphics/index.tsx","src/components/Pressable/index.tsx","src/core/config.ts","src/hooks/useGraph.ts","src/hooks/useElement.ts","src/hooks/useNode.ts","src/hooks/useGraphEditor.ts","src/components/Container/index.tsx","src/core/utils/events.tsx","src/components/ClusterNodeContainer/index.tsx","src/components/EdgeContainer/index.tsx","src/hooks/useEdge.ts","src/components/NodeContainer/index.tsx","src/components/Graph/DefaultRenderClusterNode.tsx","src/components/Graph/DefaultRenderNode.tsx","src/components/Graph/DefaultRenderEdge.tsx","src/components/Viewport/index.tsx","src/components/Graph/index.tsx","src/components/index.ts","src/components/HoverContainer/index.tsx","src/components/ContextMenu.tsx","src/utils/TimeoutManager/smart-timer.ts","src/utils/TimeoutManager/index.ts","src/components/Icon.tsx","src/utils/DocumentPicker/index.ts","src/components/GraphEditor/ActionBar/LayoutOptions/getFormProps.tsx","src/components/GraphEditor/ActionBar/LayoutOptions/index.tsx","src/components/GraphEditor/ActionBar/index.tsx","src/hooks/useDrag.tsx","src/components/ResizeDivider.tsx","src/components/GraphEditor/DataBar/JSONEditor.tsx","src/components/GraphEditor/DataBar/GlobalNetworkStatistics.tsx","src/components/GraphEditor/DataBar/LocalNetworkStatistics.tsx","src/components/GraphEditor/DataBar/ConnectedElements.tsx","src/components/GraphEditor/DataBar/index.tsx","src/components/GraphEditor/ModalComponent.tsx","src/components/GraphEditor/MouseIcon.tsx","src/components/GraphEditor/PreferencesModal/index.tsx","src/components/GraphEditor/RecordedEventsModal.tsx","src/components/SortableList.tsx","src/components/SpeedDialCreator.tsx","src/components/TabPanel.tsx","src/components/GraphEditor/SettingsBar/ClusterTable/CreateClusterByAlgorithm.tsx","src/components/GraphEditor/SettingsBar/ClusterTable/index.tsx","src/components/GraphEditor/SettingsBar/EventHistoryTable.tsx","src/components/GraphEditor/SettingsBar/PlaylistTable/index.tsx","src/components/GraphEditor/SettingsBar/index.tsx","src/components/GraphEditor/index.tsx","src/utils/useTimeoutManager.tsx","_examples/CaseLawExplorerExample/constants.tsx","src/utils/createHistory.ts","src/components/GraphEditor/modals/ElementSettingsModal.tsx","src/plugins/controller/index.tsx","src/plugins/createSchema.ts","_examples/CaseLawExplorerExample/RenderNode.tsx","_examples/CaseLawExplorerExample/RenderEdge.tsx","_examples/CaseLawExplorerExample/API.ts","_examples/CaseLawExplorerExample/QueryBuilder/constants.tsx","_examples/CaseLawExplorerExample/QueryBuilder/index.tsx","_examples/CaseLawExplorerExample/HelpModal.tsx","_examples/CaseLawExplorerExample/index.tsx","App.tsx"],"names":["DefaultTheme","palette","common","black","white","mode","primary","light","main","dark","contrastText","secondary","error","warning","info","success","grey","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","contrastThreshold","tonalOffset","text","disabled","divider","background","paper","default","action","active","hover","hoverOpacity","selected","selectedOpacity","disabledBackground","disabledOpacity","focus","focusOpacity","activatedOpacity","DarkTheme","icon","Context","Provider","useProvider","createProvider","value","ThemeProvider","useTheme","animationOptions","animate","animationEasing","animationDuration","animateFilter","animationThreshold","cose","name","ready","stop","refresh","fit","padding","nodeDimensionsIncludeLabels","randomize","componentSpacing","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","edgeElasticity","nestingFactor","gravity","numIter","initialTemp","coolingFactor","minTemp","breadthfirst","directed","circle","grid","spacingFactor","avoidOverlap","roots","undefined","maximal","transform","position","concentric","startAngle","Math","PI","sweep","clockwise","equidistant","minNodeSpacing","height","width","degree","levelWidth","nodes","maxDegree","radius","sort","avoidOverlapPadding","condense","rows","cols","random","euler","springLength","springCoeff","mass","pull","theta","dragCoeff","movementThreshold","timeStep","maxIterations","ungrabifyWhileSimulating","cise","nodeSeparation","idealInterClusterEdgeLengthCoefficient","allowNodesInsideCircle","maxRatioOfNodesInsideCircle","gravityRange","cola","maxSimulationTime","handleDisconnected","convergenceThreshold","nodeSpacing","flow","alignment","gapInequalities","edgeLength","edgeSymDiffLength","edgeJaccardLength","unconstrIter","userConstIter","allConstIter","avsdf","dagre","nodeSep","edgeSep","rankSep","rankDir","ranker","minLen","edgeWeight","i","pos","spread","minDist","expandingFactor","prelayout","maxExpandIterations","klay","EVENT","ELEMENT_DATA_FIELDS","EDITOR_MODE","ADD","DELETE","CONTINUES_ADD","CONTINUES_DELETE","DEFAULT","ADD_CLUSTER_ELEMENT","LAYOUT_NAMES","Object","keys","Layouts","CYTOSCAPE_EVENT","QUALITY_LEVEL","processProps","props","mutableInstance","preprocessProps","IS_FLEX_DEFAULT","applyDefaultProps","instance","oldProps","newProps","config","isFlex","rescaleToYoga","style","restProps","flex","yoga","flexDirection","keepAspectRatio","R","resizeMode","fromConfig","_visible","visible","nativeApplyDefaultProps","getTextureFromProps","elementType","pureProps","source","rest","isUriSource","image","uri","texture","emitChange","requestAnimationFrame","window","dispatchEvent","CustomEvent","check","inType","validator","hasOwnProperty","valid","typeofs","some","t","instanceofs","PIXI","result","HTMLImageElement","HTMLVideoElement","HTMLCanvasElement","from","once","getSelectedItemByElement","element","id","targetPath","isNode","index","findIndex","targetItem","item","getSelectedElementInfo","controllerState","graphEditor","itemIds","selectedElementIds","selectedItemId","selectedElement","cy","$id","selectedItem","type","getLabel","path","readTextFile","async","blob","encoding","Promise","res","rej","reader","FileReader","addEventListener","readAsText","calculateObjectBoundsWithoutChildren","container","x","scale","y","children","length","object","getChildAt","removeChildren","forEach","child","addChild","box","getClusterVisibility","clusters","cluster","ids","includes","calculateVisibilityByContext","context","contextUtils","get","values","settings","visibility","throttleTimeTable","getBoundingBox","startPos","endPos","abs","cyUnselectAll","elements","unselect","getPointerPositionOnViewport","viewport","event","getEventClientPosition","options","interaction","mapPositionToPoint","left","top","e","touches","changedTouches","clientX","clientY","update","data","getNodeContext","getEdgeContext","getElementData","getItemFromElement","ImagePIXI","PixiComponent","create","applyProps","_props","Image","wrapComponent","PositionStyleKeys","processTextProps","textStyle","key","C","TextPIXI","isSprite","color","theme","pixiText","updateText","forceToRender","_","__","oldPropsRest","propsRest","Text","forwardedRef","count","setCount","React","useState","ref","c","isForwardRef","ViewPIXI","backgroundColor","borderRadius","borderWidth","borderColor","clear","beginFill","lineStyle","drawCircle","drawRoundedRect","endFill","View","ProfileTemplate","story","link","onClick","paddingLeft","paddingTop","interactive","buttonMode","pointertap","open","title","paragraph","fontFamily","fontSize","wordWrap","wordWrapWidth","getAttribute","params","pathText","edges","find","split","Clusters","markov","attributes","markovClustering","getByItem","configSchema","required","properties","expandFactor","inflateFactor","multFactor","configForm","defaultValue","kMeans","k","distance","enum","sensitivityThreshold","choices","kMedoids","fuzzyCMeans","hierarchical","hierarchicalClustering","linkage","threshold","dendrogramDepth","addDendrogram","affinityPropagation","preference","damping","maximum","minimum","includeMin","minIterations","max","min","controlPointsCreator","to","unitVector","normVector","upperVector","V","lowerVector","chunkDistanceVector","semiChunkDistanceVector","isUpper","startVec","endVec","start","mid","end","midVec","drawLine","fromBoundingBox","toBoundingBox","fill","graphics","alpha","arrowHead","margin","undirectedUnitVector","undirectedNormVector","marginVector","radiusFrom","hypot","radiusTo","centerOfFrom","centerOfTo","bottomCenter","unitDistanceVec","perpendicularUnitDistanceVec","leftControlPoint","rightControlPoint","topControlPoint","drawPolygon","drawArrowHead","controlPoints","control1","control2","moveTo","bezierCurveTo","lineTo","zIndex","GraphicsPIXI","Graphics","forwardRef","ROUND_PIXELS","PRECISION_FRAGMENT","LOW","RESOLUTION","SCALE_MODE","NEAREST","mutableGraphMap","useElement","contextRef","renderEvents","initializedRef","useInitializedRef","useEffect","current","eventName","on","render","connectedEdges","emit","target","removeListener","oldFiltered","filtered","filter","test","useMemo","hovered","DEFAULT_BOUNDING_BOX","onPositionChange","graphID","isCluster","clustersByNodeId","clustersByChildClusterId","setState","useStateWithCallback","useRef","callback","mutableEdge","boundingBox","add","group","remove","clusterVisibility","oldVisible","useSelector","createStoreProvider","immer","GraphEditorProvider","useGraphEditor","Container","onDrag","draggable","onDown","onMove","mutableData","document","keepDragging","dragTrack","posDiff","parent","originalEvent","DEFAULT_POSITION","ClusterNodeContainer","graphRef","containerRef","positionAcc","clusterElementPos","calculatedPosition","useNode","useCallback","opacity","calculateEdgeGroupInfo","edgeID","targetElement","sourceElement","betweenEdges","edgesWith","betweenEdgesCount","betweenEdgesMedian","floor","edgeIndex","edgeEl","sortedIndex","calculateVectorInfo","fromPosition","toPosition","distanceVector","midpointPosition","sign","EdgeContainer","defaultDrawLine","graphicsRef","drawLineCallback","edgeGroupInfo","sourceElementContext","targetElementContext","nodeFiltered","nodeVisible","nodeDataUpdated","sourceContext","targetContext","sourceVisible","targetVisible","newNodeVisible","forceRender","oldNodeFiltered","newNodeFiltered","useEdge","mouseover","mouseout","NodeContainer","DefaultRenderClusterNode","hasSelectedEdge","justifyContent","alignItems","display","select","substring","DefaultRenderNode","DefaultRenderEdge","DEFAULT_EVENT_HANDLER","ReactViewportComp","app","renderer","ticker","stage","onCreate","onBoxSelectionStart","onBoxSelection","onBoxSelectionEnd","ViewportNative","screenWidth","screenHeight","worldWidth","worldHeight","plugins","passiveWheel","divWheel","view","sortableChildren","drag","pressDrag","pinch","wheel","trackpadPinch","wheelZoom","localDataRef","boxSelection","enabled","startPosition","currentPosition","boxElement","currentTarget","isMultipleTouches","pause","isClick","setTimeout","resume","endPosition","removeChild","destroy","pBoxElement","drawGraphics","preventDefault","mutableViewport","onPress","zoom","resize","clickEvent","toWorld","global","nativeEvent","setZoom","setTransform","scaleX","scaleY","rotation","skewX","skewY","pivotX","pivotY","didMount","willUnmount","Viewport","useApp","viewportRef","useForwardRef","keyboardRef","pressedKeys","intervalTimeout","keyDownListener","body","interval","setInterval","center","pointer","map","newCenter","keyUpListener","clearInterval","removeEventListener","DEFAULT_NODE_CONFIG","DEFAULT_EDGE_CONFIG","DEFAULT_CONFIG","Graph","renderNode","renderEdge","extraData","configProp","renderClusterNode","graphId","stageRef","onLoad","isExistRef","graph","cyInstance","cytoscape","headless","styleEnabled","nodeID","clusterById","push","childClusterIds","clusterId","useGraph","graphLayoutRef","objectCount","qualityLevel","oldQualityLevel","HIGH","LINEAR","MEDIUM","adjustVisualQuality","layout","dirty","hitArea","x1","y1","w","h","createLayout","nodeConfigIds","globalNodeConfig","edgeConfigIds","globalEdgeConfig","onPressCallback","resolution","devicePixelRatio","antialias","autoDensity","elementIds","selectedCollection","elementPosition","x_","y_","isPositionInBox","accessor","keyExtractor","renderItem","isEqual","Function","Pressable","viewRef","mutableContainer","HoverContainer","renderHoverElement","state","onHoverStart","onHoverEnd","pointerover","pointerout","EDGE","NODE","ContextMenu","onSelect","items","graphEditorRef","Portal","Menu","onClose","anchorReference","anchorPosition","label","MenuItem","MetadataRecord","constructor","ms","Date","getTime","Timeout","erase","clearTimeout","keyId","metadata","originalMs","args","Error","toString","executedTime","executed","exists","set","paused","metaDataRecord","timeSpentWaiting","startTime","remainingTime","replace","lastExecuted","pending","remaining","restart","newCallback","newMs","newParams","createTimeoutManager","timers","onFinish","onFinishCallback","autostart","onPlayChanged","onPlayChangedCallback","isEmpty","timeoutInstances","afterTotal","started","controller","durationCounter","createDurationCounter","totalDuration","after","duration","currentIndex","finished","timeoutInstance","timer","instantiate","ICONS","assessment","Assessment","add_circle","AddCircle","addjust","Adjust","cancel_rounded","CancelRounded","delete_rounded","DeleteRounded","record_voice_over_rounded","RecordVoiceOverRounded","build_circle_outlined","BuildCircleOutlined","more_vert","MoreVert","edit","Edit","build_circle","BuildCircle","repeat_one","RepeatOne","sort_by_alpha","SortByAlpha","close","Close","info_outlined","InfoOutlined","Filter","arrow_drop_down_rounded","ArrowDropDownRounded","arrow_drop_up_rounded","ArrowDropUpRounded","bookmarks","Bookmarks","bookmark","Bookmark","bookmark_border","BookmarkBorder","minimize","Minimize","videocam","Videocam","fiber_manual_record","FiberManualRecord","Settings","redo","Redo","chevron_left","ChevronLeft","chevron_right","ChevronRight","keyboard_arrow_up","KeyboardArrowUp","keyboard_arrow_down","KeyboardArrowDown","playlist_add","PlaylistAdd","playlist_play","PlaylistPlay","expand_more","ExpandMore","play_arrow","PlayArrow","navigate_before","NavigateBefore","navigate_next","NavigateNext","beenhere","Beenhere","unfold_less","UnfoldLess","unfold_more","UnfoldMore","my_location","MyLocation","drag_handle","DragHandle","Icon","IconSelected","uuidv4","multiple","input","createElement","setAttribute","appendChild","resolve","reject","files","targetFile","onerror","onload","file","lastModified","size","output","readAsDataURL","MouseEvent","asNumber","guessType","utils","nums","Set","processValue","schema","has","every","LayoutNameSelect","readonly","autofocus","onChange","onBlur","onFocus","rawErrors","enumOptions","enumDisabled","emptyValue","anchorEl","onOpen","useDisclosure","hoveredIndexRef","TextField","autoFocus","InputLabelProps","shrink","SelectProps","indexOf","onMouseEnter","onMouseLeave","LayoutNameItem","openInfo","isOpen","Typography","src","alt","LayoutOptions","onEvent","onSubmitCallback","payload","form","formData","Box","Button","sx","Popover","anchorOrigin","vertical","horizontal","transformOrigin","Backdrop","drawer","uiSchema","onSubmit","DEFAULT_ACTIONS","delete","recordEvents","actions","import","RECORDING_STATUS_MAP","OPTIONS","Import","Export","ImportEvents","MoreOptions","renderMoreAction","onAction","theming","IconButton","option","DocumentPicker","getDocumentAsync","fileText","JSON","parse","handleMenuItemClick","FormControl","fullWidth","InputLabel","Select","labelId","themeOption","ActionBar","autoOpen","recording","eventRecording","LeftComponent","right","RightComponent","graphConfig","editor","animationStyle","animationRef","useAnimation","bottom","autoPlay","play","recordingRef","styles","button","startIcon","variant","onDoubleClick","Recorder","getStream","captureStream","startRecording","stopRecording","status","onStop","avoidHistoryRecording","marginRight","useDrag","prevX","prevY","panelRect","getBoundingClientRect","mousemove","stopPropagation","cancelBubble","returnValue","pauseEvent","newX","newY","mouseup","ResizeDivider","onHover","cursor","JSONEditor","newData","ace","GlobalNetworkStatistics","Accordion","defaultExpanded","AccordionSummary","aria-controls","AccordionDetails","collapsed","onCollapse","noChild","alignContent","LocalNetworkStatistics","ConnectedElements","itemList","toArray","List","dense","ListItem","ListItemIcon","ListItemText","DataBar","editable","header","HeaderComponent","footer","FooterComponent","networkStatistics","globalLabel","localLabel","isGlobalLabelFirst","graphEditorConfig","isGlobalFirst","local","hasStatistics","val","isEditing","onMouseDown","rect","Paper","overflowY","overflowX","wordBreak","isLocalLabel","isGlobalLabel","textDecoration","component","isValidURL","align","href","Divider","url","URL","protocol","ModalComponent","onCloseCallback","Modal","onBackdropClick","maxWidth","maxHeight","overflow","MouseIcon","onMouseMove","PreferencesModal","sidebar","MOCK_SIDEBAR_DATA","components","createDrawer","Slide","in","orientation","flexItem","Breadcrumbs","aria-label","Link","labelTextSize","historyTabVisible","playlistTabVisible","SidebarItem","propItem","setOpen","String","hasChildren","Collapse","timeout","unmountOnExit","disablePadding","ml","RecordedEventsModal","timeoutManager","alert","currentTimer","BackdropProps","CircularProgressWithLabel","CircularProgress","round","SortableList","onReorder","onDragEnd","droppableId","destination","droppableProvided","droppableSnapshot","droppableProps","innerRef","draggableId","provided","snapshot","rubric","placeholder","SpeedDialCreator","SpeedDial","ariaLabel","ICON_SIZE","FabProps","minWidth","minHeight","direction","SpeedDialAction","tooltipTitle","tooltipPlacement","TabPanel","role","hidden","aria-labelledby","CLUSTER_ALGORITHM_NAMES","CreateClusterByAlgorithm","updateState","useImmer","selectedClusterName","draft","clusterName","ClusterTable","createClusterForm","editorMode","graphEditorLocalDataRef","expanded","selectedClusterIds","currentTab","createClusterDialog","hasSelected","Card","Checkbox","checked","inputProps","fromIndex","toIndex","draggableProps","SpeedDialActionsView","disableFocusRipple","disableRipple","disableTouchRipple","dragHandleProps","elementId","ListItemAvatar","ListItemSecondaryAction","Dialog","DialogTitle","marginBottom","issuedClusterId","EventHistoryTable","onCreatePlaylistClick","selectedEventIds","eventHistory","avoidEventRecording","events","undoEvents","PlaylistTable","createPlaylistDialog","onCreatePlaylist","playlists","selectedPlaylistIds","playlist","SettingsBar","forms","Fragment","marginTop","playlistWithoutEvents","playlistEvents","eventId","other","date","MODE_ICON_MAP_BY_URL","DEFAULT_HANDLER","DEFAULT_GRAPH_EDITOR_CONFIG","enableNetworkStatistics","extractGraphEditorData","cache","stringify","convert","dataBar","actionBar","GraphEditor","onEventCallback","settingsBar","preferencesModal","isLoading","modals","isFocusMode","initialized","targetNode","newClusterBoxSelection","contextMenu","eventsModal","collection","eventInfo","clusterCollections","clusterLength","el","eventTimeoutsManager","deps","renderOnTimeout","renderOnFinished","renderOnPlayChanged","useTimeoutManager","getMilliseconds","graphEditorValue","delay","_id","time","throttle","pageY","offsetHeight","offsetTop","rightclick","labelPath","modalName","otherItem","SliderUIField","gutterBottom","Slider","valueLabelDisplay","VIEW_CONFIG_SCHEMA","additionalProperties","nodeSize","nodeColor","DEFAULT_HISTORY_DATA_ITEM","EVENT_TYPE","createHistory","record","history","newHistoryRecord","undo","do","undoAll","relatedItems","undoList","doList","redoAll","deleted","getEventIdsByDoItemIds","doItems","doItem","reorder","getId","sidebarItem","selectedPath","join","MOCK_COMPONENTS","General","Visualization","textColor","History","closeAllBars","useController","useControllerData","_graphEditorRef","controllerConfig","DEFAULT_CONTROLLER_CONFIG","localGraphEditorRef","recordedEvents","updater","dataItem","addHistory","oldSelectedElementIds","relatedEdges","edgeItem","edgeItems","oldLayout","positions","metaKey","getUndoEvents","eventRelatedItem","targetDataList","concat","nodeItem","TARGET_SIZE","centerPoint","neighborhood","snapZoom","forceStart","removeOnComplete","removeOnInterrupt","previousDataList","previousData","pop","valueIndex","getValueByType","splice","temporary","changeIndex","additional","additionalItem","eventHistoryData","download","GraphLayouts","positionItem","selectedClusters","selectedCluster","ElementSettings","console","log","sidebar_","normalize","componentId","dataRenderPath","Component","isReact","compatible","RenderNode","visualization","filtering","calculateNodeSize","calculateColor","textRef","onZoom","xScale","yScale","off","$","NODE_SIZE_RANGE_MAP","community","in_degree","out_degree","year","fieldName","fieldRange","sizeRangeGap","fieldRangeGap","perc2color","fieldRangeValue","perc","r","g","base","b","slice","RenderEdge","convertJSONStringFields","getQueryBuilderSchema","DataSources","uniqueItems","enumNames","Eclis","Keywords","Articles","Instances","Domains","Doctypes","DegreesSources","DegreesTargets","transformData","QueryBuilder","onStart","onError","query","casesData","variables","caseResults","API","graphql","queryNetworkByUserInput","statistics","message","err","HelpModal","videoId","frameBorder","allow","allowFullScreen","ACTIONS","MUIDarkTheme","createMuiTheme","MUILightTheme","edgeSize","toJSONSchema","objects","arrays","DataBarHeader","AppContainer","changeMUITheme","dispatch","alertRef","configRef","fetching","instances","domains","doctypes","degreesSources","popup","liPermission","keywords","degreesTargets","eclis","articles","indegree","outdegree","FILTER_SCHEMA","getFilterSchema","FETCH_SCHEMA","onPopupPress","getFetchSchema","queryBuilder","THEMES","Dark","Default","helpModal","ActionBarRight","controllerProps","opened","elementData","clusterItemIds","AlertContent","messageInfo","setMessageInfo","handleClose","reason","TransitionUp","handleExited","Snackbar","autoHideDuration","TransitionComponent","Alert","severity","AlertTitle","MUI_THEMES","Light","setTheme","createTheme","use","d3Force","useMeasure"],"mappings":"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","file":"static/js/app.e24e06ce.chunk.js","sourcesContent":["import { createProvider } from 'colay-ui'\n\nexport const DefaultTheme = {\n  palette: {\n    common: {\n      black: '#000',\n      white: '#fff',\n    },\n    mode: 'light',\n    primary: {\n      light: '#7986cb',\n      main: '#3f51b5',\n      dark: '#303f9f',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff4081',\n      main: '#f50057',\n      dark: '#c51162',\n      contrastText: '#fff',\n    },\n    error: {\n      light: '#e57373',\n      main: '#f44336',\n      dark: '#d32f2f',\n      contrastText: '#fff',\n    },\n    warning: {\n      light: '#ffb74d',\n      main: '#ff9800',\n      dark: '#f57c00',\n      contrastText: 'rgba(0, 0, 0, 0.87)',\n    },\n    info: {\n      light: '#64b5f6',\n      main: '#2196f3',\n      dark: '#1976d2',\n      contrastText: '#fff',\n    },\n    success: {\n      light: '#81c784',\n      main: '#4caf50',\n      dark: '#388e3c',\n      contrastText: 'rgba(0, 0, 0, 0.87)',\n    },\n    grey: {\n      50: '#fafafa',\n      100: '#f5f5f5',\n      200: '#eeeeee',\n      300: '#e0e0e0',\n      400: '#bdbdbd',\n      500: '#9e9e9e',\n      600: '#757575',\n      700: '#616161',\n      800: '#424242',\n      900: '#212121',\n      A100: '#d5d5d5',\n      A200: '#aaaaaa',\n      A400: '#303030',\n      A700: '#616161',\n    },\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n    text: {\n      primary: 'rgba(0, 0, 0, 0.87)',\n      secondary: 'rgba(0, 0, 0, 0.54)',\n      disabled: 'rgba(0, 0, 0, 0.38)',\n    },\n    divider: 'rgba(0, 0, 0, 0.12)',\n    background: {\n      paper: 'rgb(153, 153, 153)',\n      default: '#fafafa',\n    },\n    action: {\n      active: 'rgba(0, 0, 0, 0.54)',\n      hover: 'rgba(0, 0, 0, 0.04)',\n      hoverOpacity: 0.04,\n      selected: 'rgba(0, 0, 0, 0.08)',\n      selectedOpacity: 0.08,\n      disabled: 'rgba(0, 0, 0, 0.26)',\n      disabledBackground: 'rgba(0, 0, 0, 0.12)',\n      disabledOpacity: 0.38,\n      focus: 'rgba(0, 0, 0, 0.12)',\n      focusOpacity: 0.12,\n      activatedOpacity: 0.12,\n    },\n  },\n}\n\nexport const DarkTheme = {\n  palette: {\n    common: {\n      black: '#000',\n      white: '#fff',\n    },\n    mode: 'dark',\n    primary: {\n      light: '#7986cb',\n      main: '#3f51b5',\n      dark: '#303f9f',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff4081',\n      main: '#f50057',\n      dark: '#c51162',\n      contrastText: '#fff',\n    },\n    error: {\n      light: '#e57373',\n      main: '#f44336',\n      dark: '#d32f2f',\n      contrastText: '#fff',\n    },\n    warning: {\n      light: '#ffb74d',\n      main: '#ff9800',\n      dark: '#f57c00',\n      contrastText: 'rgba(0, 0, 0, 0.87)',\n    },\n    info: {\n      light: '#64b5f6',\n      main: '#2196f3',\n      dark: '#1976d2',\n      contrastText: '#fff',\n    },\n    success: {\n      light: '#81c784',\n      main: '#4caf50',\n      dark: '#388e3c',\n      contrastText: 'rgba(0, 0, 0, 0.87)',\n    },\n    grey: {\n      50: '#fafafa',\n      100: '#f5f5f5',\n      200: '#eeeeee',\n      300: '#e0e0e0',\n      400: '#bdbdbd',\n      500: '#9e9e9e',\n      600: '#757575',\n      700: '#616161',\n      800: '#424242',\n      900: '#212121',\n      A100: '#d5d5d5',\n      A200: '#aaaaaa',\n      A400: '#303030',\n      A700: '#616161',\n    },\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n    text: {\n      primary: '#fff',\n      secondary: 'rgba(255, 255, 255, 0.7)',\n      disabled: 'rgba(255, 255, 255, 0.5)',\n      icon: 'rgba(255, 255, 255, 0.5)',\n    },\n    divider: 'rgba(255, 255, 255, 0.12)',\n    background: {\n      paper: '#808080', // #424242\n      default: '#303030',\n    },\n    action: {\n      active: '#fff',\n      hover: 'rgba(255, 255, 255, 0.08)',\n      hoverOpacity: 0.08,\n      selected: 'rgba(255, 255, 255, 0.16)',\n      selectedOpacity: 0.16,\n      disabled: 'rgba(255, 255, 255, 0.3)',\n      disabledBackground: 'rgba(255, 255, 255, 0.12)',\n      disabledOpacity: 0.38,\n      focus: 'rgba(255, 255, 255, 0.12)',\n      focusOpacity: 0.12,\n      activatedOpacity: 0.24,\n    },\n  },\n}\n\nconst {\n  Context,\n  Provider,\n  useProvider,\n} = createProvider({\n  value: DefaultTheme,\n})\n\nexport const ThemeContext = Context\nexport const ThemeProvider = Provider\nexport const useTheme = () => {\n  const [value] = useProvider()\n  return value\n}\n\nexport type Theme = typeof DefaultTheme\n\nexport type ThemeProps = {\n  theme: Theme\n}\n// {\n//   \"breakpoints\": {\n//     \"keys\": [\n//       \"xs\",\n//       \"sm\",\n//       \"md\",\n//       \"lg\",\n//       \"xl\"\n//     ],\n//     \"values\": {\n//       \"xs\": 0,\n//       \"sm\": 600,\n//       \"md\": 960,\n//       \"lg\": 1280,\n//       \"xl\": 1920\n//     },\n//     \"unit\": \"px\"\n//   },\n//   \"direction\": \"ltr\",\n//   \"mixins\": {\n//     \"toolbar\": {\n//       \"minHeight\": 56,\n//       \"@media (min-width:0px) and (orientation: landscape)\": {\n//         \"minHeight\": 48\n//       },\n//       \"@media (min-width:600px)\": {\n//         \"minHeight\": 64\n//       }\n//     }\n//   },\n//   \"components\": {},\n//   \"palette\": {\n//     \"common\": {\n//       \"black\": \"#000\",\n//       \"white\": \"#fff\"\n//     },\n//     \"mode\": \"light\",\n//     \"primary\": {\n//       \"light\": \"#7986cb\",\n//       \"main\": \"#3f51b5\",\n//       \"dark\": \"#303f9f\",\n//       \"contrastText\": \"#fff\"\n//     },\n//     \"secondary\": {\n//       \"light\": \"#ff4081\",\n//       \"main\": \"#f50057\",\n//       \"dark\": \"#c51162\",\n//       \"contrastText\": \"#fff\"\n//     },\n//     \"error\": {\n//       \"light\": \"#e57373\",\n//       \"main\": \"#f44336\",\n//       \"dark\": \"#d32f2f\",\n//       \"contrastText\": \"#fff\"\n//     },\n//     \"warning\": {\n//       \"light\": \"#ffb74d\",\n//       \"main\": \"#ff9800\",\n//       \"dark\": \"#f57c00\",\n//       \"contrastText\": \"rgba(0, 0, 0, 0.87)\"\n//     },\n//     \"info\": {\n//       \"light\": \"#64b5f6\",\n//       \"main\": \"#2196f3\",\n//       \"dark\": \"#1976d2\",\n//       \"contrastText\": \"#fff\"\n//     },\n//     \"success\": {\n//       \"light\": \"#81c784\",\n//       \"main\": \"#4caf50\",\n//       \"dark\": \"#388e3c\",\n//       \"contrastText\": \"rgba(0, 0, 0, 0.87)\"\n//     },\n//     \"grey\": {\n//       \"50\": \"#fafafa\",\n//       \"100\": \"#f5f5f5\",\n//       \"200\": \"#eeeeee\",\n//       \"300\": \"#e0e0e0\",\n//       \"400\": \"#bdbdbd\",\n//       \"500\": \"#9e9e9e\",\n//       \"600\": \"#757575\",\n//       \"700\": \"#616161\",\n//       \"800\": \"#424242\",\n//       \"900\": \"#212121\",\n//       \"A100\": \"#d5d5d5\",\n//       \"A200\": \"#aaaaaa\",\n//       \"A400\": \"#303030\",\n//       \"A700\": \"#616161\"\n//     },\n//     \"contrastThreshold\": 3,\n//     \"tonalOffset\": 0.2,\n//     \"text\": {\n//       \"primary\": \"rgba(0, 0, 0, 0.87)\",\n//       \"secondary\": \"rgba(0, 0, 0, 0.54)\",\n//       \"disabled\": \"rgba(0, 0, 0, 0.38)\"\n//     },\n//     \"divider\": \"rgba(0, 0, 0, 0.12)\",\n//     \"background\": {\n//       \"paper\": \"#fff\",\n//       \"default\": \"#fafafa\"\n//     },\n//     \"action\": {\n//       \"active\": \"rgba(0, 0, 0, 0.54)\",\n//       \"hover\": \"rgba(0, 0, 0, 0.04)\",\n//       \"hoverOpacity\": 0.04,\n//       \"selected\": \"rgba(0, 0, 0, 0.08)\",\n//       \"selectedOpacity\": 0.08,\n//       \"disabled\": \"rgba(0, 0, 0, 0.26)\",\n//       \"disabledBackground\": \"rgba(0, 0, 0, 0.12)\",\n//       \"disabledOpacity\": 0.38,\n//       \"focus\": \"rgba(0, 0, 0, 0.12)\",\n//       \"focusOpacity\": 0.12,\n//       \"activatedOpacity\": 0.12\n//     }\n//   },\n//   \"shadows\": [\n//     \"none\",\n//     \"0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)\",\n//     \"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\",\n//     \"0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)\",\n//     \"0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)\",\n//     \"0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)\",\n//     \"0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)\",\n//     \"0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)\",\n//     \"0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)\",\n//     \"0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)\",\n//     \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\n//     \"0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)\",\n//     \"0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)\",\n//     \"0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)\",\n//     \"0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)\",\n//     \"0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)\",\n//     \"0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)\",\n//     \"0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)\",\n//     \"0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)\",\n//     \"0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)\",\n//     \"0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)\",\n//     \"0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)\",\n//     \"0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)\",\n//     \"0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)\",\n//     \"0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)\"\n//   ],\n//   \"typography\": {\n//     \"htmlFontSize\": 16,\n//     \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//     \"fontSize\": 14,\n//     \"fontWeightLight\": 300,\n//     \"fontWeightRegular\": 400,\n//     \"fontWeightMedium\": 500,\n//     \"fontWeightBold\": 700,\n//     \"h1\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 300,\n//       \"fontSize\": \"6rem\",\n//       \"lineHeight\": 1.167,\n//       \"letterSpacing\": \"-0.01562em\"\n//     },\n//     \"h2\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 300,\n//       \"fontSize\": \"3.75rem\",\n//       \"lineHeight\": 1.2,\n//       \"letterSpacing\": \"-0.00833em\"\n//     },\n//     \"h3\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 400,\n//       \"fontSize\": \"3rem\",\n//       \"lineHeight\": 1.167,\n//       \"letterSpacing\": \"0em\"\n//     },\n//     \"h4\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 400,\n//       \"fontSize\": \"2.125rem\",\n//       \"lineHeight\": 1.235,\n//       \"letterSpacing\": \"0.00735em\"\n//     },\n//     \"h5\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 400,\n//       \"fontSize\": \"1.5rem\",\n//       \"lineHeight\": 1.334,\n//       \"letterSpacing\": \"0em\"\n//     },\n//     \"h6\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 500,\n//       \"fontSize\": \"1.25rem\",\n//       \"lineHeight\": 1.6,\n//       \"letterSpacing\": \"0.0075em\"\n//     },\n//     \"subtitle1\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 400,\n//       \"fontSize\": \"1rem\",\n//       \"lineHeight\": 1.75,\n//       \"letterSpacing\": \"0.00938em\"\n//     },\n//     \"subtitle2\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 500,\n//       \"fontSize\": \"0.875rem\",\n//       \"lineHeight\": 1.57,\n//       \"letterSpacing\": \"0.00714em\"\n//     },\n//     \"body1\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 400,\n//       \"fontSize\": \"1rem\",\n//       \"lineHeight\": 1.5,\n//       \"letterSpacing\": \"0.00938em\"\n//     },\n//     \"body2\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 400,\n//       \"fontSize\": \"0.875rem\",\n//       \"lineHeight\": 1.43,\n//       \"letterSpacing\": \"0.01071em\"\n//     },\n//     \"button\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 500,\n//       \"fontSize\": \"0.875rem\",\n//       \"lineHeight\": 1.75,\n//       \"letterSpacing\": \"0.02857em\",\n//       \"textTransform\": \"uppercase\"\n//     },\n//     \"caption\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 400,\n//       \"fontSize\": \"0.75rem\",\n//       \"lineHeight\": 1.66,\n//       \"letterSpacing\": \"0.03333em\"\n//     },\n//     \"overline\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 400,\n//       \"fontSize\": \"0.75rem\",\n//       \"lineHeight\": 2.66,\n//       \"letterSpacing\": \"0.08333em\",\n//       \"textTransform\": \"uppercase\"\n//     }\n//   },\n//   \"shape\": {\n//     \"borderRadius\": 4\n//   },\n//   \"transitions\": {\n//     \"duration\": {\n//       \"shortest\": 150,\n//       \"shorter\": 200,\n//       \"short\": 250,\n//       \"standard\": 300,\n//       \"complex\": 375,\n//       \"enteringScreen\": 225,\n//       \"leavingScreen\": 195\n//     },\n//     \"easing\": {\n//       \"easeInOut\": \"cubic-bezier(0.4, 0, 0.2, 1)\",\n//       \"easeOut\": \"cubic-bezier(0.0, 0, 0.2, 1)\",\n//       \"easeIn\": \"cubic-bezier(0.4, 0, 1, 1)\",\n//       \"sharp\": \"cubic-bezier(0.4, 0, 0.6, 1)\"\n//     }\n//   },\n//   \"zIndex\": {\n//     \"mobileStepper\": 1000,\n//     \"speedDial\": 1050,\n//     \"appBar\": 1100,\n//     \"drawer\": 1200,\n//     \"modal\": 1300,\n//     \"snackbar\": 1400,\n//     \"tooltip\": 1500\n//   }\n// }\n","export const animationOptions = {\n  // // Whether to animate while running the layout\n  // // true : Animate continuously as the layout is running\n  // // false : Just show the end result\n  // // 'end' : Animate with the end result, from the initial positions to the end positions\n  animate: 'end',\n\n  // // Easing of the animation for animate:'end'\n  animationEasing: 'linear',\n\n  // // The duration of the animation for animate:'end'\n  animationDuration: 1000,\n\n  // // A function that determines whether the node should be animated\n  // // All nodes animated by default on animate enabled\n  // // Non-animated nodes are positioned immediately when the layout starts\n  // animateFilter: (node, i) => true,\n  animateFilter: () => true,\n\n  // // The layout animates only after this many milliseconds for animate:true\n  // // (prevents flashing on fast runs)\n  animationThreshold: 250,\n\n} as const\n","// @ts-nocheck\nimport { animationOptions } from '../animation'\n\nexport default {\n  cose: {\n    name: 'cose',\n\n    // // Called on `layoutready`\n    ready() {},\n\n    // // Called on `layoutstop`\n    stop() {},\n\n    // // Number of iterations between consecutive screen positions update\n    refresh: 20,\n\n    // // Whether to fit the network view after when done\n    fit: true,\n\n    // // Padding on fit\n    padding: 30,\n\n    // // Constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    // boundingBox: undefined,\n\n    // // Excludes the label when calculating node bounding boxes for the layout algorithm\n    nodeDimensionsIncludeLabels: false,\n\n    // // Randomize the initial positions of the nodes (true) or use existing positions (false)\n    randomize: false,\n\n    // // Extra spacing between components in non-compound graphs\n    componentSpacing: 40,\n\n    // // Node repulsion (non overlapping) multiplier\n    nodeRepulsion: (node) => 2048,\n\n    // // Node repulsion (overlapping) multiplier\n    nodeOverlap: 4,\n\n    // // Ideal edge (non nested) length\n    idealEdgeLength: (edge) => 32,\n\n    // Divisor to compute edge forces\n    edgeElasticity: (edge) => 32,\n\n    // Nesting factor (multiplier) to compute ideal edge length for nested edges\n    nestingFactor: 1.2,\n\n    // Gravity force (constant)\n    gravity: 1,\n\n    // Maximum number of iterations to perform\n    numIter: 1000,\n\n    // Initial temperature (maximum node displacement)\n    initialTemp: 1000,\n\n    // Cooling factor (how the temperature is reduced between consecutive iterations\n    coolingFactor: 0.99,\n\n    // Lower temperature threshold (below this point the layout will end)\n    minTemp: 1.0,\n    ...animationOptions,\n  },\n  breadthfirst: {\n    name: 'breadthfirst',\n\n    fit: true, // whether to fit the viewport to the graph\n    directed: false, // whether the tree is directed downwards (or edges can point in any direction if false)\n    padding: 30, // padding on fit\n    circle: false, // put depths in concentric circles if true, put depths top down if false\n    grid: false, // whether to create an even grid into which the DAG is placed (circle:false only)\n    spacingFactor: 1.75, // positive spacing factor, larger => more space between nodes (N.B. n/a if causes overlap)\n    // boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    avoidOverlap: true, // prevents node overlap, may overflow boundingBox if not enough space\n    nodeDimensionsIncludeLabels: false, // Excludes the label when calculating node bounding boxes for the layout algorithm\n    roots: undefined, // the roots of the trees\n    maximal: false, // whether to shift nodes down their natural BFS depths in order to avoid upwards edges (DAGS only)\n    ready: undefined, // callback on layoutready\n    stop: undefined, // callback on layoutstop\n    transform: (node, position) => position, // transform a given node position. Useful for changing flow direction in discrete layouts,\n    ...animationOptions,\n\n  },\n  concentric: {\n    name: 'concentric',\n\n    fit: true, // whether to fit the viewport to the graph\n    padding: 30, // the padding on fit\n    startAngle: 3 / 2 * Math.PI, // where nodes start in radians\n    sweep: undefined, // how many radians should be between the first and last node (defaults to full circle)\n    clockwise: true, // whether the layout should go clockwise (true) or counterclockwise/anticlockwise (false)\n    equidistant: false, // whether levels have an equal radial distance betwen them, may cause bounding box overflow\n    minNodeSpacing: 10, // min spacing between outside of nodes (used for radius adjustment)\n    // boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    avoidOverlap: true, // prevents node overlap, may overflow boundingBox if not enough space\n    nodeDimensionsIncludeLabels: false, // Excludes the label when calculating node bounding boxes for the layout algorithm\n    height: undefined, // height of layout area (overrides container height)\n    width: undefined, // width of layout area (overrides container width)\n    spacingFactor: undefined, // Applies a multiplicative factor (>0) to expand or compress the overall area that the nodes take up\n    concentric: (node) => // returns numeric value for each node, placing higher nodes in levels towards the centre\n      node.degree(),\n    levelWidth: (nodes) => // the letiation of concentric values in each level\n      nodes.maxDegree() / 4,\n    ready: undefined, // callback on layoutready\n    stop: undefined, // callback on layoutstop\n    transform: (node, position) => position, // transform a given node position. Useful for changing flow direction in discrete layouts\n    ...animationOptions,\n  },\n  circle: {\n    name: 'circle',\n\n    fit: true, // whether to fit the viewport to the graph\n    padding: 30, // the padding on fit\n    // boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    avoidOverlap: true, // prevents node overlap, may overflow boundingBox and radius if not enough space\n    nodeDimensionsIncludeLabels: false, // Excludes the label when calculating node bounding boxes for the layout algorithm\n    spacingFactor: undefined, // Applies a multiplicative factor (>0) to expand or compress the overall area that the nodes take up\n    radius: undefined, // the radius of the circle\n    startAngle: 3 / 2 * Math.PI, // where nodes start in radians\n    sweep: undefined, // how many radians should be between the first and last node (defaults to full circle)\n    clockwise: true, // whether the layout should go clockwise (true) or counterclockwise/anticlockwise (false)\n    sort: undefined, // a sorting function to order the nodes; e.g. function(a, b){ return a.data('weight') - b.data('weight') }\n    ready: undefined, // callback on layoutready\n    stop: undefined, // callback on layoutstop\n    transform: (node, position) => position, // transform a given node position. Useful for changing flow direction in discrete layouts,\n    ...animationOptions,\n  },\n  grid: {\n    name: 'grid',\n\n    fit: true, // whether to fit the viewport to the graph\n    padding: 30, // padding used on fit\n    // boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    avoidOverlap: true, // prevents node overlap, may overflow boundingBox if not enough space\n    avoidOverlapPadding: 10, // extra spacing around nodes when avoidOverlap: true\n    nodeDimensionsIncludeLabels: false, // Excludes the label when calculating node bounding boxes for the layout algorithm\n    spacingFactor: undefined, // Applies a multiplicative factor (>0) to expand or compress the overall area that the nodes take up\n    condense: false, // uses all available space on false, uses minimal space on true\n    rows: undefined, // force num of rows in the grid\n    cols: undefined, // force num of columns in the grid\n    position: (node) => {}, // returns { row, col } for element\n    sort: undefined, // a sorting function to order the nodes; e.g. function(a, b){ return a.data('weight') - b.data('weight') }\n    ready: undefined, // callback on layoutready\n    stop: undefined, // callback on layoutstop\n    transform: (node, position) => position, // transform a given node position. Useful for changing flow direction in discrete layouts\n    ...animationOptions,\n  },\n  // preset: {\n  //   name: 'preset',\n\n  //   positions: undefined, // map of (node id) => (position obj); or function(node){ return somPos; }\n  //   zoom: undefined, // the zoom level to set (prob want fit = false if set)\n  //   pan: undefined, // the pan level to set (prob want fit = false if set)\n  //   fit: true, // whether to fit to viewport\n  //   padding: 30, // padding on fit\n  //   animate: false, // whether to transition the node positions\n  //   animationDuration: 500, // duration of animation in ms if enabled\n  //   animationEasing: undefined, // easing of animation if enabled\n  //   animateFilter: (node, i) => true, // a function that determines whether the node should be animated.  All nodes animated by default on animate enabled.  Non-animated nodes are positioned immediately when the layout starts\n  //   ready: undefined, // callback on layoutready\n  //   stop: undefined, // callback on layoutstop\n  //   transform: (node, position) => position, // transform a given node position. Useful for changing flow direction in discrete layouts\n  // },\n  random: {\n    name: 'random',\n\n    fit: true, // whether to fit to viewport\n    padding: 30, // fit padding\n    // boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    ready: undefined, // callback on layoutready\n    stop: undefined, // callback on layoutstop\n    transform: (node, position) => position, // transform a given node position. Useful for changing flow direction in discrete layouts\n    ...animationOptions,\n  },\n  euler: {\n    name: 'euler',\n\n    // The ideal length of a spring\n    // - This acts as a hint for the edge length\n    // - The edge length can be longer or shorter if the forces are set to extreme values\n    // springLength: (edge) => 80,\n    springLength: (edge) => 400,\n\n    // Hooke's law coefficient\n    // - The value ranges on [0, 1]\n    // - Lower values give looser springs\n    // - Higher values give tighter springs\n    springCoeff: (edge) => 0.0008,\n\n    // The mass of the node in the physics simulation\n    // - The mass affects the gravity node repulsion/attraction\n    // mass: (node) => 4,\n    mass: (node) => 40,\n\n    // Coulomb's law coefficient\n    // - Makes the nodes repel each other for negative values\n    // - Makes the nodes attract each other for positive values\n    gravity: -1.2,\n\n    // A force that pulls nodes towards the origin (0, 0)\n    // Higher values keep the components less spread out\n    pull: 0.001,\n\n    // Theta coefficient from Barnes-Hut simulation\n    // - Value ranges on [0, 1]\n    // - Performance is better with smaller values\n    // - Very small values may not create enough force to give a good result\n    theta: 0.666,\n\n    // Friction / drag coefficient to make the system stabilise over time\n    dragCoeff: 0.02,\n\n    // When the total of the squared position deltas is less than this value, the simulation ends\n    movementThreshold: 1,\n\n    // The amount of time passed per tick\n    // - Larger values result in faster runtimes but might spread things out too far\n    // - Smaller values produce more accurate results\n    timeStep: 20,\n\n    // The number of ticks per frame for animate:true\n    // - A larger value reduces rendering cost but can be jerky\n    // - A smaller value increases rendering cost but is smoother\n    refresh: 10,\n\n    // Maximum iterations and time (in ms) before the layout will bail out\n    // - A large value may allow for a better result\n    // - A small value may make the layout end prematurely\n    // - The layout may stop before this if it has settled\n    maxIterations: 1000,\n    // maxSimulationTime: 4000,\n\n    // Prevent the user grabbing nodes during the layout (usually with animate:true)\n    ungrabifyWhileSimulating: false,\n\n    // Whether to fit the viewport to the repositioned graph\n    // true : Fits at end of layout for animate:false or animate:'end'; fits on each frame for animate:true\n    // fit: true,\n\n    // Padding in rendered co-ordinates around the layout\n    padding: 30,\n\n    // Constrain layout bounds with one of\n    // - { x1, y1, x2, y2 }\n    // - { x1, y1, w, h }\n    // - undefined / null : Unconstrained\n    // boundingBox: undefined,\n    avoidOverlap: true,\n\n    // Layout event callbacks; equivalent to `layout.one('layoutready', callback)` for example\n    ready() {}, // on layoutready\n    stop() {}, // on layoutstop\n\n    // Whether to randomize the initial positions of the nodes\n    // true : Use random positions within the bounding box\n    // false : Use the current node positions as the initial positions\n    randomize: false,\n    ...animationOptions,\n  },\n  cise: {\n    name: 'cise',\n\n    // ClusterInfo can be a 2D array contaning node id's or a function that returns cluster ids.\n    // For the 2D array option, the index of the array indicates the cluster ID for all elements in\n    // the collection at that index. Unclustered nodes must NOT be present in this array of clusters.\n    //\n    // For the function, it would be given a Cytoscape node and it is expected to return a cluster id\n    // corresponding to that node. Returning negative numbers, null or undefined is fine for unclustered\n    // nodes.\n    // e.g\n    // Array:                                     OR          function(node){\n    //  [ ['n1','n2','n3'],                                       ...\n    //    ['n5','n6']                                         }\n    //    ['n7', 'n8', 'n9', 'n10'] ]\n    // clusters: clusterInfo,\n\n    // -------- Optional parameters --------\n    // Whether to animate the layout\n    // - true : Animate while the layout is running\n    // - false : Just show the end result\n    // - 'end' : Animate directly to the end result\n    animate: false,\n\n    // number of ticks per frame; higher is faster but more jerky\n    refresh: 10,\n\n    // Animation duration used for animate:'end'\n    animationDuration: undefined,\n\n    // Easing for animate:'end'\n    animationEasing: undefined,\n\n    // Whether to fit the viewport to the repositioned graph\n    // true : Fits at end of layout for animate:false or animate:'end'\n    fit: true,\n\n    // Padding in rendered co-ordinates around the layout\n    padding: 30,\n\n    // separation amount between nodes in a cluster\n    // note: increasing this amount will also increase the simulation time\n    nodeSeparation: 12.5,\n\n    // Inter-cluster edge length factor\n    // (2.0 means inter-cluster edges should be twice as long as intra-cluster edges)\n    idealInterClusterEdgeLengthCoefficient: 1.4,\n\n    // Whether to pull on-circle nodes inside of the circle\n    allowNodesInsideCircle: false,\n\n    // Max percentage of the nodes in a circle that can move inside the circle\n    maxRatioOfNodesInsideCircle: 0.1,\n\n    // - Lower values give looser springs\n    // - Higher values give tighter springs\n    springCoeff: 0.45,\n\n    // Node repulsion (non overlapping) multiplier\n    nodeRepulsion: 4500,\n\n    // Gravity force (constant)\n    gravity: 0.25,\n\n    // Gravity range (constant)\n    gravityRange: 3.8,\n\n    // Layout event callbacks; equivalent to `layout.one('layoutready', callback)` for example\n    ready() {}, // on layoutready\n    stop() {}, // on layoutstop\n    ...animationOptions,\n  },\n  cola: {\n    name: 'cola',\n    animate: true, // whether to show the layout as it's running\n    refresh: 1, // number of ticks per frame; higher is faster but more jerky\n    maxSimulationTime: 4000, // max length in ms to run the layout\n    ungrabifyWhileSimulating: false, // so you can't drag nodes during layout\n    fit: true, // on every layout reposition of nodes, fit the viewport\n    padding: 30, // padding around the simulation\n    // boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    nodeDimensionsIncludeLabels: false, // whether labels should be included in determining the space used by a node\n\n    // layout event callbacks\n    ready() {}, // on layoutready\n    stop() {}, // on layoutstop\n\n    // positioning options\n    randomize: false, // use random node positions at beginning of layout\n    avoidOverlap: true, // if true, prevents overlap of node bounding boxes\n    handleDisconnected: true, // if true, avoids disconnected components from overlapping\n    convergenceThreshold: 0.01, // when the alpha value (system energy) falls below this value, the layout stops\n    nodeSpacing(node) { return 10 }, // extra spacing around nodes\n    flow: undefined, // use DAG/tree flow layout if specified, e.g. { axis: 'y', minSeparation: 30 }\n    alignment: undefined, // relative alignment constraints on nodes, e.g. {vertical: [[{node: node1, offset: 0}, {node: node2, offset: 5}]], horizontal: [[{node: node3}, {node: node4}], [{node: node5}, {node: node6}]]}\n    gapInequalities: undefined, // list of inequality constraints for the gap between the nodes, e.g. [{\"axis\":\"y\", \"left\":node1, \"right\":node2, \"gap\":25}]\n\n    // different methods of specifying edge length\n    // each can be a constant numerical value or a function like `function( edge ){ return 2; }`\n    edgeLength: undefined, // sets edge length directly in simulation\n    edgeSymDiffLength: undefined, // symmetric diff edge length in simulation\n    edgeJaccardLength: undefined, // jaccard edge length in simulation\n\n    // iterations of cola algorithm; uses default values on undefined\n    unconstrIter: undefined, // unconstrained initial layout iterations\n    userConstIter: undefined, // initial layout iterations with user-specified constraints\n    allConstIter: undefined, // initial layout iterations with all constraints including non-overlap\n    ...animationOptions,\n  },\n  avsdf: {\n    name: 'avsdf',\n    ready() {\n    },\n    // Called on `layoutstop`\n    stop() {\n    },\n    // number of ticks per frame; higher is faster but more jerky\n    refresh: 30,\n    // Whether to fit the network view after when done\n    fit: true,\n    // Padding on fit\n    padding: 10,\n    // Prevent the user grabbing nodes during the layout (usually with animate:true)\n    ungrabifyWhileSimulating: false,\n    // Type of layout animation. The option set is {'during', 'end', false}\n    animate: 'end',\n    // Duration for animate:end\n    animationDuration: 500,\n    // How apart the nodes are\n    nodeSeparation: 60,\n    ...animationOptions,\n  },\n  dagre: {\n    name: 'dagre',\n    nodeSep: undefined, // the separation between adjacent nodes in the same rank\n    edgeSep: undefined, // the separation between adjacent edges in the same rank\n    rankSep: undefined, // the separation between each rank in the layout\n    rankDir: undefined, // 'TB' for top to bottom flow, 'LR' for left to right,\n    ranker: undefined, // Type of algorithm to assign a rank to each node in the input graph. Possible values: 'network-simplex', 'tight-tree' or 'longest-path'\n    minLen(edge) { return 1 }, // number of ranks to keep between the source and target of the edge\n    edgeWeight(edge) { return 1 }, // higher weight edges are generally made shorter and straighter than lower weight edges\n\n    // general layout options\n    fit: true, // whether to fit to viewport\n    padding: 30, // fit padding\n    spacingFactor: undefined, // Applies a multiplicative factor (>0) to expand or compress the overall area that the nodes take up\n    nodeDimensionsIncludeLabels: false, // whether labels should be included in determining the space used by a node\n    animate: false, // whether to transition the node positions\n    animateFilter(node, i) { return true }, // whether to animate specific nodes when animation is on; non-animated nodes immediately go to their final positions\n    animationDuration: 500, // duration of animation in ms if enabled\n    animationEasing: undefined, // easing of animation if enabled\n    // boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    transform(node, pos) { return pos }, // a function that applies a transform to the final node position\n    ready() {}, // on layoutready\n    stop() {}, // on layoutstop\n    ...animationOptions,\n  },\n  spread: {\n    name: 'spread',\n    animate: true, // Whether to show the layout as it's running\n    ready: undefined, // Callback on layoutready\n    stop: undefined, // Callback on layoutstop\n    fit: true, // Reset viewport to fit default simulationBounds\n    minDist: 20, // Minimum distance between nodes\n    padding: 20, // Padding\n    expandingFactor: -1.0, // If the network does not satisfy the minDist\n    // criterium then it expands the network of this amount\n    // If it is set to -1.0 the amount of expansion is automatically\n    // calculated based on the minDist, the aspect ratio and the\n    // number of nodes\n    prelayout: { name: 'cose' }, // Layout options for the first phase\n    maxExpandIterations: 4, // Maximum number of expanding iterations\n    // boundingBox: undefined, // Constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    randomize: false, // Uses random initial node positions on true\n    ...animationOptions,\n  },\n  klay: {\n    // nodeDimensionsIncludeLabels: false, // Boolean which changes whether label dimensions are included when calculating node dimensions\n    // fit: true, // Whether to fit\n    // padding: 20, // Padding on fit\n    // animate: false, // Whether to transition the node positions\n    // animateFilter(node, i) { return true }, // Whether to animate specific nodes when animation is on; non-animated nodes immediately go to their final positions\n    // animationDuration: 500, // Duration of animation in ms if enabled\n    // animationEasing: undefined, // Easing of animation if enabled\n    // transform(node, pos) { return pos }, // A function that applies a transform to the final node position\n    // ready: undefined, // Callback on layoutready\n    // stop: undefined, // Callback on layoutstop\n    // klay: {\n    // // Following descriptions taken from http://layout.rtsys.informatik.uni-kiel.de:9444/Providedlayout.html?algorithm=de.cau.cs.kieler.klay.layered\n    //   addUnnecessaryBendpoints: false, // Adds bend points even if an edge does not change direction.\n    //   aspectRatio: 1.6, // The aimed aspect ratio of the drawing, that is the quotient of width by height\n    //   borderSpacing: 20, // Minimal amount of space to be left to the border\n    //   compactComponents: false, // Tries to further compact components (disconnected sub-graphs).\n    //   crossingMinimization: 'LAYER_SWEEP', // Strategy for crossing minimization.\n    //   /* LAYER_SWEEP The layer sweep algorithm iterates multiple times over the layers, trying to find node orderings that minimize the number of crossings. The algorithm uses randomization to increase the odds of finding a good result. To improve its results, consider increasing the Thoroughness option, which influences the number of iterations done. The Randomization seed also influences results.\n    // INTERACTIVE Orders the nodes of each layer by comparing their positions before the layout algorithm was started. The idea is that the relative order of nodes as it was before layout was applied is not changed. This of course requires valid positions for all nodes to have been set on the input graph before calling the layout algorithm. The interactive layer sweep algorithm uses the Interactive Reference Point option to determine which reference point of nodes are used to compare positions. */\n    //   cycleBreaking: 'GREEDY', // Strategy for cycle breaking. Cycle breaking looks for cycles in the graph and determines which edges to reverse to break the cycles. Reversed edges will end up pointing to the opposite direction of regular edges (that is, reversed edges will point left if edges usually point right).\n    //   /* GREEDY This algorithm reverses edges greedily. The algorithm tries to avoid edges that have the Priority property set.\n    // INTERACTIVE The interactive algorithm tries to reverse edges that already pointed leftwards in the input graph. This requires node and port coordinates to have been set to sensible values. */\n    //   direction: 'UNDEFINED', // Overall direction of edges: horizontal (right / left) or vertical (down / up)\n    //   /* UNDEFINED, RIGHT, LEFT, DOWN, UP */\n    //   edgeRouting: 'ORTHOGONAL', // Defines how edges are routed (POLYLINE, ORTHOGONAL, SPLINES)\n    //   edgeSpacingFactor: 0.5, // Factor by which the object spacing is multiplied to arrive at the minimal spacing between edges.\n    //   feedbackEdges: false, // Whether feedback edges should be highlighted by routing around the nodes.\n    //   fixedAlignment: 'NONE', // Tells the BK node placer to use a certain alignment instead of taking the optimal result.  This option should usually be left alone.\n    //   /* NONE Chooses the smallest layout from the four possible candidates.\n    // LEFTUP Chooses the left-up candidate from the four possible candidates.\n    // RIGHTUP Chooses the right-up candidate from the four possible candidates.\n    // LEFTDOWN Chooses the left-down candidate from the four possible candidates.\n    // RIGHTDOWN Chooses the right-down candidate from the four possible candidates.\n    // BALANCED Creates a balanced layout from the four possible candidates. */\n    //   inLayerSpacingFactor: 1.0, // Factor by which the usual spacing is multiplied to determine the in-layer spacing between objects.\n    //   layoutHierarchy: false, // Whether the selected layouter should consider the full hierarchy\n    //   linearSegmentsDeflectionDampening: 0.3, // Dampens the movement of nodes to keep the diagram from getting too large.\n    //   mergeEdges: false, // Edges that have no ports are merged so they touch the connected nodes at the same points.\n    //   mergeHierarchyCrossingEdges: true, // If hierarchical layout is active, hierarchy-crossing edges use as few hierarchical ports as possible.\n    //   nodeLayering: 'NETWORK_SIMPLEX', // Strategy for node layering.\n    //   /* NETWORK_SIMPLEX This algorithm tries to minimize the length of edges. This is the most computationally intensive algorithm. The number of iterations after which it aborts if it hasn't found a result yet can be set with the Maximal Iterations option.\n    // LONGEST_PATH A very simple algorithm that distributes nodes along their longest path to a sink node.\n    // INTERACTIVE Distributes the nodes into layers by comparing their positions before the layout algorithm was started. The idea is that the relative horizontal order of nodes as it was before layout was applied is not changed. This of course requires valid positions for all nodes to have been set on the input graph before calling the layout algorithm. The interactive node layering algorithm uses the Interactive Reference Point option to determine which reference point of nodes are used to compare positions. */\n    //   nodePlacement: 'BRANDES_KOEPF', // Strategy for Node Placement\n    //   /* BRANDES_KOEPF Minimizes the number of edge bends at the expense of diagram size: diagrams drawn with this algorithm are usually higher than diagrams drawn with other algorithms.\n    // LINEAR_SEGMENTS Computes a balanced placement.\n    // INTERACTIVE Tries to keep the preset y coordinates of nodes from the original layout. For dummy nodes, a guess is made to infer their coordinates. Requires the other interactive phase implementations to have run as well.\n    // SIMPLE Minimizes the area at the expense of... well, pretty much everything else. */\n    //   randomizationSeed: 1, // Seed used for pseudo-random number generators to control the layout algorithm; 0 means a new seed is generated\n    //   routeSelfLoopInside: false, // Whether a self-loop is routed around or inside its node.\n    //   separateConnectedComponents: true, // Whether each connected component should be processed separately\n    //   spacing: 20, // Overall setting for the minimal amount of space to be left between objects\n    //   thoroughness: 7, // How much effort should be spent to produce a nice layout..\n    // },\n    // priority(edge) { return null }, // Edges with a non-nil value are skipped when greedy edge cycle breaking is enabled\n    // ...animationOptions,\n  },\n  // 'd3-force': {\n  //   animate: true, // whether to show the layout as it's running; special 'end' value makes the layout animate like a discrete layout\n  //   maxIterations: 0, // max iterations before the layout will bail out\n  //   maxSimulationTime: 0, // max length in ms to run the layout\n  //   ungrabifyWhileSimulating: false, // so you can't drag nodes during layout\n  //   fixedAfterDragging: false, // fixed node after dragging\n  //   fit: false, // on every layout reposition of nodes, fit the viewport\n  //   padding: 30, // padding around the simulation\n  //   // boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n  //   /** d3-force API* */\n  //   alpha: 1, // sets the current alpha to the specified number in the range [0,1]\n  //   alphaMin: 0.001, // sets the minimum alpha to the specified number in the range [0,1]\n  //   alphaDecay: 1 - Math.pow(0.001, 1 / 300), // sets the alpha decay rate to the specified number in the range [0,1]\n  //   alphaTarget: 0, // sets the current target alpha to the specified number in the range [0,1]\n  //   velocityDecay: 0.4, // sets the velocity decay factor to the specified number in the range [0,1]\n  //   collideRadius: 1, // sets the radius accessor to the specified number or function\n  //   collideStrength: 0.7, // sets the force strength to the specified number in the range [0,1]\n  //   collideIterations: 1, // sets the number of iterations per application to the specified number\n  //   linkId: function id(d) {\n  //     return d.index\n  //   }, // sets the node id accessor to the specified function\n  //   linkDistance: 30, // sets the distance accessor to the specified number or function\n  //   linkStrength: function strength(link) {\n  //     return 1 / Math.min(count(link.source), count(link.target))\n  //   }, // sets the strength accessor to the specified number or function\n  //   linkIterations: 1, // sets the number of iterations per application to the specified number\n  //   manyBodyStrength: -30, // sets the strength accessor to the specified number or function\n  //   manyBodyTheta: 0.9, // sets the Barnes–Hut approximation criterion to the specified number\n  //   manyBodyDistanceMin: 1, // sets the minimum distance between nodes over which this force is considered\n  //   manyBodyDistanceMax: Infinity, // sets the maximum distance between nodes over which this force is considered\n  //   xStrength: 0.1, // sets the strength accessor to the specified number or function\n  //   xX: 0, // sets the x-coordinate accessor to the specified number or function\n  //   yStrength: 0.1, // sets the strength accessor to the specified number or function\n  //   yY: 0, // sets the y-coordinate accessor to the specified number or function\n  //   radialStrength: 0.1, // sets the strength accessor to the specified number or function\n  //   radialRadius: [20], // sets the circle radius to the specified number or function\n  //   radialX: 0, // sets the x-coordinate of the circle center to the specified number\n  //   radialY: 0, // sets the y-coordinate of the circle center to the specified number\n  //   // layout event callbacks\n  //   ready() {}, // on layoutready\n  //   stop() {}, // on layoutstop\n  //   tick(progress) {}, // on every iteration\n  //   // positioning options\n  //   randomize: false, // use random node positions at beginning of layout\n  //   // infinite layout options\n  //   infinite: false, // overrides all other options for a forces-all-the-time mode\n  // },\n} as const\n","// import { Icon, Text, TouchableOpacity } from 'unitx-ui'\nimport Layouts from '@core/layouts'\nimport { EventInfo } from '@type'\n\nexport const THEME = {\n  backgroundColor: '#3287a8',\n  fillColor: 'rgb(153, 153, 153)'\n  ,\n}\nexport const ELEMENT_TYPE = {\n  EDGE: 'EDGE',\n  NODE: 'NODE',\n} as const\n\nexport const EVENT = {\n  ADD_CLUSTER_ELEMENT: 'ADD_CLUSTER_ELEMENT',\n  ADD_DATA_ADDITIONAL: 'ADD_DATA_ADDITIONAL',\n  ADD_DATA_VALUE_ADDITIONAL: 'ADD_DATA_VALUE_ADDITIONAL',\n  ADD_DATA_VALUE: 'ADD_DATA_VALUE',\n  ADD_DATA: 'ADD_DATA',\n  ADD_EDGE: 'ADD_EDGE',\n  ADD_NODE: 'ADD_NODE',\n  APPLY_EVENTS: 'APPLY_EVENTS',\n  APPLY_RECORDED_EVENTS: 'APPLY_RECORDED_EVENTS',\n  BOX_SELECTION: 'BOX_SELECTION',\n  CALCULATE_GLOBAL_NETWORK_STATISTICS: 'CALCULATE_GLOBAL_NETWORK_STATISTICS',\n  CALCULATE_LOCAL_NETWORK_STATISTICS: 'CALCULATE_LOCAL_NETWORK_STATISTICS',\n  CHANGE_CLUSTER_VISIBILITY: 'CHANGE_CLUSTER_VISIBILITY',\n  CHANGE_DATA_NAME_ADDITIONAL: 'CHANGE_DATA_NAME_ADDITIONAL',\n  CHANGE_DATA_NAME: 'CHANGE_DATA_NAME',\n  CHANGE_DATA_TYPE: 'CHANGE_DATA_TYPE',\n  CHANGE_DATA_VALUE_ADDITIONAL: 'CHANGE_DATA_VALUE_ADDITIONAL',\n  CHANGE_DATA_VALUE: 'CHANGE_DATA_VALUE',\n  CHANGE_THEME: 'CHANGE_THEME',\n  CLEAR_NODE_GLOBAL_LABEL: 'CLEAR_NODE_GLOBAL_LABEL',\n  CLEAR_NODE_LOCAL_LABEL: 'CLEAR_NODE_LOCAL_LABEL',\n  CLOSE_MODAL: 'CLOSE_MODAL',\n  CREATE_CLUSTER_BY_ALGORITHM_FORM_SUBMIT: 'CREATE_CLUSTER_BY_ALGORITHM_FORM_SUBMIT',\n  CREATE_CLUSTER_BY_ALGORITHM: 'CREATE_CLUSTER_BY_ALGORITHM',\n  CREATE_CLUSTER_FORM_SUBMIT: 'CREATE_CLUSTER_FORM_SUBMIT',\n  CREATE_CLUSTER: 'CREATE_CLUSTER',\n  CREATE_PLAYLIST: 'CREATE_PLAYLIST',\n  DEFOCUS: 'DEFOCUS',\n  DATA_VALUE_DOWN: 'DATA_VALUE_DOWN',\n  DATA_VALUE_UP: 'DATA_VALUE_UP',\n  DELETE_CLUSTER_ELEMENT: 'DELETE_CLUSTER_ELEMENT',\n  DELETE_CLUSTER: 'DELETE_CLUSTER',\n  DELETE_DATA_ADDITIONAL: 'DELETE_DATA_ADDITIONAL',\n  DELETE_DATA_VALUE_ADDITIONAL: 'DELETE_DATA_VALUE_ADDITIONAL',\n  DELETE_DATA_VALUE: 'DELETE_DATA_VALUE',\n  DELETE_DATA: 'DELETE_DATA',\n  DELETE_EDGE: 'DELETE_EDGE',\n  DELETE_HISTORY_ITEM: 'DELETE_HISTORY_ITEM',\n  DELETE_NODE: 'DELETE_NODE',\n  DELETE_PLAYLIST: 'DELETE_PLAYLIST',\n  ELEMENT_SELECTED_WITH_ZOOM: 'ELEMENT_SELECTED_WITH_ZOOM',\n  ELEMENT_SELECTED: 'ELEMENT_SELECTED',\n  ELEMENT_SETTINGS: 'ELEMENT_SETTINGS',\n  ELEMENT_SETTINGS_FORM_SUBMIT: 'ELEMENT_SETTINGS_FORM_SUBMIT',\n  EXPORT_DATA: 'EXPORT_DATA',\n  FOCUS: 'FOCUS',\n  IMPORT_DATA: 'IMPORT_DATA',\n  IMPORT_EVENTS: 'IMPORT_EVENTS',\n  LAYOUT_ANIMATION_DURATION_CHANGED: 'LAYOUT_ANIMATION_DURATION_CHANGED',\n  LAYOUT_CHANGED: 'LAYOUT_CHANGED',\n  MAKE_DATA_LABEL_FIRST: 'MAKE_DATA_LABEL_FIRST',\n  MAKE_DATA_LABEL: 'MAKE_DATA_LABEL',\n  MAKE_GLOBAL_DATA_LABEL_FIRST: 'MAKE_GLOBAL_DATA_LABEL_FIRST',\n  MAKE_GLOBAL_DATA_LABEL: 'MAKE_GLOBAL_DATA_LABEL',\n  MODE_CHANGED: 'MODE_CHANGED',\n  PLAY_EVENTS: 'PLAY_EVENTS',\n  PRESS_ADD_CLUSTER_ELEMENT: 'PRESS_ADD_CLUSTER_ELEMENT',\n  PRESS_BACKGROUND: 'PRESS_BACKGROUND',\n  RECORD_FINISHED: 'RECORD_FINISHED',\n  REDO_EVENT: 'REDO_EVENT',\n  REORDER_CLUSTER: 'REORDER_CLUSTER',\n  REORDER_HISTORY_ITEM: 'REORDER_HISTORY_ITEM',\n  REORDER_PLAYLIST: 'REORDER_PLAYLIST',\n  SELECT_CLUSTER: 'SELECT_CLUSTER',\n  SET_NODE_GLOBAL_LABEL: 'SET_NODE_GLOBAL_LABEL',\n  SET_NODE_LOCAL_LABEL: 'SET_NODE_LOCAL_LABEL',\n  SET_POSITIONS_IMPERATIVELY: 'SET_POSITIONS_IMPERATIVELY',\n  SETTINGS_FORM_CHANGED: 'SETTINGS_FORM_CHANGED',\n  TOGGLE_ACTION_BAR: 'TOGGLE_ACTION_BAR',\n  TOGGLE_DATA_BAR: 'TOGGLE_DATA_BAR',\n  TOGGLE_FILTER_BAR: 'TOGGLE_FILTER_BAR',\n  TOGGLE_NODE_GLOBAL_LABEL_FIRST: 'TOGGLE_NODE_GLOBAL_LABEL_FIRST',\n  TOGGLE_PREFERENCES_MODAL: 'TOGGLE_PREFERENCES_MODAL',\n  TOGGLE_RECORD_ACTIONS: 'TOGGLE_RECORD_ACTIONS',\n  TOGGLE_RECORD_EVENTS: 'TOGGLE_RECORD_EVENTS',\n  TOGGLE_RECORD: 'TOGGLE_RECORD',\n  UNDO_EVENT: 'UNDO_EVENT',\n  UPDATE_DATA: 'UPDATE_DATA',\n} as const\n\nexport const ELEMENT_DATA_FIELDS = {\n  POSITION: 'position',\n  ID: 'id',\n  DATA: 'data',\n  CONTEXT: '__context',\n} as const\n\nexport const EDITOR_MODE = {\n  ADD: 'ADD',\n  DELETE: 'DELETE',\n  CONTINUES_ADD: 'CONTINUES_ADD',\n  CONTINUES_DELETE: 'CONTINUES_DELETE',\n  DEFAULT: 'DEFAULT',\n  ADD_CLUSTER_ELEMENT: 'ADD_CLUSTER_ELEMENT',\n} as const\n\nexport const DATA_TYPE = {\n  number: 'number',\n  string: 'string',\n  id: 'id',\n  unknown: 'unknown',\n} as const\n\nexport const DATA_TYPE_BY_INDEX = [\n  'string',\n  'number',\n  'id',\n  'unknown',\n] as const\n\nexport const LAYOUT_NAMES = Object.keys(Layouts)\n\n\n\nexport const SIDE_PANEL_DEFAULT_WIDTH = 330\n// export const eventHandlers = [\n//   'click',\n//   'mousedown',\n//   'mousemove',\n//   'mouseout',\n//   'mouseover',\n//   'mouseup',\n//   'mouseupoutside',\n//   'tap',\n//   'touchstart',\n//   'touchmove',\n//   'touchend',\n//   'touchendoutside',\n//   'pointercancel',\n//   'pointerout',\n//   'pointerover',\n//   'pointertap',\n//   'pointerdown',\n//   'pointerup',\n//   'pointerupoutside',\n//   'pointermove',\n//   'rightclick',\n//   'rightdown',\n//   'rightup',\n//   'rightupoutside',\n//   'touchcancel',\n//   'touchendoutside',\n//   'touchmove',\n//   'touchstart',\n// ]\n\nexport const CYTOSCAPE_EVENT = {\n  select: 'select',\n  unselect: 'unselect',\n  position: 'position',\n  selectEdge: 'selectEdge',\n  unselectEdge: 'unselectEdge',\n  selectNode: 'selectNode',\n  unselectNode: 'unselectNode',\n  data: 'data',\n  mouseover: 'mouseover',\n  mouseout: 'mouseout',\n} as const\nexport const EDGE_LINE_Z_INDEX = -100\nexport const EDGE_CONTAINER_Z_INDEX = -99\n\nexport const MOCK_DATA = {\n  events: [{\n    type: 'ELEMENT_SELECTED', elementId: 'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2007:BB5172', event: { data: { originalEvent: { metaKey: false } } }, id: '97a3057d-8e8a-437a-8180-13382e4d05a0', date: '2021-03-05T12:24:25.666Z',\n  }, {\n    type: 'PRESS_BACKGROUND', payload: { x: 2447.24609375, y: 1719.8828125 }, id: '7160a81a-85cc-493a-9ba5-5b515c4e260d', date: '2021-03-05T12:24:26.238Z', event: {},\n  }, {\n    type: 'ELEMENT_SELECTED', elementId: 'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2013:BZ1717', event: { data: { originalEvent: { metaKey: false } } }, id: '78e7c6c2-11a4-431d-9662-99713fc8df41', date: '2021-03-05T12:24:27.128Z',\n  }, {\n    type: 'PRESS_BACKGROUND', payload: { x: 2928.828125, y: 1769.6484375 }, id: '83ea6691-70c5-4f6a-b389-bbdc46181c6c', date: '2021-03-05T12:24:27.643Z', event: {},\n  }, {\n    type: 'ELEMENT_SELECTED', elementId: 'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2011:BR5215', event: { data: { originalEvent: { metaKey: false } } }, id: 'f522d845-000a-4583-9355-16c56cbd0d66', date: '2021-03-05T12:24:28.695Z',\n  }] as EventInfo[],\n}\n\nexport const  QUALITY_LEVEL = {\n  HIGH: 2,\n  MEDIUM: 1,\n  LOW: 0,\n} as const","import * as R from 'colay/ramda'\nimport * as C from 'colay/color'\nimport * as PIXI from 'pixi.js'\nimport { applyDefaultProps as nativeApplyDefaultProps } from '@inlet/react-pixi'\nimport { EventMap } from 'colay-ui/type'\nimport { BoundingBox, Position } from 'colay/type'\n// import { Properties } from 'csstype'\n// import * as C from 'colay/color'\nimport {\n  Element, NodeData, EdgeData, ElementData,\n  DisplayObjectWithYoga, NodeContext, EdgeContext,\n  Cluster, EventInfo, GraphEditorRef, ControllerState,\n  ViewportRef, LightEventInfo,\n  EdgeElement, NodeElement,\n} from '@type'\nimport {\n  ELEMENT_DATA_FIELDS, EVENT,\n  QUALITY_LEVEL,\n} from '@constants'\n\n// type Result = {\n//   x: number;\n//   y: number;\n//   width: number;\n//   height: number;\n//   fill: number;\n// }\n// export const processStyle = (style: Properties): Result => {\n//   const newStyle: Result = {} as Result\n//   const _ = R.forEachObjIndexed((val: any, key: string) => {\n//     let isNumber = true\n//     if (R.isString(val) && R.includes(val, '%')) {\n//       isNumber = false\n//       val = (parseFloat(R.replace(val, '%', '')) / 100)\n//     }\n//     switch (key) {\n//       case 'width':\n//         newStyle.width = isNumber ? val : val * parent.width\n//         break\n//       case 'height':\n//         newStyle.height = isNumber ? val : val * parent.height\n//         break\n//       case 'top':\n//         newStyle.y = isNumber ? val : val * parent.height\n//         break\n//       case 'left':\n//         newStyle.x = isNumber ? val : val * parent.width\n//         break\n//       case 'backgroundColor':\n//         newStyle.fill = C.rgbNumber(val)\n//         break\n//       case 'borderRadius':\n//         newStyle.radius = val\n//         break\n//       default:\n//         break\n//     }\n//   }, style)\n//   return newStyle\n// }\n\nexport const processStyle = (props: any = {}, mutableInstance): any => {\n  const { parent } = mutableInstance\n  const {\n    style = {},\n  } = props\n  const newProps: any = {}\n  R.forEachObjIndexed((val: any, key: string) => {\n    let isNumber = true\n    if (R.is(String)(val) && R.includes(val, '%')) {\n      isNumber = false\n      val = (parseFloat(R.replace(val, '%', '')) / 100)\n    }\n    switch (key) {\n      case 'width':\n        newProps.width = isNumber ? val : val * parent.width\n        break\n      case 'height':\n        newProps.height = isNumber ? val : val * parent.height\n        break\n      case 'top':\n        newProps.y = isNumber ? val : val * parent.height\n        break\n      case 'left':\n        newProps.x = isNumber ? val : val * parent.width\n        break\n      case 'backgroundColor':\n        newProps.fill = C.rgbNumber(val)\n        break\n      case 'borderRadius':\n        newProps.radius = val\n        break\n      default:\n        break\n    }\n  }, style)\n  return newProps\n}\n\nconst JUSTIFY_CONTENT = {\n  'flex-start': 'left',\n  center: 'center',\n  'flex-end': 'right',\n}\nexport const processTextStyle = (style: {\n  fontFamily?: string;\n  fontWeight?: string;\n  fontSize?: number;\n  justifyContent?: keyof typeof JUSTIFY_CONTENT;\n  color?: string;\n  width?: number;\n}) => {\n  const {\n    fontFamily,\n    fontWeight,\n    fontSize,\n    justifyContent,\n    color,\n    width,\n    // fontStyle,\n    // letterSpacing,\n    // textDecorationLine,\n    // textTransform,\n  } = style\n\n  return new PIXI.TextStyle({\n    // @ts-ignore\n    align: JUSTIFY_CONTENT[justifyContent ?? 'flex-start'],\n    ...(fontFamily ? { fontFamily } : {}),\n    ...(fontSize ? { fontSize: parseFloat(R.replace(`${fontSize}`, '%', '')) * width! } : {}),\n    ...(fontWeight ? { fontWeight: `${parseFloat(fontWeight)}` } : {}),\n    fill: color, // gradient\n    stroke: color,\n    strokeThickness: 20,\n    letterSpacing: 20,\n    // dropShadow: true,\n    // dropShadowColor: '#ccced2',\n    // dropShadowBlur: 4,\n    // dropShadowAngle: Math.PI / 6,\n    // dropShadowDistance: 6,\n    // wordWrap: true,\n    // wordWrapWidth: 440,\n  })\n}\n\nexport type EventType = (e: PIXI.InteractionEvent) => void\nexport type Events = EventMap\n\nexport const applyEvents = (\n  instance: PIXI.DisplayObject,\n  props: Record<string, any>,\n) => {\n  \n}\n\nconst processProps = (props: Record<string, any>, mutableInstance) => {\n  return props\n}\n\ntype ApplyDefaultPropsConfig = {\n  isFlex?: boolean;\n  rescaleToYoga?: boolean;\n}\n\nexport const preprocessProps = <T extends Record<string, any>>(props: T): T => ({\n  ...props,\n})\n\nexport const IS_FLEX_DEFAULT = false\n\nexport const applyDefaultProps = <P extends Record<string, any> >(\n  instance: PIXI.Graphics | PIXI.DisplayObject | PIXI.Container,\n  oldProps: P,\n  // @ts-ignore\n  newProps: P = {},\n  config: ApplyDefaultPropsConfig = {\n    isFlex: IS_FLEX_DEFAULT,\n    rescaleToYoga: false,\n  },\n) => {\n  const mutableInstance = instance as DisplayObjectWithYoga\n  const {\n    isFlex = IS_FLEX_DEFAULT,\n    rescaleToYoga = false,\n  } = config\n  const { style = {}, ...restProps } = newProps\n  if (isFlex) {\n    mutableInstance.flex = true // display === 'flex'\n    mutableInstance.yoga.flexDirection = style?.flexDirection ?? 'column'\n    mutableInstance.yoga.keepAspectRatio = R.equals(\n      newProps.resizeMode,\n      'contain',\n    )\n    // @TODO: was true\n    mutableInstance.yoga.rescaleToYoga = rescaleToYoga\n    mutableInstance.yoga.fromConfig(style)\n  }\n  // FOR CULLING\n  mutableInstance._visible = newProps.visible\n  // FOR CULLING\n  return nativeApplyDefaultProps(\n    mutableInstance,\n    processProps(oldProps, mutableInstance),\n    processProps(restProps, mutableInstance),\n  )\n}\n\n/**\n * Helper util for fetching the texture from props\n * Can be either texture or image\n *\n * @param {string} elementType\n * @param {object} props\n * @returns {PIXI.Texture|null}\n */\nexport const getTextureFromProps = (elementType: string, pureProps: Record<string, any> = {}) => {\n  const {\n    source,\n    ...rest\n  } = pureProps\n  const isUriSource = R.has('uri')(source)\n  const props: Record<string, any> = {\n    ...rest,\n    ...(isUriSource ? ({ image: source.uri }) : ({ texture: source })),\n  }\n  const emitChange = () => requestAnimationFrame(() => {\n    window.dispatchEvent(new CustomEvent('__REACT_PIXI_REQUEST_RENDER__'))\n  })\n\n  const check = (inType: any, validator: any) => {\n    if (props.hasOwnProperty(inType)) {\n      const valid = validator.typeofs.some((t: any) => typeof props[inType] === t)\n        || validator.instanceofs.some((i: any) => props[inType] instanceof i)\n      R.throwWhen([\n        [R.always(!valid), R.always(`${elementType} ${inType} prop is invalid`)],\n      ])('')\n      return props[inType]\n    }\n  }\n\n  if (props.texture) {\n    R.throwWhen([\n      [R.always(R.not(props.texture instanceof PIXI.Texture)), R.always(`${elementType} texture needs to be typeof \\`PIXI.Texture\\``)],\n    ])('')\n    return props.texture\n  }\n  const result = check('image', { typeofs: ['string'], instanceofs: [HTMLImageElement] })\n      || check('video', { typeofs: ['string'], instanceofs: [HTMLVideoElement] })\n      || check('source', {\n        typeofs: ['string', 'number'],\n        instanceofs: [HTMLImageElement, HTMLVideoElement, HTMLCanvasElement, PIXI.Texture],\n      })\n\n  R.throwWhen([\n    [R.always(!result), R.always(`${elementType} could not get texture from props`)],\n  ])('')\n\n  const texture = PIXI.Texture.from(result)\n  texture.once('update', emitChange)\n  texture.once('loaded', emitChange)\n\n  if (texture.valid) {\n    emitChange()\n  }\n\n  return texture\n}\n\nexport const getSelectedItemByElement = (\n  element: Element,\n  info: { nodes: NodeData[]; edges: EdgeData[]},\n) => {\n  const id = element.id()\n  const isNode = element.isNode()\n  const targetPath = isNode ? 'nodes' : 'edges'\n  const index = info[targetPath].findIndex((targetItem: ElementData) => targetItem.id === id)\n  return {\n    item: info[targetPath][index] as NodeData | EdgeData,\n    index: index as number,\n  }\n}\n\nexport const getSelectedElementInfo = (\n  controllerState: ControllerState, graphEditor: GraphEditorRef,\n) => {\n  const itemIds = controllerState.selectedElementIds\n  const selectedItemId = R.last(itemIds ?? [])\n  const selectedElement = selectedItemId\n    ? graphEditor.cy.$id(`${selectedItemId}`)\n    : null\n  if (!selectedElement) {\n    return {}\n  }\n  const isNode = selectedElement.isNode()\n  const targetPath = isNode ? 'nodes' : 'edges'\n  const index = controllerState[targetPath].findIndex(\n    (targetItem: ElementData) => targetItem.id === selectedItemId,\n  )\n  return {\n    selectedItem: controllerState[targetPath][index],\n    selectedElement,\n    index,\n    type: targetPath,\n  }\n}\n\nexport const getLabel = (path: string[] = [], item: ElementData): string => (R.isEmpty(path)\n  ? item.id\n  : (R.path([ELEMENT_DATA_FIELDS.DATA, ...path], item) ?? item.id))\n// const firstKey = path[0]\n// if (firstKey === ELEMENT_DATA_FIELDS.DATA) {\n//   const name = path[1]\n//   const foundDataItem = item.data?.find((dataItem) => dataItem.name === name)\n//   return foundDataItem?.value[0] ?? ''\n// }\n// return R.path(path)(item)\n\nexport const readTextFile = async (blob: Blob, encoding?: string) => new Promise<string>(\n  (res, rej) => {\n    const reader = new FileReader()\n    reader.addEventListener('load', () => {\n      const { result } = reader\n      // @ts-ignore\n      res(result)\n    })\n    reader.addEventListener('error', (error) => {\n      rej(error)\n    })\n    reader.readAsText(blob, encoding)\n  },\n)\n\nexport const calculateObjectBoundsWithoutChildren = (\n  container: PIXI.Container,\n): BoundingBox => {\n  const position = {\n    x: container.x * container.scale.x,\n    y: container.y * container.scale.y,\n  }\n  if (container.children.length === 0) {\n    return {\n      ...position,\n      width: 0,\n      height: 0,\n    }\n  }\n  const object = container.getChildAt(0) as PIXI.Container\n  const children = object.removeChildren()\n  if (object.width === 0) {\n    children.forEach((child) => {\n      object.addChild(child)\n    })\n    return {\n      ...calculateObjectBoundsWithoutChildren(object),\n      ...position,\n    } as BoundingBox\n  }\n  const box: BoundingBox = {\n    ...position,\n    width: object.width * object.scale.x,\n    height: object.height * object.scale.y,\n  }\n  children.forEach((child) => {\n    object.addChild(child)\n  })\n  return box\n}\n\nexport const getClusterVisibility = (id: string, clusters: Cluster[] = []) => {\n  let visible = true\n  clusters.forEach((cluster) => {\n    if (cluster.ids.includes(id)) {\n      visible = visible && !(cluster.visible ?? true)\n    }\n  })\n  return visible\n}\n// export const calculateDisplayObjectBounds = (object: PIXI.Container) => {\n//   const box = object.getLocalBounds()\n//   box.width = 45\n//   box.height = 45\n//   return {\n//     // x: object.x + (box.x - object.pivot.x) * object.scale.x,\n//     // y: object.y + (box.y - object.pivot.y) * object.scale.y,\n//     width: box.width * object.scale.x,\n//     height: box.height * object.scale.y,\n//     x: object.x * object.scale.x,\n//     y: object.y * object.scale.y,}\n//   }\n\nexport const calculateVisibilityByContext = (\n  element: EdgeElement|NodeElement,\n): boolean => {\n  const context = contextUtils.get(element)\n  const visibility = R.all(R.isTrue)(Object.values(context.settings.visibility))\n  // if (element.isEdge()) {\n  //   const target = element.target()\n  //   const source = element.source()\n  //   return visibility && calculateVisibilityByContext(target)\n  //   && calculateVisibilityByContext(source)\n  // }\n  return visibility\n}\n\n// @ts-ignore\nexport const filterEdges = (nodes: NodeData[]) => (\n  edges: EdgeData[],\n) => {\n  const nodeMap = R.groupBy(R.prop('id'), nodes)\n  return R.filter(\n    (\n      edge: EdgeData,\n    ) => !!(nodeMap[edge.source] && nodeMap[edge.target]),\n    edges,\n  )\n}\n\ntype GetUndoActionsSettings = {\n  controllerState: ControllerState,\n  graphEditor: GraphEditorRef\n}\nexport const getUndoEvents = (events: EventInfo[], settings: GetUndoActionsSettings) => {\n  const {\n    controllerState,\n    graphEditor,\n  } = settings\n  // const addHistory = true\n  const undoEvents: LightEventInfo[] = R.unnest(\n    events.map((event): LightEventInfo[] => {\n      const {\n        // elementId,\n        type,\n        payload,\n      } = event\n      const oldSelectedElementIds = controllerState.selectedElementIds\n      const {\n        selectedElement,\n        selectedItem,\n      } = getSelectedElementInfo(controllerState, graphEditor)\n      switch (type) {\n        case EVENT.ADD_CLUSTER_ELEMENT:\n          return [\n            {\n              type: EVENT.DELETE_CLUSTER_ELEMENT,\n              payload,\n            },\n          ]\n        case EVENT.ADD_EDGE:\n          return [\n            {\n              type: EVENT.DELETE_EDGE,\n              payload,\n            },\n          ]\n        case EVENT.ADD_NODE:\n          return [\n            {\n              type: EVENT.DELETE_NODE,\n              payload,\n            },\n          ]\n        case EVENT.CHANGE_THEME:\n          return [\n            {\n              type: EVENT.CHANGE_THEME,\n              payload: {\n                value: controllerState.actionBar?.theming?.value,\n              },\n            },\n          ]\n        case EVENT.CHANGE_CLUSTER_VISIBILITY:\n          return [\n            {\n              type: EVENT.CHANGE_CLUSTER_VISIBILITY,\n              payload: {\n                ...payload,\n                value: !payload.value,\n              },\n            },\n          ]\n        case EVENT.CLEAR_NODE_GLOBAL_LABEL:\n          return [\n            {\n              type: EVENT.SET_NODE_GLOBAL_LABEL,\n              payload: {\n                value: controllerState.label!.global!.nodes!,\n              },\n            },\n          ]\n        case EVENT.CLEAR_NODE_LOCAL_LABEL:\n          return [\n            {\n              type: EVENT.SET_NODE_LOCAL_LABEL,\n              payload: {\n                value: controllerState.label!.nodes[selectedItem!.id],\n              },\n            },\n          ]\n        case EVENT.CREATE_PLAYLIST:\n          return [\n            {\n              type: EVENT.DELETE_PLAYLIST,\n              payload: {\n                itemIds: payload.items?.map((item) => item.id),\n              },\n            },\n          ]\n        case EVENT.CREATE_CLUSTER:\n          return [\n            {\n              type: EVENT.DELETE_CLUSTER,\n              payload: {\n                itemIds: payload.items?.map((item) => item.id),\n              },\n            },\n          ]\n        case EVENT.DELETE_CLUSTER: {\n          const {\n            itemIds = [],\n          } = payload\n          const items = controllerState.graphConfig?.clusters?.filter(\n            (cluster) => itemIds.includes(cluster.id),\n          )\n          return [\n            {\n              type: EVENT.CREATE_CLUSTER,\n              payload: {\n                items,\n              },\n            },\n          ]\n        }\n        case EVENT.DELETE_CLUSTER_ELEMENT: {\n          return [\n            {\n              type: EVENT.ADD_CLUSTER_ELEMENT,\n              payload,\n            },\n          ]\n        }\n\n        case EVENT.DELETE_EDGE:\n          return [\n            {\n              type: EVENT.ADD_EDGE,\n              payload: {\n                items: controllerState.edges!.filter(\n                  (item) => payload.itemIds.includes(item.id),\n                ),\n              },\n            },\n          ]\n        case EVENT.DELETE_NODE: {\n          const {\n            itemIds,\n          } = payload\n          const relatedEdges = controllerState.edges.filter(\n            (edgeItem) => itemIds.includes(edgeItem.source)\n            || itemIds.includes(edgeItem.target),\n          )\n          return [\n            {\n              type: EVENT.ADD_NODE,\n              payload: {\n                items: controllerState.nodes!.filter(\n                  (item) => itemIds.includes(item.id),\n                ).map((item) => {\n                  const position = graphEditor.cy.$id(item.id).position()\n                  return {\n                    ...item,\n                    position,\n                  }\n                }),\n                edgeItems: relatedEdges,\n              },\n            },\n          ] }\n        case EVENT.DELETE_PLAYLIST:\n          return [\n            {\n              type: EVENT.CREATE_PLAYLIST,\n              payload: {\n                items: controllerState.playlists!.filter(\n                  (playlist) => payload.itemIds.includes(playlist.id),\n                ),\n              },\n            },\n          ]\n        case EVENT.ELEMENT_SELECTED:\n          return (oldSelectedElementIds && oldSelectedElementIds.length > 0)\n            ? [\n              {\n                ...event,\n                type: EVENT.ELEMENT_SELECTED,\n                payload: {\n                  itemIds: oldSelectedElementIds,\n                },\n              },\n            ]\n            : [\n              {\n                type: EVENT.PRESS_BACKGROUND,\n                payload: {\n                  x: graphEditor.viewport.center.x,\n                  y: graphEditor.viewport.center.y,\n                },\n              },\n            ]\n        case EVENT.ELEMENT_SELECTED_WITH_ZOOM:\n          return (oldSelectedElementIds && oldSelectedElementIds.length > 0)\n            ? [\n              {\n                ...event,\n                type: EVENT.ELEMENT_SELECTED,\n                payload: {\n                  itemIds: oldSelectedElementIds,\n                },\n              },\n            ]\n            : [\n              {\n                type: EVENT.PRESS_BACKGROUND,\n                payload: {\n                  x: graphEditor.viewport.center.x,\n                  y: graphEditor.viewport.center.y,\n                },\n              },\n            ]\n        case EVENT.LAYOUT_CHANGED:\n          return [\n            {\n              type: EVENT.SET_POSITIONS_IMPERATIVELY,\n              payload: {\n                oldLayout: controllerState.graphConfig?.layout,\n                positions: graphEditor.cy.nodes().map((element) => ({\n                  position: {\n                    x: element.position().x,\n                    y: element.position().y,\n                  },\n                  elementId: element.id(),\n                })),\n              },\n            },\n          ]\n\n        case EVENT.MODE_CHANGED:\n          return [\n            {\n              type: EVENT.MODE_CHANGED,\n              payload: {\n                value: controllerState.mode,\n              },\n            },\n          ]\n\n        case EVENT.PRESS_BACKGROUND:\n          // @ts-ignore\n          return oldSelectedElementIds\n            ? [\n              {\n                ...event,\n                payload: {\n                  itemIds: oldSelectedElementIds,\n                },\n                type: EVENT.ELEMENT_SELECTED,\n                event: {\n                  data: {\n                    originalEvent: {\n                      metaKey: false,\n                    },\n                  },\n                },\n              },\n            ]\n            : []\n        case EVENT.SET_NODE_GLOBAL_LABEL:\n          return [\n            {\n              type: EVENT.SET_NODE_GLOBAL_LABEL,\n              payload: {\n                value: controllerState.label!.global!.nodes!,\n              },\n            },\n          ]\n        case EVENT.SET_NODE_LOCAL_LABEL:\n          return [\n            {\n              type: EVENT.SET_NODE_LOCAL_LABEL,\n              payload: {\n                value: controllerState.label!.nodes[selectedItem!.id],\n              },\n            },\n          ]\n        case EVENT.UPDATE_DATA:\n          return [\n            {\n              type: EVENT.UPDATE_DATA,\n              payload: {\n                value: selectedItem!.data,\n              },\n            },\n          ]\n        case EVENT.SET_POSITIONS_IMPERATIVELY:\n          return [\n            {\n              type: EVENT.SET_POSITIONS_IMPERATIVELY,\n              payload: {\n                oldLayout: controllerState.graphConfig?.layout,\n                positions: payload.positions.map(({ elementId }) => {\n                  const element = graphEditor.cy.$id(`${elementId}`)\n                  return {\n                    position: {\n                      x: element.position().x,\n                      y: element.position().y,\n                    },\n                    elementId,\n                  }\n                }),\n\n              },\n            },\n          ]\n        default:\n          break\n      }\n      return []\n    }),\n  )\n  return {\n    addHistory: !R.isEmpty(undoEvents),\n    events: undoEvents,\n  }\n}\n\nconst throttleTimeTable: Record<string, number> = {}\nexport const throttle = (callback: (id: string)=> void, delay: number, _id?: string) => {\n  const time = (new Date()).getTime()\n  const id = _id ?? R.uuid()\n  const diff = throttleTimeTable[id] ? (time - throttleTimeTable[id]) : time\n\n  if (diff > delay) {\n    throttleTimeTable[id] = time\n    callback(id)\n  }\n}\n\nexport const isPositionInBox = (position: Position, box: BoundingBox) => {\n  const {\n    x,\n    y,\n  } = position\n  const x_ = box.x + box.width\n  const y_ = box.y + box.height\n  const startPos = {\n    x: box.x < x_ ? box.x : x_,\n    y: box.y < y_ ? box.y : y_,\n  }\n  const endPos = {\n    x: box.x < x_ ? x_ : box.x,\n    y: box.y < y_ ? y_ : box.y,\n  }\n  return x >= startPos.x && y >= startPos.y && x <= endPos.x\n  && y <= endPos.y\n}\n\nexport const getBoundingBox = (\n  startPos: Position, endPos: Position, abs = false,\n) => {\n  const width = endPos.x - startPos.x\n  const height = endPos.y - startPos.y\n  // const x = startPos.x < endPos.x ? startPos.x : endPos.x\n  // const y = startPos.y < endPos.y ? startPos.y : endPos.y\n  return {\n    ...startPos,\n    // x,\n    // y,\n    width: abs ? Math.abs(width) : width,\n    height: abs ? Math.abs(height) : height,\n  }\n}\n\nexport const cyUnselectAll = (cy: cytoscape.Core) => {\n  cy.elements(':selected').unselect()\n}\n\nexport const getElementsCollectionByIds = (cy: cytoscape.Core, ids: string[]) => {\n  let collection = cy.collection()\n  ids.forEach((id) => {\n    collection = collection.merge(cy.$id(id))\n  })\n  return collection\n}\n\nexport const getPointerPositionOnViewport = (\n  viewport: ViewportRef,\n  event: MouseEvent,\n) => {\n  const position = getEventClientPosition(event)\n  // @ts-ignore\n  if (viewport.options.interaction) {\n    // @ts-ignore\n    viewport.options.interaction.mapPositionToPoint(position, position.x, position.y)\n  }\n  position.x /= viewport.scale.x\n  position.y /= viewport.scale.y\n  position.x += viewport.left\n  position.y += viewport.top\n  return position\n}\n\nexport const getEventClientPosition = (e) => {\n  const event = e.touches?.[0] ?? e.changedTouches?.[0] ?? e\n  return {\n    x: event.clientX,\n    y: event.clientY,\n  }\n}\n\nexport const isMultipleTouches = (e) => {\n  const touches = e.touches ?? e.changedTouches\n  return touches && touches.length > 0\n}\n\nexport const contextUtils = {\n  update: (element: Element, context: any) => {\n    element.data({\n      [ELEMENT_DATA_FIELDS.CONTEXT]: context,\n    })\n  },\n  get: (element: Element) => element.data(ELEMENT_DATA_FIELDS.CONTEXT),\n  getNodeContext: (element: Element): NodeContext => element.data(\n    ELEMENT_DATA_FIELDS.CONTEXT,\n  ),\n  getEdgeContext: (element: Element): EdgeContext => element.data(\n    ELEMENT_DATA_FIELDS.CONTEXT,\n  ),\n}\n\nexport const getElementData = (element: Element) => element.data(ELEMENT_DATA_FIELDS.DATA)\n\nexport const getItemFromElement = (element: Element) => ({\n  id: element.id(),\n  data: getElementData(element),\n})\n\nexport const pauseEvent = (e) => {\n  if (e.stopPropagation) e.stopPropagation()\n  if (e.preventDefault) e.preventDefault()\n  e.cancelBubble = true\n  e.returnValue = false\n  return false\n}\n\nexport const adjustVisualQuality = (objectCount: number, viewport: ViewportRef)=>{\n  const qualityLevel = objectCount < 150\n    ? QUALITY_LEVEL.HIGH\n    : (\n      objectCount < 400\n        ? QUALITY_LEVEL.MEDIUM\n        : QUALITY_LEVEL.LOW\n    )\n  if (viewport.qualityLevel !== qualityLevel) {\n    viewport.oldQualityLevel = viewport.qualityLevel\n    viewport.qualityLevel = qualityLevel\n    // viewport.qualityChanged = true\n    switch (qualityLevel) {\n      case QUALITY_LEVEL.HIGH:\n        // HIGH\n        PIXI.settings.ROUND_PIXELS = true\n        // @ts-ignore\n        PIXI.settings.PRECISION_FRAGMENT = PIXI.PRECISION.HIGH\n        PIXI.settings.RESOLUTION = 32// 64// window.devicePixelRatio\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.LINEAR\n        break\n      case QUALITY_LEVEL.MEDIUM:\n        PIXI.settings.ROUND_PIXELS = false// true\n        // @ts-ignore\n        PIXI.settings.PRECISION_FRAGMENT = PIXI.PRECISION.MEDIUM\n        PIXI.settings.RESOLUTION = 12// 32// 64// window.devicePixelRatio\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST\n        break\n      case QUALITY_LEVEL.LOW:\n        PIXI.settings.ROUND_PIXELS = false\n        // @ts-ignore\n        PIXI.settings.PRECISION_FRAGMENT = PIXI.PRECISION.LOW\n        PIXI.settings.RESOLUTION = 0.8// 32// 64// window.devicePixelRatio\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST\n        break\n      default:\n        break\n    }\n  }\n}","import React from 'react'\nimport { PixiComponent } from '@inlet/react-pixi'\nimport * as R from 'colay/ramda'\nimport { wrapComponent } from 'colay-ui'\nimport * as PIXI from 'pixi.js'\nimport {\n  applyDefaultProps, getTextureFromProps, preprocessProps,\n} from '@utils'\nimport { PIXIBasicStyle, PIXIShapeStyle } from '@type'\n\ntype ImageURISource = { uri: string}\n\nexport type ImageProps = {\n  style: PIXIBasicStyle & PIXIShapeStyle;\n  source: ImageURISource;\n}\n\n// @ts-ignore\nconst ImagePIXI = PixiComponent<ImageProps, PIXI.Sprite>('Image', {\n  create: (props: ImageProps) => {\n    const instance = new PIXI.Sprite(getTextureFromProps('Sprite', props))\n    return instance\n  },\n  applyProps: (mutableInstance: PIXI.Sprite, oldProps, _props) => {\n    const props = preprocessProps(_props)\n    const {\n      // image,\n      // texture,\n      source,\n      ...restProps\n    } = props\n    const isUriSource = R.has('uri')(source)\n    if (\n      (isUriSource && source.uri !== oldProps.source?.uri)\n        || source !== oldProps.source\n    ) {\n      mutableInstance.texture = getTextureFromProps('Sprite', props)\n    }\n    // R.when(\n    //   R.anyPass([\n    //     R.always(isUriSource && source.uri !== oldProps.source?.uri),\n    //     R.always(source !== oldProps.source),\n    //   ]),\n    //   () => {\n    //     mutableInstance.texture = getTextureFromProps('Sprite', props)\n    //   },\n    //   source,\n    // )\n    applyDefaultProps(mutableInstance, oldProps, restProps, { rescaleToYoga: true })\n  },\n})\n\nfunction ImageElement(props: ImageProps) {\n  return (\n    <ImagePIXI\n      {...props}\n    />\n  )\n}\n\nexport const Image = wrapComponent<ImageProps>(ImageElement)\n","import React from 'react'\nimport * as PIXI from 'pixi.js'\nimport * as R from 'colay/ramda'\nimport { wrapComponent } from 'colay-ui'\nimport { PropsWithRef } from 'colay-ui/type'\nimport { PixiComponent } from '@inlet/react-pixi'\nimport { useTheme, ThemeProps } from '@core/theme'\nimport * as C from 'colay/color'\nimport { applyDefaultProps } from '@utils'\n\ntype TextStyle = any\n\ntype TextPIXIProps = {\n  text: string;\n  style?: TextStyle;\n  color?: string;\n  isSprite?: boolean;\n}\n// dropShadow\n// dropShadowAlpha\n// dropShadowAngle\n// dropShadowBlur\n// dropShadowColor\n// dropShadowDistance\nconst PositionStyleKeys = ['left', 'top', 'width', 'height']\nconst processTextProps = (props: TextPIXIProps) => {\n  const { style = {} } = props\n  return {\n    ...props,\n    style: R.pick(PositionStyleKeys)(style),\n    textStyle: R.pipe(\n      // @ts-ignore\n      R.toPairs,\n      R.map(\n        ([key, value]: [string, any]) => R.cond([\n          [R.equals('color'), () => (['fill', C.rgbNumber(value)])],\n          [R.equals('textShadowColor'), () => (['dropShadowColor', C.rgbNumber(value)])],\n          [R.equals('textShadowRadius'), () => (['dropShadowBlur', C.rgbNumber(value)])],\n          [R.equals('textShadowOffset'), () => (['dropShadowDistance', R.values(value)?.[0]])],\n          [R.T, R.always([key, value])],\n          // @ts-ignore\n        ])(key),\n      ),\n      R.fromPairs,\n      R.cond([\n        [\n          R.anyPass([\n            R.has('dropShadowColor'),\n            R.has('dropShadowBlur'),\n            R.has('dropShadowDistance'),\n          ]),\n          R.set(R.lensProp('dropShadow'), true),\n        ],\n        [\n          R.T,\n          R.identity,\n        ],\n      ]),\n      // @ts-ignore\n    )(R.omit([PositionStyleKeys])({ ...style })),\n  }\n}\n\n// @ts-ignore\nconst TextPIXI = PixiComponent<TextPIXIProps & ThemeProps, PIXI.Text>('PIXIText', {\n  create: (props) => {\n    const {\n      style = {},\n    } = props\n    const {\n      text = '', textStyle = {}, isSprite,\n    } = processTextProps({\n      ...props,\n      style: {\n        color: props.theme.palette.text.primary,\n        ...style,\n      },\n    })\n    const pixiText = new PIXI.Text(text, textStyle)\n    if (isSprite) {\n      pixiText.updateText(false)\n      const spriteText = new PIXI.Sprite(pixiText.texture)\n      // spriteText.text = pixiText\n      return spriteText\n    }\n    return pixiText\n  },\n  applyProps: (\n    instance: PIXI.Text,\n    oldProps,\n    props,\n  ) => {\n    const {\n      style = {},\n    } = props\n    instance.forceToRender = props.forceToRender\n    const { text: _, textStyle: __, ...oldPropsRest } = processTextProps(oldProps)\n    const {\n      text = '', textStyle = {}, isSprite, ...propsRest\n    } = processTextProps({\n      ...props,\n      style: {\n        color: props.theme.palette.text.primary,\n        ...style,\n      },\n    })\n    applyDefaultProps(\n      instance,\n      oldPropsRest,\n      propsRest,\n    )\n    if (isSprite) {\n      const pixiText = new PIXI.Text(text, textStyle)\n      pixiText.updateText(false)\n      instance.texture = pixiText.texture\n    } else {\n      instance.text = text\n      instance.style = textStyle\n    }\n  },\n})\n\nexport type TextProps = {\n  children: string;\n  style?: TextStyle;\n  isSprite?: boolean;\n}\n\nconst TextElement = (\n  props: TextProps,\n  forwardedRef: React.ForwardedRef<PIXI.Text>,\n) => {\n  const { children, ...rest } = props\n  const theme = useTheme()\n  const [count, setCount] = React.useState(0)\n  return (\n    <TextPIXI\n      ref={forwardedRef}\n      text={children}\n      theme={theme}\n      forceToRender={() => setCount((c) => c + 1)}\n      {...rest}\n    />\n  )\n}\n\nexport const Text = wrapComponent<\nPropsWithRef<PIXI.Text, TextProps>\n>(TextElement, { isForwardRef: true })\n","import React from 'react'\nimport { PixiComponent } from '@inlet/react-pixi'\nimport { PropsWithRef } from 'colay-ui/type'\nimport { wrapComponent } from 'colay-ui'\nimport { useTheme, ThemeProps } from '@core/theme'\nimport * as PIXI from 'pixi.js'\nimport * as C from 'colay/color'\nimport {\n  applyDefaultProps, preprocessProps,\n} from '@utils'\nimport {\n  PIXIBasicStyle, PIXIShapeStyle, PIXIBasicProps,\n} from '@type'\n\nexport type ViewProps = PIXIBasicProps & {\n  style?: PIXIBasicStyle & PIXIShapeStyle;\n  children?: React.ReactNode;\n}\n\nexport type ViewType = React.FC<ViewProps>\n\nexport type ViewRef = PIXI.Graphics\n\n// @ts-ignore\nconst ViewPIXI = PixiComponent<ViewProps & ThemeProps, PIXI.Graphics>('View', {\n  create: () => {\n    const instance = new PIXI.Graphics()\n    // contextMenu\n    // instance.contextMenu = createContextMenu({ items: contextMenu })\n    // instance.on('rightclick', (e: PIXI.interaction.InteractionEvent) => {\n    //   instance.contextMenu.onContextMenu(e.data.originalEvent)\n    // })\n    return instance\n  },\n  applyProps: (instance: PIXI.Graphics, oldProps, _props) => {\n    const props = preprocessProps(_props)\n    const {\n      style: {\n        width = instance.width,\n        height = instance.height,\n        backgroundColor, //= props.theme!.palette.background.paper,\n        borderRadius = 0,\n        borderWidth = 0,\n        borderColor = 'black',\n      } = {},\n    } = props\n    instance.clear()\n    if (backgroundColor) {\n      instance.beginFill(C.rgbNumber(backgroundColor), C.getAlpha(backgroundColor))\n      instance.lineStyle(borderWidth, C.rgbNumber(borderColor))\n      const radius = width / 2\n      if ((width === height) && (borderRadius >= radius)) {\n        instance.drawCircle(radius, radius, radius)\n      } else {\n        instance.drawRoundedRect(0, 0, width, height, borderRadius)\n      }\n    }\n    instance.endFill()\n    applyDefaultProps(instance, oldProps, props)\n  },\n})\n\nconst ViewElement = (\n  props: ViewProps,\n  forwardedRef: React.ForwardedRef<ViewRef>,\n) => {\n  const theme = useTheme()\n  return (\n    <ViewPIXI\n      ref={forwardedRef}\n      theme={theme}\n      {...props}\n    />\n\n  )\n}\n\nexport const View = wrapComponent<\nPropsWithRef<PIXI.Container, ViewProps>\n>(ViewElement, { isForwardRef: true })\n// >\n//   <FlexContainer style={rest.style}>\n//     {children}\n//   </FlexContainer>\n// </ViewPIXI>\n","import React from 'react'\nimport { wrapComponent } from 'colay-ui'\nimport {\n  NodeData,\n} from '@type'\nimport { Position } from 'colay-ui/type'\nimport { Pressable } from '@components/Pressable'\nimport { Image } from '@components/Image'\nimport { Text } from '@components/Text'\nimport { View, ViewProps } from '@components/View'\n\nexport type ProfileProps = {\n  name: string;\n  story: string;\n  image: string;\n  link?: string;\n  style?: ViewProps['style'];\n  onClick?: () => void;\n}\n// const SWITCH_COLLAPSE = 'SWITCH_COLLAPSE'\n\nexport type ProfileType = React.FC<ProfileProps>\n\nconst ProfileElement = (\n  props: ProfileProps,\n  __: React.ForwardedRef<ProfileType>,\n) => {\n  const {\n    name,\n    image,\n    story,\n    link,\n    onClick,\n  } = props\n  return (\n    <>\n      <View style={{\n        width: 300,\n        height: 150,\n        flexDirection: 'row',\n        borderRadius: 30,\n        backgroundColor: '#304e57',\n        paddingLeft: 10,\n        paddingTop: 10,\n      }}\n      >\n        <Image\n          source={{ uri: image }}\n          style={{\n            width: 100,\n            height: 100,\n          }}\n        />\n        <View\n          style={{ flexDirection: 'column', width: 200 }}\n        >\n          <View\n            style={{\n              left: 10,\n            }}\n            interactive\n            buttonMode\n            pointertap={() => {\n              if (link) {\n                window.open(link, '_blank')\n              }\n              onClick?.()\n            }}\n          >\n            <Text\n              style={style.title}\n            >\n              {name}\n            </Text>\n          </View>\n          <Text\n          // @ts-ignore\n            style={style.paragraph}\n          >\n            {story}\n          </Text>\n\n        </View>\n      </View>\n\n    </>\n  )\n}\n\nexport const ProfileTemplate = wrapComponent<ProfileProps>(\n  ProfileElement,\n  {\n    isForwardRef: true,\n  },\n)\n\nconst style = {\n  paragraph: {\n    // align: 'center',\n    fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n    fontSize: 10,\n    // fontWeight: 300,\n    // fill: ['#ffffff', '#00ff99'], // gradient\n    // stroke: '#01d27e',\n    // strokeThickness: 5,\n    // letterSpacing: 20,\n    // dropShadow: false,\n    // dropShadowColor: '#ccced2',\n    // dropShadowBlur: 4,\n    // dropShadowAngle: Math.PI / 6,\n    // dropShadowDistance: 6,\n    width: 150,\n    wordWrap: true,\n    wordWrapWidth: 150,\n    color: 'white',\n    left: 30,\n  },\n  title: {\n    // align: 'center',\n    fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n    fontSize: 16,\n    // fontWeight: 400,\n    // fill: ['#ffffff', '#00ff99'], // gradient\n    // stroke: '#01d27e',\n    // strokeThickness: 5,\n    // letterSpacing: 20,\n    // dropShadow: false,\n    // dropShadowColor: '#ccced2',\n    // dropShadowBlur: 4,\n    // dropShadowAngle: Math.PI / 6,\n    // dropShadowDistance: 6,\n    width: 150,\n    wordWrap: true,\n    wordWrapWidth: 150,\n    color: 'white',\n  },\n}\n\n// const createLayout = layoutCreator({\n//   graphID,\n//   predicate: (element) => element.id() === id || _.find(cluster, { id: element.id() }),\n//   options: {\n//     name: 'grid',\n//     boundingBox: {\n//       x1: 0, y1: 0, w: window.innerWidth, h: window.innerHeight,\n//     },\n//     transform: (node, position) => {\n//       // const anim = new Animation({\n//       //   autoplay: false,\n//       //   from: {\n//       //     ...node.position(),\n//       //   },\n//       //   to: position,\n//       //   update: (s) => {\n//       //     node.position(s)\n//       //     getContext(node).render()\n//       //   },\n//       //   // duration: 10,\n//       // })\n//       // anim.play()\n//       return position\n//     },\n//   },\n// })\n","// @ts-nocheck\n\nimport * as R from 'colay/ramda'\nimport {\n  Core,\n  EdgeSingular,\n  NodeSingular,\n  Collection,\n} from 'cytoscape'\n\n// configSchema: {\n//   required: [],\n//   properties: {\n\n//   },\n// },\n\nconst getAttribute = (params: {\n  pathText: string;\n  nodes: any[];\n  edges: any[];\n}) => (element: any) => {\n  const {\n    pathText,\n    nodes = [],\n    edges = [],\n  } = params\n  const id = element.id()\n  const item = (element.isNode() ? nodes : edges).find((item) => item.id === id)\n  return R.path(pathText.split('.'), item)\n}\n\ntype ClusterAlgorithm = {\n  get: (arg: { cy: cytoscape.Core; attributes: string}) => Collection[];\n  getByItem: (\n    arg: {\n      cy: Core;\n      attributes: string;\n      nodes: NodeSingular[];\n      edges: EdgeSingular[];\n    }\n  ) => cytoscape.Collection[];\n  configSchema: any;\n  configForm: any;\n}\nexport const Clusters: Record<string, ClusterAlgorithm> = {\n  markov: {\n    /**\n                 * @function\n                 * @param {{ cy: cytoscape.Core, attributes: [string] | string}} options\n                *  @return {}\n                 */\n    // @ts-ignore\n    get: ({ cy, attributes, ...options }) => cy.elements().markovClustering({\n      ...options,\n      attributes: [\n        (edge: EdgeSingular) => edge.data(attributes),\n      ],\n    }),\n    getByItem: ({\n      cy, nodes, edges, attributes, ...options\n      // @ts-ignore\n    }) => cy.elements().markovClustering({\n      ...options,\n      attributes: [\n        getAttribute({\n          edges,\n          nodes,\n          pathText: attributes,\n        }),\n      ],\n    }),\n    configSchema: {\n      required: ['attributes'],\n      properties: {\n        attributes: {\n          type: 'string',\n          default: 'label',\n          info: 'each of which returns a numeric attribute value for the specified edge. Attributes are used to cluster the nodes; i.e. the attributes of an edge indicate similarity between its nodes.',\n        },\n        expandFactor: {\n          type: 'number',\n          default: 2,\n          info: 'A number that affects time of computation and cluster granularity to some extent: M * M (defaultValue 2)',\n        },\n        inflateFactor: {\n          type: 'number',\n          default: 1,\n          info: 'A number that affects cluster granularity (the greater the value, the more clusters): M(i,j) / E(j)',\n        },\n        multFactor: {\n          type: 'number',\n          default: 1,\n          info: 'Optional number of self loops for each node. Use a neutral value to improve cluster computations',\n        },\n        maxIterations: {\n          type: 'number',\n          default: 20,\n          info: 'Maximum number of iterations of the MCL algorithm in a single run',\n        },\n      },\n    },\n    configForm: {\n      attributes: {\n        type: 'string',\n        defaultValue: 'label',\n        info: 'each of which returns a numeric attribute value for the specified edge. Attributes are used to cluster the nodes; i.e. the attributes of an edge indicate similarity between its nodes.',\n        required: true,\n      },\n      expandFactor: {\n        type: 'number',\n        defaultValue: 2,\n        info: 'A number that affects time of computation and cluster granularity to some extent: M * M (defaultValue 2)',\n      },\n      inflateFactor: {\n        type: 'number',\n        defaultValue: 1,\n        info: 'A number that affects cluster granularity (the greater the value, the more clusters): M(i,j) / E(j)',\n      },\n      multFactor: {\n        type: 'number',\n        defaultValue: 1,\n        info: 'Optional number of self loops for each node. Use a neutral value to improve cluster computations',\n      },\n      maxIterations: {\n        type: 'number',\n        defaultValue: 20,\n        info: 'Maximum number of iterations of the MCL algorithm in a single run',\n      },\n    },\n  },\n  kMeans: {\n    /**\n                 * @function\n                 * @param {{ cy: cytoscape,attributes: [string] | string, k: number}} options\n                *  @return {function}\n                 */\n    // @ts-ignore\n    get: ({ cy, attributes, ...options }) => cy.nodes().kMeans({\n      ...options,\n      attributes: [\n        (node: NodeSingular) => node.data(attributes),\n      ],\n    }),\n    getByItem: ({\n      cy, nodes, edges, attributes, ...options\n      // @ts-ignore\n    }) => cy.elements().kMeans({\n      ...options,\n      attributes: [\n        getAttribute({\n          edges,\n          nodes,\n          pathText: attributes,\n        }),\n      ],\n    }),\n    configSchema: {\n      required: ['attributes', 'k', 'distance'],\n      properties: {\n        attributes: {\n          type: 'string',\n          default: 'label',\n          info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense. Attributes must be specified unless a custom distance: function( nodeP, nodeQ ) is specified.',\n        },\n        k: {\n          type: 'number',\n          default: 2,\n          info: 'The number of clusters to return.',\n        },\n        distance: {\n          type: 'string',\n          default: 'euclidean',\n          enum: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n          info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        },\n        maxIterations: {\n          type: 'number',\n          default: 10,\n          info: 'The maximum number of iterations of the algorithm to run ',\n        },\n        sensitivityThreshold: {\n          type: 'number',\n          default: 0.001,\n          info: 'The coefficients difference threshold used to determine whether the algorithm has converged',\n        },\n      },\n    },\n    configForm: {\n      attributes: {\n        type: 'string',\n        defaultValue: 'label',\n        info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense. Attributes must be specified unless a custom distance: function( nodeP, nodeQ ) is specified.',\n        required: true,\n      },\n      k: {\n        type: 'number',\n        defaultValue: 2,\n        info: 'The number of clusters to return.',\n        required: true,\n      },\n      distance: {\n        type: 'choice',\n        defaultValue: 'euclidean',\n        choices: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n        info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        required: true,\n      },\n      maxIterations: {\n        type: 'number',\n        defaultValue: 10,\n        info: 'The maximum number of iterations of the algorithm to run ',\n      },\n      sensitivityThreshold: {\n        type: 'number',\n        defaultValue: 0.001,\n        info: 'The coefficients difference threshold used to determine whether the algorithm has converged',\n      },\n    },\n  },\n  kMedoids: {\n    /**\n                 * @function\n                 * @param {{ cy: cytoscape,attributes: [string] | string, k: number}} options\n                *  @return {function}\n                 */\n    // @ts-ignore\n    get: ({ cy, attributes, ...options }) => cy.nodes().kMedoids({\n      ...options,\n      attributes: [\n        (node: NodeSingular) => node.data(attributes),\n      ],\n    }),\n    getByItem: ({\n      cy, nodes, edges, attributes, ...options\n    }) => cy.elements().kMedoids({\n      ...options,\n      attributes: [\n        getAttribute({\n          edges,\n          nodes,\n          pathText: attributes,\n        }),\n      ],\n    }),\n    configSchema: {\n      required: ['attributes', 'k', 'distance'],\n      properties: {\n        attributes: {\n          type: 'string',\n          default: 'label',\n          info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense',\n        },\n        k: {\n          type: 'number',\n          default: 2,\n          info: 'The number of clusters to return.',\n        },\n        distance: {\n          type: 'string',\n          default: 'euclidean',\n          enum: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n          info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        },\n        maxIterations: {\n          type: 'number',\n          default: 10,\n          info: 'The maximum number of iterations of the algorithm to run ',\n        },\n      },\n    },\n    configForm: {\n      attributes: {\n        type: 'string',\n        defaultValue: 'label',\n        info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense',\n        required: true,\n      },\n      k: {\n        type: 'number',\n        defaultValue: 2,\n        info: 'The number of clusters to return.',\n        required: true,\n      },\n      distance: {\n        type: 'choice',\n        defaultValue: 'euclidean',\n        choices: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n        info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        required: true,\n      },\n      maxIterations: {\n        type: 'number',\n        defaultValue: 10,\n        info: 'The maximum number of iterations of the algorithm to run ',\n      },\n    },\n  },\n  fuzzyCMeans: {\n    /**\n                 * @function\n                 * @param {{ cy: cytoscape,attributes: [string] | string, k: number}} options\n                *  @return {function}\n                 */\n    get: ({ cy, attributes, ...options }) => cy.nodes().fuzzyCMeans({\n      ...options,\n      attributes: [\n        (node: NodeSingular) => node.data(attributes),\n      ],\n    }),\n    getByItem: ({\n      cy, nodes, edges, attributes, ...options\n      // @ts-ignore\n    }) => cy.elements().fuzzyCMeans({\n      ...options,\n      attributes: [\n        getAttribute({\n          edges,\n          nodes,\n          pathText: attributes,\n        }),\n      ],\n    }),\n    configSchema: {\n      required: [\n        'attributes',\n        'k',\n        'distance',\n      ],\n      properties: {\n        attributes: {\n          type: 'string',\n          default: 'label',\n          info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense',\n        },\n        k: {\n          type: 'number',\n          default: 2,\n          info: 'The number of clusters to return.',\n        },\n        distance: {\n          type: 'string',\n          default: 'euclidean',\n          enum: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n          info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        },\n        maxIterations: {\n          type: 'number',\n          default: 10,\n          info: 'The maximum number of iterations of the algorithm to run ',\n        },\n        sensitivityThreshold: {\n          type: 'number',\n          default: 0.001,\n          info: 'The coefficients difference threshold used to determine whether the algorithm has converged',\n        },\n      },\n    },\n    configForm: {\n      attributes: {\n        type: 'string',\n        defaultValue: 'label',\n        info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense',\n        required: true,\n      },\n      k: {\n        type: 'number',\n        defaultValue: 2,\n        info: 'The number of clusters to return.',\n        required: true,\n      },\n      distance: {\n        type: 'choice',\n        defaultValue: 'euclidean',\n        choices: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n        info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        required: true,\n      },\n      maxIterations: {\n        type: 'number',\n        defaultValue: 10,\n        info: 'The maximum number of iterations of the algorithm to run ',\n      },\n      sensitivityThreshold: {\n        type: 'number',\n        defaultValue: 0.001,\n        info: 'The coefficients difference threshold used to determine whether the algorithm has converged',\n      },\n    },\n  },\n  hierarchical: {\n    /**\n                 * @function\n                 * @param {{ cy: cytoscape,mode: 'threshold', threshold: number, attributes: [string] | string}} param_name\n                *  @return {function}\n                 */\n    // @ts-ignore\n    get: ({ cy, attributes, ...options }) => cy.nodes().hierarchicalClustering({\n      ...options,\n      attributes: [\n        (node: NodeSingular) => node.data(attributes),\n      ],\n    }),\n    getByItem: ({\n      cy, nodes, edges, attributes, ...options\n    }) => cy.elements().hierarchicalClustering({\n      ...options,\n      attributes: [\n        getAttribute({\n          edges,\n          nodes,\n          pathText: attributes,\n        }),\n      ],\n    }),\n    configSchema: {\n      required: ['attributes', 'distance', 'mode'],\n      properties: {\n        attributes: {\n          type: 'string',\n          default: 'label',\n          info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense',\n        },\n        distance: {\n          type: 'string',\n          default: 'euclidean',\n          enum: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n          info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n          required: true,\n        },\n        linkage: {\n          type: 'string',\n          default: 'single',\n          enum: ['mean', 'min', 'complete', 'max'],\n          info: 'The linkage criterion for measuring the distance between two clusters;',\n        },\n        mode: {\n          type: 'string',\n          default: 'threshold',\n          enum: ['threshold', 'dendogram'],\n          info: ' The mode of the algorithm. For \\'threshold\\' (defaultValue), clusters are merged until they are at least the specified distance apart. For \\'dendrogram\\', the clusters are recursively merged using the branches in a dendrogram (tree) structure beyond a specified depth.',\n        },\n        threshold: {\n          type: 'number',\n          default: null,\n          info: 'In mode: \\'threshold\\', distance threshold for stopping the algorithm. All pairs of the returned clusters are at least threshold distance apart. Without specifying this value for mode: \\'threshold\\', all clusters will eventually be merged into a single cluster.',\n        },\n        dendrogramDepth: {\n          type: 'number',\n          default: null,\n          info: 'In mode: \\'dendrogram\\', the depth beyond which branches are merged in the tree. For example, a value of 0 (defaultValue) results in all branches being merged into a single cluster.',\n        },\n        addDendrogram: {\n          type: 'number',\n          default: null,\n          info: 'In mode: \\'dendrogram\\', whether to add nodes and edges to the graph for the dendrogram (defaultValue false). This is not necessary to run the algorithm, but it is useful for visualising the results.',\n        },\n      },\n    },\n    configForm: {\n      attributes: {\n        type: 'string',\n        defaultValue: 'label',\n        info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense',\n        required: true,\n      },\n      distance: {\n        type: 'choice',\n        defaultValue: 'euclidean',\n        choices: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n        info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        required: true,\n      },\n      linkage: {\n        type: 'choice',\n        defaultValue: 'single',\n        choices: ['mean', 'min', 'complete', 'max'],\n        info: 'The linkage criterion for measuring the distance between two clusters;',\n      },\n      mode: {\n        type: 'choice',\n        defaultValue: 'threshold',\n        choices: ['threshold', 'dendogram'],\n        info: ' The mode of the algorithm. For \\'threshold\\' (defaultValue), clusters are merged until they are at least the specified distance apart. For \\'dendrogram\\', the clusters are recursively merged using the branches in a dendrogram (tree) structure beyond a specified depth.',\n        required: true,\n      },\n      threshold: {\n        type: 'number',\n        defaultValue: null,\n        info: 'In mode: \\'threshold\\', distance threshold for stopping the algorithm. All pairs of the returned clusters are at least threshold distance apart. Without specifying this value for mode: \\'threshold\\', all clusters will eventually be merged into a single cluster.',\n      },\n      dendrogramDepth: {\n        type: 'number',\n        defaultValue: null,\n        info: 'In mode: \\'dendrogram\\', the depth beyond which branches are merged in the tree. For example, a value of 0 (defaultValue) results in all branches being merged into a single cluster.',\n      },\n      addDendrogram: {\n        type: 'number',\n        defaultValue: null,\n        info: 'In mode: \\'dendrogram\\', whether to add nodes and edges to the graph for the dendrogram (defaultValue false). This is not necessary to run the algorithm, but it is useful for visualising the results.',\n      },\n    },\n  },\n  affinityPropagation: {\n    /**\n                 * @function\n                 * @param {{ cy: cytoscape,attributes: [string] | string}} options\n                *  @return {function}\n                 */\n    // @ts-ignore\n    get: ({ cy, attributes, ...options }) => cy.nodes().affinityPropagation({\n      ...options,\n      attributes: [\n        (node: NodeSingular) => node.data(attributes),\n      ],\n    }),\n    getByItem: ({\n      cy, nodes, edges, attributes, ...options\n      // @ts-ignore\n    }) => cy.elements().affinityPropagation({\n      ...options,\n      attributes: [\n        getAttribute({\n          edges,\n          nodes,\n          pathText: attributes,\n        }),\n      ],\n    }),\n    configSchema: {\n      required: ['attributes', 'distance'],\n      properties: {\n        attributes: {\n          type: 'string',\n          default: 'label',\n          info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense',\n        },\n        distance: {\n          type: 'string',\n          default: 'euclidean',\n          enum: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n          info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        },\n        preference: {\n          type: 'string',\n          default: 'median',\n          enum: ['mean', 'min', 'complete', 'max'],\n          info: 'The metric used to determine the suitability of a data point (i.e. node attribute vector) to serve as an exemplar. It may take on one of several special values, which are determined from the similarity matrix (i.e. the negative distance matrix). Or a manual, numeric value may be used (generally of the opposite sign of your distance values)',\n        },\n        damping: {\n          type: 'number',\n          default: 0.8,\n          maximum: 1,\n          minimum: 0.5,\n          includeMin: true,\n          info: 'A damping factor on [0.5, 1)',\n        },\n        minIterations: {\n          type: 'number',\n          default: 100,\n          info: 'The minimum number of iteraions the algorithm will run before stopping',\n        },\n        maxIterations: {\n          type: 'number',\n          default: 1000,\n          info: 'The maximum number of iteraions the algorithm will run before stopping',\n        },\n      },\n    },\n    configForm: {\n      attributes: {\n        type: 'string',\n        defaultValue: 'label',\n        info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense',\n        required: true,\n      },\n      distance: {\n        type: 'choice',\n        defaultValue: 'euclidean',\n        choices: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n        info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        required: true,\n      },\n      preference: {\n        type: 'choice',\n        defaultValue: 'median',\n        choices: ['mean', 'min', 'complete', 'max'],\n        info: 'The metric used to determine the suitability of a data point (i.e. node attribute vector) to serve as an exemplar. It may take on one of several special values, which are determined from the similarity matrix (i.e. the negative distance matrix). Or a manual, numeric value may be used (generally of the opposite sign of your distance values)',\n      },\n      damping: {\n        type: 'number',\n        defaultValue: 0.8,\n        max: 1,\n        min: 0.5,\n        includeMin: true,\n        info: 'A damping factor on [0.5, 1)',\n      },\n      minIterations: {\n        type: 'number',\n        defaultValue: 100,\n        info: 'The minimum number of iteraions the algorithm will run before stopping',\n      },\n      maxIterations: {\n        type: 'number',\n        defaultValue: 1000,\n        info: 'The maximum number of iteraions the algorithm will run before stopping',\n      },\n    },\n  },\n} as const\n","import React from 'react'\nimport { Position } from 'colay-ui/type'\nimport { BoundingBox, NodeElement } from '@type'\nimport * as PIXI from 'pixi.js'\nimport {\n  PixiComponent,\n} from '@inlet/react-pixi'\nimport * as R from 'colay/ramda'\nimport * as V from 'colay/vector'\nimport * as C from 'colay/color'\nimport { applyDefaultProps, preprocessProps } from '@utils'\nimport { DefaultTheme } from '@core/theme'\nimport { wrapComponent } from 'colay-ui'\nimport { EDGE_LINE_Z_INDEX } from '@constants'\n\nexport type GraphicsProps = {\n\n}\n\ntype BezierLinePoints = {\n  start: Position;\n  mid: Position;\n  end: Position;\n}\nconst controlPointsCreator = {\n  bezier: (config: {\n    from: Position;\n    to: Position;\n    unitVector: Position;\n    distance: number;\n    count: number;\n    normVector: Position;\n  }): BezierLinePoints[] => {\n    const {\n      from,\n      to,\n      distance,\n      count,\n      unitVector,\n      normVector,\n    } = config\n    const upperVector = V.multiplyScalar(distance)(normVector)\n    const lowerVector = V.multiplyScalar(-1)(upperVector)\n    const chunkDistanceVector = R.pipe(\n      V.subtract(from),\n      V.divideScalar(count),\n    )(to)\n    const semiChunkDistanceVector = V.divideScalar(2)(chunkDistanceVector)\n    return R.mapIndexed(\n      (_, index: number) => {\n        const isUpper = index % 2 === 0\n        const startVec = R.pipe(\n          V.multiplyScalar(index),\n          V.add(from),\n        )(chunkDistanceVector)\n        const endVec = V.add(startVec)(chunkDistanceVector)\n        const midVec = R.pipe(\n          V.add(semiChunkDistanceVector),\n          V.add(isUpper ? upperVector : lowerVector),\n        )(startVec)\n        return {\n          start: startVec,\n          mid: midVec,\n          end: endVec,\n          upperVector,\n          midVec: R.pipe(\n            V.add(semiChunkDistanceVector),\n          )(startVec),\n        }\n      },\n    )(R.range(0, count))\n  },\n}\nconst drawArrowHead = ({\n  graphics,\n  to,\n  radius = 10,\n  unitVector,\n  fill,\n}: {\n  graphics: PIXI.Graphics;\n  unitVector: Position;\n  to: Position;\n  radius?: number;\n  fill: number;\n}) => {\n  const bottomCenter = to\n  const unitDistanceVec = V.multiplyScalar(radius)(unitVector)\n  const perpendicularUnitDistanceVec = V.rotate(-Math.PI / 2)(unitDistanceVec)\n  const leftControlPoint = R.pipe(\n    V.multiplyScalar(-1),\n    V.add(bottomCenter),\n  )(perpendicularUnitDistanceVec)\n  const rightControlPoint = R.pipe(\n    V.add(bottomCenter),\n  )(perpendicularUnitDistanceVec)\n  const topControlPoint = V.add(unitDistanceVec)(to)\n  graphics.beginFill(fill)\n  graphics.drawPolygon(\n    new PIXI.Point(leftControlPoint.x, leftControlPoint.y),\n    new PIXI.Point(rightControlPoint.x, rightControlPoint.y),\n    new PIXI.Point(topControlPoint.x, topControlPoint.y),\n  )\n  graphics.endFill()\n  graphics.isSprite = true\n}\nexport const drawLine = (\n  config: {\n    graphics: PIXI.Graphics;\n    sourceElement: NodeElement;\n    targetElement: NodeElement;\n    from: BoundingBox;\n    to: BoundingBox;\n    unitVector: Position;\n    distanceVector: Position;\n    normVector: Position;\n    undirectedUnitVector:Position;\n    undirectedNormVector:Position;\n    fill?: number;\n    directed?: boolean;\n    type?: 'bezier' | 'segments' | 'straight';\n    width?: number;\n    alpha?: number;\n    arrowHead?: {\n      radius?: number;\n    };\n    distance?: number;\n    margin?: Position;\n  },\n) => {\n  const {\n    from: fromBoundingBox,\n    to: toBoundingBox,\n    fill = C.rgbNumber(DefaultTheme.palette.background.paper),\n    directed,\n    type, //= 'bezier',\n    graphics,\n    width = 6,\n    alpha = 1,\n    arrowHead = {\n      radius: 2,\n    },\n    distance,\n    margin = {\n      x: 0,\n      y: 0,\n    },\n    unitVector,\n    normVector,\n    undirectedUnitVector,\n    undirectedNormVector,\n    // distanceVector,\n  } = config\n  const marginVector = {\n    x: undirectedNormVector.x * margin.x,\n    y: undirectedNormVector.y * margin.y,\n  }\n  const radiusFrom = Math.hypot(fromBoundingBox.width, fromBoundingBox.height) / 2\n  const radiusTo = Math.hypot(toBoundingBox.width, toBoundingBox.height) / 2\n  const centerOfFrom = V.add(\n    fromBoundingBox.width / 2,\n    fromBoundingBox.height / 2,\n  )(fromBoundingBox)\n  const centerOfTo = V.add(\n    toBoundingBox.width / 2,\n    toBoundingBox.height / 2,\n  )(toBoundingBox)\n  const from = R.pipe(\n    V.add(V.multiplyScalar(radiusFrom)(unitVector)),\n    V.add(marginVector),\n  )(centerOfFrom)\n  const to = R.pipe(\n    V.subtract(V.multiplyScalar(radiusTo)(unitVector)),\n    V.add(marginVector),\n  )(centerOfTo)\n  graphics.clear()\n  graphics.lineStyle(width, fill, alpha)\n\n  if (directed) {\n    drawArrowHead({\n      graphics,\n      unitVector,\n      to,\n      fill,\n      ...arrowHead,\n    })\n  }\n\n  R.cond([\n    [\n      R.equals('bezier'),\n      () => {\n        const controlPoints = controlPointsCreator.bezier({\n          from,\n          to,\n          count: 2,\n          distance: 100,\n          unitVector: undirectedUnitVector,\n          normVector: undirectedNormVector,\n        })\n        R.map(\n          ({\n            start,\n            end,\n            control1,\n            control2,\n          }: BezierLinePoints) => {\n            graphics.moveTo(start.x, start.y)\n            graphics.bezierCurveTo(\n              control1.x, control1.y, control2.x, control2.y, end.x, end.y,\n            )\n          },\n        )(controlPoints)\n      },\n    ],\n    [\n      R.equals('segments'),\n      () => {\n        const controlPoints = controlPointsCreator.bezier({\n          from,\n          to,\n          count: 4,\n          distance: 100,\n          unitVector: undirectedUnitVector,\n          normVector: undirectedNormVector,\n        })\n        R.map(\n          ({\n            start,\n            mid,\n            end,\n          }: BezierLinePoints) => {\n            graphics.moveTo(start.x, start.y)\n            graphics.lineTo(\n              mid.x, mid.y,\n            )\n            graphics.moveTo(mid.x, mid.y)\n            graphics.lineTo(\n              end.x, end.y,\n            )\n          },\n        )(controlPoints)\n      },\n    ],\n    [\n      R.T,\n      () => {\n        if (distance) {\n          const controlPoints = controlPointsCreator.bezier({\n            from,\n            to,\n            count: 1,\n            distance,\n            unitVector: undirectedUnitVector,\n            normVector: undirectedNormVector,\n          })\n          R.map(\n            ({\n              mid,\n              start,\n              end,\n            }: BezierLinePoints) => {\n              graphics.moveTo(start.x, start.y)\n              graphics.bezierCurveTo(\n                start.x, start.y, mid.x, mid.y, end.x, end.y,\n              )\n            },\n          )(controlPoints)\n        } else {\n          graphics.moveTo(from.x, from.y)\n          graphics.lineTo(to.x, to.y)\n        }\n      },\n    ],\n  ])(type)\n  graphics.endFill()\n  graphics.zIndex = EDGE_LINE_Z_INDEX\n}\n\nexport const drawGraphics = (instance: PIXI.Graphics, props: {\n  style: any\n}) => {\n  const {\n    style: {\n      width = 0,\n      height = 0,\n      backgroundColor = 'black',\n      borderRadius = 0,\n      borderWidth = 0,\n      borderColor = 'black',\n    } = {},\n  } = props\n  instance.clear()\n  instance.beginFill(C.rgbNumber(backgroundColor), C.getAlpha(backgroundColor))\n  instance.lineStyle(borderWidth, C.rgbNumber(borderColor))\n  const radius = width / 2\n  if ((width === height) && (borderRadius >= radius)) {\n    instance.drawCircle(radius, radius, radius)\n  } else {\n    instance.drawRoundedRect(0, 0, width, height, borderRadius)\n  }\n  instance.endFill()\n}\n\n// @ts-ignore\nconst GraphicsPIXI = PixiComponent<GraphProps, PIXI.Graphics>('Graphics2', {\n  create: (props: GraphProps) => {\n    const instance = new PIXI.Graphics()\n    return instance\n  },\n  applyProps: (mutableInstance: PIXI.Graphics, oldProps, _props) => {\n    const props = preprocessProps(_props)\n    const {\n      ...restProps\n    } = props\n\n    applyDefaultProps(mutableInstance, oldProps, restProps)\n  },\n})\n\nfunction GraphicsElement(props: GraphProps, forwardRef: any) {\n  return (\n    <GraphicsPIXI\n      ref={forwardRef}\n      {...props}\n    />\n  )\n}\n\nexport const Graphics = wrapComponent<GraphProps>(\n  GraphicsElement, {\n    isForwardRef: true,\n  },\n)\n","import React from 'react'\nimport * as PIXI from 'pixi.js'\nimport * as R from 'colay/ramda'\nimport { PIXIBasicStyle, PIXIShapeStyle } from '@type'\nimport { View, ViewProps } from '../View'\n\nexport type PressableProps = {\n  style?: PIXIBasicStyle & PIXIShapeStyle;\n  children?: React.ReactNode;\n  buttonMode?: boolean;\n} & ViewProps\n\n// const PressablePIXI = PixiComponent<PressableProps, PIXI.Container>('PressablePIXI', {\n//   create: () => {\n//     const mutableInstance = new PIXI.Container()\n//     mutableInstance.interactive = true\n//     mutableInstance.buttonMode = true\n//     return mutableInstance\n//   },\n//   applyProps: (\n//     instance: PIXI.Graphics,\n//     oldProps,\n//     _props,\n//   ) => applyDefaultProps(instance, oldProps, preprocessProps(_props))\n//   ,\n// })\n\nexport const Pressable = (props: PressableProps) => {\n  const {\n    // onLongPress,\n    // onPress,\n    // onDoublePress,\n    // onHoverEnd,\n    // onHoverStart,\n    // onPressChange,\n    // onPressEnd,\n    // onPressMove,\n    // onPressStart,\n    buttonMode,\n    ...rest\n  } = props\n  // const events = useEvents(\n  //   R.omitBy(R.isNil, {\n  //     onLongPress,\n  //     onPress,\n  //     onDoublePress,\n  //     onHoverEnd,\n  //     onHoverStart,\n  //     onPressChange,\n  //     onPressEnd,\n  //     onPressMove,\n  //     onPressStart,\n  //   }),\n  //   {\n  //     extraData: [\n  //       onLongPress,\n  //       onPress,\n  //       onDoublePress,\n  //       onHoverEnd,\n  //       onHoverStart,\n  //       onPressChange,\n  //       onPressEnd,\n  //       onPressMove,\n  //       onPressStart,\n  //     ],\n  //   },\n  // )\n  const viewRef = React.useRef<PIXI.Container>(null)\n  React.useEffect(() => {\n    R.when(\n      R.isNotNil,\n      () => {\n        const mutableContainer = viewRef.current as PIXI.Container\n        mutableContainer.buttonMode = !!buttonMode\n        mutableContainer.interactive = true\n      },\n    )(viewRef.current)\n  }, [viewRef, buttonMode])\n  return (\n    <View\n      ref={viewRef}\n      {...rest}\n      // {...events}\n    />\n  )\n}\n\n\n","// import '@utils/addFlexLayout'\nimport cytoscape from 'cytoscape'\nimport * as PIXI from 'pixi.js'\n// @ts-ignore\n// import euler from 'cytoscape-euler'\n// @ts-ignore\n// import cise from 'cytoscape-cise'\n// @ts-ignore\n// import d3Force from 'cytoscape-d3-force'\n// @ts-ignore\n// import cola from 'cytoscape-cola'\n// @ts-ignore\n// import avsdf from 'cytoscape-avsdf'\n// @ts-ignore\n// import dagre from 'cytoscape-dagre'\n// @ts-ignore\n// import spread from 'cytoscape-spread'\n// @ts-ignore\n// import klay from 'cytoscape-klay'\n\n// cytoscape.use(klay)\n// spread(cytoscape)\n// cytoscape.use(dagre)\n// cytoscape.use(avsdf)\n// cytoscape.use(euler)\n// cytoscape.use(cise)\n// cytoscape.use(cola)\n// cytoscape.use(d3Force)\n\n// HIGH\n// PIXI.settings.ROUND_PIXELS = true\n// // @ts-ignore\n// PIXI.settings.PRECISION_FRAGMENT = PIXI.PRECISION.HIGH\n// PIXI.settings.RESOLUTION = 32// 64// window.devicePixelRatio\n// PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.LINEAR\n\n// LOW\nPIXI.settings.ROUND_PIXELS = false// true\n// @ts-ignore\nPIXI.settings.PRECISION_FRAGMENT = PIXI.PRECISION.LOW\nPIXI.settings.RESOLUTION = 1// 32// 64// window.devicePixelRatio\nPIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST\n","import React from 'react'\nimport cytoscape, { Core } from 'cytoscape'\nimport { Cluster, ClustersByNodeId, ClustersByChildClusterId } from '@type'\n\nexport const mutableGraphMap: Record<string, {\n  cy: Core;\n  clustersByNodeId: ClustersByNodeId;\n  clustersByChildClusterId: ClustersByChildClusterId;\n}> = {}\n\nexport type Props = {\n  id: string;\n  onLoad?: (cy: Core) => void;\n  create?: true;\n  clusters?: Cluster[];\n}\n\n// const createCanvas = () => {\n//   const canvas = document.createElement('canvas')\n//   canvas.width = window.innerWidth\n//   canvas.height = window.innerHeight\n//   document.body.appendChild(canvas)\n//   return canvas\n// }\nexport default (props: Props) => {\n  const {\n    onLoad,\n    id,\n    clusters = [],\n  } = props\n  const isExistRef = React.useRef(false)\n  const graph = React.useMemo(() => {\n    if (mutableGraphMap[id]) {\n      isExistRef.current = true\n      return mutableGraphMap[id]\n    }\n    const cyInstance = cytoscape({ // // create\n      elements: [],\n      headless: true,\n      styleEnabled: true,\n      // container: createCanvas(),\n      // style: [ // the stylesheet for the graph\n      //   {\n      //     selector: 'node',\n      //     style: {\n      //       'background-color': '#666',\n      //       label: 'data(id)',\n      //       width: 100,\n      //       height: 100,\n      //     },\n      //   },\n\n      //   {\n      //     selector: 'edge',\n      //     style: {\n      //       width: 3,\n      //       'line-color': '#ccc',\n      //       'target-arrow-color': '#ccc',\n      //       'target-arrow-shape': 'triangle',\n      //       // 'curve-style': 'bezier',\n      //     },\n      //   },\n      // ],\n\n    })\n    mutableGraphMap[id] = {\n      cy: cyInstance,\n      clustersByNodeId: {},\n      clustersByChildClusterId: {},\n    }\n    return mutableGraphMap[id]\n  }, [id])\n  const {\n    cy,\n  } = graph\n  React.useMemo(() => {\n    const clustersByNodeId: ClustersByNodeId = {}\n    clusters.forEach((cluster) => {\n      cluster.ids.forEach((nodeID) => {\n        const clusterById = clustersByNodeId[nodeID] ?? []\n        clusterById.push(cluster)\n        clustersByNodeId[nodeID] = clusterById\n      })\n    })\n    const clustersByChildClusterId: ClustersByChildClusterId = {}\n    clusters.forEach((cluster) => {\n      cluster.childClusterIds.forEach((clusterId) => {\n        const clusterById = clustersByChildClusterId[clusterId] ?? []\n        clusterById.push(cluster)\n        clustersByChildClusterId[clusterId] = clusterById\n      })\n    })\n    graph.clustersByNodeId = clustersByNodeId\n    graph.clustersByChildClusterId = clustersByChildClusterId\n  }, [graph, clusters])\n  React.useEffect(() => {\n    if (isExistRef.current) return\n    setTimeout(() => {\n      onLoad?.(cy)\n    }, 500)\n    return () => {\n      if (!isExistRef.current) {\n        delete mutableGraphMap[id]\n        cy.destroy()\n      }\n    }\n  }, // destroy\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [cy])\n  return graph\n}\n","import React from 'react'\nimport { Core, NodeSingular, EdgeSingular } from 'cytoscape'\nimport {\n  ElementContext, Element,\n  NodeConfig,\n  EdgeConfig,\n  ElementData,\n  ElementFilterOption,\n} from '@type'\nimport { CYTOSCAPE_EVENT, ELEMENT_DATA_FIELDS } from '@constants'\nimport { calculateVisibilityByContext, contextUtils } from '@utils'\nimport { useInitializedRef } from 'colay-ui/hooks/useInitializedRef'\n\nexport type Props = {\n  element: Element;\n  item: ElementData\n  cy: Core;\n  contextRef: React.RefObject<ElementContext>;\n  config: NodeConfig | EdgeConfig;\n  filter?: ElementFilterOption<Element>\n}\n\ntype Result = {\n\n}\n\nexport const useElement = (props: Props): Result => {\n  const {\n    // cy,\n    element,\n    contextRef,\n    config,\n    item,\n  } = props\n  const {\n    renderEvents = [],\n  } = config\n  const initializedRef = useInitializedRef()\n  // Update data\n  React.useEffect(\n    () => {\n      if (initializedRef.current) {\n        element.data({\n          [ELEMENT_DATA_FIELDS.DATA]: item?.data,\n        })\n      }\n    },\n    [item?.data],\n  )\n  // EventListeners\n  React.useEffect(\n    () => {\n      renderEvents.forEach((eventName) => {\n        element.on(eventName, () => {\n          contextRef.current?.render?.()\n        })\n      })\n      /// ADD SELECT_EDGE and SELECT_NODE Events ***\n      const isNode = element.isNode()\n      element.on(CYTOSCAPE_EVENT.select, () => {\n        if (isNode) {\n          (element as NodeSingular).connectedEdges().forEach((edge) => {\n            edge.emit(CYTOSCAPE_EVENT.selectNode)\n          })\n        } else {\n          const edge = element as EdgeSingular\n          edge.source().emit(CYTOSCAPE_EVENT.selectEdge)\n          edge.target().emit(CYTOSCAPE_EVENT.selectEdge)\n        }\n      })\n      element.on(CYTOSCAPE_EVENT.unselect, () => {\n        if (isNode) {\n          (element as NodeSingular).connectedEdges().forEach((edge) => {\n            edge.emit(CYTOSCAPE_EVENT.unselectNode)\n          })\n        } else {\n          const edge = element as EdgeSingular\n          edge.source().emit(CYTOSCAPE_EVENT.unselectEdge)\n          edge.target().emit(CYTOSCAPE_EVENT.unselectEdge)\n        }\n      })\n      /// ***ADD SELECT_EDGE and SELECT_NODE Events\n      return () => {\n        renderEvents.forEach((eventName) => {\n          element.removeListener(eventName)\n        })\n        /// ADD SELECT_EDGE and SELECT_NODE Events ***\n        element.removeListener(CYTOSCAPE_EVENT.select)\n        element.removeListener(CYTOSCAPE_EVENT.unselect)\n        /// *** ADD SELECT_EDGE and SELECT_NODE Events\n      }\n    },\n    [element, renderEvents],\n  )\n  // Filter\n  React.useEffect(() => {\n    const oldFiltered = contextRef.current!.settings.filtered\n    // @ts-ignore\n    const filtered = config.filter?.test?.({ element, item }) ?? true\n    contextRef.current!.settings.filtered = filtered\n    if (oldFiltered !== filtered) {\n      contextUtils.update(element, contextRef.current)\n      // @ts-ignore\n      if (calculateVisibilityByContext(element)) {\n        contextRef.current?.render()\n      }\n    }\n  }, [config.filter])\n\n  // Add fields\n  React.useMemo(() => {\n    element.hovered = () => contextRef.current?.settings.hovered\n    element.filtered = () => contextRef.current?.settings.filtered\n  }, [element])\n  return {\n\n  }\n}\n","import React from 'react'\nimport { useStateWithCallback } from 'colay-ui'\nimport { NodeSingular, Core } from 'cytoscape'\nimport { Position } from 'colay/type'\nimport {\n  NodeContext,\n  NodeConfig,\n  Cluster,\n  NodeData,\n} from '@type'\nimport { getClusterVisibility, calculateVisibilityByContext, contextUtils } from '@utils'\nimport { CYTOSCAPE_EVENT, ELEMENT_DATA_FIELDS } from '@constants'\nimport { useInitializedRef } from 'colay-ui/hooks/useInitializedRef'\nimport { mutableGraphMap } from './useGraph'\nimport { useElement } from './useElement'\n\nexport type Props = {\n  graphID: string;\n  position: Position;\n  isCluster?: boolean;\n  onPositionChange?: (c: {element: NodeSingular; context: NodeContext }) => void|any;\n  config?: NodeConfig;\n  item: NodeData;\n}\n\ntype Result = {\n  element: NodeSingular;\n  context: NodeContext;\n  clusters?: Cluster[];\n  cy: Core;\n}\n\nconst DEFAULT_BOUNDING_BOX = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n}\n\nexport default (props: Props): Result => {\n  const {\n    position,\n    onPositionChange,\n    graphID,\n    config = {},\n    item,\n    isCluster = false,\n  } = props\n  const {\n    id,\n  } = item\n  const initializedRef = useInitializedRef()\n  const { cy, clustersByNodeId, clustersByChildClusterId } = mutableGraphMap[graphID]\n  const clusters = isCluster\n    ? clustersByChildClusterId[id]\n    : clustersByNodeId[id]\n  const [, setState] = useStateWithCallback({}, () => {})\n  const contextRef = React.useRef<NodeContext>({\n    render: (callback: () => {}) => setState({}, callback),\n    onPositionChange: () => {\n      onPositionChange?.({ element, context: contextRef.current })\n      element.connectedEdges().forEach((mutableEdge) => {\n        const edgeContext = contextUtils.get(mutableEdge)\n        edgeContext.onPositionChange()\n      })\n    },\n    boundingBox: DEFAULT_BOUNDING_BOX,\n    settings: {\n      filtered: true,\n      visibility: {\n        cluster: getClusterVisibility(id, clusters),\n      },\n      hovered: false,\n    },\n  } as NodeContext)\n  const element = React.useMemo(() => cy!.add({\n    data: {\n      id,\n      [ELEMENT_DATA_FIELDS.CONTEXT]: contextRef.current,\n      [ELEMENT_DATA_FIELDS.DATA]: item?.data,\n    }, // ...(parentID ? { parent: parentID } : {}),\n    position: { ...position },\n    group: 'nodes',\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }) as NodeSingular, [cy, id])\n  React.useEffect(\n    () => {\n      const {\n        current: {\n          onPositionChange,\n        },\n      } = contextRef\n      const onHover = () => {\n        contextRef.current.settings.hovered = true\n        contextUtils.update(element, contextRef.current)\n      }\n      const onHoverExit = () => {\n        contextRef.current.settings.hovered = false\n        contextUtils.update(element, contextRef.current)\n      }\n      element.on(CYTOSCAPE_EVENT.position, onPositionChange)\n      element.on(CYTOSCAPE_EVENT.mouseover, onHover)\n      element.on(CYTOSCAPE_EVENT.mouseout, onHoverExit)\n      return () => {\n        // element.off(CYTOSCAPE_EVENT.position, `#${element.id()}`, onPositionChange)\n        // element.off(CYTOSCAPE_EVENT.mouseover, `#${element.id()}`, onHover)\n        // element.off(CYTOSCAPE_EVENT.mouseout, `#${element.id()}`, onHoverExit)\n        element.removeListener(CYTOSCAPE_EVENT.position)\n        element.removeListener(CYTOSCAPE_EVENT.mouseover)\n        element.removeListener(CYTOSCAPE_EVENT.mouseout)\n        cy!.remove(element!)\n      }\n    }, // destroy\n    [cy, id],\n  )\n  React.useMemo(() => {\n    if (initializedRef.current) {\n      element.position(position)\n    }\n  }, [position.x, position.y])\n  // Update Visibility\n  React.useMemo(() => {\n    const clusterVisibility = getClusterVisibility(element.id(), clusters)\n    if (clusterVisibility !== contextRef.current.settings.visibility.cluster) {\n      const oldVisible = calculateVisibilityByContext(element)\n      contextRef.current.settings.visibility.cluster = clusterVisibility\n      // contextRef.current.settings = {\n      //   ...contextRef.current.settings,\n      //   visibility,\n      // }\n      contextUtils.update(element, contextRef.current)\n      if (oldVisible !== calculateVisibilityByContext(element)) {\n        contextRef.current.render()\n      }\n    }\n  }, [element, clusters])\n  useElement({\n    contextRef,\n    cy,\n    element,\n    config,\n    item,\n  })\n  return {\n    element,\n    context: contextRef.current,\n    clusters,\n    cy,\n  }\n}\n","import { createStoreProvider } from 'colay-ui'\n// import { createStoreProvider } from '@root/components/GraphEditor/createStoreProvider'\nimport {\n  GraphEditorContext as GraphEditorContextType,\n} from '@type'\n\nconst {\n  // store,\n  Context,\n  useSelector,\n  Provider,\n} = createStoreProvider<GraphEditorContextType>(\n  {} as unknown as GraphEditorContextType, { immer: false },\n)\n\nexport const GraphEditorContext = Context\nexport const GraphEditorProvider = Provider\nexport const useGraphEditor = useSelector\n","import React from 'react'\nimport {\n  PixiComponent,\n  Container as PIXIReactContainer,\n} from '@inlet/react-pixi'\nimport * as PIXI from 'pixi.js'\nimport { dragTrack } from '@core/utils/events'\nimport {\n  applyDefaultProps, preprocessProps,\n  getEventClientPosition,\n} from '@utils'\nimport {\n  PIXIFlexStyle,\n  PIXIBasicStyle,\n  PIXIDisplayObjectProps,\n  PIXIBasicProps,\n} from '@type'\nimport { Position, PropsWithRef } from 'colay-ui/type'\nimport { Enumerable } from 'colay/type'\n\nexport type ContainerProps = PIXIBasicProps & PIXIDisplayObjectProps\n& Omit<React.ComponentProps<typeof PIXIReactContainer>, 'children'> &{\n  style: PIXIFlexStyle & PIXIBasicStyle;\n  children: Enumerable<React.ReactNode>;\n  draggable?: boolean;\n  onDrag?: (param: Position) => void;\n}\n\ntype ContainerPropsWithRef = PropsWithRef<\nPIXI.Container,\nContainerProps\n>\n\nexport type ContainerType = React.FC<ContainerPropsWithRef>\nexport type ContainerRef = PIXI.Container\n\n// @ts-ignore\nexport const Container = PixiComponent<ContainerProps, PIXI.Container>(\n  'PIXIContainer',\n  {\n    create: (props) => {\n      const {\n        onDrag,\n        draggable = false,\n        interactive = false,\n      } = props\n      const instance = new PIXI.Container()\n      instance.interactive = interactive || draggable\n      if (draggable) {\n        const { onDown, onMove } = dragTrack((posDiff) => {\n          const { parent: { scale } } = instance\n          instance.x += posDiff.x / scale.x\n          instance.y += posDiff.y / scale.y\n          onDrag && onDrag({ x: instance.x, y: instance.y })\n        })\n        instance\n          .on('pointerdown', (e: PIXI.InteractionEvent) => {\n            const { originalEvent } = e.data\n            const { x, y } = getEventClientPosition(originalEvent)// originalEvent as MouseEvent\n            onDown({ x, y })\n          })\n          .on('pointermove', (e: PIXI.InteractionEvent) => {\n            const { originalEvent } = e.data\n            const { x, y } = getEventClientPosition(originalEvent)// originalEvent as MouseEvent\n            onMove({ x, y })\n          })\n      }\n      // applyEvents(instance, props)\n      return instance\n    },\n    applyProps: (mutableInstance: PIXI.Container, oldProps, _props) => {\n      const props = preprocessProps(_props)\n      const {\n        left = 0,\n        top = 0,\n        width,\n        height,\n      } = props.style ?? {}\n      applyDefaultProps(\n        mutableInstance,\n        oldProps,\n        props,\n        {\n          isFlex: false,\n        },\n      )\n      mutableInstance.x = left\n      mutableInstance.y = top\n      width && (mutableInstance.width = width)\n      height && (mutableInstance.height = height)\n    },\n  },\n) as unknown as ContainerType\n","import * as R from 'colay/ramda'\nimport { Position } from 'colay/type'\nimport * as V from 'colay/vector'\n\ntype OnDragResult = {\n  keepDragging?: boolean;\n  position?: Position;\n}\n\nexport function dragTrack(\n  onDrag: (pos: Position) => {keepDragging?: boolean; position?: Position }|void,\n) {\n  const mutableData: { position: Position | null} = { position: null }\n  const onDown = (position: Position) => {\n    mutableData.position = position\n  }\n  const onMove = (position: Position) => R.when(\n    R.isNotNil,\n    () => {\n      const result = (onDrag(V.subtract(mutableData.position!)(position)) ?? {}) as OnDragResult\n\n      mutableData.position = position\n      if (result?.keepDragging === false) {\n        mutableData.position = null\n      }\n      if (R.has('position', result)) {\n        (mutableData as OnDragResult).position = result.position\n      }\n      return result\n      // return R.pipe(\n      //   R.tap(\n      //     R.when(\n      //       R.propEq('keepDragging', false),\n      //       () => {\n      //         mutableData.position = null\n      //       },\n      //     ),\n      //   ),\n      //   R.tap(\n      //     R.when(\n      //       R.has('position'),\n      //       () => {\n      //         // @ts-ignore\n      //         mutableData.position = result.position\n      //       },\n      //     ),\n      //   ),\n      // )(result ?? {})\n    },\n  )(mutableData.position)\n  document.addEventListener('pointerup', () => {\n    mutableData.position = null\n  })\n  return {\n    onDown,\n    onMove,\n  }\n}\n","import React from 'react'\nimport { wrapComponent } from 'colay-ui'\nimport { useNode } from '@hooks'\nimport {\n  RenderClusterNode, NodeConfig, GraphRef,\n  Cluster,\n} from '@type'\nimport {\n  calculateObjectBoundsWithoutChildren,\n  calculateVisibilityByContext,\n} from '@utils'\nimport { useTheme } from '@core/theme'\nimport { Container, ContainerRef } from '../Container'\n\nexport type ClusterNodeContainerProps = {\n  children: RenderClusterNode;\n  item: Cluster;\n  graphID: string;\n  graphRef: React.RefObject<GraphRef>;\n  config?: NodeConfig;\n\n}\n\nexport type ClusterNodeContainerType = React.ForwardedRef<ClusterNodeContainerProps>\n\nconst DEFAULT_POSITION = { x: 0, y: 0 }\nconst ClusterNodeContainerElement = (\n  props: ClusterNodeContainerProps,\n  __: React.ForwardedRef<ClusterNodeContainerType>,\n) => {\n  const {\n    item,\n    graphID,\n    children,\n    config = {} as NodeConfig,\n    graphRef,\n  } = props\n  const containerRef = React.useRef<ContainerRef>(null)\n  React.useEffect(() => {\n    if (item.ids.length > 0) {\n      const positionAcc = {\n        x: 0,\n        y: 0,\n      }\n      item.ids.forEach((id) => {\n        const clusterElement = cy.$id(id)\n        const clusterElementPos = clusterElement.position()\n        positionAcc.x += clusterElementPos.x\n        positionAcc.y += clusterElementPos.y\n      })\n      const { length } = item.ids\n      const calculatedPosition = {\n        x: positionAcc.x / length,\n        y: positionAcc.y / length,\n      }\n      element.position(calculatedPosition)\n    }\n  }, [item.ids])\n  const { element, context, cy } = useNode({\n    graphID,\n    config,\n    position: config.position ?? DEFAULT_POSITION,\n    onPositionChange: ({ element }) => {\n      const container = containerRef.current!\n      const { x, y } = element.position()\n      container.x = x\n      container.y = y\n      context.boundingBox.x = x\n      context.boundingBox.y = y\n    },\n    item,\n  })\n  const { x, y } = element.position()\n  const onDrag = React.useCallback(\n    (pos) => {\n      element.position(pos)\n    },\n    [element],\n  )\n  React.useEffect(() => {\n    const container = containerRef.current!\n    context.boundingBox = calculateObjectBoundsWithoutChildren(\n      container,\n    )\n  })\n  const theme = useTheme()\n  const visible = calculateVisibilityByContext(element) && (item.visible ?? true)\n  const opacity = context.settings.filtered\n    ? 1\n    : (config.filter?.settings?.opacity ?? 0.2)\n  return (\n    <Container\n      ref={containerRef}\n      style={{\n        left: x,\n        top: y,\n      }}\n      alpha={opacity}\n      visible={visible}\n      draggable\n      onDrag={onDrag}\n      // onRightPress={(event) => {\n      //   event.data.originalEvent.preventDefault()\n      //   event.data.originalEvent.stopPropagation()\n      // }}\n    >\n      {children({\n        item,\n        element,\n        cy,\n        theme,\n        graphRef,\n      })}\n    </Container>\n  )\n}\n\nexport const ClusterNodeContainer = wrapComponent<ClusterNodeContainerProps>(\n  ClusterNodeContainerElement,\n  {\n    isForwardRef: true,\n  },\n)\n","import React from 'react'\nimport { wrapComponent } from 'colay-ui'\nimport * as R from 'colay/ramda'\nimport * as C from 'colay/color'\nimport * as PIXI from 'pixi.js'\nimport { useTheme } from '@core/theme'\nimport { useEdge } from '@hooks'\nimport { contextUtils, calculateVisibilityByContext } from '@utils'\nimport { EDGE_CONTAINER_Z_INDEX, CYTOSCAPE_EVENT } from '@constants'\nimport {\n  RenderEdge,\n  EdgeConfig,\n  DrawLine,\n  EdgeElement,\n  NodeElement,\n  GraphRef,\n} from '@type'\nimport * as V from 'colay/vector'\nimport { Graphics, drawLine as defaultDrawLine } from '../Graphics'\nimport { Container, ContainerRef } from '../Container'\n\nexport type EdgeContainerProps = {\n  children: RenderEdge;\n  item: any;\n  graphID: string;\n  drawLine?: DrawLine;\n  config?: EdgeConfig;\n  graphRef: React.RefObject<GraphRef>;\n}\n\nexport type EdgeContainerType = React.FC<EdgeContainerProps>\nconst DEFAULT_DISTANCE = 36\nconst DEFAULT_MARGIN = 10\n\nexport const calculateEdgeGroupInfo = (edge: EdgeElement) => {\n  const edgeID = edge.id()\n  const targetElement = edge.target()\n  const sourceElement = edge.source()\n  const betweenEdges = targetElement.edgesWith(sourceElement)\n  const betweenEdgesCount = betweenEdges.length\n  const betweenEdgesMedian = Math.floor(betweenEdgesCount / 2)\n  let edgeIndex = 0\n  betweenEdges.forEach((edgeEl, i) => {\n    if (edgeEl.id() === edgeID) {\n      edgeIndex = i\n    }\n  })\n  let sortedIndex = 0\n  if (betweenEdgesCount > 1) {\n    sortedIndex = R.range(-betweenEdgesMedian, betweenEdgesMedian + 1)[edgeIndex]\n    if (betweenEdgesCount % 2 === 0 && sortedIndex >= 0) {\n      sortedIndex += 1\n    }\n  }\n  return {\n    sortedIndex,\n    index: edgeIndex,\n    count: betweenEdgesCount,\n  }\n}\nexport const calculateVectorInfo = (\n  source: NodeElement,\n  to: NodeElement,\n) => {\n  const fromPosition = source.position()\n  const toPosition = to.position()\n  const distanceVector = V.subtract(fromPosition)(toPosition)\n  // const distanceVector = R.pipe(\n  //   V.subtract(fromPosition),\n  // )(toPosition)\n  const unitVector = V.normalize(distanceVector)\n  const normVector = V.rotate(Math.PI / 2)(unitVector)\n  // V.multiplyScalar(sortedIndex > 0 ? 1 : -1)(V.rotate(Math.PI / 2)(unitVector))\n  const midpointPosition = V.midpoint(fromPosition)(toPosition)\n  const sign = source.id() > to.id() ? 1 : -1\n  return {\n    fromPosition,\n    toPosition,\n    distanceVector,\n    unitVector,\n    normVector,\n    midpointPosition,\n    undirectedUnitVector: V.multiplyScalar(sign)(unitVector),\n    undirectedNormVector: V.multiplyScalar(sign)(normVector),\n  }\n}\nconst EdgeContainerElement = (\n  props: EdgeContainerProps,\n  __: React.ForwardedRef<EdgeContainerType>,\n) => {\n  const {\n    item,\n    // item: _item,\n    graphID,\n    children,\n    drawLine = defaultDrawLine,\n    config = {},\n    graphRef,\n  } = props\n  const theme = useTheme()\n  const graphicsRef = React.useRef<PIXI.Graphics>(null)\n  const containerRef = React.useRef<ContainerRef>(null)\n  // const edgeID = React.useMemo(() => _item.id ?? R.uuid(), [])\n  // const item = {\n  //   ..._item,\n  //   id: edgeID,\n  // }\n  const drawLineCallback = React.useCallback(({\n    element,\n    cy,\n  }: {\n    cy: cytoscape.Core,\n    element: EdgeElement,\n  }) => {\n    const targetElement = element.target()\n    const sourceElement = element.source()\n    const edgeGroupInfo = calculateEdgeGroupInfo(element)\n    const {\n      distanceVector,\n      // fromPosition,\n      // toPosition,\n      midpointPosition,\n      normVector,\n      unitVector,\n      undirectedUnitVector,\n      undirectedNormVector,\n    } = calculateVectorInfo(sourceElement, targetElement)\n    containerRef.current!.x = midpointPosition.x + (\n      edgeGroupInfo.sortedIndex * undirectedNormVector.x * DEFAULT_DISTANCE\n    )\n    containerRef.current!.y = midpointPosition.y + (\n      edgeGroupInfo.sortedIndex * undirectedNormVector.y * DEFAULT_DISTANCE\n    )\n    const sourceElementContext = contextUtils.getNodeContext(sourceElement)\n    const targetElementContext = contextUtils.getNodeContext(targetElement)\n    // calculate sortedIndex\n    return drawLine({\n      item,\n      element,\n      // cy,\n      graphRef,\n      theme,\n      sourceElement,\n      targetElement,\n      fill: C.rgbNumber(\n        element.selected()\n          ? theme.palette.primary.main\n          : (element.source().selected() || element.target().selected())\n            ? theme.palette.secondary.main\n            : theme.palette.background.paper,\n      ),\n      graphics: graphicsRef.current!,\n      to: targetElementContext.boundingBox,\n      from: sourceElementContext.boundingBox,\n      directed: true,\n      distance: edgeGroupInfo.sortedIndex * DEFAULT_DISTANCE,\n      margin: {\n        x: edgeGroupInfo.sortedIndex * DEFAULT_MARGIN,\n        y: edgeGroupInfo.sortedIndex * DEFAULT_MARGIN,\n      },\n      distanceVector,\n      unitVector,\n      normVector,\n      undirectedUnitVector,\n      undirectedNormVector,\n      ...edgeGroupInfo,\n      cy,\n    })\n  }, [containerRef, graphicsRef])\n  const onPositionChange = React.useCallback(({ element }) => {\n    drawLineCallback({\n      cy,\n      element,\n    })\n  }, [drawLineCallback])\n  const { element, cy, context } = useEdge({\n    graphID,\n    onPositionChange,\n    config,\n    item,\n  })\n  React.useEffect(\n    () => {\n      drawLineCallback({\n        cy,\n        element,\n      })\n    },\n  )\n  React.useEffect(\n    () => {\n      containerRef.current!.zIndex = EDGE_CONTAINER_Z_INDEX\n    },\n    [],\n  )\n  const edgeGroupInfo = calculateEdgeGroupInfo(element)\n  const {\n    // normVector,\n    midpointPosition,\n    toPosition,\n    fromPosition,\n    undirectedNormVector,\n  } = calculateVectorInfo(element.source(), element.target())\n  const visible = calculateVisibilityByContext(element)\n  const filtered = context.settings.filtered && context.settings.nodeFiltered\n  const opacity = filtered\n    ? 1\n    : (config?.filter?.settings?.opacity ?? 0.2)\n\n  const targetElement = element.target()\n  const sourceElement = element.source()\n  return (\n    <>\n      <Container\n        ref={containerRef}\n        alpha={opacity}\n        visible={visible}\n        style={{\n          left: midpointPosition.x + (\n            edgeGroupInfo.sortedIndex * undirectedNormVector.x * DEFAULT_DISTANCE\n          ),\n          top: midpointPosition.y + (\n            edgeGroupInfo.sortedIndex * undirectedNormVector.y * DEFAULT_DISTANCE\n          ),\n          zIndex: EDGE_CONTAINER_Z_INDEX,\n        }}\n        interactive\n        mouseover={() => {\n          element.emit(CYTOSCAPE_EVENT.mouseover)\n        }}\n        mouseout={() => {\n          element.emit(CYTOSCAPE_EVENT.mouseout)\n        }}\n      >\n        {\n          children({\n            item,\n            element,\n            to: toPosition,\n            from: fromPosition,\n            cy,\n            theme,\n            graphRef,\n            ...edgeGroupInfo,\n            targetElement,\n            sourceElement,\n          })\n        }\n      </Container>\n      <Graphics\n        ref={graphicsRef}\n        visible={visible}\n        alpha={opacity}\n        // interactive\n        // buttonMode\n      />\n    </>\n  )\n}\n\nexport const EdgeContainer = wrapComponent<EdgeContainerProps>(\n  EdgeContainerElement,\n  {\n    isForwardRef: true,\n  },\n)\n","import { useStateWithCallback } from 'colay-ui'\nimport { EdgeSingular, Core } from 'cytoscape'\nimport React from 'react'\nimport {\n  EdgeContext,\n  EdgeConfig,\n  EdgeElement,\n  EdgeData,\n} from '@type'\nimport { CYTOSCAPE_EVENT, ELEMENT_DATA_FIELDS } from '@constants'\nimport { calculateVisibilityByContext, contextUtils } from '@utils'\nimport { mutableGraphMap } from './useGraph'\nimport { useElement } from './useElement'\n\nexport type Props<T> = {\n  children?: React.ReactNode;\n  item: EdgeData;\n  graphID: string;\n  onPositionChange?: (c: {element: EdgeSingular; context: EdgeContext; cy: Core }) => void;\n  config?: EdgeConfig;\n}\n\ntype Result<T> = {\n  element: EdgeSingular;\n  context: EdgeContext;\n  cy: Core;\n}\n\nexport default <T>(props: Props<T>): Result<T> => {\n  const {\n    onPositionChange,\n    graphID,\n    config = {},\n    item,\n  } = props\n  const {\n    id,\n    source,\n    target,\n  } = item\n  const { cy } = mutableGraphMap[graphID]\n  const [, setState] = useStateWithCallback({}, () => {\n  })\n  const contextRef = React.useRef<EdgeContext>({\n    render: (callback: () => {}) => {\n      setState({}, callback)\n    },\n    onPositionChange: () => {\n      onPositionChange?.({\n      // @ts-ignore\n        element: contextRef.current.element,\n        context: contextRef.current,\n        cy,\n      })\n    },\n    element: null as unknown as EdgeElement,\n    settings: {\n      filtered: true,\n      nodeFiltered: true,\n      visibility: {\n        nodeVisible: true,\n      },\n    },\n  } as EdgeContext)\n  contextRef.current.element = React.useMemo(() => {\n    const {\n      current: {\n        element,\n      },\n    } = contextRef\n    if (element) {\n      cy.remove(element)\n    }\n    return cy!.add({\n      data: {\n        id,\n        source,\n        target,\n        [ELEMENT_DATA_FIELDS.CONTEXT]: contextRef.current,\n        [ELEMENT_DATA_FIELDS.DATA]: item?.data,\n      },\n      group: 'edges',\n    })\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [cy, id, source, target])\n  const {\n    current: {\n      element,\n    },\n  } = contextRef\n  React.useEffect(\n    () => {\n      contextRef.current.onPositionChange = () => {\n        onPositionChange?.({ cy, element, context: contextRef.current })\n      }\n      contextUtils.update(\n        element,\n        contextRef.current,\n      )\n    },\n    [onPositionChange],\n  )\n  React.useEffect(() => () => { cy!.remove(element!) },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n    [cy, id, source, target])\n\n  // Visibility Change\n  // EventListeners\n  React.useEffect(\n    () => {\n      const nodeDataUpdated = () => {\n        // Update visibility\n        const oldVisible = calculateVisibilityByContext(element)\n        const sourceContext = contextUtils.get(element.source())\n        const targetContext = contextUtils.get(element.target())\n        const sourceVisible = calculateVisibilityByContext(element.source())\n        const targetVisible = calculateVisibilityByContext(element.target())\n        const newNodeVisible = sourceVisible && targetVisible\n        let forceRender = false\n        if (newNodeVisible !== contextRef.current.settings.visibility.nodeVisible) {\n          contextRef.current.settings.visibility.nodeVisible = newNodeVisible\n          contextUtils.update(element, contextRef.current)\n          if (oldVisible !== calculateVisibilityByContext(element)) {\n            forceRender = false\n          }\n        }\n        const oldNodeFiltered = contextRef.current.settings.nodeFiltered\n        const newNodeFiltered = sourceContext.settings.filtered\n        && targetContext.settings.filtered\n        contextRef.current.settings.nodeFiltered = newNodeFiltered\n        if (newNodeFiltered !== oldNodeFiltered) {\n          forceRender = true\n          contextUtils.update(element, contextRef.current)\n        }\n        if (forceRender) {\n          contextRef.current.render()\n        }\n      }\n      element.source().on(CYTOSCAPE_EVENT.data, nodeDataUpdated)\n      element.target().on(CYTOSCAPE_EVENT.data, nodeDataUpdated)\n      // element.source().emit(CYTOSCAPE_EVENT.data)\n      return () => {\n        // element.source().off(CYTOSCAPE_EVENT.data, `#${element.id()}`, nodeDataUpdated)\n        // element.target().off(CYTOSCAPE_EVENT.data, `#${element.id()}`, nodeDataUpdated)\n        element.source().removeListener(CYTOSCAPE_EVENT.data)\n        element.target().removeListener(CYTOSCAPE_EVENT.data)\n      }\n    },\n    [element],\n  )\n  useElement({\n    contextRef,\n    cy,\n    element,\n    item,\n    config,\n  })\n  return {\n    element,\n    context: contextRef.current,\n    cy,\n  }\n}\n","import React from 'react'\nimport { wrapComponent } from 'colay-ui'\nimport { useNode } from '@hooks'\nimport { CYTOSCAPE_EVENT } from '@constants'\nimport {\n  RenderNode, NodeConfig, GraphRef,\n} from '@type'\nimport {\n  calculateObjectBoundsWithoutChildren,\n  calculateVisibilityByContext,\n} from '@utils'\nimport { useTheme } from '@core/theme'\nimport { Container } from '../Container'\n\nexport type NodeContainerProps = {\n  children: RenderNode;\n  item: any;\n  graphID: string;\n  graphRef: React.RefObject<GraphRef>;\n  config?: NodeConfig;\n}\n\nexport type NodeContainerType = React.ForwardedRef<NodeContainerProps>\nconst DEFAULT_POSITION = { x: 0, y: 0 }\nconst NodeContainerElement = (\n  props: NodeContainerProps,\n  __: React.ForwardedRef<NodeContainerType>,\n) => {\n  const {\n    item,\n    graphID,\n    children,\n    config = {} as NodeConfig,\n    graphRef,\n  } = props\n  const containerRef = React.useRef(null)\n  const { element, context, cy } = useNode({\n    graphID,\n    config,\n    position: config.position ?? item.position ?? DEFAULT_POSITION,\n    onPositionChange: ({ element }) => {\n      const { x, y } = element.position()\n      // @ts-ignore\n      containerRef.current.x = x\n      // @ts-ignore\n      containerRef.current.y = y\n      context.boundingBox.x = x\n      context.boundingBox.y = y\n    },\n    item,\n  })\n  const { x, y } = element.position()\n  const onDrag = React.useCallback(\n    (pos) => {\n      element.position(pos)\n    },\n    [element],\n  )\n  React.useEffect(() => {\n    // @ts-ignore\n    context.boundingBox = calculateObjectBoundsWithoutChildren(\n      containerRef.current!,\n    )\n  })\n  const theme = useTheme()\n  const visible = calculateVisibilityByContext(element)\n  const opacity = context.settings.filtered\n    ? 1\n    : (config.filter?.settings?.opacity ?? 0.2)\n  return (\n    <Container\n      ref={containerRef}\n      style={{\n        left: x,\n        top: y,\n      }}\n      alpha={opacity}\n      visible={visible}\n      draggable\n      onDrag={onDrag}\n      mouseover={() => {\n        element.emit(CYTOSCAPE_EVENT.mouseover)\n      }}\n      mouseout={() => {\n        element.emit(CYTOSCAPE_EVENT.mouseout)\n      }}\n      // onRightPress={(event) => {\n      //   event.data.originalEvent.preventDefault()\n      //   event.data.originalEvent.stopPropagation()\n      // }}\n    >\n      {children({\n        item,\n        element,\n        cy,\n        theme,\n        graphRef,\n        context,\n      })}\n    </Container>\n  )\n}\n\nexport const NodeContainer = wrapComponent<NodeContainerProps>(\n  NodeContainerElement,\n  {\n    isForwardRef: true,\n  },\n)\n","import { RenderNode } from '@type'\nimport { cyUnselectAll } from '@utils'\nimport * as R from 'colay/ramda'\nimport React from 'react'\nimport { Text as GraphText } from '../Text'\nimport { View as GraphView } from '../View'\n\nexport const DefaultRenderClusterNode: RenderNode = ({\n  item, element, cy, theme,\n}) => {\n  const hasSelectedEdge = element.connectedEdges(':selected').length > 0\n  return (\n    <GraphView\n      style={{\n        width: 150,\n        height: 150,\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        backgroundColor: hasSelectedEdge\n          ? theme.palette.secondary.main\n          : (element.selected()\n            ? theme.palette.primary.main\n            : theme.palette.warning.main),\n        borderRadius: 20,\n      }}\n      interactive\n      pointertap={() => {\n        cyUnselectAll(cy)\n        element.select()\n      }}\n    >\n      <GraphText\n        style={{\n          position: 'absolute',\n          top: -90,\n          color: 'black',\n        }}\n        isSprite\n      >\n        {R.last(item.id.split('/'))?.substring(0, 10) ?? item.id}\n      </GraphText>\n    </GraphView>\n  )\n}\n","import { RenderNode } from '@type'\nimport { cyUnselectAll } from '@utils'\nimport * as R from 'colay/ramda'\nimport React from 'react'\nimport { Text as GraphText } from '../Text'\nimport { View as GraphView } from '../View'\nimport { CYTOSCAPE_EVENT } from '@constants'\n\nexport const DefaultRenderNode: RenderNode = ({\n  item, element, cy, theme,\n}) => {\n  const hasSelectedEdge = element.connectedEdges(':selected').length > 0\n  return (\n    <GraphView\n      style={{\n        width: 50,\n        height: 50,\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        backgroundColor: hasSelectedEdge\n          ? theme.palette.secondary.main\n          : (element.selected()\n            ? theme.palette.primary.main\n            : theme.palette.background.paper),\n        borderRadius: 50,\n      }}\n      interactive\n      pointertap={() => {\n        cyUnselectAll(cy)\n        element.select()\n      }}\n    >\n      <GraphText\n        style={{\n          position: 'absolute',\n          top: -40,\n          color: 'black',\n        }}\n        isSprite\n      >\n        {R.last(item.id.split('/'))?.substring(0, 10) ?? item.id}\n      </GraphText>\n    </GraphView>\n  )\n}\n","import { RenderEdge } from '@type'\nimport { cyUnselectAll } from '@utils'\nimport * as R from 'colay/ramda'\nimport React from 'react'\nimport { Text as GraphText } from '../Text'\nimport { View as GraphView } from '../View'\n\nexport const DefaultRenderEdge: RenderEdge = ({\n  cy,\n  item,\n  element,\n}) => (\n  <GraphView\n    style={{\n      // width: 20,\n      // height: 20,\n      position: 'absolute',\n\n      justifyContent: 'center',\n      alignItems: 'center',\n      display: 'flex',\n      // backgroundColor: DefaultTheme.palette.background.paper,\n      // element.selected()\n      //   ? DefaultTheme.palette.primary.main\n      //   : DefaultTheme.palette.background.paper,\n      // borderRadius: 50,\n    }}\n    pointertap={() => {\n      cyUnselectAll(cy)\n      element.select()\n    }}\n  >\n    <GraphText\n      style={{\n        // position: 'absolute',\n        // top: -40,\n        // backgroundColor: DefaultTheme.palette.background.paper,\n        color: 'black',\n        fontSize: 12,\n      }}\n      isSprite\n    >\n      {R.last(item.id.split('/'))?.substring(0, 10) ?? item.id}\n    </GraphText>\n  </GraphView>\n)\n","import { PixiComponent, useApp } from '@inlet/react-pixi'\nimport * as R from 'colay/ramda'\nimport { Viewport as ViewportNative } from 'pixi-viewport'\nimport * as PIXI from 'pixi.js'\nimport * as V from 'colay/vector'\n// import Cull from 'pixi-cull'\nimport React from 'react'\nimport { wrapComponent, useForwardRef } from 'colay-ui'\nimport {\n  getBoundingBox,\n  getPointerPositionOnViewport,\n  isMultipleTouches,\n  adjustVisualQuality,\n} from '@utils'\nimport { Position, BoundingBox } from 'colay/type'\nimport { drawGraphics } from '@components/Graphics'\nimport { QUALITY_LEVEL } from '@constants'\nimport { ViewportType } from '@type'\nimport { Simple } from 'pixi-cull'\n\n\n\ntype NativeViewportProps = {\n  app: PIXI.Application;\n  width: number;\n  height: number;\n  onCreate?: (v: ViewportNative) => void;\n  onPress?: (c: {\n    nativeEvent: PIXI.InteractionEvent;\n    position: Position;\n  }) => void | undefined;\n  zoom?: number;\n  transform?: {\n    x?: number;\n    y?: number;\n    scaleX?: number;\n    scaleY?: number;\n    rotation?: number;\n    skewX?: number;\n    skewY?: number;\n    pivotX?: number;\n    pivotY?: number;\n  };\n  onBoxSelectionStart: (c: {\n    event: PIXI.InteractionEvent;\n    startPosition: Position;\n  }) => void;\n  onBoxSelection: (c: {\n    event: PIXI.InteractionEvent;\n    startPosition: Position;\n    endPosition: Position;\n    boundingBox: BoundingBox;\n  }) => void;\n  onBoxSelectionEnd: (c: {\n    event: PIXI.InteractionEvent;\n    startPosition: Position;\n    endPosition: Position;\n    boundingBox: BoundingBox;\n  }) => void;\n\n}\n\nconst DEFAULT_EVENT_HANDLER = () => {}\nconst ReactViewportComp = PixiComponent('Viewport', {\n  create: (props: NativeViewportProps) => {\n    const {\n      app: {\n        renderer,\n        ticker,\n        stage,\n      },\n      height,\n      width,\n      onCreate,\n      onBoxSelectionStart = DEFAULT_EVENT_HANDLER,\n      onBoxSelection = DEFAULT_EVENT_HANDLER,\n      onBoxSelectionEnd = DEFAULT_EVENT_HANDLER,\n    } = props\n    const viewport: ViewportType = new ViewportNative({\n      screenWidth: width,\n      screenHeight: height,\n      worldWidth: width,\n      worldHeight: height,\n      ticker,\n      interaction: renderer.plugins.interaction,\n      passiveWheel: false,\n      divWheel: renderer.view,\n    }) as ViewportType\n    onCreate?.(viewport)\n    viewport.sortableChildren = true\n    viewport\n      .drag({ pressDrag: false })\n      .pinch()\n      .wheel({\n        trackpadPinch: true,\n        wheelZoom: false,\n      })\n    const localDataRef = {\n      current: {\n        boxSelection: {\n          enabled: false,\n          startPosition: null as Position | null,\n          currentPosition: null as Position | null,\n          boxElement: null as PIXI.Graphics | null,\n        },\n      },\n    }\n    // to avoid dragging when onClick child\n    viewport.on(\n      'pointerdown',\n      (e) => {\n        // const { metaKey } = e.data.originalEvent\n        // BOX_SELECTION\n        // @ts-ignore\n        if (\n          e.target === e.currentTarget\n          && !isMultipleTouches(e)\n        ) {\n          // @ts-ignore\n          const position = getPointerPositionOnViewport(viewport, e.data.originalEvent)\n          localDataRef.current.boxSelection.startPosition = {\n            x: position.x,\n            y: position.y,\n          }\n          viewport.plugins.pause('drag')\n        }\n        // const { x, y } = viewport.toWorld(e.data.global)\n        viewport.isClick = true\n        setTimeout(() => {\n          viewport.isClick = false\n        }, 250)\n      },\n    )\n    viewport.on('pointerup', (e) => {\n      viewport.plugins.resume('drag')\n      if (localDataRef.current.boxSelection.enabled) {\n        const {\n          boxElement,\n          currentPosition,\n          startPosition,\n        } = localDataRef.current.boxSelection\n        onBoxSelectionEnd({\n          event: e,\n          startPosition: startPosition!,\n          endPosition: currentPosition!,\n          boundingBox: getBoundingBox(startPosition!, currentPosition!),\n        })\n        viewport.removeChild(boxElement!)\n        boxElement?.destroy()\n      }\n      localDataRef.current.boxSelection = {}\n    })\n    viewport.on('pointermove', (e) => {\n      // const { metaKey } = e.data.originalEvent\n      if (localDataRef.current.boxSelection.startPosition && !localDataRef.current.boxSelection.boxElement) {\n        const position = getPointerPositionOnViewport(viewport, e.data.originalEvent)\n        if (\n          R.pipe(\n            V.subtract(localDataRef.current.boxSelection.startPosition),\n            V.length,\n          )(position) > 20) {\n          const boxElement = new PIXI.Graphics()\n          viewport.addChild(boxElement!)\n          localDataRef.current.boxSelection.boxElement = boxElement\n          onBoxSelectionStart({\n            event: e,\n            startPosition: localDataRef.current.boxSelection.startPosition,\n          })\n          localDataRef.current.boxSelection.enabled = true\n        }\n      }\n      if (localDataRef.current.boxSelection.enabled) {\n        // @ts-ignore\n        const position = getPointerPositionOnViewport(viewport, e.data.originalEvent)\n        localDataRef.current.boxSelection.currentPosition = {\n          x: position.x,\n          y: position.y,\n        }\n        const {\n          startPosition,\n          currentPosition,\n          boxElement: pBoxElement,\n        } = localDataRef.current.boxSelection\n        const boxElement = pBoxElement!\n        const boundingBox = getBoundingBox(startPosition!, currentPosition!)\n        onBoxSelection({\n          event: e,\n          endPosition: currentPosition!,\n          startPosition: startPosition!,\n          boundingBox,\n        })\n        boxElement.x = boundingBox.x\n        boxElement.y = boundingBox.y\n        drawGraphics(boxElement, {\n          style: {\n            width: boundingBox.width,\n            height: boundingBox.height,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderColor: 'rgba(0,0,0,0.7)',\n            borderWidth: 1 / viewport.scale.x,\n          },\n        })\n      }\n    })\n    viewport.on('wheel', (data) => {\n      // @ts-ignore\n      data.event.preventDefault()\n    })\n\n    // // PIXI CULL\n    // const cull = new Simple({\n    //   dirtyTest: false,\n    // }) // new SpatialHash()\n    // cull.addList(viewport.children)\n    // cull.cull(viewport.getVisibleBounds())\n\n    // // cull whenever the viewport moves\n    // PIXI.Ticker.shared.add(() => {\n    // Cull the viewport\n    // if (viewport.dirty) {\n    //   cull.cull(viewport.getVisibleBounds())\n    //   viewport.children.map((child) => {\n    //     if (R.isFalse(child._visible)) {\n    //       child.visible = child._visible\n    //     }\n    //   })\n    //   viewport.dirty = false\n    // }\n    // PERFORMANCE\n    // const visibleChildren = viewport.children.filter((child) => child.visible)\n    // const objectCount = visibleChildren.length\n    // adjustVisualQuality(objectCount, viewport)\n      \n        \n    // const traverse = (displayObject: PIXI.DisplayObject) => {\n    //   // if (displayObject instanceof PIXI.Sprite) {\n    //   //   displayObject.forceToRender()\n    //   // }\n    //   // if (displayObject.children) {\n    //   //   displayObject.children.forEach((child) => {\n    //   //     traverse(child)\n    //   //   })\n    //   // }\n    //   const qualityLevelChanged = (\n    //     displayObject.qualityLevel ?? QUALITY_LEVEL.LOW\n    //   ) < viewport.qualityLevel\n    //   if (\n    //     displayObject instanceof PIXI.Sprite\n    //     && qualityLevelChanged) {\n    //     displayObject.qualityLevel = viewport.qualityLevel\n    //     displayObject.forceToRender()\n    //   }\n    //   if (displayObject.children && qualityLevelChanged) {\n    //     displayObject.children.forEach((child) => {\n    //       traverse(child)\n    //     })\n    //   }\n    // }\n    // const update = () => {\n    //   visibleChildren.forEach((child) => {\n    //     traverse(child)\n    //   })\n    // }\n      \n    // // if (viewport.qualityChanged && !viewport.moving) {\n    // //   viewport.qualityChanged = false\n    // //   if (viewport.oldQualityLevel < viewport.qualityLevel) {\n    // //     update()\n    // //   }\n    // // }\n    // if (!viewport.moving) {\n    //   update()\n    // }\n    // })\n    // PIXI CULL\n    return viewport\n  },\n  applyProps: (\n    mutableViewport: ViewportType,\n    oldProps,\n    newProps,\n  ) => {\n    const {\n      transform,\n      onPress,\n      zoom,\n      width,\n      height,\n    } = newProps\n    mutableViewport.resize(width, height)\n    mutableViewport.removeListener('pointertap', mutableViewport.clickEvent)\n    mutableViewport.clickEvent = (e: PIXI.InteractionEvent) => R.ifElse(\n      R.equals(e.target),\n      () => {\n        const { x, y } = mutableViewport.toWorld(e.data.global)\n        return R.when(\n          R.equals(true),\n          () => onPress?.({ nativeEvent: e, position: { x, y } }),\n        )(mutableViewport.isClick)\n      },\n      R.identity,\n    )(e.currentTarget)\n    R.unless(\n      R.equals(oldProps.zoom),\n      () => mutableViewport.setZoom(zoom ?? 1, true),\n    )(zoom)\n    R.unless(\n      R.equals(oldProps.transform),\n      () => mutableViewport.setTransform(\n        transform?.x,\n        transform?.y,\n        transform?.scaleX,\n        transform?.scaleY,\n        transform?.rotation,\n        transform?.skewX,\n        transform?.skewY,\n        transform?.pivotX,\n        transform?.pivotY,\n      ),\n    )(transform)\n    mutableViewport.on('pointertap', mutableViewport.clickEvent)\n    // return\n  },\n  didMount: () => {\n  },\n  willUnmount: () => {\n  },\n})\n\nexport type ViewportProps = {\n  children?: React.ReactNode;\n} & Omit<NativeViewportProps, 'app'>\n\nfunction ViewportElement(props: ViewportProps, ref: React.ForwardedRef<ViewportType>) {\n  const {\n    children,\n    ...rest\n  } = props\n  const app = useApp()\n  const viewportRef = useForwardRef(ref, {})\n\n  const keyboardRef = React.useRef({\n    pressedKeys: {},\n    intervalTimeout: null,\n  })\n  React.useEffect(() => {\n    const keyDownListener = (e) => {\n      if (document.body === e.target) {\n        keyboardRef.current.pressedKeys[e.key] = true\n        if (!keyboardRef.current.intervalTimeout) {\n          const interval = setInterval(() => {\n            const {\n              current: {\n                center,\n              },\n            } = viewportRef\n            const {\n              current: {\n                pressedKeys,\n              },\n            } = keyboardRef\n            const pointer = {\n              x: 0,\n              y: 0,\n            }\n            const MULTIPLIER = 30\n            Object.keys(pressedKeys).map((key) => {\n              switch (key) {\n                case 'ArrowRight':\n                  pointer.x += MULTIPLIER\n                  break\n                case 'ArrowLeft':\n                  pointer.x -= MULTIPLIER\n                  break\n                case 'ArrowUp':\n                  pointer.y -= MULTIPLIER\n                  break\n                case 'ArrowDown':\n                  pointer.y += MULTIPLIER\n                  break\n\n                default:\n                  break\n              }\n            })\n            const newCenter = new PIXI.Point(center.x + pointer.x, center.y + pointer.y)\n            viewportRef.current.center = newCenter\n          }, 5)\n          keyboardRef.current.intervalTimeout = interval\n        }\n        // viewportRef.current.center =\n      }\n    }\n    const keyUpListener = (e) => {\n      clearInterval(keyboardRef.current.intervalTimeout)\n      keyboardRef.current.intervalTimeout = null\n      keyboardRef.current.pressedKeys = {}\n    }\n    document.addEventListener('keydown', keyDownListener)\n    document.addEventListener('keyup', keyUpListener)\n    return () => {\n      document.removeEventListener('keydown', keyDownListener)\n      document.removeEventListener('keyup', keyUpListener)\n    }\n  }, [])\n  return (\n    <ReactViewportComp\n      ref={viewportRef}\n      app={app}\n      {...rest}\n    >\n      {children}\n    </ReactViewportComp>\n  )\n}\n\nexport const Viewport = wrapComponent<ViewportProps>(\n  ViewportElement, {\n    isForwardRef: true,\n  },\n)\n","import '@core/config'\nimport { DefaultTheme, ThemeProvider } from '@core/theme'\nimport { useGraph } from '@hooks'\nimport { Stage } from '@inlet/react-pixi'\nimport {\n  DrawLine, EdgeData, GraphConfig,\n  GraphRef, NodeData, RenderEdge, RenderNode,\n  RenderClusterNode,\n} from '@type'\nimport {\n  calculateVisibilityByContext, \n  contextUtils, cyUnselectAll, isPositionInBox,\n  adjustVisualQuality,\n} from '@utils'\nimport { CYTOSCAPE_EVENT } from '@constants'\nimport {\n  DataRender, useForwardRef,\n  View,\n  ViewProps, wrapComponent,\n} from 'colay-ui'\nimport { PropsWithRef } from 'colay-ui/type'\nimport * as C from 'colay/color'\nimport * as R from 'colay/ramda'\nimport { BoundingBox } from 'colay/type'\nimport React from 'react'\nimport * as PIXI from 'pixi.js'\nimport { ClusterNodeContainer } from '../ClusterNodeContainer'\nimport { EdgeContainer } from '../EdgeContainer'\nimport { NodeContainer } from '../NodeContainer'\nimport { DefaultRenderClusterNode } from './DefaultRenderClusterNode'\nimport { DefaultRenderNode } from './DefaultRenderNode'\nimport { DefaultRenderEdge } from './DefaultRenderEdge'\nimport { Viewport, ViewportProps } from '../Viewport'\n\nexport type GraphProps = {\n  children?: React.ReactNode;\n  extraData?: any;\n  nodes: NodeData[];\n  edges: EdgeData[];\n  style?: ViewProps['style'];\n  renderNode?: RenderNode;\n  renderEdge?: RenderEdge;\n  renderClusterNode?: RenderClusterNode;\n  onPress?: ViewportProps['onPress'];\n  drawLine?: DrawLine;\n  config?: GraphConfig;\n  onBoxSelection?: (c: {\n    event: PIXI.InteractionEvent,\n    elements: cytoscape.Collection,\n    elementIds: string[],\n    boundingBox: BoundingBox;\n  }) => void;\n  selectedElementIds?: string[]\n}\n\nconst GraphElement = (props: GraphProps, ref: React.ForwardedRef<GraphRef>) => {\n  const {\n    style = {},\n    nodes = [],\n    edges = [],\n    onPress,\n    renderNode = DefaultRenderNode,\n    renderEdge = DefaultRenderEdge,\n    drawLine,\n    extraData,\n    config: configProp = {} as Partial<GraphConfig>,\n    onBoxSelection,\n    selectedElementIds = [],\n    children,\n    renderClusterNode = DefaultRenderClusterNode,\n  } = props\n  // const boxSelectionEnabled = !!onBoxSelection\n  const width = style?.width as number\n  const height = style?.height as number\n  const config = React.useMemo(() => ({\n    ...DEFAULT_CONFIG,\n    ...configProp,\n  }), [configProp])\n  const { theme } = config\n  const graphID = React.useMemo<string>(() => config.graphId ?? R.uuid(), [config.graphId])\n  const stageRef = React.useRef<{ app: PIXI.Application }>(null)\n  const { cy } = useGraph({\n    id: graphID,\n    onLoad: () => {\n    },\n    clusters: config.clusters,\n  })\n  const graphRef = useForwardRef<GraphRef>(ref, { cy })\n  const graphLayoutRef = React.useRef<cytoscape.Layouts>(null)\n  React.useMemo(() => {\n    const objectCount  = nodes.length + edges.length\n\n    if (graphRef.current.viewport){\n      adjustVisualQuality(objectCount, graphRef.current.viewport)\n    }\n  }, [nodes, edges])\n  React.useEffect(() => {\n    if (!graphRef.current.app && !config.layout) {\n      graphRef.current.viewport.dirty = true\n    }\n    graphRef.current.app = stageRef.current?.app!\n    if (graphRef.current.app) {\n      graphRef.current.app.view.addEventListener('contextmenu', (e) => {\n        e.preventDefault()\n      })\n    }\n  }, [stageRef.current])\n  React.useEffect(() => {\n    cyUnselectAll(cy)\n    selectedElementIds.forEach((id) => {\n      cy.$id(id).select()\n    })\n  }, [selectedElementIds, cy])\n  React.useEffect(() => {\n    if (stageRef.current && config.layout) {\n      const { hitArea } = graphRef.current.viewport\n      const boundingBox = {\n        x1: hitArea.x,\n        y1: hitArea.y,\n        w: hitArea.width,\n        h: hitArea.height,\n      }\n      graphLayoutRef.current?.stop()\n      // @ts-ignore\n      graphLayoutRef.current = cy.createLayout({\n        boundingBox,\n        ...config.layout,\n      })\n      graphLayoutRef.current.on('layoutstop', () => {\n        // @ts-ignore\n        graphLayoutRef.current = null\n        // Fix the edge lines\n        cy.edges().forEach((edge) => {\n          const edgeContext = contextUtils.get(edge)\n          edgeContext.onPositionChange()\n        })\n        // FOR CULLING\n        graphRef.current.viewport.dirty = true\n      })\n      graphLayoutRef.current.start()\n    }\n  }, [config.layout])\n  const backgroundColor = React.useMemo(\n    () => C.rgbNumber(theme.palette.background.default),\n    [theme.palette.background.default],\n  )\n  React.useEffect(() => {\n    stageRef.current!.app.renderer.backgroundColor = backgroundColor\n  }, [backgroundColor])\n  const {\n    ids: nodeConfigIds,\n    ...globalNodeConfig\n  } = {\n    ...DEFAULT_NODE_CONFIG,\n    ...(config.nodes ?? {}),\n  }\n  const {\n    ids: edgeConfigIds,\n    ...globalEdgeConfig\n  } = {\n    ...DEFAULT_EDGE_CONFIG,\n    ...(config.edges ?? {}),\n  }\n\n  const onPressCallback = React.useCallback((e) => {\n    cyUnselectAll(cy)\n    onPress?.(e)\n  }, [cy, onPress])\n  return (\n    <View\n      style={style}\n    >\n      <Stage\n        // @ts-ignore\n        ref={stageRef}\n        {...{ width, height }}\n        options={{\n          width,\n          height,\n          resolution: window.devicePixelRatio || 1, // 64, // window.devicePixelRatio || 1,\n          antialias: true,\n          autoDensity: true,\n          backgroundColor,\n        }}\n      >\n        <ThemeProvider\n          value={theme}\n        >\n          <Viewport\n            onCreate={(viewport) => {\n              graphRef.current.viewport = viewport\n            }}\n            onPress={onPressCallback}\n            zoom={config.zoom}\n            transform={config.transform}\n            {...{ width, height }}\n            onBoxSelectionEnd={({\n              event,\n              boundingBox,\n            }) => {\n              cyUnselectAll(cy)\n              const elementIds: string[] = []\n              const selectedCollection = cy.nodes().filter((element) => {\n                const elementPosition = element.position()\n                const elementContext = contextUtils.get(element)\n                const selected = calculateVisibilityByContext(element)\n                  && isPositionInBox(elementPosition, boundingBox)\n                if (selected) {\n                  element.select()\n                  elementIds.push(element.id())\n                }\n                return selected\n              })\n              onBoxSelection?.({\n                boundingBox,\n                elements: selectedCollection,\n                event,\n                elementIds,\n              })\n            }}\n          >\n            <DataRender\n              extraData={[extraData, config.nodes, config.clusters]}\n              data={nodes}\n              accessor={['children']}\n              keyExtractor={(item) => item.id}\n              renderItem={({ item }) => {\n                return (\n                  <NodeContainer\n                    graphID={graphID}\n                    item={item}\n                    graphRef={graphRef}\n                    config={{\n                      ...(globalNodeConfig ?? {}),\n                      ...(nodeConfigIds?.[item.id] ?? {}),\n                    }}\n                  >\n                    {renderNode}\n                  </NodeContainer>\n                )\n              }}\n            />\n            <DataRender\n              extraData={[extraData, config.edges, config.clusters]}\n              data={edges}\n              accessor={['children']}\n              keyExtractor={(item) => item.id}\n              renderItem={({ item }) => (\n                <EdgeContainer\n                  graphID={graphID}\n                  item={item}\n                  graphRef={graphRef}\n                  drawLine={drawLine}\n                  config={{\n                    ...(globalEdgeConfig ?? {}),\n                    ...(edgeConfigIds?.[item.id] ?? {}),\n                  }}\n                >\n                  {renderEdge}\n                </EdgeContainer>\n              )}\n            />\n            <DataRender\n              extraData={[extraData]}\n              data={config.clusters ?? []}\n              accessor={['children']}\n              keyExtractor={(item) => item.id}\n              renderItem={({ item }) => (\n                <ClusterNodeContainer\n                  graphID={graphID}\n                  item={item}\n                  graphRef={graphRef}\n                  config={{\n                    ...(globalNodeConfig ?? {}),\n                    ...(nodeConfigIds?.[item.id] ?? {}),\n                  }}\n                >\n                  {renderClusterNode}\n                </ClusterNodeContainer>\n              )}\n            />\n            {children}\n          </Viewport>\n        </ThemeProvider>\n      </Stage>\n    </View>\n  )\n}\n\nconst DEFAULT_NODE_CONFIG = {\n  renderEvents: [\n    CYTOSCAPE_EVENT.select,\n    CYTOSCAPE_EVENT.unselect,\n    CYTOSCAPE_EVENT.selectEdge,\n    CYTOSCAPE_EVENT.unselectEdge,\n    CYTOSCAPE_EVENT.mouseover,\n    CYTOSCAPE_EVENT.mouseout,\n  ],\n}\n\nconst DEFAULT_EDGE_CONFIG = {\n  renderEvents: [\n    CYTOSCAPE_EVENT.select,\n    CYTOSCAPE_EVENT.unselect,\n    CYTOSCAPE_EVENT.selectNode,\n    CYTOSCAPE_EVENT.unselectNode,\n    CYTOSCAPE_EVENT.mouseover,\n    CYTOSCAPE_EVENT.mouseout,\n  ],\n}\n\nconst DEFAULT_CONFIG = {\n  theme: DefaultTheme,\n}\n\nexport const Graph = wrapComponent<PropsWithRef<GraphRef, GraphProps>>(\n  GraphElement,\n  {\n    isForwardRef: true,\n    isEqual: R.equalsExclude(R.is(Function)),\n  },\n)\n\nexport { DefaultRenderClusterNode } from './DefaultRenderClusterNode'\nexport { DefaultRenderNode } from './DefaultRenderNode'\nexport { DefaultRenderEdge } from './DefaultRenderEdge'\n","import { ProfileTemplate } from '@components/templates/Profile'\nimport { ComponentType } from 'colay-ui/type'\nimport Layouts from '@core/layouts'\nimport { Clusters } from '@core/clusters'\nimport { ELEMENT_TYPE } from '@constants'\nimport { View } from './View'\nimport { Graphics } from './Graphics'\nimport { Pressable } from './Pressable'\nimport { Text } from './Text'\nimport { Image } from './Image'\nimport { HoverContainer } from './HoverContainer'\nimport { Graph as NativeGraph, GraphProps } from './Graph'\n\nexport const Graph = NativeGraph as ComponentType<GraphProps> & {\n  View: typeof View;\n  Text: typeof Text;\n  Image: typeof Image;\n  Pressable: typeof Pressable;\n  Graphics: typeof Graphics;\n  ProfileTemplate: typeof ProfileTemplate;\n  Layouts: typeof Layouts;\n  Clusters: typeof Clusters;\n  HoverContainer: typeof HoverContainer;\n  elementType: typeof ELEMENT_TYPE;\n}\n\nGraph.View = View\nGraph.Text = Text\nGraph.Image = Image\nGraph.Pressable = Pressable\nGraph.Graphics = Graphics\nGraph.ProfileTemplate = ProfileTemplate\nGraph.Layouts = Layouts\nGraph.Clusters = Clusters\nGraph.HoverContainer = HoverContainer\nGraph.elementType = ELEMENT_TYPE\n\nexport { DefaultRenderEdge, DefaultRenderNode } from './Graph'\nexport {\n  ProfileTemplate,\n} from './templates/Profile'\n\nexport type { GraphProps } from './Graph'\n\nexport {\n  drawLine,\n} from './Graphics'\n\n// export {\n//   GraphEditor,\n//   GraphEditorProps,\n// } from './GraphEditor'\n","import React from 'react'\nimport { View, ViewProps } from '../View'\n\nexport type HoverContainerProps = {\n  renderHoverElement: () => React.ReactChild;\n} & ViewProps\n\nexport const HoverContainer = (props: HoverContainerProps) => {\n  const {\n    children,\n    renderHoverElement,\n    ...rest\n  } = props\n  const [state, setState] = React.useState({ hovered: false })\n  const onHoverStart = React.useCallback(() => {\n    setState({ hovered: true })\n  }, [])\n  const onHoverEnd = React.useCallback(() => {\n    setState({ hovered: false })\n  }, [])\n  return (\n    <View\n      interactive\n      {...rest}\n      pointerover={onHoverStart}\n      pointerout={onHoverEnd}\n    >\n      {children}\n      {state.hovered && renderHoverElement()}\n    </View>\n  )\n}\n\n/**\n * ## Usage\n * To use Image on Graph\n * Check example\n *\n * ```js live=true\n * <Graph\n *  style={{ width: '100%', height: 250 }}\n *  nodes={[\n *    {\n *      id: 1,\n *      position: { x: 10, y: 10 },\n *      data: {\n *        title: 'Edison',\n *        image: 'https://www.biography.com/.image/t_share/MTE4MDAzNDEwNTEzMDA0MDQ2/thomas-edison-9284349-1-402.jpg'\n *       }\n *    },\n *    {\n *      id: 2,\n *      position: { x: 300, y: 10 },\n *      data: {\n *        title: 'lamp',\n *        image: 'https://images.unsplash.com/photo-1552529232-9e6cb081de19?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60'\n *      }\n *    },\n *  ]}\n *  edges={[\n *    { id: 51, source: 1, target: 2 }\n *  ]}\n *  renderNode={({ item: { data } }) => (\n *    <Graph.HoverContainer\n *      style={{\n          width: 100,\n          height: 100,\n          backgroundColor: '#3291a8',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderRadius: 25\n        }}\n        renderHoverElement={() => (\n          <Graph.View\n            style={{\n              backgroundColor: 'white',\n              width: NODE_SIZE.width * 2,\n              height: 20,\n              position: 'absolute',\n              left: 0\n            }}\n          >\n            <Graph.Text style={{fontSize: 20, textAlign: 'center'}}>\n              {R.replace('ECLI:NL:', '')(data.ecli)}\n            </Graph.Text>\n          </Graph.View>\n        )}\n *    >\n *      <Graph.Image\n *        style={{ width: 100, height: 100 }}\n *        source={{ uri: data.image }}\n *      />\n *    </Graph.HoverContainer>\n * )}\n * />\n * ```\n */\n","import React from 'react'\nimport { Position } from 'colay/type'\nimport { GraphEditorRef } from '@type'\nimport {\n  Menu,\n  MenuItem,\n  Portal,\n} from '@mui/material'\n\nexport type ContextMenuProps = {\n  onSelect?: (value: string) => void;\n  children?: React.ReactNode;\n  items?: {\n    label: string; value: string;\n  }[]\n  open?: boolean;\n  position?: Position;\n  graphEditorRef: React.MutableRefObject<GraphEditorRef>\n}\n\nconst DEFAULT_FONT_SIZE = 20\nconst WIDTH = 540\nexport const ContextMenu = (props: ContextMenuProps) => {\n  const {\n    children,\n    onSelect,\n    items = [],\n    open,\n    position = { x: 0, y: 0 },\n    graphEditorRef,\n  } = props\n  return (\n    <Portal container={document.body}>\n      <Menu\n        open={open}\n        onClose={() => onSelect?.()}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={{\n          left: position.x,\n          top: position.y,\n        }}\n      >\n        {\n          items.map(({ value, label }) => (\n            <MenuItem\n              key={value}\n              onClick={() => {\n                onSelect?.(value)\n              }}\n            >\n              {label}\n            </MenuItem>\n          ))\n        }\n      </Menu>\n    </Portal>\n\n  )\n}\n","// @ts-nocheck\ntype Callback = (...params: any[]) => void\n\ntype Checker = () => boolean\n\ninterface KeyId {\n  [key: string]: any\n}\n\ninterface OriginalMs {\n  [key: string]: number\n}\n\nclass MetadataRecord {\n  public executedTime: number\n\n  public paused = false\n\n  public startTime = new Date().getTime()\n\n  public timeSpentWaiting = 0\n\n  constructor(\n    public callback: Callback,\n    public key: string,\n    public ms: number,\n    public params: any[],\n  ) {\n  }\n}\n\ninterface Metadata {\n  [key: string]: MetadataRecord\n}\n\nexport interface TimeoutInstance {\n  clear: (erase?: boolean) => void;\n  executed: () => boolean;\n  exists: () => boolean;\n  lastExecuted: () => Date;\n  pause: () => number | boolean;\n  paused: () => boolean;\n  pending: () => boolean;\n  remaining: () => number;\n  restart: () => boolean | Checker;\n  resume: () => boolean | Checker;\n  set: (newCallback: Callback, newMs?: number, ...newParams: any[]) => Checker;\n}\n\nexport class Timeout {\n  private static keyId: KeyId = {}\n\n  private static originalMs: OriginalMs = {}\n\n  private static metadata: Metadata = {}\n\n  /**\n   * clear timeout and optionally erase all knowledge of its existence\n   * @param key\n   * @param erase\n   */\n  static clear(key: string, erase = true) {\n    clearTimeout(Timeout.keyId[key])\n    delete Timeout.keyId[key]\n\n    if (erase) {\n      delete Timeout.metadata[key]\n      delete Timeout.originalMs[key]\n    }\n  }\n\n  /**\n   * returns a function allowing you to test if it has executed\n   * @param key\n   * @param callback\n   * @param ms\n   * @param params\n   */\n  static set(key: string, callback: Callback, ms: number, ...params: any[]): Checker\n  /**\n   * returns a function allowing you to test if it has executed\n   * @param callback\n   * @param ms\n   * @param params\n   */\n  static set(callback: Callback, ms: number, ...params: any[]): Checker\n  static set(...args: any[]): Checker\n  static set(...args: any[]): Checker {\n    let key: string\n    let ms: number\n    let params: any[]\n    let callback: Callback\n\n    if (args.length === 0) {\n      throw Error('Timeout.set() requires at least one argument')\n    }\n\n    if (typeof args[1] === 'function') {\n      [key, callback, ms, ...params] = args\n    } else {\n      [callback, ms, ...params] = args\n      key = callback.toString()\n    }\n\n    if (!callback) {\n      throw Error('Timeout.set() requires a callback parameter')\n    }\n\n    Timeout.clear(key)\n\n    const invoke = () => {\n      Timeout.metadata[key].executedTime = new Date().getTime()\n      callback(...params)\n    }\n\n    Timeout.keyId[key] = setTimeout(invoke, ms || 0)\n    Timeout.originalMs[key] = Timeout.originalMs[key] || ms\n\n    Timeout.metadata[key] = new MetadataRecord(\n      callback,\n      key,\n      ms,\n      params,\n    )\n\n    return () => Timeout.executed(key)\n  }\n\n  /**\n   * same as set() except returns false if timeout already exists\n   * @param key\n   * @param callback\n   * @param ms\n   * @param params\n   */\n  static create(key: string, callback: Callback, ms: number, ...params: any[]): boolean | Checker\n  /**\n   * same as set() except returns false if timeout already exists\n   * @param callback\n   * @param ms\n   * @param params\n   */\n  static create(callback: Callback, ms: number, ...params: any[]): boolean | Checker\n  static create(...args: any[]): boolean | Checker {\n    if (args.length === 0) {\n      throw Error('Timeout.create() requires at least one argument')\n    }\n\n    let key: string\n\n    if (typeof args[1] === 'function') {\n      [key] = args\n    } else {\n      const [callback] = args\n      key = callback.toString()\n    }\n\n    return Timeout.exists(key) ? false : Timeout.set(...args)\n  }\n\n  /**\n   * timeout has been created\n   * @param key\n   */\n  static exists(key: string): boolean {\n    return key in Timeout.keyId || (Timeout.metadata)[key] !== undefined\n  }\n\n  /**\n   * test if a timeout has run\n   * @param key\n   */\n  static executed(key: string): boolean {\n    return Timeout.exists(key) && !!Timeout.metadata[key].executedTime\n  }\n\n  /**\n   * when timeout was last executed\n   * @param key\n   */\n  static lastExecuted(key: string): Date {\n    return !Timeout.executed(key)\n      ? null\n      : new Date(Timeout.metadata[key].executedTime)\n  }\n\n  /**\n   * timeout does exist, but has not yet run\n   * @param key\n   */\n  static pending(key: string): boolean {\n    return Timeout.exists(key) && !Timeout.executed(key)\n  }\n\n  /**\n   * timeout does exist, but will not execute because it is paused\n   * @param key\n   */\n  static paused(key: string): boolean {\n    return Timeout.exists(key)\n      && !Timeout.executed(key)\n      && Timeout.metadata[key].paused\n  }\n\n  /**\n   * remaining time until timeout will occur\n   * @param key\n   */\n  static remaining(key: string): number {\n    if (!Timeout.metadata[key]) return 0\n\n    const metaDataRecord = Timeout.metadata[key]\n\n    return Timeout.paused(key)\n      ? metaDataRecord.ms - metaDataRecord.timeSpentWaiting\n      : Math.max(0, metaDataRecord.startTime + metaDataRecord.ms - new Date().getTime())\n  }\n\n  /**\n   * restart timeout with original time\n   * @param key\n   */\n  static restart(key: string): boolean | Checker {\n    if (!Timeout.metadata[key] || Timeout.executed(key)) return false\n\n    const metaDataRecord = Timeout.metadata[key]\n\n    Timeout.clear(key, false)\n\n    if (metaDataRecord.paused) {\n      metaDataRecord.paused = false\n    }\n\n    return Timeout.set(key, metaDataRecord.callback, Timeout.originalMs[key], ...metaDataRecord.params)\n  }\n\n  /**\n   * pause our execution countdown until we're ready for it to resume\n   * @param key\n   */\n  static pause(key: string): boolean | number {\n    if (!Timeout.metadata[key] || Timeout.paused(key) || Timeout.executed(key)) return false\n\n    Timeout.clear(key, false)\n\n    const metaDataRecord = Timeout.metadata[key]\n\n    metaDataRecord.paused = true\n    metaDataRecord.timeSpentWaiting = new Date().getTime() - metaDataRecord.startTime\n\n    return metaDataRecord.timeSpentWaiting\n  }\n\n  /**\n   * resume paused Timeout with the remaining time\n   * @param key\n   */\n  static resume(key: string): boolean | Checker {\n    if (!Timeout.metadata[key] || Timeout.executed(key)) return false\n\n    const metaDataRecord = Timeout.metadata[key]\n\n    if (!metaDataRecord.paused) return false\n\n    const originalMs = Timeout.originalMs[key]\n    const remainingTime = metaDataRecord.ms - metaDataRecord.timeSpentWaiting\n\n    const result = Timeout.set(key, metaDataRecord.callback, remainingTime, ...metaDataRecord.params)\n\n    Timeout.originalMs[key] = originalMs\n\n    return result\n  }\n\n  /**\n   * instantiate timeout to handle as object\n   * @param callback\n   * @param ms\n   * @param params\n   */\n  static instantiate(callback: Callback, ms = 0, ...params: any[]): TimeoutInstance {\n    if (!callback) {\n      throw Error('Timeout.instantiate() requires a function parameter')\n    }\n\n    const key = `${Math.random()}${callback}`.replace(/\\s/g, '')\n\n    Timeout.set(key, callback, ms, ...params)\n\n    return {\n      clear: (erase = true) => Timeout.clear(key, erase),\n      executed: () => Timeout.executed(key),\n      exists: () => Timeout.exists(key),\n      lastExecuted: () => Timeout.lastExecuted(key),\n      pause: () => Timeout.pause(key),\n      paused: () => Timeout.paused(key),\n      pending: () => Timeout.pending(key),\n      remaining: () => Timeout.remaining(key),\n      restart: () => Timeout.restart(key),\n      resume: () => Timeout.resume(key),\n      set: (newCallback: Callback, newMs = 0, ...newParams: any[]) => Timeout.set(key, newCallback, newMs, ...newParams),\n    }\n  }\n}\n","import { Timeout, TimeoutInstance } from './smart-timer'\n\nexport type {\n  TimeoutInstance,\n} from './smart-timer'\nexport type Timer<T> = {\n  after: number;\n} & T\n\nexport {\n  Timeout,\n} from './smart-timer'\n\nexport type Options = {\n  onFinish?: () => void;\n  onPlayChanged?: () => void;\n  autostart?: boolean\n}\nexport const createTimeoutManager = <T extends Timer<Record<string, any>>>(\n  timers: T[] = [],\n  callback: (timer: T, index: number, timeout: TimeoutInstance) => void,\n  options: Options = {},\n) => {\n  const {\n    onFinish: onFinishCallback,\n    autostart = true,\n    onPlayChanged: onPlayChangedCallback,\n  } = options\n  const isEmpty = timers.length === 0\n  const timeoutInstances: TimeoutInstance[] = []\n  let afterTotal = 0\n  const onFinish = () => {\n    controller.finished = true\n    controller.duration = 0\n    onFinishCallback?.()\n  }\n  const onPlayChanged = (started: boolean) => {\n    if (started) {\n      controller.durationCounter = createDurationCounter()\n    } else {\n      // @ts-ignore\n      controller.durationCounter && clearInterval(controller.durationCounter)\n    }\n    controller.paused = !started\n    onPlayChangedCallback?.()\n  }\n  let totalDuration = 0\n  timers.forEach(({ after }: T) => {\n    totalDuration += after\n  })\n  const createDurationCounter = () => setInterval(() => {\n    controller.duration += 100\n  }, 100)\n  const controller = {\n    currentIndex: 0,\n    totalDuration,\n    duration: 0,\n    durationCounter: null as null | Timeout,\n    timers,\n    timeoutInstances,\n    finished: isEmpty,\n    paused: !autostart,\n    pause: () => {\n      timeoutInstances.forEach((timeoutInstance, index) => {\n        if (index >= controller.currentIndex) {\n          timeoutInstance.pause()\n        }\n      })\n      onPlayChanged(false)\n    },\n    start: () => {\n      timeoutInstances.forEach((timeoutInstance, index) => {\n        if (index >= controller.currentIndex) {\n          timeoutInstance.resume()\n        }\n      })\n      onPlayChanged(true)\n    },\n    clear: () => {\n      timeoutInstances.forEach((timeoutInstance) => {\n        timeoutInstance.clear()\n      })\n      // @ts-ignore\n      controller.durationCounter && clearInterval(controller.durationCounter)\n      onFinish()\n    },\n  }\n  timers.forEach((timer, index) => {\n    afterTotal += timer.after\n    const timeoutInstance = Timeout.instantiate(() => {\n      controller.currentIndex = index + 1\n      callback(timer, index, timeoutInstance)\n      if (index === timers.length - 1) {\n        controller.clear()\n      }\n    }, afterTotal)\n    if (!autostart) {\n      timeoutInstance.pause()\n    }\n    timeoutInstances.push(\n      timeoutInstance,\n    )\n  })\n  if (autostart) {\n    controller.durationCounter = createDurationCounter()\n  }\n  return controller\n}\n\nexport type TimeoutManager = ReturnType<typeof createTimeoutManager>\n","import React from 'react'\nimport {\n  AddCircle,\n  Adjust,\n  DeleteRounded,\n  RecordVoiceOverRounded,\n  Edit,\n  ExpandMore,\n  BuildCircle,\n  RepeatOne,\n  SortByAlpha,\n  Close,\n  InfoOutlined,\n  Filter,\n  ArrowDropDownRounded,\n  ArrowDropUpRounded,\n  Bookmark,\n  Bookmarks,\n  BookmarkBorder,\n  Minimize,\n  Videocam,\n  FiberManualRecord,\n  Settings,\n  BuildCircleOutlined,\n  MoreVert,\n  Redo,\n  ChevronLeft,\n  ChevronRight,\n  KeyboardArrowUp,\n  KeyboardArrowDown,\n  PlaylistAdd,\n  PlaylistPlay,\n  PlayArrow,\n  NavigateNext,\n  NavigateBefore,\n  Assessment,\n  Beenhere,\n  UnfoldLess,\n  UnfoldMore,\n  MyLocation,\n  DragHandle,\n  CancelRounded,\n} from '@mui/icons-material'\nimport { IconProps as MUIIconProps } from '@mui/material'\n\nconst ICONS = {\n  assessment: Assessment,\n  add_circle: AddCircle,\n  addjust: Adjust,\n  cancel_rounded: CancelRounded,\n  delete_rounded: DeleteRounded,\n  record_voice_over_rounded: RecordVoiceOverRounded,\n  build_circle_outlined: BuildCircleOutlined,\n  more_vert: MoreVert,\n  edit: Edit,\n  build_circle: BuildCircle,\n  repeat_one: RepeatOne,\n  sort_by_alpha: SortByAlpha,\n  close: Close,\n  info_outlined: InfoOutlined,\n  filter: Filter,\n  arrow_drop_down_rounded: ArrowDropDownRounded,\n  arrow_drop_up_rounded: ArrowDropUpRounded,\n  bookmarks: Bookmarks,\n  bookmark: Bookmark,\n  bookmark_border: BookmarkBorder,\n  minimize: Minimize,\n  videocam: Videocam,\n  fiber_manual_record: FiberManualRecord,\n  settings: Settings,\n  redo: Redo,\n  chevron_left: ChevronLeft,\n  chevron_right: ChevronRight,\n  keyboard_arrow_up: KeyboardArrowUp,\n  keyboard_arrow_down: KeyboardArrowDown,\n  playlist_add: PlaylistAdd,\n  playlist_play: PlaylistPlay,\n  expand_more: ExpandMore,\n  play_arrow: PlayArrow,\n  navigate_before: NavigateBefore,\n  navigate_next: NavigateNext,\n  beenhere: Beenhere,\n  unfold_less: UnfoldLess,\n  unfold_more: UnfoldMore,\n  my_location: MyLocation,\n  drag_handle: DragHandle,\n} as const\n\ntype IconName = keyof typeof ICONS\n\nexport type IconProps = Omit<MUIIconProps, 'name'> & {\n  name: IconName;\n}\n\nexport const Icon = (props: IconProps) => {\n  const {\n    name,\n    ...rest\n  } = props\n  const IconSelected = ICONS[name]\n  return (\n    // @ts-ignore\n    <IconSelected {...rest} />\n  )\n}\n","import * as R from 'colay/ramda'\n\nimport { DocumentResult, DocumentPickerOptions } from './types'\n\nconst uuidv4 = R.uuid\n\nexport default {\n  get name(): string {\n    return 'ExpoDocumentPicker'\n  },\n\n  async getDocumentAsync({\n    type = '*/*',\n    multiple = false,\n  }: DocumentPickerOptions): Promise<DocumentResult> {\n    const input = document.createElement('input')\n    input.style.display = 'none'\n    input.setAttribute('type', 'file')\n    input.setAttribute('accept', type)\n    input.setAttribute('id', uuidv4())\n    if (multiple) {\n      input.setAttribute('multiple', 'multiple')\n    }\n\n    document.body.appendChild(input)\n\n    return new Promise((resolve, reject) => {\n      input.addEventListener('change', () => {\n        if (input.files) {\n          const targetFile = input.files[0]\n          const reader = new FileReader()\n          reader.onerror = () => {\n            reject(new Error('Failed to read the selected media because the operation failed.'))\n          }\n          reader.onload = ({ target }) => {\n            const uri = (target as any).result\n            resolve({\n              type: 'success',\n              uri,\n              name: targetFile.name,\n              file: targetFile,\n              lastModified: targetFile.lastModified,\n              size: targetFile.size,\n              output: input.files,\n            })\n          }\n          // Read in the image file as a binary string.\n          reader.readAsDataURL(targetFile)\n        } else {\n          resolve({ type: 'cancel' })\n        }\n\n        document.body.removeChild(input)\n      })\n\n      const event = new MouseEvent('click')\n      input.dispatchEvent(event)\n    })\n  },\n}\n","import { LAYOUT_NAMES } from '@constants'\nimport {\n  Card,\n  CardActionArea, CardContent, CardMedia, MenuItem,\n  Popper,\n  TextField,\n  Typography\n} from '@mui/material'\nimport { utils, WidgetProps } from '@rjsf/core'\nimport { useDisclosure, View } from 'colay-ui'\nimport React from 'react'\nimport { LAYOUT_INFO } from './layoutInfo'\n\nconst { asNumber, guessType } = utils\n\nconst nums = new Set(['number', 'integer'])\n\nexport const WIDTH = 300\nexport const HEIGHT = 300\n\n/**\n * This is a silly limitation in the DOM where option change event values are\n * always retrieved as strings.\n */\nconst processValue = (schema: any, value: any) => {\n  // \"enum\" is a reserved word, so only \"type\" and \"items\" can be destructured\n  const { type, items } = schema\n  if (value === '') {\n    return undefined\n  } if (type === 'array' && items && nums.has(items.type)) {\n    return value.map(asNumber)\n  } if (type === 'boolean') {\n    return value === 'true'\n  } if (type === 'number') {\n    return asNumber(value)\n  }\n\n  // If type is undefined, but an enum is present, try and infer the type from\n  // the enum values\n  if (schema.enum) {\n    if (schema.enum.every((x: any) => guessType(x) === 'number')) {\n      return asNumber(value)\n    } if (schema.enum.every((x: any) => guessType(x) === 'boolean')) {\n      return value === 'true'\n    }\n  }\n\n  return value\n}\n\nconst LayoutNameSelect = (props: WidgetProps) => {\n  const {\n    schema,\n    id,\n    label,\n    required,\n    disabled,\n    readonly,\n    options,\n    value,\n    multiple,\n    autofocus,\n    onChange,\n    onBlur,\n    onFocus,\n    rawErrors = [],\n  } = props\n  const { enumOptions, enumDisabled } = options\n\n  const emptyValue = multiple ? [] : ''\n\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<{ name?: string; value: unknown }>) => onChange(processValue(schema, value))\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) => onBlur(id, processValue(schema, value))\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, processValue(schema, value))\n  const {\n    anchorEl,\n    // isOpen,\n    onClose,\n    onOpen,\n  } = useDisclosure({})\n  const hoveredIndexRef = React.useRef(-1)\n  return (\n    <TextField\n      id={id}\n      label={label || schema.title}\n      select\n      value={typeof value === 'undefined' ? emptyValue : value}\n      required={required}\n      disabled={disabled || readonly}\n      autoFocus={autofocus}\n      error={rawErrors.length > 0}\n      onChange={_onChange}\n      onBlur={_onBlur}\n      onFocus={_onFocus}\n      InputLabelProps={{\n        shrink: true,\n      }}\n      SelectProps={{\n        multiple: typeof multiple === 'undefined' ? false : multiple,\n      }}\n    >\n      {(enumOptions as any).map(({ value, label }: any, i: number) => {\n        const disabled: any = enumDisabled && (enumDisabled as any).indexOf(value) != -1\n        return (\n          <MenuItem\n            key={i}\n            value={value}\n            disabled={disabled}\n            onMouseEnter={(e) => {\n              hoveredIndexRef.current = i\n              onOpen(e)\n            }}\n            onMouseLeave={onClose}\n          >\n            <LayoutNameItem\n              openInfo={{\n                anchorEl,\n                isOpen: hoveredIndexRef.current === i,\n              }}\n              value={value}\n              label={label}\n              disabled={disabled}\n            />\n          </MenuItem>\n\n        // <MenuItem\n        //   key={i}\n        //   value={value}\n        //   disabled={disabled}\n        // >\n\n        //   <View\n        //   style={{\n        //     flexDirection: 'row',\n        //     justifyContent: 'space-between',\n        //     width: '100%',\n        //   }}\n        // >\n        //   <Typography>\n        //     {label}\n        //   </Typography>\n        //   <img\n        //     src={`https://raw.githubusercontent.com/sabaturgay/assets/main/gifs/${value}Layout.gif`}\n        //     width={32}\n        //     height={32}\n        //     alt={label}\n        //   />\n        // </View>\n        // </MenuItem>\n        )\n      })}\n    </TextField>\n  )\n}\n\ntype LayoutNameItemProps = {\n  value: string;\n  label: string;\n  disabled?: boolean;\n  openInfo: {\n    anchorEl?: any;\n    isOpen?: boolean\n  };\n}\nconst LayoutNameItem = (props: LayoutNameItemProps) => {\n  const {\n    label,\n    value,\n    openInfo = {},\n  } = props\n  const {\n    isOpen,\n    anchorEl,\n  } = openInfo\n  const info = LAYOUT_INFO[value as keyof typeof LAYOUT_INFO]\n  return (\n    <>\n      <View\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          width: '100%',\n        }}\n      >\n        <Typography>\n          {label}\n        </Typography>\n        <img\n          src={`https://raw.githubusercontent.com/sabaturgay/assets/main/gifs/${value}Layout.gif`}\n          width={32}\n          height={32}\n          alt={label}\n        />\n      </View>\n      {/* <Popper\n        // id={id}\n        open={isOpen}\n        anchorEl={anchorEl}\n        transition\n        // disablePortal\n        placement=\"right-start\"\n        style={{\n          zIndex: 2000,\n        }}\n      >\n        <LayoutCard\n          {...info}\n        />\n\n      </Popper> */}\n    </>\n  )\n}\n\ntype LayoutCardProps = typeof LAYOUT_INFO['breadthfirst']\nconst LayoutCard = (props: LayoutCardProps) => {\n  const {\n    content,\n    image,\n    title,\n  } = props\n  return (\n    <>\n      <Card\n        sx={{\n          width: WIDTH,\n          zIndex: (theme) => theme.zIndex.modal,\n        }}\n      >\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            height={`${HEIGHT}`}\n            width={`${WIDTH}`}\n            image={image}\n            title={title}\n          />\n          <CardContent>\n            <Typography\n              gutterBottom\n              variant=\"h5\"\n              component=\"h2\"\n            >\n              {title}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n            >\n              {content}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        {/*\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions> */}\n      </Card>\n    </>\n  //   <Paper\n  //   sx={{\n  //     width: { sx: '8vw', md: '50vw' },\n  //     display: 'flex',\n  //     padding: 10,\n  //     flexDirection: 'column',\n  //   }}\n  // >\n  //   <Typography variant=\"h1\">\n  //     {info.title}\n  //   </Typography>\n  //   <img\n  //     src={info.image}\n  //     width={250}\n  //     height={250}\n  //     alt={label}\n  //   />\n  //   <Typography\n  //     variant=\"body1\"\n  //   >\n  //     {info.content}\n  //   </Typography>\n  // </Paper>\n  )\n}\nexport const getFormProps = () => ({\n  schema: {\n    title: 'Layout',\n    properties: {\n      name: {\n        type: 'string',\n        enum: LAYOUT_NAMES,\n      },\n      animationDuration: {\n        type: 'number',\n        minimum: 0,\n        maximum: 10000,\n      },\n      refresh: {\n        type: 'number',\n        minimum: 0,\n        maximum: 100,\n      },\n      maxIterations: {\n        type: 'number',\n        minimum: 0,\n        maximum: 1000,\n      },\n      maxSimulationTime: {\n        type: 'number',\n        minimum: 0,\n        maximum: 1000,\n      },\n    },\n  },\n  uiSchema: {\n    name: {\n      'ui:field': (props: any) => {\n        const {\n          schema,\n          formData,\n        } = props\n        return (\n          <LayoutNameSelect\n            {...props}\n            value={formData}\n            options={{\n              enumOptions: schema.enum.map(\n                (value: string) => ({\n                  label: value,\n                  value,\n                }),\n              ),\n            }}\n          />\n        )\n      },\n    },\n  },\n}) as const\n","import {\n  Box, Button, Popover,\n  Backdrop,\n  Portal,\n} from '@mui/material'\nimport Form from '@rjsf/material-ui'\nimport { EVENT } from '@constants'\nimport { OnEventLite } from '@type'\nimport { useDisclosure } from 'colay-ui'\nimport React from 'react'\nimport {\n  getFormProps,\n  WIDTH,\n} from './getFormProps'\n\ntype LayoutOptionsValue = {\n  name?: string;\n  animationDuration?: number;\n  refresh? : number;\n  maxIterations? : number;\n  maxSimulationTime? : number;\n}\nexport type LayoutOptionsProps = {\n  layout?: LayoutOptionsValue;\n  schema?: any;\n  onEvent: OnEventLite;\n}\n\nexport const LayoutOptions = (props: LayoutOptionsProps) => {\n  const {\n    layout = {},\n    onEvent,\n    schema,\n  } = props\n  const {\n    anchorEl,\n    isOpen,\n    onClose,\n    onOpen,\n  } = useDisclosure({})\n  const onSubmitCallback = React.useCallback((e) => {\n    onEvent({\n      type: EVENT.LAYOUT_CHANGED,\n      payload: {\n        form: e,\n        value: e.formData,\n      },\n    })\n    onClose()\n  }, [onEvent])\n  return (\n    <Box>\n      <Button\n        // @ts-ignore\n        onClick={onOpen}\n        sx={{\n          color: (theme) => theme.palette.text.secondary,\n        }}\n      >\n        {layout.name ?? 'Select Layout'}\n      </Button>\n      {/* <Popover\n        open={isOpen}\n        anchorEl={anchorEl}\n        PaperProps={{\n          style: {\n            width: '100%',\n            height: '100%',\n            top: 0,\n            left: 0,\n            position: 'absolute',\n            backgroundColor: 'rgba(0,0,0,0.4)',\n            zIndex: 100,\n          },\n        }}\n      /> */}\n      <Popover\n        // id={id}\n        open={isOpen}\n        anchorEl={anchorEl}\n        onClose={onClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Portal>\n          <Backdrop\n            open\n            sx={{\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              zIndex: (theme) => theme.zIndex.drawer,\n              width: '100vw',\n              height: '100vw',\n            }}\n          />\n        </Portal>\n        <Box\n          sx={{\n            width: WIDTH,\n            padding: 2,\n          }}\n        >\n          <Form\n            {...getFormProps()}\n            {...(schema ? { schema } : {})}\n            // extraData={[layout]}\n            formData={{\n              name: layout.name,\n              animationDuration: layout.animationDuration,\n              refresh: layout.refresh,\n              maxIterations: layout.maxIterations,\n              maxSimulationTime: layout.maxSimulationTime,\n            }}\n            onSubmit={onSubmitCallback}\n          />\n        </Box>\n      </Popover>\n\n    </Box>\n  )\n}\n","import {\n  Icon,\n} from '@components/Icon'\nimport { EDITOR_MODE, EVENT } from '@constants'\nimport { useGraphEditor } from '@hooks'\nimport {\n  Box, Button, FormControl, IconButton, InputLabel, Menu,\n  MenuItem, Select, useTheme, SelectProps,\n} from '@mui/material'\nimport {\n  EditorMode, OnEventLite,\n} from '@type'\nimport { readTextFile } from '@utils'\nimport DocumentPicker from '@utils/DocumentPicker'\nimport { useAnimation, useDisclosure, wrapComponent } from 'colay-ui'\nimport { Recorder } from 'colay-ui/components/Recorder'\n// import Form from 'unitx-ui/components/Form'\nimport * as R from 'colay/ramda'\nimport React from 'react'\nimport { LayoutOptions } from './LayoutOptions'\n// export const ACTION = {\n//   EXPORT_DATA: 'EXPORT_DATA',\n// }\ntype ActionOption = {\n  visible?: boolean;\n}\n\nexport type ActionBarProps = {\n  renderMoreAction?: () => React.ReactElement;\n  left?: React.FC;\n  right?: React.FC;\n  isOpen?: boolean;\n  autoOpen?: boolean;\n  mode?: EditorMode;\n  layoutName?: string;\n  theming?: {\n    options?: {\n      name: string;\n      value: string;\n    }[];\n    value?: string;\n  }\n  recording?: boolean;\n  eventRecording?: boolean;\n  actions?: {\n    add: ActionOption;\n    recordEvents: ActionOption;\n    delete: ActionOption;\n    // record: { visible: boolean; };\n    options: {\n      actions: { import: ActionOption };\n    };\n    layout: ActionOption;\n  };\n  onAction: (action: { type: string; value?: any }) => void;\n}\n\nconst DEFAULT_ACTIONS = {\n  add: { visible: true },\n  delete: { visible: true },\n  recordEvents: { visible: true },\n  options: {\n    actions: { import: { visible: true } },\n  },\n  layout: { visible: true },\n}\nconst RECORDING_STATUS_MAP = {\n  START: 'START',\n  STOP: 'STOP',\n  RECORDING: 'RECORDING',\n  IDLE: 'IDLE',\n}\n\nconst HEIGHT = 40\n// const AnimatedSurface = animated(Box)\n\nconst ActionBarElement = (props: ActionBarProps) => {\n  const {\n    renderMoreAction,\n    isOpen = false,\n    autoOpen = false,\n    recording = false,\n    eventRecording = false,\n    // recordingActions = false,\n    onAction,\n    left: LeftComponent,\n    right: RightComponent,\n    theming = {\n      options: [\n        { name: 'Default', value: 'Default' },\n        { name: 'Dark', value: 'Dark' },\n      ],\n      value: 'Default',\n    },\n  } = props\n  const [\n    {\n      onEvent,\n      graphEditorRef,\n      mode,\n      graphConfig,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      onEvent: editor.onEvent,\n      graphEditorRef: editor.graphEditorRef,\n      mode: editor.mode,\n      graphConfig: editor.graphConfig,\n    }),\n  )\n  const {\n    style: animationStyle,\n    ref: animationRef,\n  } = useAnimation({\n    from: {\n      bottom: -HEIGHT,\n    },\n    to: {\n      bottom: 0,\n    },\n    autoPlay: false,\n  })\n  // const initialized = React.useRef(false)\n  React.useEffect(() => {\n    animationRef.current.play(isOpen)\n  }, [animationRef.current, isOpen])\n  const theme = useTheme()\n  const recordingRef = React.useRef(\n    RECORDING_STATUS_MAP.IDLE,\n  )\n  React.useMemo(() => {\n    switch (recordingRef.current) {\n      case RECORDING_STATUS_MAP.IDLE:\n        recordingRef.current = recording ? RECORDING_STATUS_MAP.START : RECORDING_STATUS_MAP.IDLE\n        break\n      case RECORDING_STATUS_MAP.START:\n        recordingRef.current = recording\n          ? RECORDING_STATUS_MAP.RECORDING\n          : RECORDING_STATUS_MAP.STOP\n        break\n      case RECORDING_STATUS_MAP.RECORDING:\n        recordingRef.current = recording\n          ? RECORDING_STATUS_MAP.RECORDING\n          : RECORDING_STATUS_MAP.STOP\n        break\n      case RECORDING_STATUS_MAP.STOP:\n        recordingRef.current = recording ? RECORDING_STATUS_MAP.START : RECORDING_STATUS_MAP.IDLE\n        break\n\n      default:\n        break\n    }\n  }, [recording])\n  // React.useEffect(() => {\n  //   animationRef?.current?.start()\n  // }, [])\n  const actions = R.mergeDeepRight(DEFAULT_ACTIONS, props.actions ?? {})\n  return (\n    <Box\n      style={{\n        position: 'absolute',\n        width: '100%',\n        height: HEIGHT,\n        left: 0,\n        flexDirection: 'row',\n        display: 'flex',\n        justifyContent: 'space-between',\n        // @ts-ignore\n        backgroundColor: theme.palette.background.paper,\n        ...animationStyle,\n      }}\n    >\n      {LeftComponent && <LeftComponent />}\n      <Box\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          display: 'flex',\n          height: HEIGHT,\n          // width: '100%',\n        }}\n      >\n        {\n          actions.add.visible && (\n          <Button\n            style={styles.button}\n            startIcon={(\n              <Icon name=\"add_circle\" />\n)}\n            onClick={() => onEvent({\n              type: EVENT.MODE_CHANGED,\n              payload: {\n                value: [\n                  EDITOR_MODE.ADD,\n                  EDITOR_MODE.CONTINUES_ADD,\n                  // @ts-ignore\n                ].includes(mode)\n                  ? EDITOR_MODE.DEFAULT\n                  : EDITOR_MODE.ADD,\n              },\n            })}\n            variant={EDITOR_MODE.CONTINUES_ADD === mode ? 'contained' : 'outlined'}\n            color={[\n              EDITOR_MODE.ADD,\n              EDITOR_MODE.CONTINUES_ADD,\n              // @ts-ignore\n            ].includes(mode) ? 'secondary' : 'primary'}\n            onDoubleClick={() => onEvent({\n              type: EVENT.MODE_CHANGED,\n              payload: { value: EDITOR_MODE.CONTINUES_ADD },\n            })}\n          >\n            Add\n          </Button>\n          )\n        }\n        {\n          actions.delete.visible && (\n          <Button\n            style={styles.button}\n            startIcon={(\n              <Icon name=\"delete_rounded\" />\n            )}\n            color={[\n              EDITOR_MODE.DELETE,\n              EDITOR_MODE.CONTINUES_DELETE,\n              // @ts-ignore\n            ].includes(mode)\n              ? 'primary'\n              : 'secondary'}\n            variant={EDITOR_MODE.CONTINUES_DELETE === mode ? 'contained' : 'outlined'}\n            onClick={() => onEvent({\n              type: EVENT.MODE_CHANGED,\n              payload: {\n                value: [\n                  EDITOR_MODE.DELETE,\n                  EDITOR_MODE.CONTINUES_DELETE,\n                // @ts-ignore\n                ].includes(mode)\n                  ? EDITOR_MODE.DEFAULT\n                  : EDITOR_MODE.DELETE,\n              },\n            })}\n            onDoubleClick={() => onEvent({\n              type: EVENT.MODE_CHANGED,\n              payload: { value: EDITOR_MODE.CONTINUES_DELETE },\n            })}\n          >\n            Delete\n          </Button>\n          )\n        }\n        {\n          actions.layout.visible && (\n          <LayoutOptions\n            layout={graphConfig?.layout}\n            onEvent={onEvent}\n            {...actions.layout}\n          />\n          )\n        }\n        {\n          actions.recordEvents.visible && (\n          <IconButton\n            onClick={() => onEvent({ type: EVENT.TOGGLE_RECORD_EVENTS })}\n          >\n            <Icon\n              name=\"addjust\"\n              color={!eventRecording ? 'inherit' : 'error'}\n            />\n          </IconButton>\n          )\n        }\n        <Recorder\n          // @ts-ignore\n          getStream={() => graphEditorRef.current.app.renderer.view.captureStream(25)}\n          render={({\n            startRecording,\n            stopRecording,\n            status,\n          }) => {\n            if (recordingRef.current === RECORDING_STATUS_MAP.START) {\n              recordingRef.current = RECORDING_STATUS_MAP.RECORDING\n              startRecording()\n            }\n            if (recordingRef.current === RECORDING_STATUS_MAP.STOP) {\n              recordingRef.current = RECORDING_STATUS_MAP.IDLE\n              stopRecording()\n            }\n            return (\n              <IconButton\n                onClick={() => onEvent({ type: EVENT.TOGGLE_RECORD })}\n              >\n                <Icon\n                  name=\"videocam\"\n                  color={status !== 'recording' ? 'inherit' : 'error'}\n                />\n              </IconButton>\n            )\n          }}\n          onStop={(_, blob) => {\n            onEvent({\n              type: EVENT.RECORD_FINISHED,\n              payload: { value: blob },\n            })\n          }}\n        />\n        <MoreOptions\n          renderMoreAction={renderMoreAction}\n          theming={theming}\n          onEvent={onEvent}\n          onAction={onAction}\n        />\n      </Box>\n      {RightComponent && <RightComponent />}\n      {\n        !autoOpen && (\n          <IconButton\n            style={styles.icon}\n            onClick={() => {\n              onEvent({\n                type: EVENT.TOGGLE_ACTION_BAR,\n                avoidHistoryRecording: true,\n              })\n            }}\n          >\n            <Icon\n              name=\"build_circle_outlined\"\n            />\n          </IconButton>\n        )\n      }\n\n    </Box>\n  )\n}\ntype MoreOptionsProps = {\n  onEvent: OnEventLite;\n} & Pick<ActionBarProps, 'renderMoreAction' | 'onAction' | 'theming'>\n\nconst OPTIONS = {\n  Import: 'Import',\n  Export: 'Export',\n  ImportEvents: 'Import Events',\n} as const\nconst MoreOptions = (props: MoreOptionsProps) => {\n  const {\n    renderMoreAction = () => <Box />,\n    onEvent,\n    onAction,\n    theming,\n  } = props\n  const {\n    anchorEl,\n    isOpen,\n    onClose,\n    onOpen,\n  } = useDisclosure({})\n  const handleMenuItemClick = async (event: React.MouseEvent<HTMLLIElement>, index: number) => {\n    onClose()\n    const action = Object.values(OPTIONS)[index]\n    switch (action) {\n      case OPTIONS.Import: {\n        const result = await DocumentPicker.getDocumentAsync({ type: 'application/json' })\n        if (result.type === 'success') {\n          const fileText = await readTextFile(result.file!)\n          onEvent({\n            type: EVENT.IMPORT_DATA,\n            payload: { value: JSON.parse(fileText) },\n          })\n        }\n        break\n      }\n      case OPTIONS.ImportEvents: {\n        const result = await DocumentPicker.getDocumentAsync({ type: 'application/json' })\n        if (result.type === 'success') {\n          const fileText = await readTextFile(result.file!)\n          onEvent({\n            type: EVENT.IMPORT_EVENTS,\n            payload: { value: JSON.parse(fileText) },\n          })\n        }\n        break\n      }\n      case OPTIONS.Export:\n        onAction({ type: EVENT.EXPORT_DATA })\n        break\n\n      default:\n        break\n    }\n  }\n\n  const handleThemeChange: SelectProps['onChange'] = (e) => {\n    onAction({ type: EVENT.CHANGE_THEME, value: e.target.value })\n    onClose()\n  }\n\n  return (\n    <>\n      <IconButton\n        onClick={onOpen}\n      >\n        <Icon name=\"more_vert\" />\n      </IconButton>\n      <Menu\n        anchorEl={anchorEl}\n        open={isOpen}\n        onClose={onClose}\n        style={{ width: 400 }}\n      >\n        {Object.values(OPTIONS).map((option, index) => (\n          <MenuItem\n            key={option}\n            // selected={index === selectedIndex}\n            onClick={(event) => handleMenuItemClick(event, index)}\n          >\n            {option}\n          </MenuItem>\n        ))}\n        <FormControl fullWidth>\n          <InputLabel id=\"theme-select-label\">Theme</InputLabel>\n          <Select\n            labelId=\"theme-select-label\"\n            onChange={handleThemeChange}\n            value={theming?.value}\n          >\n            {theming?.options?.map((themeOption) => (\n              <MenuItem\n                key={themeOption.value}\n                value={themeOption.value}\n              >\n                {themeOption.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        {renderMoreAction()}\n      </Menu>\n    </>\n  )\n}\n\nexport const ActionBar = wrapComponent<ActionBarProps>(ActionBarElement, {})\n\nconst styles = {\n  icon: {\n    width: 24,\n    height: 24,\n    position: 'absolute',\n    left: 2,\n    top: -26,\n    fontSize: 24,\n  },\n  button: {\n    marginRight: 10,\n  },\n} as const\n","import React from 'react'\nimport {\n  pauseEvent,\n} from '@utils'\n\nexport const useDrag = (options) => {\n  const {\n    ref,\n    onDrag,\n  } = options\n\n  const resizer = React.useCallback((event) => {\n    const e = event.nativeEvent\n    const prevX = e.x\n    const prevY = e.y\n    const panelRect = ref.current.getBoundingClientRect()\n    function mousemove(e) {\n      pauseEvent(e)\n      const newX = prevX - e.x\n      const newY = prevY - e.y\n      onDrag({ x: newX, y: newY }, panelRect)\n    }\n\n    function mouseup() {\n      window.removeEventListener('mousemove', mousemove)\n      window.removeEventListener('mouseup', mouseup)\n    }\n    window.addEventListener('mousemove', mousemove)\n    window.addEventListener('mouseup', mouseup)\n  }, [])\n\n  return resizer\n}\n","import React from 'react'\nimport { ReactHTMLElementProps } from 'colay-ui/type'\n\nexport type ResizeDividerProps = ReactHTMLElementProps<HTMLDivElement>\nexport const ResizeDivider = (props: ResizeDividerProps) => {\n  const [state, setState] = React.useState({\n    onHover: false,\n  })\n  return (\n    <div\n      style={{\n        width: state.onHover ? 4 : 2,\n        height: '100%',\n        backgroundColor: 'black',\n        cursor: 'col-resize',\n        ...(props?.style ?? {}),\n      }}\n      onMouseEnter={() => setState({ ...state, onHover: true })}\n      onMouseLeave={() => setState({ ...state, onHover: false })}\n      {...props}\n    />\n  )\n}\n","import React from 'react'\nimport { JsonEditor as Editor } from 'jsoneditor-react'\nimport 'jsoneditor-react/es/editor.min.css'\nimport ace from 'brace'\nimport 'brace/mode/json'\nimport 'brace/theme/github'\nimport { useGraphEditor } from '@hooks'\nimport { EVENT } from '@constants'\n\nexport type JSONEditorProps = {\n}\n\nexport const JSONEditor = (props: JSONEditorProps) => {\n  const [\n    {\n      item,\n      onEvent,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      item: editor.selectedItem,\n      onEvent: editor.onEvent,\n    }),\n  )\n  return (\n    <>\n      <Editor\n        value={item?.data}\n        onChange={(newData: any) => {\n          onEvent({\n            type: EVENT.UPDATE_DATA,\n            payload: {\n              value: newData,\n            },\n          })\n        }}\n        ace={ace}\n        theme=\"ace/theme/github\"\n      />\n    </>\n  )\n}\n","import { Icon } from '@components/Icon'\nimport {\n  IconButton,\n  Typography,\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n} from '@mui/material'\nimport { EVENT } from '@constants'\nimport {\n  JSONViewer,\n} from 'colay-ui'\nimport { View } from 'colay-ui/components/View'\nimport React from 'react'\nimport { OnEventLite } from '@type'\nimport * as R from 'colay/ramda'\n\nexport type GlobalNetworkStatisticsProps = {\n  data?: any;\n  onEvent: OnEventLite;\n}\n\nexport const GlobalNetworkStatistics = (props: GlobalNetworkStatisticsProps) => {\n  const {\n    data,\n    onEvent,\n  } = props\n  return (\n    <Accordion\n      defaultExpanded\n    >\n      <AccordionSummary\n        aria-controls=\"panel1a-content\"\n      >\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: '100%',\n          }}\n        >\n          <View\n            style={{\n              flexDirection: 'row',\n              alignItems: 'center',\n            }}\n          >\n            <Typography\n              variant=\"h6\"\n            >\n              Global Network Statistics\n            </Typography>\n          </View>\n          <View\n            style={{\n              // alignItems: 'space-between',\n              flexDirection: 'row',\n            }}\n          >\n            <IconButton\n              onClick={(e) => {\n                e.stopPropagation()\n                onEvent({\n                  type: EVENT.CALCULATE_GLOBAL_NETWORK_STATISTICS,\n                })\n              }}\n            >\n              <Icon\n                name=\"assessment\"\n              />\n            </IconButton>\n          </View>\n        </View>\n      </AccordionSummary>\n      <AccordionDetails>\n        <JSONViewer\n          data={data}\n          sort={-1}\n          left={({ collapsed, onCollapse, noChild }) => (\n            <IconButton\n              size=\"small\"\n              sx={{ height: 24 }}\n              disabled={noChild}\n              onClick={() => onCollapse(!collapsed)}\n            >\n              <Icon\n                style={{\n                  fontSize: noChild ? 12 : 24,\n                }}\n                name={\n                        noChild\n                          ? 'fiber_manual_record'\n                          : collapsed\n                            ? 'arrow_drop_down_rounded'\n                            : 'arrow_drop_up_rounded'\n  }\n              />\n            </IconButton>\n          )}\n          renderItem={({ item: { key, value } }) => (\n            <View\n              style={{\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Typography\n                variant=\"subtitle1\"\n                style={{ alignContent: 'center' }}\n              >\n                {`${key}${value ? ': ' : ''}`}\n              </Typography>\n              {!R.isNil(value)\n                ? (\n                  <Typography\n                    variant=\"subtitle1\"\n                    style={{ alignContent: 'center' }}\n                  >\n                    {value}\n                  </Typography>\n                )\n                : null}\n            </View>\n          )}\n        />\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import { Icon } from '@components/Icon'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary, IconButton,\n  Typography,\n} from '@mui/material'\nimport { OnEventLite } from '@type'\nimport {\n  JSONViewer,\n} from 'colay-ui'\nimport { View } from 'colay-ui/components/View'\nimport React from 'react'\nimport * as R from 'colay/ramda'\n\nexport type LocalNetworkStatisticsProps = {\n  data?: any;\n  onEvent: OnEventLite;\n}\n\nexport const LocalNetworkStatistics = (props: LocalNetworkStatisticsProps) => {\n  const {\n    data,\n  } = props\n  return (\n    <Accordion\n      defaultExpanded\n    >\n      <AccordionSummary\n        aria-controls=\"panel1a-content\"\n      >\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: '100%',\n          }}\n        >\n          <View\n            style={{\n              flexDirection: 'row',\n              alignItems: 'center',\n            }}\n          >\n            <Typography\n              variant=\"h6\"\n            >\n              Local Network Statistics\n            </Typography>\n          </View>\n          <View\n            style={{\n              // alignItems: 'space-between',\n              flexDirection: 'row',\n            }}\n          >\n            {/* <IconButton\n              onClick={(e) => {\n                e.stopPropagation()\n                onEvent({\n                  type: EVENT.CALCULATE_LOCAL_NETWORK_STATISTICS,\n                })\n              }}\n            >\n              <Icon\n                name=\"assessment\"\n              />\n            </IconButton> */}\n          </View>\n        </View>\n      </AccordionSummary>\n      <AccordionDetails>\n        <JSONViewer\n          data={data}\n          sort={-1}\n          left={({ collapsed, onCollapse, noChild }) => (\n            <IconButton\n              size=\"small\"\n              sx={{ height: 24 }}\n              disabled={noChild}\n              onClick={() => onCollapse(!collapsed)}\n            >\n              <Icon\n                style={{\n                  fontSize: noChild ? 12 : 24,\n                }}\n                name={\n                        noChild\n                          ? 'fiber_manual_record'\n                          : collapsed\n                            ? 'arrow_drop_down_rounded'\n                            : 'arrow_drop_up_rounded'\n  }\n              />\n            </IconButton>\n          )}\n          renderItem={({ item: { key, value } }) => (\n            <View\n              style={{\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Typography\n                variant=\"subtitle1\"\n                style={{ alignContent: 'center' }}\n              >\n                {`${key}${value ? ': ' : ''}`}\n              </Typography>\n              {!R.isNil(value)\n                ? (\n                  <Typography\n                    variant=\"subtitle1\"\n                    style={{ alignContent: 'center' }}\n                  >\n                    {value}\n                  </Typography>\n                )\n                : null}\n            </View>\n          )}\n        />\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import React from 'react'\nimport {\n  Typography,\n  AccordionDetails,\n  Accordion,\n  AccordionSummary,\n  ListItem,\n  List,\n  ListItemText,\n  ListItemIcon,\n} from '@mui/material'\nimport {\n  Icon,\n} from '@components/Icon'\nimport {\n  useGraphEditor,\n} from '@hooks'\nimport {\n  EVENT,\n} from '@constants'\nimport {\n  getItemFromElement,\n} from '@utils'\n\nexport type ConnectedElementsProps = {\n\n}\n\nexport const ConnectedElements = () => {\n  const [\n    {\n      // item,\n      selectedElement,\n      onEvent,\n    },\n  ] = useGraphEditor(\n    (editor) => {\n      const {\n        selectedElement,\n        selectedItem,\n        onEvent,\n      } = editor\n      return {\n        item: editor.selectedItem,\n        selectedElement,\n        onEvent,\n      }\n    },\n  )\n  if (!selectedElement) {\n    return null\n  }\n  const isNode = selectedElement.isNode()\n  let itemList\n  if (isNode) {\n    itemList = selectedElement.connectedEdges().toArray().map(\n      getItemFromElement,\n    )\n  } else {\n    itemList = [selectedElement.source(), selectedElement.target()].map(\n      getItemFromElement,\n    )\n  }\n  return (\n    <Accordion\n      defaultExpanded\n    >\n      <AccordionSummary>\n        <Typography\n          variant=\"h6\"\n        >\n          {`Connected ${isNode ? 'Edges' : 'Nodes'}`}\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <List\n          dense\n        >\n          {\n        itemList.map((item) => (\n          <ListItem\n            key={item.id}\n            button\n            onClick={() => onEvent({\n              type: EVENT.ELEMENT_SELECTED_WITH_ZOOM,\n              payload: {\n                itemIds: [item.id],\n              },\n              avoidHistoryRecording: true,\n            })}\n          >\n            <ListItemIcon>\n              <Icon name=\"chevron_right\" />\n            </ListItemIcon>\n            <ListItemText primary={item.id} />\n          </ListItem>\n        ))\n      }\n        </List>\n      </AccordionDetails>\n    </Accordion>\n\n  )\n}\n","import { Icon } from '@components/Icon'\nimport { useGraphEditor } from '@hooks'\nimport {\n  Accordion, AccordionDetails,\n  AccordionSummary, Divider, IconButton, Paper, Typography,\n  Button,\n} from '@mui/material'\nimport { EVENT, SIDE_PANEL_DEFAULT_WIDTH } from '@constants'\nimport { EdgeElement } from '@type'\nimport {\n  JSONViewer,\n  useAnimation,\n} from 'colay-ui'\nimport { View } from 'colay-ui/components/View'\nimport * as R from 'colay/ramda'\nimport React from 'react'\n// import {\n//   DataEditor,\n// } from '../DataEditor'\nimport { useDrag } from '@hooks/useDrag'\nimport { ResizeDivider } from '@components/ResizeDivider'\nimport { JSONEditor } from './JSONEditor'\nimport { GlobalNetworkStatistics } from './GlobalNetworkStatistics'\nimport { LocalNetworkStatistics } from './LocalNetworkStatistics'\nimport { ConnectedElements } from './ConnectedElements'\n\nexport type DataBarProps = {\n  editable?: boolean;\n  isOpen?: boolean;\n  header?: React.FC;\n  footer?: React.FC;\n  sort?: any;\n} // & Omit<DataEditorProps, 'data'>\n\nconst ICON_SIZE = 16\n\nexport const DataBar = (props: DataBarProps) => {\n  const {\n    editable = true,\n    isOpen = false,\n    sort = -1,\n    header: HeaderComponent,\n    footer: FooterComponent,\n    ...rest\n  } = props\n\n  const [\n    {\n      item,\n      onEvent,\n      networkStatistics,\n      globalLabel,\n      localLabel,\n      isGlobalLabelFirst,\n      selectedElement,\n    },\n  ] = useGraphEditor(\n    (editor) => {\n      const {\n        selectedElement,\n        selectedItem,\n        label,\n        localDataRef,\n        networkStatistics,\n      } = editor\n      const targetPath = selectedElement?.isNode() ? 'nodes' : 'edges'\n      return {\n        graphEditorConfig: editor.config,\n        item: editor.selectedItem,\n        localLabel: selectedElement && (label?.[targetPath][selectedItem?.id!]),\n        globalLabel: label?.global?.[targetPath],\n        isGlobalLabelFirst: label?.isGlobalFirst?.[targetPath],\n        onEvent: editor.onEvent,\n        networkStatistics: {\n          local: localDataRef.current!.networkStatistics!.local?.[selectedItem?.id!],\n          global: networkStatistics?.global?.[selectedItem?.id!],\n        },\n        selectedElement,\n      }\n    },\n  )\n  const localDataRef = React.useRef({\n    width: SIDE_PANEL_DEFAULT_WIDTH,\n  })\n  const {\n    style: animationStyle,\n    ref: animationRef,\n  } = useAnimation({\n    from: {\n      width: 0,\n    },\n    to: {\n      width: localDataRef.current.width,\n    },\n    autoPlay: false,\n  }, [localDataRef.current.width])\n  const containerRef = React.useRef()\n  React.useEffect(() => {\n    animationRef.current?.play?.(isOpen)\n  }, [animationRef, isOpen])\n  const hasStatistics = Object.values(networkStatistics).find((val) => val)\n  const [state, setState] = React.useState({\n    isEditing: false,\n  })\n  const onMouseDown = useDrag({\n    ref: containerRef,\n    onDrag: ({ x, y }, rect) => {\n      localDataRef.current.width = rect.width + x\n      const target = containerRef.current\n      target.style.width = `${localDataRef.current.width}px`\n    },\n  })\n  return (\n    <Paper\n      ref={containerRef}\n      style={{\n        position: 'absolute',\n        height: '100%',\n        top: 0,\n        display: 'flex',\n        flexDirection: 'row',\n        right: 0,\n        // width: animationStyle.right,\n        ...animationStyle,\n      }}\n    >\n      <ResizeDivider\n        onMouseDown={onMouseDown}\n      />\n      <View\n        style={{\n          height: '100%',\n          flex: 1,\n          // @ts-ignore\n          overflowY: 'auto',\n          overflowX: 'hidden',\n        }}\n      >\n        {HeaderComponent && <HeaderComponent />}\n        {item && (\n        <Accordion\n          defaultExpanded\n        >\n          <AccordionSummary>\n            <Typography\n              variant=\"h6\"\n              style={{\n                wordBreak: 'break-word',\n                padding: 2,\n              }}\n            >\n              {` id: ${item?.id}`}\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <View style={{\n              width: '100%',\n              height: hasStatistics ? '70%' : '100%',\n              // wordWrap: 'break-word',\n              // flexWrap: 'wrap',\n            }}\n            >\n              {/* {\n                isEdge && <EdgeElementSummary element={selectedElement} />\n              } */}\n              {\n        editable && item?.data\n          && (\n            // <DataEditor\n            //   data={item.data}\n            //   onEvent={onEvent}\n            //   {...rest}\n            // />\n            <View\n              style={{\n                flexDirection: 'row',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                onClick={() => setState({ ...state, isEditing: !state.isEditing })}\n              >\n                {state.isEditing ? 'Done' : 'Edit'}\n\n              </Button>\n            </View>\n          )\n      }\n              {\n        state.isEditing\n          ? (\n            <JSONEditor />\n          )\n          : (\n            <JSONViewer\n              extraData={[localLabel, globalLabel]}\n              data={item?.data}\n              sort={sort}\n              left={(props) => {\n                const {\n                  item: { path },\n                  collapsed, onCollapse, noChild,\n                } = props\n                const isLocalLabel = R.equals(path, localLabel)\n                const isGlobalLabel = R.equals(path, globalLabel)\n                return (\n                  <View\n                    style={{\n                      flexDirection: 'row',\n                      alignItems: 'center',\n                      height: 32,\n                    }}\n                  >\n\n                    <IconButton\n                      size=\"small\"\n                      sx={{ height: ICON_SIZE }}\n                      onClick={() => onEvent(\n                        isLocalLabel\n                          ? {\n                            type: EVENT.CLEAR_NODE_LOCAL_LABEL,\n                          }\n                          : {\n                            type: EVENT.SET_NODE_LOCAL_LABEL,\n                            payload: {\n                              value: path,\n                            },\n                          },\n                      )}\n                    >\n                      <Icon\n                        style={{\n                          fontSize: ICON_SIZE,\n                          textDecoration: !isGlobalLabelFirst ? 'underline' : '',\n                        }}\n                        name={\n                          isLocalLabel ? 'bookmark' : 'bookmark_border'\n                        }\n                      />\n                    </IconButton>\n                    <IconButton\n                      size=\"small\"\n                      sx={{ height: ICON_SIZE }}\n                      onClick={() => onEvent(\n                        isGlobalLabel\n                          ? {\n                            type: EVENT.CLEAR_NODE_GLOBAL_LABEL,\n                          }\n                          : {\n                            type: EVENT.SET_NODE_GLOBAL_LABEL,\n                            payload: {\n                              value: path,\n                            },\n                          },\n                      )}\n                    >\n                      <Icon\n                        style={{\n                          fontSize: ICON_SIZE,\n                          textDecoration: isGlobalLabelFirst ? 'underline' : '',\n                        }}\n                        name={\n                          isGlobalLabel ? 'bookmarks' : 'bookmark_border'\n  }\n                      />\n                    </IconButton>\n                    <IconButton\n                      size=\"small\"\n                      sx={{ height: ICON_SIZE }}\n                      disabled={noChild}\n                      onClick={() => onCollapse(!collapsed)}\n                    >\n                      <Icon\n                        style={{\n                          fontSize: ICON_SIZE, // noChild ? 12 : ICON_SIZE,\n                        }}\n                        name={\n                      noChild\n                        ? 'fiber_manual_record'\n                        : collapsed\n                          ? 'arrow_drop_down_rounded'\n                          : 'arrow_drop_up_rounded'\n}\n                      />\n                    </IconButton>\n                  </View>\n                )\n              }}\n              renderItem={({ item: { key, value } }) => (\n                <View\n                  style={{\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    width: '100%',\n                    alignItems: 'center',\n                  }}\n                >\n                  <Typography\n                    variant=\"subtitle1\"\n                    style={{\n                      alignContent: 'center',\n                      flexDirection: 'row',\n                      width: '100%',\n                      wordWrap: 'break-word',\n                    }}\n                  >\n                    {`${key}${value ? ': ' : ''}`}\n                    {value\n                      ? (\n                        <Typography\n                          variant=\"subtitle1\"\n                          component={isValidURL(value) ? 'a' : 'span'}\n                          align=\"center\"\n                          href={value}\n                          target=\"_blank\"\n                          style={{ wordWrap: 'break-word' }}\n                        >\n                          {value}\n                        </Typography>\n                      )\n                      : null}\n                  </Typography>\n\n                </View>\n              )}\n            />\n          )\n      }\n\n            </View>\n          </AccordionDetails>\n        </Accordion>\n\n        )}\n        <Divider />\n        <ConnectedElements />\n        {\n        hasStatistics && (\n          <View\n            style={{\n              height: '30%',\n              width: '100%',\n            }}\n          >\n            {\n          networkStatistics.global && (\n            <GlobalNetworkStatistics\n              data={networkStatistics.global}\n              onEvent={onEvent}\n            />\n          )\n        }\n            <Divider />\n            {\n          networkStatistics.local && (\n            <LocalNetworkStatistics\n              data={networkStatistics.local}\n              onEvent={onEvent}\n            />\n          )\n        }\n          </View>\n        )\n      }\n        {FooterComponent && <FooterComponent />}\n      </View>\n\n      <IconButton\n        style={{\n          position: 'absolute',\n          left: -34,\n          top: 0,\n          fontSize: 24,\n        }}\n        onClick={() => {\n          onEvent({\n            type: EVENT.TOGGLE_DATA_BAR,\n            avoidHistoryRecording: true,\n          })\n        }}\n      >\n        <Icon\n          name=\"info_outlined\"\n        />\n      </IconButton>\n    </Paper>\n  )\n}\n\ntype EdgeElementSummaryProps = {\n  element: EdgeElement;\n}\nconst EdgeElementSummary = (props: EdgeElementSummaryProps) => {\n  const {\n    element,\n  } = props\n  const sourceId = element.source().id()\n  const targetId = element.target().id()\n  return (\n    <View>\n      <View style={{ flexDirection: 'row' }}>\n        <Typography variant=\"subtitle1\">source:</Typography>\n        <Typography>{` ${sourceId}`}</Typography>\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        <Typography variant=\"subtitle1\">target:</Typography>\n        <Typography>{` ${targetId}`}</Typography>\n      </View>\n    </View>\n  )\n}\n\nexport const isValidURL = (value: string) => {\n  let url\n  try {\n    url = new URL(value)\n  } catch (_) {\n    return false\n  }\n  return url.protocol === 'http:' || url.protocol === 'https:'\n}\n","import React from 'react'\nimport {\n  Modal,\n  Button,\n  Paper,\n} from '@mui/material'\nimport { FormProps } from '@rjsf/core'\nimport Form from '@rjsf/material-ui'\nimport * as R from 'colay/ramda'\nimport {\n  useGraphEditor,\n} from '@hooks'\nimport {\n  EVENT,\n} from '@constants'\n// import {\n//   View,\n// } from 'colay-ui'\n\nexport type ModalComponentProps = {\n  isOpen?: boolean;\n  render?: () => React.ReactElement;\n  form?: FormProps<any>\n  onClose?: () => void\n}\n\nexport const ModalComponent = (props: ModalComponentProps) => {\n  const {\n    isOpen = false,\n    render,\n    form,\n    onClose,\n    name,\n  } = props\n  const Component = render\n  const [\n    {\n      onEvent,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      onEvent: editor.onEvent,\n    }),\n  )\n  const onCloseCallback = React.useCallback(() => {\n    onClose?.()\n    onEvent({\n      type: EVENT.CLOSE_MODAL,\n      payload: {\n        name,\n      },\n    })\n  }, [onClose])\n  return (\n    <Modal\n      open={isOpen}\n      onClose={onCloseCallback}\n      onBackdropClick={onCloseCallback}\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      {\n      form\n        ? (\n          <Paper\n            style={{\n              maxWidth: '80%',\n              maxHeight: '90%',\n              overflow: 'scroll',\n              padding: 2,\n            }}\n          >\n            <Form\n              {...form}\n              schema={R.omit(['title'])(form.schema)}\n            >\n              {\n              form.children ?? (\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n              >\n                Apply\n              </Button>\n              )\n}\n            </Form>\n          </Paper>\n        )\n        : (\n          <>\n            {render?.({})}\n          </>\n        )\n      }\n\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { getEventClientPosition } from '@utils'\n// import { Icon } from '@mui/material'\n\nexport type MouseIconProps = {\n  name?: string|null;\n  cursor?: boolean;\n}\n\nexport const MouseIcon = (props: MouseIconProps) => {\n  const {\n    name,\n    cursor = false,\n  } = props\n  const [, setState] = React.useState({\n    x: 0,\n    y: 0,\n  })\n  React.useEffect(() => {\n    const onMouseMove = (event: MouseEvent) => {\n      if (cursor) {\n        return\n      }\n      const position = getEventClientPosition(event)\n      setState({\n        x: position.x + 30,\n        y: position.y + 30,\n      })\n    }\n    document.addEventListener('mousemove', onMouseMove)\n    return () => {\n      document.removeEventListener('mousemove', onMouseMove)\n    }\n  }, [cursor])\n  React.useEffect(() => {\n    if (cursor) {\n      document.body.style.cursor = `url(${name}), auto`\n    }\n  }, [cursor, name])\n  return (\n    name && !cursor\n      ? (\n        <span>{name}</span>\n        // <Icon\n        //   style={{\n        //     position: 'absolute',\n        //     left: `${state.x}px`,\n        //     top: `${state.y}px`,\n        //   }}\n        // >\n        //   {name}\n        // </Icon>\n      )\n      : null\n  )\n}\n","import React from 'react'\nimport {\n  Modal,\n  Paper,\n  Typography,\n  Divider,\n  Slide,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Link,\n  Breadcrumbs,\n  Collapse,\n} from '@mui/material'\nimport { Icon } from '@components/Icon'\nimport { useGraphEditor } from '@hooks'\nimport { EVENT } from '@constants'\nimport { View, DataRender } from 'colay-ui'\nimport Form from '@rjsf/material-ui'\nimport ExpandLess from '@mui/icons-material/ExpandLess'\nimport ExpandMore from '@mui/icons-material/ExpandMore'\nimport * as R from 'colay/ramda'\n\ntype SidebarItemData = {\n  label: string;\n  items?: SidebarItemData[];\n  icon?: string;\n} | string\n\nexport type PreferencesModalProps = {\n  isOpen?: boolean;\n  sidebar?: SidebarItemData[];\n  components?: Record<string, React.ReactNode>;\n}\n\nexport const PreferencesModal = (props: PreferencesModalProps) => {\n  const {\n    isOpen = false,\n    sidebar = MOCK_SIDEBAR_DATA,\n    components = {},\n  } = props\n  const [\n    {\n      onEvent,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      onEvent: editor.onEvent,\n    }),\n  )\n  // @ts-ignore\n  const drawer = React.useMemo(() => createDrawer(sidebar), [sidebar, components])\n  return (\n    <Modal\n      open={isOpen}\n      onClose={() => onEvent({\n        type: EVENT.TOGGLE_PREFERENCES_MODAL,\n      })}\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Paper\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          width: '80vw',\n          height: '80vh',\n        }}\n      >\n        <View>\n          <Typography variant=\"h6\">Preferences</Typography>\n        </View>\n        <View\n          style={{\n            flexDirection: 'row',\n          }}\n        >\n          <View\n            style={{\n              // width: '30%',\n              marginRight: 4,\n              flexDirection: 'row',\n            }}\n          >\n            <Slide\n              in\n            >\n              {drawer}\n            </Slide>\n            <Divider\n              orientation=\"vertical\"\n              flexItem\n            />\n          </View>\n          <View>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n              <Link\n                color=\"inherit\"\n                href=\"/\"\n              >\n                General\n              </Link>\n              <Typography color=\"text.primary\">UI</Typography>\n            </Breadcrumbs>\n            <Form\n              schema={{\n                type: 'object',\n                required: [\n                  'historyTabVisible',\n                  'playlistTabVisible',\n                ],\n                properties: {\n                  labelTextSize: {\n                    type: 'number',\n                    title: 'Label Text Size',\n                  },\n                  historyTabVisible: {\n                    type: 'boolean',\n                    title: 'History Tab Visible',\n                  },\n                  playlistTabVisible: {\n                    type: 'boolean',\n                    title: 'Playlist Tab Visible',\n                  },\n                },\n              }}\n              uiSchema={{\n                'ui:options': {\n                  label: false,\n                },\n              }}\n              // onSubmit={onSubmitCallback}\n            />\n          </View>\n        </View>\n      </Paper>\n    </Modal>\n  )\n}\n\nconst createDrawer = (sidebar: SidebarItemData[]) => (\n  <div>\n    {/* <Toolbar /> */}\n    <Divider />\n    <List>\n      <DataRender\n      // @ts-ignore\n        data={sidebar}\n        accessor={['items']}\n        renderItem={(params) => {\n          const {\n            children,\n          } = params\n          const item = params.item as unknown as SidebarItemData\n          return (\n            <SidebarItem\n              item={item}\n            >\n              {children}\n            </SidebarItem>\n          )\n        }}\n      />\n    </List>\n  </div>\n)\n\ntype SidebarItemProps = {\n  item: SidebarItemData;\n  children: React.ReactNode;\n}\nconst SidebarItem = (props: SidebarItemProps) => {\n  const {\n    children,\n    item: propItem,\n  } = props\n  const [open, setOpen] = React.useState(false)\n  const handleClick = () => {\n    setOpen(!open)\n  }\n  const item = (R.is(String)(propItem) ? {\n    label: propItem,\n  } : propItem) as Exclude<SidebarItemData, string>\n  const hasChildren = !!item.items\n  return (\n    <>\n      <ListItem\n        button\n        onClick={handleClick}\n        selected={!hasChildren && open}\n      >\n        <ListItemIcon>\n          {item.icon}\n        </ListItemIcon>\n        <ListItemText primary={item.label} />\n        {hasChildren ? (open ? <ExpandLess /> : <ExpandMore />) : null}\n      </ListItem>\n      <Collapse\n        in={open}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List\n          component=\"div\"\n          disablePadding\n          sx={{ ml: 2 }}\n        >\n          {children}\n        </List>\n      </Collapse>\n    </>\n  )\n}\n\nconst MOCK_SIDEBAR_DATA = [\n  {\n    icon: <Icon name=\"settings\" />,\n    label: 'General',\n    items: [\n      'UI',\n    ],\n  },\n  {\n    icon: <Icon name=\"bookmark\" />,\n    label: 'Bookmarks',\n    items: [\n      {\n        icon: <Icon name=\"filter\" />,\n        label: 'Filter',\n        items: [\n          'History',\n        ],\n      },\n      'Text',\n    ],\n  },\n]\n","import {\n  Button,\n  CircularProgress, Modal,\n  Paper, Typography, CircularProgressProps,\n} from '@mui/material'\nimport { TimeoutManager } from '@utils/TimeoutManager'\nimport { View } from 'colay-ui'\nimport React from 'react'\n\ntype EventsModalProps = {\n  timeoutManager: TimeoutManager\n  onClose: () => void\n}\nexport const RecordedEventsModal = (props: EventsModalProps) => {\n  const {\n    timeoutManager,\n    onClose,\n  } = props\n  const isOpen = !timeoutManager.finished\n  const [state, setState] = React.useState({\n    alert: {\n      visible: false,\n    },\n  })\n  const currentTimer = timeoutManager.timers?.[timeoutManager.currentIndex]\n  const {\n    duration,\n    totalDuration,\n    currentIndex,\n    paused,\n    timeoutInstances,\n  } = timeoutManager\n  return (\n    <Modal\n      open={isOpen}\n    // onClose={onClose}\n      style={{\n        display: 'flex',\n        flexDirection: 'column-reverse',\n      }}\n      BackdropProps={{\n        style: {\n          backgroundColor: 'rgba(0, 0, 0, 0)',\n        },\n        onClick: () => {\n          setState({\n            ...state,\n            alert: {\n              ...state.alert,\n              visible: true,\n            },\n          })\n          setTimeout(() => {\n            setState({\n              ...state,\n              alert: {\n                ...state.alert,\n                visible: false,\n              },\n            })\n          }, 1500)\n        },\n      }}\n    >\n      <Paper style={{\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n      >\n        <View style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n        }}\n        >\n          <Typography variant=\"h6\">Play Events</Typography>\n          {state.alert.visible && (\n          <Typography\n            variant=\"h6\"\n            color=\"error\"\n          >\n            You cannot take action while the events are playing\n          </Typography>\n          )}\n        </View>\n\n        <View\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n        >\n          <View style={{ flexDirection: 'row' }}>\n            <Button\n              color={paused ? 'primary' : 'secondary'}\n              onClick={() => {\n                paused\n                  ? timeoutManager.start()\n                  : timeoutManager.pause()\n              }}\n            >\n              {paused ? 'Play' : 'Pause'}\n            </Button>\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                onClose()\n              }}\n            >\n              Close\n            </Button>\n          </View>\n          <Typography variant=\"subtitle1\">\n            {`Current Event: ${currentTimer?.type}`}\n          </Typography>\n          <View\n            style={{\n              flexDirection: 'row',\n              height: '100%',\n              alignItems: 'center',\n            }}\n          >\n            <Typography variant=\"subtitle2\">{`Events: ${currentIndex} / ${timeoutInstances.length}`}</Typography>\n            <CircularProgressWithLabel\n              value={\n            (duration / totalDuration) * 100\n          }\n            />\n          </View>\n\n        </View>\n      </Paper>\n    </Modal>\n  )\n}\n\nfunction CircularProgressWithLabel(props: CircularProgressProps) {\n  return (\n    <View>\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n      />\n      <View\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Typography\n          variant=\"caption\"\n          component=\"div\"\n          color=\"textSecondary\"\n        >\n          {`${Math.round(\n            props.value!,\n          )}%`}\n\n        </Typography>\n      </View>\n    </View>\n  )\n}\n\n// <View\n//   style={{\n//     width: 200,\n//   }}\n// >\n//   <Typography\n//     style={{\n//       left: '-100%',\n//       width: '200%',\n//       whiteSpace: 'nowrap',\n//       position: 'relative',\n//       overflow: 'hidden', /* Required to make ellipsis work */\n//       textOverflow: 'ellipsis',\n//       '-webkit-transition': 'left 3s, width 3s',\n//       '-moz-transition': 'left 3s, width 3s',\n//       transition: 'left 3s, width 3s',\n//     }}\n//   >\n//     {JSON.stringify(currentTimer?.data)}\n//   </Typography>\n// </View>\n","import React from 'react'\nimport * as R from 'colay/ramda'\nimport {\n  DragDropContext,\n  Droppable, Draggable,\n  DropResult,\n  DraggableProvided,\n  DraggableStateSnapshot,\n  DraggableRubric,\n  DroppableProvided,\n  DroppableStateSnapshot,\n} from 'react-beautiful-dnd'\n\n// const grid = 8\n\n// const getItemStyle = (isDragging: boolean, draggableStyle: any) => ({\n//   // some basic styles to make the items look a bit nicer\n//   userSelect: 'none',\n//   padding: grid * 2,\n//   margin: `0 0 ${grid}px 0`,\n\n//   // change background colour if dragging\n//   background: isDragging ? 'lightgreen' : 'grey',\n\n//   // styles we need to apply on draggables\n//   ...draggableStyle,\n// })\n\n// const getListStyle = (isDraggingOver: boolean) => ({\n//   background: isDraggingOver ? 'lightblue' : 'lightgrey',\n//   padding: grid,\n//   width: 250,\n// })\n\nexport type SortableListProps<T> = {\n  onReorder?: (result: DropResult) => void\n  onDragEnd?: (result: DropResult) => void\n  data: T[]\n  renderItem: (props: {\n    item: T;\n    index: number;\n    provided: DraggableProvided;\n    snapshot: DraggableStateSnapshot;\n    rubric: DraggableRubric;\n    droppableProvided: DroppableProvided;\n    droppableSnapshot: DroppableStateSnapshot\n  }) => React.ReactNode;\n  // renderContainer: (props: {})\n}\n\nexport const SortableList = <T extends { id: string }>(props: SortableListProps<T>) => {\n  const {\n    onReorder,\n    onDragEnd,\n    data = [],\n    renderItem,\n  } = props\n  const droppableId = React.useMemo(() => R.uuid(), [])\n  return (\n    <DragDropContext onDragEnd={(result) => {\n      onDragEnd?.(result)\n      if (!result.destination && (result.destination!.index === result.source.index)) {\n        return\n      }\n      onReorder?.(result)\n    }}\n    >\n      <Droppable droppableId={droppableId}>\n        {(droppableProvided, droppableSnapshot) => (\n          <div\n            {...droppableProvided.droppableProps}\n            ref={droppableProvided.innerRef}\n          >\n            {\n              data.map((item, index) => (\n                <Draggable\n                  key={item.id}\n                  draggableId={item.id}\n                  index={index}\n                >\n                  {\n                  // @ts-ignore\n                  (provided, snapshot, rubric) => renderItem({\n                    item,\n                    index,\n                    provided,\n                    snapshot,\n                    rubric,\n                    droppableProvided,\n                    droppableSnapshot,\n                  })\n}\n                  {/* {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                    >\n                      {child}\n                    </div>\n                  )} */}\n                </Draggable>\n              ))\n            }\n            {droppableProvided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  )\n}\n","import React from 'react'\nimport { Icon, IconProps } from '@components/Icon'\nimport { SpeedDial, SpeedDialAction } from '@mui/material'\nimport {\n  View,\n} from 'colay-ui'\n\nconst ICON_SIZE = 24\n\ntype Action = {\n  name: string;\n  icon: Omit<IconProps, 'name'> & { name: string };\n  onClick: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n}\nexport type SpeedDialCreatorProps = {\n  actions: Action[];\n}\n\nexport const SpeedDialCreator = (props: SpeedDialCreatorProps) => {\n  const {\n    actions,\n  } = props\n\n  return (\n    <View\n      style={{\n        width: ICON_SIZE,\n        height: ICON_SIZE,\n      }}\n    >\n      <SpeedDial\n        ariaLabel=\"SpeedDial basic example\"\n        icon={(\n          <Icon\n            name=\"settings\"\n            style={{ fontSize: ICON_SIZE - 4 }}\n          />\n)}\n        FabProps={{\n          style: {\n            width: ICON_SIZE,\n            height: ICON_SIZE,\n            minWidth: ICON_SIZE,\n            minHeight: ICON_SIZE,\n\n          },\n          color: 'inherit',\n        }}\n        style={{\n          width: ICON_SIZE,\n          height: ICON_SIZE,\n        }}\n        direction=\"left\"\n      >\n        {\n         actions.map((action) => {\n           const {\n             icon,\n             name,\n             onClick,\n           } = action\n           return (\n             // @ts-ignore\n             <SpeedDialAction\n               key={name}\n               tooltipTitle={name}\n               tooltipPlacement=\"bottom\"\n               onClick={(e) => {\n                 e.stopPropagation()\n                 onClick?.(e)\n               }}\n               {...icon}\n               icon={(\n                 // @ts-ignore\n                 <Icon {...icon} />\n                )}\n             />\n           )\n         })\n                              }\n      </SpeedDial>\n    </View>\n  )\n}\n","import React from 'react'\nimport { Box } from '@mui/material'\n\nexport type TabPanelProps = {\n  children: React.ReactNode;\n  value: number;\n  index: number;\n}\nexport const  TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...rest } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...rest}\n    >\n      {value === index && (\n        <Box>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n","import { EVENT } from '@constants'\nimport { Clusters } from '@core/clusters'\nimport { useGraphEditor } from '@hooks'\nimport {\n  InputLabel, MenuItem, Select\n} from '@mui/material'\nimport Form from '@rjsf/material-ui'\nimport {\n  View\n} from 'colay-ui'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\nimport React from 'react'\n\nexport type CreateClusterByAlgorithmProps = {\n  onSubmit: () => void\n}\nconst CLUSTER_ALGORITHM_NAMES = Object.keys(Clusters)\n\nexport const CreateClusterByAlgorithm = (props: CreateClusterByAlgorithmProps) => {\n  const {\n    onSubmit,\n  } = props\n  const [\n    {\n      onEvent,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      onEvent: editor.onEvent,\n    }),\n  )\n  const [state, updateState] = useImmer({\n    selectedClusterName: CLUSTER_ALGORITHM_NAMES[0],\n  })\n  return (\n    <View\n      style={{\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      <InputLabel id=\"create-cluster-by-algorithm-label\">Age</InputLabel>\n      <Select\n        labelId=\"create-cluster-by-algorithm-label\"\n        value={state.selectedClusterName}\n        onChange={(e) => updateState((draft) => {\n          draft.selectedClusterName = e.target.value\n        })}\n      >\n        {CLUSTER_ALGORITHM_NAMES.map((clusterName) => (\n          <MenuItem\n            key={clusterName}\n            value={clusterName}\n          >\n            {clusterName}\n          </MenuItem>\n        ))}\n      </Select>\n      <Form\n        onSubmit={(event) => {\n          // updateState((draft) => {\n          //   draft.formData = event.formData\n          //   draft.createClusterDialog.visible = true\n          // })\n          // onEvent({\n          //   type: EVENT.CREATE_CLUSTER_BY_ALGORITHM,\n          //   payload: {\n          //     config: event.formData,\n          //     name: state.selectedClusterName,\n          //   },\n          // })\n          onEvent({\n            type: EVENT.CREATE_CLUSTER_BY_ALGORITHM_FORM_SUBMIT,\n            payload: {\n              config: event.formData,\n              name: state.selectedClusterName,\n            },\n          })\n          onSubmit()\n        }}\n        schema={Clusters[state.selectedClusterName].configSchema}\n      />\n    </View>\n  )\n}\n","import { Icon } from '@components/Icon'\nimport { SortableList } from '@components/SortableList'\nimport { SpeedDialCreator } from '@components/SpeedDialCreator'\nimport { TabPanel } from '@components/TabPanel'\nimport { EDITOR_MODE, EVENT } from '@constants'\nimport { useGraphEditor } from '@hooks'\nimport { GraphEditorContext } from '@hooks/useGraphEditor'\nimport { Cluster } from '@type'\nimport {\n  Button,\n  Card, Checkbox,\n  Dialog, DialogTitle, IconButton, List,\n  ListItem, ListItemAvatar, ListItemSecondaryAction,\n  ListItemText, Menu,\n  MenuItem, TextField, Typography,\n} from '@mui/material'\nimport Accordion from '@mui/material/Accordion'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport { FormProps } from '@rjsf/core'\nimport Form from '@rjsf/material-ui'\nimport {\n  useDisclosure, View,\n} from 'colay-ui'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\nimport * as R from 'colay/ramda'\nimport React from 'react'\nimport { CreateClusterByAlgorithm } from './CreateClusterByAlgorithm'\n\nexport type ClusterTableProps = {\n  // onSelectAllClusters: (checked: boolean) => void\n  // onSelectCluster: (cluster: Cluster, checked: boolean) => void\n  createClusterForm?: FormProps<any>;\n}\n\nexport const ClusterTable = (props: ClusterTableProps) => {\n  const {\n    // onSelectAllClusters,\n    // onSelectCluster,\n    createClusterForm = { schema: { } },\n  } = props\n  const [\n    {\n      onEvent,\n      clusters = [],\n      editorMode,\n      graphEditorLocalDataRef,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      clusters: editor.graphConfig?.clusters,\n      onEvent: editor.onEvent,\n      graphEditorLocalDataRef: editor.localDataRef,\n      editorMode: editor.mode,\n    }),\n  )\n  const [state, updateState] = useImmer({\n    expanded: true,\n    selectedClusterIds: [] as string[],\n    currentTab: 0,\n    formData: {},\n    createClusterDialog: {\n      name: '',\n      visible: false,\n    },\n  })\n  const hasSelected = state.selectedClusterIds.length > 0\n  const {\n    anchorEl,\n    isOpen,\n    onClose,\n    onOpen,\n  } = useDisclosure({})\n  return (\n    <>\n      <Accordion\n        expanded={state.expanded}\n        onChange={(e, expanded) => updateState((draft) => {\n          draft.expanded = expanded\n        })}\n      >\n        <AccordionSummary\n          aria-controls=\"panel1a-content\"\n        >\n          <View\n            style={{\n              width: '100%',\n            }}\n          >\n            <View\n              style={{\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                width: '100%',\n              }}\n            >\n              <View\n                style={{\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                }}\n              >\n                <Typography\n                  variant=\"h6\"\n                >\n                  Clusters\n                </Typography>\n              </View>\n              <IconButton\n                onClick={(e) => {\n                  e.stopPropagation()\n                  // @ts-ignore\n                  onOpen(e)\n                }}\n              >\n                <Icon\n                  color={state.currentTab === 0 ? 'inherit' : 'secondary'}\n                  name={state.currentTab === 0 ? 'add_circle' : 'close'}\n                />\n              </IconButton>\n              <Menu\n                anchorEl={anchorEl}\n                open={isOpen}\n                onClose={onClose}\n                // style={{ width: 400 }}\n              >\n                {\n                  state.currentTab !== 0 && (\n                    <MenuItem\n                      // key=\"Close\"\n                    // selected={index === selectedIndex}\n                      onClick={(event) => {\n                        event.stopPropagation()\n                        updateState((draft) => {\n                          draft.currentTab = 0\n                        })\n                        onClose()\n                      }}\n                    >\n                      Close\n                    </MenuItem>\n                  )\n                }\n                <MenuItem\n                  // key=\"By Filter\"\n                  selected={state.currentTab === 1}\n                  onClick={(event) => {\n                    event.stopPropagation()\n                    updateState((draft) => {\n                      draft.currentTab = 1\n                      draft.expanded = true\n                    })\n                    onClose()\n                  }}\n                >\n                  By Filter\n                </MenuItem>\n                <MenuItem\n                  // key=\"By Algorithm\"\n                  selected={state.currentTab === 2}\n                  onClick={(event) => {\n                    event.stopPropagation()\n                    updateState((draft) => {\n                      draft.currentTab = 2\n                      draft.expanded = true\n                    })\n                    onClose()\n                  }}\n                >\n                  By Algorithm\n                </MenuItem>\n              </Menu>\n            </View>\n            {\n            state.expanded && hasSelected && (\n              <Card\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  height: 32,\n                  width: '100%',\n                }}\n              >\n                <ListItem>\n                  <Checkbox\n                    onClick={(e) => e.stopPropagation()}\n                    checked={!R.isEmpty(state.selectedClusterIds)\n               && state.selectedClusterIds.length === clusters.length}\n                    onChange={(event) => {\n                      const {\n                        checked,\n                      } = event.target\n                      updateState((draft) => {\n                        if (checked) {\n                          draft.selectedClusterIds = clusters.map((cluster) => cluster.id)\n                        } else {\n                          draft.selectedClusterIds = []\n                        }\n                      })\n                    }}\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                  />\n                  <IconButton\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      onEvent({\n                        type: EVENT.DELETE_CLUSTER,\n                        payload: {\n                          itemIds: state.selectedClusterIds,\n                        },\n                      })\n                      updateState((draft) => {\n                        draft.selectedClusterIds = []\n                      })\n                    }}\n                  >\n                    <Icon\n                      name=\"delete_rounded\"\n                    />\n                  </IconButton>\n                </ListItem>\n              </Card>\n            )\n          }\n          </View>\n\n        </AccordionSummary>\n        <AccordionDetails>\n          <TabPanel\n            value={state.currentTab}\n            index={0}\n          >\n            {\n          clusters.length === 0 && (\n            <Typography>\n              Let's create a Cluster.\n            </Typography>\n          )\n        }\n            <List dense>\n              <SortableList\n                onReorder={(result) => {\n                  onEvent({\n                    type: EVENT.REORDER_CLUSTER,\n                    payload: {\n                      fromIndex: result.source.index,\n                      toIndex: result.destination!.index,\n                    },\n                  })\n                }}\n                data={clusters}\n                renderItem={({\n                  provided,\n                  item: cluster,\n                  // index,\n                }) => {\n                  const { ids: elementIds, id, name } = cluster\n                  return (\n                    <Accordion\n                      key={id}\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                    >\n                      <AccordionSummary\n                        aria-controls=\"panel1a-content\"\n                      >\n                        <View\n                          style={{\n                            flexDirection: 'row',\n                            justifyContent: 'space-between',\n                            alignItems: 'center',\n                            width: '100%',\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: 'row',\n                              alignItems: 'center',\n                            }}\n                          >\n                            <Checkbox\n                              onClick={(e) => e.stopPropagation()}\n                              checked={state.selectedClusterIds.includes(cluster.id)}\n                              onChange={(e) => {\n                                const { checked } = e.target\n                                updateState((draft) => {\n                                  if (checked) {\n                                    draft.selectedClusterIds.push(cluster.id)\n                                  } else {\n                                    draft.selectedClusterIds = draft.selectedClusterIds.filter(\n                                      (id) => id !== cluster.id,\n                                    )\n                                  }\n                                })\n                              }}\n                              inputProps={{ 'aria-label': 'primary checkbox' }}\n                            />\n                            <Typography\n                              variant=\"h6\"\n                            >\n                              {name}\n                            </Typography>\n                          </View>\n\n                          <View\n                            style={{\n                              flexDirection: 'row',\n                              alignItems: 'center',\n                            }}\n                          >\n                            <SpeedDialActionsView\n                              graphEditorLocalDataRef={graphEditorLocalDataRef}\n                              editorMode={editorMode}\n                              onEvent={onEvent}\n                              item={cluster}\n                            />\n                            <IconButton\n                              edge=\"end\"\n                              disableFocusRipple\n                              disableRipple\n                              disableTouchRipple\n                              {...provided.dragHandleProps}\n                            >\n                              <Icon name=\"drag_handle\" />\n                            </IconButton>\n                          </View>\n                        </View>\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        {\n                        elementIds.map((elementId) => (\n                          <ListItem\n                            key={elementId}\n                          >\n                            <ListItemAvatar>\n                              <Checkbox\n                                // checked={selectedClustersIds.includes(id)}\n                                // onChange={(_, checked) => {\n                                //   onSelectCluster(cluster, checked)\n                                // }}\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\n                                onClick={(e) => e.stopPropagation()}\n                              />\n                            </ListItemAvatar>\n                            <ListItemText\n                              primary={R.take(10)(elementId)}\n                            />\n                            <ListItemSecondaryAction>\n                              <IconButton\n                                edge=\"end\"\n                                aria-label=\"select\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  onEvent({\n                                    type: EVENT.ELEMENT_SELECTED,\n                                    payload: {\n                                      itemIds: [elementId]\n                                    },\n                                    avoidHistoryRecording: true,\n                                  })\n                                }}\n                              >\n                                <Icon name=\"my_location\" />\n                              </IconButton>\n                              <IconButton\n                                edge=\"end\"\n                                aria-label=\"delete\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  onEvent({\n                                    type: EVENT.DELETE_CLUSTER_ELEMENT,\n                                    payload: {\n                                      itemIds: [elementId],\n                                      clusterId: cluster.id,\n                                    },\n                                  })\n                                }}\n                              >\n                                <Icon name=\"delete_rounded\" />\n                              </IconButton>\n                            </ListItemSecondaryAction>\n                          </ListItem>\n                        ))\n                      }\n                      </AccordionDetails>\n                    </Accordion>\n                  )\n                }}\n              />\n            </List>\n          </TabPanel>\n          <TabPanel\n            value={state.currentTab}\n            index={1}\n          >\n            <Form\n              onSubmit={(event) => {\n                updateState((draft) => {\n                  draft.formData = event.formData\n                  draft.createClusterDialog.visible = true\n                })\n              }}\n              {...createClusterForm}\n            />\n          </TabPanel>\n          <TabPanel\n            value={state.currentTab}\n            index={2}\n          >\n            <CreateClusterByAlgorithm\n              onSubmit={() => {\n                updateState((draft) => {\n                  draft.currentTab = 0\n                })\n              }}\n            />\n          </TabPanel>\n        </AccordionDetails>\n      </Accordion>\n      <Dialog\n        onClose={() => updateState((draft) => {\n          draft.createClusterDialog.visible = false\n        })}\n        aria-labelledby=\"create-playlist-dialog-title\"\n        open={state.createClusterDialog.visible}\n      >\n        <DialogTitle id=\"create-playlist-dialog-title\">Create Cluster</DialogTitle>\n        <View\n          style={{\n            width: '50%',\n            padding: 10,\n            justifyContent: 'center',\n          }}\n        >\n          <TextField\n            style={{\n              marginBottom: 10,\n              width: '50vw',\n            }}\n            fullWidth\n            label=\"name\"\n            value={state.createClusterDialog.name}\n            onChange={({ target: { value } }) => updateState((draft) => {\n              draft.createClusterDialog.name = value\n            })}\n          />\n          <Button\n            fullWidth\n            onClick={() => {\n              updateState((draft) => {\n                draft.currentTab = 0\n                draft.createClusterDialog.name = ''\n                draft.createClusterDialog.visible = false\n              })\n              onEvent({\n                type: EVENT.CREATE_CLUSTER_FORM_SUBMIT,\n                payload: {\n                  formData: state.formData,\n                  name: state.createClusterDialog.name,\n                },\n              })\n            }}\n          >\n            Create\n          </Button>\n        </View>\n      </Dialog>\n    </>\n  )\n}\n\ntype SpeedDialActionsViewProps = {\n  graphEditorLocalDataRef: GraphEditorContext['localDataRef'];\n  editorMode: GraphEditorContext['mode'];\n  onEvent: GraphEditorContext['onEvent'];\n  item: Cluster;\n}\n\nconst SpeedDialActionsView = (props: SpeedDialActionsViewProps) => {\n  const {\n    item: cluster,\n    editorMode,\n    onEvent,\n    graphEditorLocalDataRef,\n  } = props\n\n  return (\n    <SpeedDialCreator\n      actions={[\n        {\n          name: 'Delete',\n          icon: {\n            name: 'delete_rounded',\n          },\n          onClick: (e) => {\n            e.stopPropagation()\n            onEvent({\n              type: EVENT.DELETE_CLUSTER,\n              payload: {\n                itemIds: [cluster.id],\n              },\n            })\n          },\n        },\n        {\n          name: cluster.visible === false ? 'Visible' : 'Invisible',\n          icon: {\n            name: cluster.visible === false ? 'unfold_more' : 'unfold_less',\n          },\n          onClick: (e) => {\n            e.stopPropagation()\n            onEvent({\n              type: EVENT.CHANGE_CLUSTER_VISIBILITY,\n              payload: {\n                clusterId: cluster.id,\n                value: cluster.visible === false,\n              },\n            })\n          },\n        },\n        {\n          name: 'Select',\n          icon: {\n            name: 'beenhere',\n          },\n          onClick: (e) => {\n            e.stopPropagation()\n            onEvent({\n              type: EVENT.SELECT_CLUSTER,\n              payload: {\n                itemIds: [cluster.id],\n              },\n            })\n          },\n        },\n        {\n          name: 'Add',\n          icon: {\n            name: 'add_circle',\n            color: editorMode === EDITOR_MODE.ADD_CLUSTER_ELEMENT\n        && graphEditorLocalDataRef.current?.issuedClusterId === cluster.id\n              ? 'primary' : 'inherit',\n          },\n          onClick: (e) => {\n            e.stopPropagation()\n            onEvent({\n              type: EVENT.PRESS_ADD_CLUSTER_ELEMENT,\n              payload: {\n                clusterId: cluster.id,\n              },\n            })\n          },\n        },\n      ]}\n    />\n  )\n}\n","import { Icon } from '@components/Icon'\nimport { SortableList } from '@components/SortableList'\nimport { SpeedDialCreator } from '@components/SpeedDialCreator'\nimport { EVENT } from '@constants'\nimport { useGraphEditor } from '@hooks'\nimport {\n  Card, Checkbox, IconButton, List,\n  ListItem, ListItemAvatar, ListItemText, Typography,\n} from '@mui/material'\nimport Accordion from '@mui/material/Accordion'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport {\n  View,\n  wrapComponent,\n} from 'colay-ui'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\nimport * as R from 'colay/ramda'\nimport React from 'react'\n\nexport type EventHistoryTableProps = {\n  onCreatePlaylistClick: (selectedEventIds: string[]) => void;\n}\n\nconst EventHistoryTableElement = (props: EventHistoryTableProps) => {\n  const {\n    onCreatePlaylistClick,\n  } = props\n  const [state, updateState] = useImmer({\n    expanded: false,\n    selectedEventIds: [] as string[],\n  })\n  const hasSelected = state.selectedEventIds.length > 0\n  const [\n    {\n      onEvent,\n      eventHistory,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      onEvent: editor.onEvent,\n      eventHistory: editor.eventHistory,\n    }),\n  )\n  return (\n    <View\n      style={{\n        // @ts-ignore\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        // paddingRight: 10,\n        // paddingLeft: 10,\n        height: '100%',\n        width: '100%',\n      }}\n    >\n      <Accordion\n        expanded={state.expanded}\n        onChange={(e, expanded) => updateState((draft) => {\n          draft.expanded = expanded\n        })}\n      >\n        <AccordionSummary\n          aria-controls=\"panel1a-content\"\n        >\n          <View\n            style={{\n              width: '100%',\n            }}\n          >\n            <View\n              style={{\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                width: '100%',\n              }}\n            >\n              <View\n                style={{\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                }}\n              >\n                <Typography\n                  variant=\"h6\"\n                >\n                  History\n                </Typography>\n              </View>\n              <View\n                style={{\n                // alignItems: 'space-between',\n                  flexDirection: 'row',\n                }}\n              >\n                <IconButton\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    onEvent({\n                      type: EVENT.UNDO_EVENT,\n                      avoidEventRecording: true,\n                      avoidHistoryRecording: true,\n                    })\n                  }}\n                >\n                  <Icon\n                    name=\"keyboard_arrow_down\"\n                  />\n                </IconButton>\n                <IconButton\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    onEvent({\n                      type: EVENT.REDO_EVENT,\n                      avoidEventRecording: true,\n                      avoidHistoryRecording: true,\n                    })\n                  }}\n                >\n                  <Icon\n                    name=\"keyboard_arrow_up\"\n                  />\n                </IconButton>\n              </View>\n            </View>\n            {\n              state.expanded && hasSelected && (\n                <Card\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    height: 32,\n                    width: '100%',\n                  }}\n                >\n                  <ListItem>\n                    <Checkbox\n                      checked={!R.isEmpty(state.selectedEventIds)\n             && state.selectedEventIds.length === eventHistory!.events.length}\n                      onChange={(e) => {\n                        const { checked } = e.target\n                        updateState((draft) => {\n                          if (checked) {\n                            draft.selectedEventIds = eventHistory!.events.map((event) => event.id)\n                          } else {\n                            draft.selectedEventIds = []\n                          }\n                        })\n                      }}\n                      onClick={(e) => e.stopPropagation()}\n                      inputProps={{ 'aria-label': 'primary checkbox' }}\n                    />\n                    <IconButton\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        onCreatePlaylistClick(state.selectedEventIds)\n                        updateState((draft) => {\n                          draft.selectedEventIds = []\n                        })\n                      }}\n                    >\n                      <Icon\n                        name=\"playlist_add\"\n                      />\n                    </IconButton>\n                    <IconButton\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        onEvent({\n                          type: EVENT.DELETE_HISTORY_ITEM,\n                          payload: {\n                            itemIds: state.selectedEventIds,\n                          },\n                        })\n                        updateState((draft) => {\n                          draft.selectedEventIds = []\n                        })\n                      }}\n                    >\n                      <Icon\n                        name=\"delete_rounded\"\n                      />\n                    </IconButton>\n                  </ListItem>\n                </Card>\n              )\n            }\n          </View>\n        </AccordionSummary>\n        <AccordionDetails>\n          {\n          eventHistory!.events.length === 0 && (\n            <Typography>\n              Let's do a few things.\n            </Typography>\n          )\n        }\n          <List dense>\n            <SortableList\n              onReorder={(result) => {\n                const { length } = eventHistory!.events\n                onEvent({\n                  type: EVENT.REORDER_HISTORY_ITEM,\n                  payload: {\n                    fromIndex: length - result.source.index - 1,\n                    toIndex: length - result.destination!.index! - 1,\n                  },\n                })\n              }}\n              data={R.reverse(eventHistory!.events)}\n              renderItem={({\n                provided,\n                item: event,\n                index,\n              }) => {\n                const { length } = eventHistory!.events\n                return (\n                  <ListItem\n                    key={event.id}\n                    selected={eventHistory!.currentIndex === (length - 1) - index}\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                  >\n                    <ListItemAvatar>\n                      <Checkbox\n                        checked={state.selectedEventIds.includes(event.id)}\n                        onChange={(e) => {\n                          const { checked } = e.target\n                          updateState((draft) => {\n                            if (checked) {\n                              draft.selectedEventIds.push(event.id)\n                            } else {\n                              draft.selectedEventIds = draft.selectedEventIds.filter((id) => id !== event.id)\n                            }\n                          })\n                        }}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={event.type}\n                    />\n                    <View\n                      style={{\n                        display: 'flex',\n                        flexDirection: 'row',\n                        alignItems: 'center',\n\n                      }}\n                    >\n                      <SpeedDialCreator\n                        actions={[\n                          {\n                            name: 'Redo',\n                            icon: {\n                              name: 'navigate_next',\n                            },\n                            onClick: (e) => onEvent({\n                              type: EVENT.APPLY_EVENTS,\n                              payload: {\n                                events: [{\n                                  ...event,\n                                  avoidEventRecording: true,\n                                  avoidHistoryRecording: true,\n                                }],\n                              },\n                            }),\n                          },\n                          {\n                            name: 'Undo',\n                            icon: {\n                              name: 'navigate_before',\n                            },\n                            onClick: () => onEvent({\n                              type: EVENT.APPLY_EVENTS,\n                              payload: {\n                                events: [{\n                                  ...eventHistory!.undoEvents[index],\n                                  avoidEventRecording: true,\n                                  avoidHistoryRecording: true,\n                                }],\n                              },\n                            }),\n                          },\n                          {\n                            name: 'Delete',\n                            icon: {\n                              name: 'delete_rounded',\n                            },\n                            onClick: () => onEvent({\n                              type: EVENT.DELETE_HISTORY_ITEM,\n                              payload: {\n                                itemIds: [event.id],\n                              },\n                              avoidEventRecording: true,\n                              avoidHistoryRecording: true,\n                            }),\n                          },\n                        ]}\n                      />\n                      <IconButton\n                        edge=\"end\"\n                        disableFocusRipple\n                        disableRipple\n                        disableTouchRipple\n                        {...provided.dragHandleProps}\n                      >\n                        <Icon name=\"drag_handle\" />\n                      </IconButton>\n                    </View>\n                  </ListItem>\n                )\n              }}\n            />\n          </List>\n        </AccordionDetails>\n      </Accordion>\n    </View>\n  )\n}\n\nexport const EventHistoryTable = wrapComponent<EventHistoryTableProps>(EventHistoryTableElement, {})\n","import { Icon } from '@components/Icon'\nimport { SortableList } from '@components/SortableList'\nimport { SpeedDialCreator } from '@components/SpeedDialCreator'\nimport {\n  EVENT,\n} from '@constants'\nimport {\n  useGraphEditor,\n} from '@hooks'\nimport {\n  Button,\n  Card, Checkbox,\n  Dialog,\n  DialogTitle, IconButton, List,\n  ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, TextField, Typography,\n} from '@mui/material'\nimport Accordion from '@mui/material/Accordion'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport {\n  View,\n} from 'colay-ui'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\nimport * as R from 'colay/ramda'\nimport React from 'react'\n\nexport type EventHistoryTableProps = {\n  isOpen?: boolean;\n  // onPlay: (playlist: Playlist) => void\n  createPlaylistDialog: {\n    visible: boolean;\n    onClose: () => void;\n  }\n  onCreatePlaylist: (param: {\n    id: string;\n    name: string;\n  }) => void\n}\n\n// onSelectPlaylist={(playlist, checked) => {\n//   updateState((draft) => {\n//     if (checked) {\n//       draft.selectedPlaylistIds.push(playlist.id)\n//     } else {\n//       draft.selectedPlaylistIds = draft.selectedPlaylistIds.filter(\n//         (id) => id !== playlist.id,\n//       )\n//     }\n//   })\n// }}\n// selectedPlaylistIds={state.selectedPlaylistIds}\n\nexport const PlaylistTable = (props: EventHistoryTableProps) => {\n  const {\n    createPlaylistDialog,\n    onCreatePlaylist,\n  } = props\n  const [\n    {\n      onEvent,\n      playlists = [],\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      onEvent: editor.onEvent,\n      playlists: editor.playlists,\n    }),\n  )\n  const [state, updateState] = useImmer({\n    expanded: false,\n    createPlaylistDialog: {\n      name: '',\n    },\n    selectedPlaylistIds: [] as string[],\n  })\n  const hasSelected = state.selectedPlaylistIds.length > 0\n  return (\n    <>\n      <Accordion\n        expanded={state.expanded}\n        onChange={(e, expanded) => updateState((draft) => {\n          draft.expanded = expanded\n        })}\n      >\n        <AccordionSummary\n          aria-controls=\"panel1a-content\"\n        >\n          <View\n            style={{\n              width: '100%',\n            }}\n          >\n            <View\n              style={{\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                width: '100%',\n              }}\n            >\n              <View\n                style={{\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                }}\n              >\n                <Typography\n                  variant=\"h6\"\n                >\n                  Playlists\n                </Typography>\n              </View>\n            </View>\n            {\n            state.expanded && hasSelected && (\n              <Card\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  height: 32,\n                  width: '100%',\n                }}\n              >\n                <ListItem>\n                  <Checkbox\n                    onClick={(e) => e.stopPropagation()}\n                    checked={!R.isEmpty(state.selectedPlaylistIds)\n               && state.selectedPlaylistIds.length === playlists.length}\n                    onChange={(e) => {\n                      const { checked } = e.target\n                      updateState((draft) => {\n                        if (checked) {\n                          draft.selectedPlaylistIds = playlists.map((playlist) => playlist.id)\n                        } else {\n                          draft.selectedPlaylistIds = []\n                        }\n                      })\n                    }}\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                  />\n                  <IconButton\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      updateState((draft) => {\n                        draft.selectedPlaylistIds = []\n                      })\n                      onEvent({\n                        type: EVENT.DELETE_PLAYLIST,\n                        payload: {\n                          itemIds: state.selectedPlaylistIds,\n                        },\n                      })\n                    }}\n                  >\n                    <Icon\n                      name=\"delete_rounded\"\n                    />\n                  </IconButton>\n                </ListItem>\n              </Card>\n            )\n              }\n          </View>\n\n        </AccordionSummary>\n        <AccordionDetails>\n          {\n          playlists.length === 0 && (\n            <Typography>\n              Let's create a playlist.\n            </Typography>\n          )\n        }\n          <List dense>\n            <SortableList\n              onReorder={(result) => onEvent({\n                type: EVENT.REORDER_PLAYLIST,\n                payload: {\n                  fromIndex: result.source.index,\n                  toIndex: result.destination!.index,\n                },\n              })}\n              data={playlists}\n              renderItem={({\n                provided,\n                item: playlist,\n              }) => {\n                const { events, id, name } = playlist\n                return (\n                  <Accordion\n                    key={id}\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                  >\n                    <AccordionSummary\n                      aria-controls=\"panel1a-content\"\n                    >\n                      <View\n                        style={{\n                          flexDirection: 'row',\n                          justifyContent: 'space-between',\n                          alignItems: 'center',\n                          width: '100%',\n                        }}\n                      >\n                        <View\n                          style={{\n                            flexDirection: 'row',\n                            alignItems: 'center',\n                          }}\n                        >\n                          <Checkbox\n                            onClick={(e) => e.stopPropagation()}\n                            checked={hasSelected\n                          && state.selectedPlaylistIds.includes(playlist.id)}\n                            onChange={(e) => {\n                              const { checked } = e.target\n                              updateState((draft) => {\n                                if (checked) {\n                                  draft.selectedPlaylistIds.push(playlist.id)\n                                } else {\n                                  draft.selectedPlaylistIds = draft.selectedPlaylistIds.filter(\n                                    (id) => id !== playlist.id,\n                                  )\n                                }\n                              })\n                            }}\n                            inputProps={{ 'aria-label': 'primary checkbox' }}\n                          />\n                          <Typography\n                            variant=\"h6\"\n                          >\n                            {name}\n                          </Typography>\n                        </View>\n                        <View\n                          style={{\n                            flexDirection: 'row',\n                            alignItems: 'center',\n                          }}\n                        >\n                          <SpeedDialCreator\n                            actions={[\n                              {\n                                name: 'Delete',\n                                icon: {\n                                  name: 'delete_rounded',\n                                },\n                                onClick: (e) => {\n                                  e.stopPropagation()\n                                  updateState((draft) => {\n                                    draft.selectedPlaylistIds = []\n                                  })\n                                  onEvent({\n                                    type: EVENT.DELETE_PLAYLIST,\n                                    payload: {\n                                      itemIds: [playlist.id],\n                                    },\n                                  })\n                                },\n                              },\n                              {\n                                name: 'Play',\n                                icon: {\n                                  name: 'play_arrow',\n                                },\n                                onClick: (e) => {\n                                  e.stopPropagation()\n                                  onEvent({\n                                    type: EVENT.PLAY_EVENTS,\n                                    payload: {\n                                      events: playlist.events,\n                                    },\n                                  })\n                                },\n                              },\n                            ]}\n                          />\n                          <IconButton\n                            edge=\"end\"\n                            disableFocusRipple\n                            disableRipple\n                            disableTouchRipple\n                            {...provided.dragHandleProps}\n                          >\n                            <Icon name=\"drag_handle\" />\n                          </IconButton>\n                        </View>\n                      </View>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      {\n                        events.map((event) => (\n                          <ListItem\n                            key={event.id}\n                          >\n                            <ListItemAvatar>\n                              <Checkbox\n                                // checked={state.selectedPlaylistIds.includes(id)}\n                                // onChange={(_, checked) => {\n                                //   updateState((draft) => {\n                                //     if (checked) {\n                                //       draft.selectedPlaylistIds.push(playlist.id)\n                                //     } else {\n                                //       draft.selectedPlaylistIds = draft.selectedPlaylistIds.filter(\n                                //         (id) => id !== playlist.id,\n                                //       )\n                                //     }\n                                //   })\n                                // }}\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\n                                onClick={(e) => e.stopPropagation()}\n                              />\n                            </ListItemAvatar>\n                            <ListItemText\n                              primary={event.type}\n                            />\n                            <ListItemSecondaryAction>\n                              <IconButton\n                                edge=\"end\"\n                                aria-label=\"delete\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                }}\n                              >\n                                <Icon name=\"delete_rounded\" />\n                              </IconButton>\n                            </ListItemSecondaryAction>\n                          </ListItem>\n                        ))\n                      }\n                    </AccordionDetails>\n                  </Accordion>\n                )\n              }}\n            />\n          </List>\n        </AccordionDetails>\n      </Accordion>\n      <Dialog\n        onClose={createPlaylistDialog.onClose}\n        aria-labelledby=\"create-playlist-dialog-title\"\n        open={createPlaylistDialog.visible}\n      >\n        <DialogTitle id=\"create-playlist-dialog-title\">Create Playlist</DialogTitle>\n        <View\n          style={{\n            width: '50%',\n            padding: 10,\n            justifyContent: 'center',\n          }}\n        >\n          <TextField\n            style={{\n              marginBottom: 10,\n              width: '50vw',\n            }}\n            fullWidth\n            label=\"name\"\n            value={state.createPlaylistDialog.name}\n            onChange={({ target: { value } }) => updateState((draft) => {\n              draft.createPlaylistDialog.name = value\n            })}\n          />\n          <Button\n            fullWidth\n            onClick={() => {\n              onCreatePlaylist({\n                id: R.uuid(),\n                name: state.createPlaylistDialog.name,\n              })\n              updateState((draft) => {\n                draft.createPlaylistDialog.name = ''\n              })\n            }}\n          >\n            Create\n          </Button>\n        </View>\n      </Dialog>\n    </>\n  )\n}\n","import { Icon } from '@components/Icon'\nimport { EVENT, SIDE_PANEL_DEFAULT_WIDTH } from '@constants'\nimport { useGraphEditor } from '@hooks'\nimport {\n  Accordion, AccordionDetails, AccordionSummary, Button, Divider,\n  IconButton, Paper, Typography,\n} from '@mui/material'\nimport { FormProps } from '@rjsf/core'\nimport Form from '@rjsf/material-ui'\nimport {\n  useAnimation,\n  View, wrapComponent,\n} from 'colay-ui'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\nimport React from 'react'\nimport * as R from 'colay/ramda'\nimport { useDrag } from '@hooks/useDrag'\nimport { ResizeDivider } from '@components/ResizeDivider'\nimport { ClusterTable } from './ClusterTable'\nimport { EventHistoryTable } from './EventHistoryTable'\nimport { PlaylistTable } from './PlaylistTable'\n\ntype SettingsForm = {\n  schema: FormProps<any>['schema'];\n} & Partial<\nPick<\nFormProps<any>,\n'onChange'|'onSubmit'|'formData'| 'uiSchema' | 'children'\n>\n>\nexport type SettingsBarProps = {\n  isOpen?: boolean;\n  forms?: SettingsForm[];\n  createClusterForm?: FormProps<any>;\n}\n\nconst SettingsBarElement = (props: SettingsBarProps) => {\n  const {\n    isOpen = false,\n    // schema = {},\n    forms = [],\n    createClusterForm,\n    // children,\n    // ...formProps\n  } = props\n  const [\n    {\n      onEvent,\n      eventHistory,\n      clusters,\n      playlists,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      onEvent: editor.onEvent,\n      eventHistory: editor.eventHistory,\n      playlists: editor.playlists,\n      clusters: editor.graphConfig?.clusters,\n      // editorMode: editor.mode,\n      // graphEditorLocalDataRef: editor.localDataRef,\n    }),\n  )\n  const localDataRef = React.useRef({\n    width: SIDE_PANEL_DEFAULT_WIDTH,\n  })\n  const {\n    style: animationStyle,\n    ref: animationRef,\n  } = useAnimation({\n    from: {\n      width: 0,\n    },\n    to: {\n      width: localDataRef.current.width,\n    },\n    autoPlay: false,\n  }, [localDataRef.current.width])\n  React.useEffect(() => {\n    animationRef.current.play(isOpen)\n  }, [animationRef, isOpen])\n  const [state, updateState] = useImmer({\n    createPlaylistDialog: {\n      visible: false,\n    },\n    selectedEventIds: [] as string[],\n  })\n  const containerRef = React.useRef()\n  const onMouseDown = useDrag({\n    ref: containerRef,\n    onDrag: ({ x, y }, rect) => {\n      localDataRef.current.width = rect.width - x\n      const target = containerRef.current\n      target.style.width = `${localDataRef.current.width}px`\n    },\n  })\n  return (\n    <Paper\n      ref={containerRef}\n      style={{\n        position: 'absolute',\n        height: '100%',\n        top: 0,\n        left: 0,\n        display: 'flex',\n        flexDirection: 'row',\n        ...animationStyle,\n      }}\n    >\n      <View\n        style={{\n          // @ts-ignore\n          overflowY: 'auto',\n          overflowX: 'hidden',\n          height: '100%',\n          flex: 1,\n        }}\n      >\n        {\n        forms.map((form, index) => {\n          const title = form.schema?.title ?? `Form-${index}`\n          return (\n            <React.Fragment key={title}>\n              <Accordion>\n                <AccordionSummary>\n                  <Typography\n                    variant=\"h6\"\n                  >\n                    {title}\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Form\n              // schema={schema}\n              // {...formProps}\n                    {...form}\n                    schema={R.omit(['title'])(form.schema)}\n                    onSubmit={(\n                      e,\n                    ) => onEvent({\n                      type: EVENT.SETTINGS_FORM_CHANGED,\n                      payload: { form, value: e.formData, index },\n                    })}\n                  >\n                    {\n                      form.children ?? (\n                      <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                      >\n                        Apply\n                      </Button>\n                      )\n}\n                  </Form>\n                </AccordionDetails>\n              </Accordion>\n              <View style={{ marginTop: 5, marginBottom: 5 }} />\n            </React.Fragment>\n          )\n        })\n      }\n        <Divider />\n        {\n        eventHistory && (\n        <>\n          <View\n            style={{\n              // height: '50%',\n              width: '100%',\n            }}\n          >\n            <EventHistoryTable\n              onCreatePlaylistClick={(selectedEventIds) => updateState((draft) => {\n                draft.createPlaylistDialog.visible = true\n                draft.selectedEventIds = selectedEventIds\n              })}\n            />\n          </View>\n          <Divider style={{ marginTop: 5, marginBottom: 5 }} />\n        </>\n        )\n      }\n        <Divider />\n        {\n          playlists && (\n          <PlaylistTable\n            createPlaylistDialog={{\n              ...state.createPlaylistDialog,\n              onClose: () => updateState((draft) => {\n                draft.createPlaylistDialog.visible = false\n              }),\n            }}\n            onCreatePlaylist={(playlistWithoutEvents) => {\n              const playlistEvents = state.selectedEventIds.map(\n                (eventId) => eventHistory!.events.find((event) => event.id === eventId)!,\n              ).sort((item, other) => (item.date > other.date ? 1 : -1))\n              updateState((draft) => {\n                draft.createPlaylistDialog.visible = false\n              })\n              onEvent({\n                type: EVENT.CREATE_PLAYLIST,\n                payload: {\n                  items: [\n                    {\n                      ...playlistWithoutEvents,\n                      events: playlistEvents,\n                    },\n                  ],\n                },\n              })\n            }}\n          />\n\n          )\n        }\n        <Divider />\n        {\n        clusters && (\n        <>\n          <View\n            style={{\n              // height: '50%',\n              width: '100%',\n            }}\n          >\n            <ClusterTable\n              createClusterForm={createClusterForm}\n            />\n          </View>\n          <Divider style={{ marginTop: 5, marginBottom: 5 }} />\n        </>\n        )\n      }\n      </View>\n      <ResizeDivider\n        onMouseDown={onMouseDown}\n      />\n      <IconButton\n        style={styles.icon}\n        onClick={() => {\n          onEvent({\n            type: EVENT.TOGGLE_FILTER_BAR,\n            avoidHistoryRecording: true,\n          })\n        }}\n      >\n        <Icon\n          name=\"settings\"\n        />\n      </IconButton>\n    </Paper>\n  )\n}\n\nexport const SettingsBar = wrapComponent<SettingsBarProps>(SettingsBarElement, {})\n\nconst styles = {\n  icon: {\n    position: 'absolute',\n    right: -36,\n    top: 2,\n    fontSize: 24,\n  },\n} as const\n","import {\n  DefaultRenderEdge,\n  DefaultRenderNode, Graph, GraphProps,\n} from '@components'\nimport { ContextMenu } from '@components/ContextMenu'\nimport { EDITOR_MODE, EVENT } from '@constants'\nimport { Clusters } from '@core/clusters'\nimport { GraphEditorProvider } from '@hooks/useGraphEditor'\nimport {\n  Backdrop, Box, CircularProgress,\n  IconButton,\n} from '@mui/material'\nimport {\n  EditorMode, EventHistory, EventInfo, EventType,\n  GraphConfig, GraphEditorConfig, GraphEditorRef, GraphEditorRenderEdge,\n  GraphEditorRenderNode, GraphLabelData, NetworkStatistics,\n  NodeElement, OnEvent, OnEventLite, Playlist, RecordedEvent,\n} from '@type'\nimport {\n  getEventClientPosition, getLabel, getSelectedItemByElement,\n  throttle,\n} from '@utils'\nimport { calculateStatistics } from '@utils/networkStatistics'\nimport { useTimeoutManager } from '@utils/useTimeoutManager'\nimport { useForwardRef, wrapComponent } from 'colay-ui'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\nimport { PropsWithRef } from 'colay-ui/type'\nimport * as R from 'colay/ramda'\nimport React from 'react'\nimport { ActionBar, ActionBarProps } from './ActionBar'\nimport { DataBar, DataBarProps } from './DataBar'\nimport { ModalComponent, ModalComponentProps } from './ModalComponent'\nimport { MouseIcon } from './MouseIcon'\nimport { PreferencesModal, PreferencesModalProps } from './PreferencesModal'\nimport { RecordedEventsModal } from './RecordedEventsModal'\nimport { SettingsBar, SettingsBarProps } from './SettingsBar'\nimport { Icon } from  '@components/Icon'\ntype RenderElementAdditionalInfo = {\n  // label: string;\n}\n\nexport type GraphEditorProps = {\n  onEvent?: OnEvent;\n  graphConfig?: GraphConfig;\n  config?: GraphEditorConfig;\n  renderMoreAction?: () => React.ReactElement;\n  label?: GraphLabelData;\n  settingsBar?: SettingsBarProps;\n  dataBar?: Pick<DataBarProps, 'editable' | 'isOpen'>;\n  actionBar?: Pick<ActionBarProps, 'renderMoreAction' | 'isOpen' | 'recording' | 'eventRecording' | 'autoOpen' | 'theming'>;\n  preferencesModal?: PreferencesModalProps;\n  selectedElementIds?: string[] | null;\n  mode?: EditorMode;\n  renderEdge?: GraphEditorRenderEdge<RenderElementAdditionalInfo>;\n  renderNode?: GraphEditorRenderNode<RenderElementAdditionalInfo>;\n  events?: RecordedEvent[]\n  eventHistory?: EventHistory;\n  playlists?: Playlist[];\n  networkStatistics?: NetworkStatistics;\n  isLoading?: boolean;\n  isFocusMode?: boolean;\n  modals?: {\n    ElementSettings?: ModalComponentProps\n  };\n} & Omit<\nGraphProps,\n'config' | 'onPress' | 'renderNode' | 'renderEdge'\n>\n\nconst MODE_ICON_SCALE = 0.8\nconst MODE_ICON_MAP_BY_URL = {\n  [EDITOR_MODE.ADD]: `https://img.icons8.com/material/${MODE_ICON_SCALE}x/plus-math.png`,\n  [EDITOR_MODE.DELETE]: `https://img.icons8.com/material/${MODE_ICON_SCALE}x/minus--v2.png`,\n  [EDITOR_MODE.CONTINUES_ADD]: `https://img.icons8.com/material/${MODE_ICON_SCALE}x/plus.png`,\n  [EDITOR_MODE.CONTINUES_DELETE]: `https://img.icons8.com/material/${MODE_ICON_SCALE}x/minus-sign.png`,\n  [EDITOR_MODE.ADD_CLUSTER_ELEMENT]: `https://img.icons8.com/material/${MODE_ICON_SCALE}x/doctors-folder.png`,\n  [EDITOR_MODE.DEFAULT]: null,\n}\n\nconst DEFAULT_HANDLER = R.identity as (info: EventInfo) => void\n\nexport type GraphEditorType = React.FC<GraphEditorProps>\n\nconst DEFAULT_GRAPH_EDITOR_CONFIG: GraphEditorConfig = {\n  enableNetworkStatistics: true,\n}\nconst GraphEditorElement = (\n  props: GraphEditorProps,\n  ref: React.MutableRefObject<GraphEditorRef>,\n) => {\n  const {\n    onEvent: onEventCallback = DEFAULT_HANDLER,\n    renderEdge,\n    renderNode,\n    graphConfig,\n    style,\n    settingsBar,\n    actionBar,\n    dataBar = {},\n    preferencesModal = {},\n    nodes,\n    edges,\n    selectedElementIds = [],\n    label,\n    mode = EDITOR_MODE.DEFAULT,\n    events,\n    eventHistory,\n    config = DEFAULT_GRAPH_EDITOR_CONFIG,\n    playlists,\n    networkStatistics,\n    isLoading = false,\n    modals,\n    isFocusMode = false,\n    ...rest\n  } = props\n\n  const localDataRef = React.useRef({\n    initialized: false,\n    targetNode: null as NodeElement | null,\n    props,\n    issuedClusterId: null as string | null,\n    newClusterBoxSelection: {\n      elementIds: [] as string[],\n    },\n    networkStatistics: {\n      local: null,\n    },\n    contextMenu: {\n      itemIds: [],\n    },\n  })\n  const [state, updateState] = useImmer({\n    eventsModal: {\n      visible: false,\n    },\n    contextMenu: {\n      visible: false,\n      position: {\n        x: 0,\n        y: 0,\n      },\n    },\n    isLoading: false,\n  })\n  localDataRef.current.props = props\n  React.useEffect(() => {\n    localDataRef.current.initialized = true\n    // setTimeout(() => updateState((draft) => {\n    //   draft.isLoading = false\n    // }), 2200)\n  }, [])\n  const graphId = React.useMemo<string>(\n    () => graphConfig?.graphId ?? R.uuid(),\n    [graphConfig?.graphId],\n  )\n  const graphEditorRef = useForwardRef(ref)\n  // @TODO: DANGER\n  React.useEffect(() => {\n    setTimeout(() => {\n      ref.current = graphEditorRef.current\n    }, 1000)\n  }, [graphEditorRef.current])\n  // @TODO: DANGER\n  const selectedElement = React.useMemo(\n    () => {\n      const collection = graphEditorRef.current?.cy?.$id(R.last(selectedElementIds)!)\n      return collection?.length === 0\n        ? null\n        : collection\n    },\n    // if (!localDataRef.current.initialized) {\n    //   const callback = () => {\n    //     setTimeout(() => {\n    //       if (graphEditorRef.current.cy) {\n\n    //       } else {\n    //         callback()\n    //       }\n    //     }, 1000)\n    //   }\n    // } else if (selectedElementIds?.length > 0) {\n    //   return graphEditorRef.current.cy && graphEditorRef.current.cy.$id(R.last(selectedElementIds))\n    // }\n\n    [nodes, edges, selectedElementIds],\n  )\n  const selectedItem = selectedElement && getSelectedItemByElement(\n    selectedElement, { nodes, edges },\n  ).item\n  // const selectedElementIsNode = selectedElement && selectedElement.isNode()\n  // const targetPath = selectedElementIsNode ? 'nodes' : 'edges'\n  const onEvent: OnEventLite = React.useCallback((eventInfo) => {\n    const {\n      props: {\n        nodes,\n        edges,\n      },\n    } = localDataRef.current\n    switch (eventInfo.type) {\n      case EVENT.PRESS_ADD_CLUSTER_ELEMENT:\n        localDataRef.current.issuedClusterId = eventInfo.payload.clusterId\n        break\n      case EVENT.CREATE_CLUSTER_BY_ALGORITHM_FORM_SUBMIT: {\n        const {\n          config = {},\n          name,\n        } = eventInfo.payload\n        const clusterCollections: cytoscape.Collection[] = Clusters[name as keyof typeof Clusters]\n          .getByItem({\n            cy: graphEditorRef.current?.cy,\n            nodes,\n            edges,\n            ...config,\n          })\n        let clusterLength = (graphConfig?.clusters?.length ?? 0) - 1\n        const clusters = clusterCollections.map((collection) => {\n          const elementIds = collection.map((el) => el.id())\n          clusterLength += 1\n          return {\n            id: R.uuid(),\n            name: `Cluster-${clusterLength}`,\n            ids: elementIds,\n            childClusterIds: [],\n          }\n        }).filter((val) => !!val)\n        if (clusters.length === 0) {\n          alert('There is no clusters with this configuration!')\n        } else {\n          onEventCallback({\n            id: R.uuid(),\n            date: new Date().toString(),\n            type: EVENT.CREATE_CLUSTER,\n            payload: {\n              items: clusters,\n            },\n          })\n        }\n\n        return\n      }\n\n      default:\n        break\n    }\n    onEventCallback({\n      ...(selectedElement ? { elementId: selectedElement.id() } : {}),\n      ...eventInfo,\n      id: R.uuid(),\n      date: new Date().toString(),\n      ...(\n        eventInfo.event\n          ? {\n            event: R.pickPaths([\n              ['data', 'originalEvent', 'metaKey'],\n            ])(eventInfo.event),\n          }\n          : {}\n      ),\n    })\n  }, [onEventCallback, selectedItem?.id])\n  const eventTimeoutsManager = useTimeoutManager(\n    (events ?? []).map((event, index) => ({\n      ...event,\n      after: events?.[index - 1]\n        ? new Date(\n          event.date,\n        ).getMilliseconds() - new Date(events[index - 1].date).getMilliseconds()\n        : 0,\n    })),\n    (event) => {\n      onEventCallback(event)\n    },\n    {\n      deps: [events],\n      renderOnFinished: true,\n      renderOnPlayChanged: true,\n      autostart: false,\n    },\n  )\n  React.useMemo(() => {\n    localDataRef.current.networkStatistics.local = networkStatistics?.local\n  }, [networkStatistics?.local])\n  // React.useEffect(() => {\n  //   if (!config.enableNetworkStatistics) {\n  //     localDataRef.current.networkStatistics.local = networkStatistics?.local\n  //   } else {\n  //     localDataRef.current.networkStatistics.local = R.mergeDeepRight(\n  //       calculateStatistics({ nodes, edges }),\n  //       (networkStatistics?.local ?? {}),\n  //     )\n  //   }\n  // }, [])\n  // React.useMemo(() => {\n  //   if (localDataRef.current.initialized) {\n  //     localDataRef.current.networkStatistics.local = R.mergeDeepRight(\n  //       calculateStatistics({ nodes, edges }),\n  //       (networkStatistics?.local ?? {}),\n  //     )\n  //   }\n  // }, [nodes, edges, networkStatistics?.local, config.enableNetworkStatistics])\n  React.useEffect(() => {\n    localDataRef.current.targetNode = null\n  }, [mode])\n  const graphEditorValue = React.useMemo(() => ({\n    config,\n    eventHistory,\n    events,\n    graphConfig,\n    label,\n    mode,\n    onEvent,\n    playlists,\n    selectedElementIds,\n    localDataRef,\n    selectedItem,\n    selectedElement,\n    networkStatistics,\n    graphEditorRef,\n    nodes,\n    edges,\n  }),\n  [\n    config,\n    eventHistory,\n    events,\n    graphConfig,\n    label,\n    mode,\n    onEvent,\n    playlists,\n    selectedElementIds,\n    selectedItem,\n    selectedElement,\n    networkStatistics,\n    graphEditorRef,\n    nodes,\n    edges,\n  ])\n  if (graphEditorRef.current) {\n    graphEditorRef.current.context = graphEditorValue\n  }\n  return (\n    <GraphEditorProvider\n      value={graphEditorValue}\n    >\n      <Box\n      // @ts-ignore\n        style={{\n          ...style,\n          overflow: 'hidden',\n          position: 'relative',\n        }}\n        onMouseMove={(e: React.MouseEvent<HTMLDivElement>) => {\n          throttle(\n            () => {\n              const {\n                pageY,\n              } = e.nativeEvent\n              const {\n                offsetHeight,\n                offsetTop,\n              } = e.currentTarget\n              if (props.actionBar && props.actionBar.autoOpen) {\n                if (pageY + 25 >= offsetTop + offsetHeight\n                && !props.actionBar?.isOpen) {\n                  return onEvent({\n                    type: EVENT.TOGGLE_ACTION_BAR,\n                    avoidHistoryRecording: true,\n                  })\n                }\n                if (pageY + 50 <= offsetTop + offsetHeight && props.actionBar?.isOpen) {\n                  return onEvent({\n                    type: EVENT.TOGGLE_ACTION_BAR,\n                    avoidHistoryRecording: true,\n                  })\n                }\n              }\n            },\n            1000,\n            'GraphEditorOnMouseMove',\n          )\n        }}\n      >\n        <Graph\n        // @ts-ignore\n          ref={graphEditorRef}\n          style={{\n            width: style?.width,\n            height: style?.height,\n          }}\n          nodes={nodes}\n          edges={edges}\n          {...rest}\n          extraData={{\n            label,\n            extraData: rest.extraData,\n          }}\n          config={{\n            ...graphConfig,\n            graphId,\n          }}\n          selectedElementIds={selectedElementIds}\n          onPress={({ position }) => {\n            if (state.contextMenu.visible) {\n              updateState((draft) => {\n                draft.contextMenu.visible = false\n              })\n            }\n            const { mode } = localDataRef.current.props\n            if (\n            // @ts-ignore\n              [EDITOR_MODE.ADD, EDITOR_MODE.CONTINUES_ADD].includes(mode)\n            ) {\n              onEvent({\n                type: EVENT.ADD_NODE,\n                payload: {\n                  items: [{\n                    id: R.uuid(),\n                    position,\n                    data: {},\n                  }],\n                },\n              })\n              return\n            }\n            onEvent({\n              type: EVENT.PRESS_BACKGROUND,\n              payload: { position },\n              avoidHistoryRecording: true,\n            })\n          }}\n          onBoxSelection={(event) => {\n            const { mode } = localDataRef.current.props\n            const {\n              elementIds,\n            } = event\n            if (EDITOR_MODE.ADD_CLUSTER_ELEMENT === mode) {\n              onEvent({\n                type: EVENT.ADD_CLUSTER_ELEMENT,\n                payload: {\n                  clusterId: localDataRef.current.issuedClusterId,\n                  itemIds,\n                },\n              })\n              return\n            }\n            // TODO: DANGER**\n            localDataRef.current.newClusterBoxSelection.elementIds = elementIds\n            if (elementIds.length > 0) {\n              localDataRef.current.contextMenu.itemIds = elementIds\n              updateState((draft) => {\n                const e = event.event.data.originalEvent\n                draft.contextMenu.visible = true\n                draft.contextMenu.position = getEventClientPosition(e)\n                // getPointerPositionOnViewport(\n                //   graphEditorRef.current.viewport,\n                //   // @ts-ignore\n                //   event.event.data.originalEvent,\n                // )\n              })\n              // TODO: **DANGER\n              onEvent({\n                type: EVENT.BOX_SELECTION,\n                payload: {\n                  elementIds,\n                },\n              })\n            }\n          }}\n          renderNode={({ item, element, ...rest }) => {\n            return (\n              <Graph.View\n                interactive\n                // rightdown={(event) => {\n                //   event.stopPropagation()\n                // }}\n                rightclick={(event) => {\n                  localDataRef.current.contextMenu.itemIds = [element.id()]\n                  updateState((draft) => {\n                    draft.contextMenu.visible = true\n                    draft.contextMenu.position = getEventClientPosition(event.data.originalEvent)\n                  })\n                  event.stopPropagation()\n                }}\n                pointertap={(event) => {\n                  const { mode } = localDataRef.current.props\n                  const elementId = element.id()\n                  if (\n                    [\n                      EDITOR_MODE.DELETE,\n                      // @ts-ignore\n                      EDITOR_MODE.CONTINUES_DELETE].includes(mode)\n                  ) {\n                    onEvent({\n                      type: EVENT.DELETE_NODE,\n                      payload: {\n                        itemIds: [item.id],\n                      },\n                      event,\n                    })\n                    return\n                  }\n                  if (\n                    // @ts-ignore\n                    [EDITOR_MODE.ADD, EDITOR_MODE.CONTINUES_ADD].includes(mode)\n                  ) {\n                    if (localDataRef.current.targetNode) {\n                      onEvent({\n                        type: EVENT.ADD_EDGE,\n                        payload: {\n                          items: [{\n                            id: R.uuid(),\n                            source: localDataRef.current.targetNode.id(),\n                            target: elementId,\n                          }],\n                        },\n                        event,\n                      })\n                      localDataRef.current.targetNode = null\n                    } else {\n                      localDataRef.current.targetNode = element\n                    }\n                    return\n                  }\n                  if (EDITOR_MODE.ADD_CLUSTER_ELEMENT === mode) {\n                    onEvent({\n                      type: EVENT.ADD_CLUSTER_ELEMENT,\n                      payload: {\n                        clusterId: localDataRef.current.issuedClusterId,\n                        itemIds: [elementId],\n                      },\n                    })\n                    return\n                  }\n                  // cyUnselectAll(graphEditorRef.current.cy)\n                  // element.select()\n                  onEvent({\n                    type: EVENT.ELEMENT_SELECTED,\n                    payload: {\n                      itemIds: [element.id()],\n                    },\n                    event,\n                    avoidHistoryRecording: true,\n                  })\n                }}\n              >\n                {(renderNode ?? DefaultRenderNode)({\n                  item,\n                  element,\n                  // @ts-ignore\n                  label: getLabel(\n                    label?.isGlobalFirst\n                      ? (label?.global.nodes ?? label?.nodes?.[item.id])\n                      : (label?.nodes?.[item.id] ?? label?.global.nodes),\n                    item,\n                  ),\n                  labelPath: (label?.isGlobalFirst\n                    ? (label?.global.nodes ?? label?.nodes?.[item.id])\n                    : (label?.nodes?.[item.id] ?? label?.global.nodes)) ?? [],\n                  ...rest,\n                })}\n              </Graph.View>\n            )\n          }}\n          renderEdge={({ item, element, ...rest }) => (\n            <Graph.View\n              interactive\n              rightclick={(event) => {\n                onEvent({\n                  type: EVENT.ELEMENT_SELECTED,\n                  payload: {\n                    itemIds: [element.id()],\n                  },\n                  event,\n                  avoidHistoryRecording: true,\n                })\n                updateState((draft) => {\n                  draft.contextMenu.visible = true\n                })\n                event.stopPropagation()\n              }}\n              pointertap={(event) => {\n                const { mode } = localDataRef.current.props\n                if (\n                  [\n                    EDITOR_MODE.DELETE,\n                    // @ts-ignore\n                    EDITOR_MODE.CONTINUES_DELETE].includes(mode)\n                ) {\n                  onEvent({\n                    type: EVENT.DELETE_EDGE,\n                    payload: {\n                      itemIds: [item.id],\n                    },\n                    event,\n                  })\n                  return\n                }\n                // cyUnselectAll(graphEditorRef.current.cy)\n                // element.select()\n                onEvent({\n                  type: EVENT.ELEMENT_SELECTED,\n                  payload: {\n                    itemIds: [element.id()],\n                  },\n                  avoidHistoryRecording: true,\n                })\n              }}\n            >\n              {\n               // @ts-ignore\n            (renderEdge ?? DefaultRenderEdge)({\n              item,\n              // @ts-ignore\n              label: getLabel(\n                label?.isGlobalFirst\n                  ? (label?.global.edges ?? label?.edges?.[item.id])\n                  : (label?.edges?.[item.id] ?? label?.global.edges),\n                item,\n              ),\n              labelPath: (label?.isGlobalFirst\n                ? (label?.global.edges ?? label?.edges?.[item.id])\n                : (label?.edges?.[item.id] ?? label?.global.edges)) ?? [],\n              element,\n              ...rest,\n            })\n}\n            </Graph.View>\n          )}\n        />\n        {\n        settingsBar && (\n          <SettingsBar\n            {...settingsBar}\n          />\n        )\n      }\n        <DataBar\n          {...dataBar}\n        />\n\n        {\n        actionBar && (\n        <ActionBar\n          onAction={({ type, value }) => {\n            switch (type) {\n              case EVENT.EXPORT_DATA:\n                onEvent({\n                  type: EVENT.EXPORT_DATA,\n                  payload: {\n                    value: extractGraphEditorData(props),\n                  },\n                })\n                break\n              case EVENT.CHANGE_THEME:\n                onEvent({\n                  type: EVENT.CHANGE_THEME,\n                  payload: {\n                    value,\n                  },\n                })\n                break\n\n              default:\n                onEvent({\n                  type: type as EventType,\n                  payload: value,\n                })\n                break\n            }\n          }}\n          {...actionBar}\n        />\n        )\n}\n        <MouseIcon\n        // name={MODE_ICON_MAP[mode]}\n          name={MODE_ICON_MAP_BY_URL[mode]}\n          cursor\n        />\n        <RecordedEventsModal\n          timeoutManager={eventTimeoutsManager}\n          onClose={() => {\n            updateState(() => {})\n            eventTimeoutsManager.clear()\n          }}\n        />\n        <ContextMenu\n          graphEditorRef={graphEditorRef}\n          items={[\n            { value: 'CreateCluster', label: 'Create Cluster' },\n            { value: 'Delete', label: 'Delete' },\n            { value: 'Focus', label: 'Focus' },\n            { value: 'Settings', label: 'Settings' },\n          ]}\n          onSelect={(value) => {\n            const {\n              current: {\n                contextMenu: {\n                  itemIds,\n                },\n              },\n            } = localDataRef\n            switch (value) {\n              case 'CreateCluster':\n                onEvent({\n                  type: EVENT.CREATE_CLUSTER,\n                  payload: {\n                    items: [{\n                      id: R.uuid(),\n                      name: `Cluster-${graphConfig?.clusters?.length ?? 0}`,\n                      ids: itemIds,\n                      childClusterIds: [],\n                    }],\n                  },\n                })\n                break\n              case 'Delete':\n                onEvent({\n                  type: EVENT.DELETE_NODE,\n                  payload: {\n                    itemIds,\n                  },\n                })\n                break\n              case 'Settings':\n                onEvent({\n                  type: EVENT.ELEMENT_SETTINGS,\n                  payload: {\n                    itemIds,\n                  },\n                })\n                break\n              case 'Focus':\n                onEvent({\n                  type: EVENT.FOCUS,\n                  payload: {\n                    itemIds,\n                  },\n                })\n                break\n              default:\n                break\n            }\n            localDataRef.current.newClusterBoxSelection.elementIds = []\n            localDataRef.current.contextMenu.itemIds = []\n            updateState((draft) => {\n              draft.contextMenu.visible = false\n            })\n          }}\n          position={state.contextMenu.position}\n          open={state.contextMenu.visible}\n        />\n      </Box>\n      <PreferencesModal\n        {...preferencesModal}\n      />\n      {\n        Object.keys(modals).map((modalName) => (\n          <ModalComponent\n            key={modalName}\n            {...(modals[modalName] ?? {})}\n            name={modalName}\n          />\n        ))\n      }\n      <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={isLoading || state.isLoading}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n      <IconButton\n        onClick={()=> onEvent({\n          type: EVENT.DEFOCUS,\n        })}\n        style={{\n          position: 'absolute',\n          left: '49%',\n          visibility: isFocusMode ? 'visible' : 'hidden',\n        }}\n      >\n<Icon \n        name=\"cancel_rounded\"\n        \n      />\n      </IconButton>\n      \n    </GraphEditorProvider>\n\n  )\n}\n\nconst convert = (object: any) => {\n  const cache: any[] = []\n  return JSON.stringify(object, (key, value) => {\n    if (typeof value === 'object' && value !== null) {\n      // Duplicate reference found, discard key\n      if (cache.includes(value)) return null\n\n      // Store value in our collection\n      cache.push(value)\n    }\n    return value\n  })\n}\nconst extractGraphEditorData = (props: GraphEditorProps) => convert({\n  graphConfig: props.graphConfig,\n  label: props.label,\n  // settingsBar: R.omit(['header', 'footer'], props.settingsBar),\n  dataBar: R.omit(['header', 'footer'], props.dataBar),\n  actionBar: R.omit(['right', 'left'], props.actionBar),\n  eventHistory: props.eventHistory,\n  mode: props.mode,\n  nodes: props.nodes,\n  edges: props.edges,\n})\n\nexport const GraphEditor = wrapComponent<\nPropsWithRef<GraphEditorRef, GraphEditorProps>\n>(\n  GraphEditorElement,\n  {\n    isEqual: (item, otherItem) => {\n      if (R.is(Function, item)) {\n        return true\n      }\n      return item === otherItem\n    }, // R.equalsExclude(R.is(Function)),\n    isForwardRef: true,\n  },\n)\n","import React from 'react'\nimport {\n  createTimeoutManager,\n  Timer,\n  TimeoutInstance,\n} from './TimeoutManager'\n\ntype Options = {\n  deps?: any[];\n  renderOnTimeout?: boolean;\n  renderOnFinished?: boolean;\n  renderOnPlayChanged?: boolean;\n  onFinish?: () => void\n  autostart?: boolean;\n}\n\nexport const useTimeoutManager = <T extends Timer<Record<string, any>>>(\n  timers: T[],\n  callback: (timer: T, index: number, timeout: TimeoutInstance) => void,\n  options: Options = {},\n) => {\n  const {\n    deps = [],\n    renderOnTimeout = false,\n    renderOnFinished = false,\n    renderOnPlayChanged = false,\n    onFinish,\n    autostart = true,\n  } = options\n  const [, setState] = React.useState({})\n  const eventTimeoutsManager = React.useMemo(() => createTimeoutManager(\n    timers,\n    (timer, index, timeout) => {\n      callback(timer, index, timeout)\n      if (renderOnTimeout) {\n        setState({})\n      }\n    },\n    {\n      onFinish: () => {\n        onFinish?.()\n        if (renderOnFinished) {\n          setState({})\n        }\n      },\n      onPlayChanged: () => {\n        if (renderOnPlayChanged) {\n          setState({})\n        }\n      },\n      autostart,\n    },\n  ), deps)\n  React.useEffect(\n    () => () => {\n      eventTimeoutsManager.clear()\n    },\n    deps,\n  )\n  return eventTimeoutsManager\n}\n","import React from 'react'\nimport { Button, Slider, Typography } from '@mui/material'\n\nconst SliderUIField = ({ formData, schema, onChange, name }) => {\n\n  return (\n    <>\n      <Typography id={`${schema.title}-continuous-slider`} gutterBottom>\n        {schema.title ?? name}\n      </Typography>\n      <Slider\n        value={formData ?? [schema.minimum, schema.maximum]}\n        onChange={(e) => {\n          onChange(e.target.value)\n        }}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby={`${schema.title}-continuous-slider`}\n        min={schema.minimum}\n        max={schema.maximum}\n      />\n    </>\n  )\n}\nexport const getFilterSchema = (props: {} = {}) => {\n  const {\n  } = props\n  return {\n    schema: {\n      title: 'Filter',\n      type: 'object',\n      required: [\n        // 'title',\n        // 'year',\n        // 'rechtsgebied',\n        // 'adjustLayout',\n      ],\n      additionalProperties: false,\n      properties: {\n        // label: {\n        //   type: 'string',\n        // },\n        year: {\n          type: 'array',\n          items: {\n            type: 'number',\n          },\n          minimum: 1969,\n          maximum: 2015,\n        },\n        degree: {\n          type: 'array',\n          items: {\n            type: 'number',\n          },\n          minimum: 0,\n          maximum: 100,\n        },\n        indegree: {\n          type: 'array',\n          items: {\n            type: 'number',\n          },\n          minimum: 0,\n          maximum: 100,\n        },\n        outdegree: {\n          type: 'array',\n          items: {\n            type: 'number',\n          },\n          minimum: 0,\n          maximum: 100,\n        },\n      },\n    },\n    uiSchema: {\n      'year': {\n        'ui:field': SliderUIField,\n      },\n      'degree': {\n        'ui:field': SliderUIField,\n      },\n      'indegree': {\n        'ui:field': SliderUIField,\n      },\n      'outdegree': {\n        'ui:field': SliderUIField,\n      },\n    }\n  }\n}\n\nexport const getQueryBuilderSchema = () => {\n  return {\n    // children: <div></div>,\n    schema: {\n      title: 'Fetch Data',\n      type: 'object',\n      required: [\n        // 'title',\n        // 'year',\n        // 'rechtsgebied',\n        // 'adjustLayout',\n      ],\n      additionalProperties: false,\n      properties: {\n        DataSources: {\n          type: 'array',\n          title: 'Data sources',\n          uniqueItems: true,\n          items: {\n            enum: [\n              'RS',\n              'ECHR',\n              'Eurlex'\n            ],\n            enumNames: [\n              'Rechtspraak',\n              'European Court of Human Rights',\n              'Eurlex'\n            ],\n            type: 'string'\n          },\n        },\n        Eclis: {\n          type: 'string',\n          title: 'ECLIs'\n        },\n        Keywords: {\n          type: 'string',\n          title: 'Keywords'\n        },\n        Articles: {\n          type: 'string',\n          title: 'Articles'\n        },\n        Date: {\n          type: 'array',\n          title: 'Date',\n          items: {\n            type: 'number',\n          },\n          minimum: 1969,\n          maximum: 2015,\n        },\n        DegreesSources: {\n          type: 'integer',\n          title: 'Degrees Sources',\n          minimum: 1,\n          maximum: 5,\n        },\n        DegreesTargets: {\n          type: 'integer',\n          title: 'Degrees Targets',\n          minimum: 1,\n          maximum: 5,\n        },\n        Instances: {\n          type: 'array',\n          title: 'Instances',\n          uniqueItems: true,\n          items: {\n            enum: [\n              '',\n              'Hoge Raad',\n              'Raad van State',\n              'Centrale Raad van Beroep',\n              'College van Beroep voor het bedrijfsleven',\n              'Gerechtshof Arnhem-Leeuwarden'\n            ],\n            type: 'string'\n          },\n        },\n        Domains: {\n          type: 'array',\n          title: 'Domains',\n          uniqueItems: true,\n          items: {\n            enum: [\n              '',\n              'Not',\n              'Sure',\n              'What'\n            ],\n            type: 'string'\n          },\n        },\n        Doctypes: {\n          type: 'array',\n          title: 'Document types',\n          uniqueItems: true,\n          items: {\n            enum: [\n              '',\n              'DEC',\n              'OPI'\n            ],\n            type: 'string'\n          },\n        },\n        LiPermission: {\n          type: 'boolean',\n          title: 'LI Permission',\n        },\n      },\n    },\n    uiSchema: {\n      'Date': {\n        'ui:field': SliderUIField,\n      },\n      // 'degreesSources': {\n      //   'ui:field': SliderUIField,\n      // },\n      // 'degreesTargets': {\n      //   'ui:field': SliderUIField,\n      // },\n      // 'source':{\n      //   'ui:widget': 'checkboxes'\n      // },\n      // 'liPermission':{\n      //   'ui:widget': 'select'\n      // },\n    }\n  }\n}\n\nexport const getFetchSchema = (props: { onPopupPress: () => void }) => {\n  const {\n    onPopupPress\n  } = props\n  return {\n    children: <div></div>,\n    schema: {\n      title: 'Fetch Data',\n      type: 'object',\n      additionalProperties: false,\n      properties: {\n        popup: {\n          title: 'Build Query',\n          type: 'boolean',\n        },\n      },\n    },\n    uiSchema: {\n      'Date': {\n        'ui:field': SliderUIField,\n      },\n      // 'degreesSources': {\n      //   'ui:field': SliderUIField,\n      // },\n      // 'degreesTargets': {\n      //   'ui:field': SliderUIField,\n      // },\n      // 'source':{\n      //   'ui:widget': 'checkboxes'\n      // },\n      // 'liPermission':{\n      //   'ui:widget': 'select'\n      // },\n      'popup': {\n        'ui:field': ({ formData, schema, onChange }) => {\n          return (\n            <Button onClick={onPopupPress}>Open Query Builder</Button>\n          )\n        },\n      },\n    }\n  }\n}\nexport const VIEW_CONFIG_SCHEMA = {\n  schema: {\n    title: 'Visualisation',\n    type: 'object',\n    required: [],\n    additionalProperties: false,\n    properties: {\n      nodeSize: {\n        \"type\": \"string\",\n        \"title\": \"Node Size\",\n        \"enum\": [\n          \"degree\",\n          \"out_degree\",\n          \"in_degree\",\n          \"year\",\n        ]\n      },\n      nodeColor: {\n        \"type\": \"string\",\n        \"title\": \"Node Color\",\n        \"enum\": [\n          \"community\",\n          \"degree\",\n          \"out_degree\",\n          \"in_degree\",\n          \"year\",\n        ]\n      },\n    },\n  },\n}\n\nexport const RECORDED_EVENTS = [\n  {\n    \"type\": \"@\",\n    \"data\": {\n      \"type\": \"PRESS_BACKGROUND\",\n      \"payload\": {\n        \"x\": 1552.63671875,\n        \"y\": 2627.20703125\n      },\n      \"event\": {}\n    },\n    \"date\": \"2021-02-26T07:59:37.065Z\",\n  },\n  {\n    \"type\": \"@\",\n    \"data\": {\n      \"type\": \"ELEMENT_SELECTED\",\n      \"elementId\": \"http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2009:BF8875\",\n      \"event\": {\n        \"data\": {\n          \"originalEvent\": {\n            \"metaKey\": false\n          }\n        }\n      }\n    },\n    \"date\": \"2021-02-26T07:59:37.992Z\",\n  },\n  {\n    \"type\": \"@\",\n    \"data\": {\n      \"type\": \"ELEMENT_SELECTED\",\n      \"elementId\": \"http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2009:BJ7832\",\n      \"event\": {\n        \"data\": {\n          \"originalEvent\": {\n            \"metaKey\": false\n          }\n        }\n      }\n    },\n    \"date\": \"2021-02-26T07:59:39.640Z\",\n  },\n  {\n    \"type\": \"@\",\n    \"data\": {\n      \"type\": \"ELEMENT_SELECTED\",\n      \"elementId\": \"http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2011:BR5223\",\n      \"event\": {\n        \"data\": {\n          \"originalEvent\": {\n            \"metaKey\": false\n          }\n        }\n      }\n    },\n    \"date\": \"2021-02-26T07:59:41.945Z\",\n  },\n  {\n    \"type\": \"@\",\n    \"data\": {\n      \"type\": \"ELEMENT_SELECTED\",\n      \"elementId\": \"http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2012:BV1295\",\n      \"event\": {\n        \"data\": {\n          \"originalEvent\": {\n            \"metaKey\": false\n          }\n        }\n      }\n    },\n    \"date\": \"2021-02-26T07:59:44.725Z\",\n  }\n]","import * as R from 'colay/ramda'\n\ntype DoActions = any[]\ntype UndoActions = any[]\n\ntype HistoryItem = {\n  id: string;\n  do: DoActions;\n  undo: UndoActions;\n}\ntype HistoryItemOptionalId = Omit<HistoryItem, 'id'> & { id?: string; }\n\ntype HistoryRecord = {\n  items: HistoryItem[]\n  currentIndex: number;\n}\n\nconst DEFAULT_INDEX = 0\nconst DEFAULT_HISTORY_DATA_ITEM: HistoryRecord = {\n  items: [],\n  currentIndex: DEFAULT_INDEX,\n}\n\nconst EVENT_TYPE = {\n  REDO: 'REDO',\n  UNDO: 'UNDO',\n  UNDO_ALL: 'UNDO_ALL',\n  REDO_ALL: 'REDO_ALL',\n} as const\n\n// export type History = {\n//   record: HistoryRecord;\n//   add: (item: HistoryItem) => void;\n//   clear: () => void;\n//   new: () => void;\n//   set: (historyRecord: HistoryRecord) => void;\n//   redo: () => void;\n//   redoAll: () => void;\n//   undo: () => void;\n//   undoAll: () => void;\n//   createRoot: () => void;\n//   clearRoot: () => void;\n//   getRoot: () => HistoryRecord;\n//   setRoot: (historyRecord: HistoryRecord) => void;\n//   EVENT_TYPE: typeof EVENT_TYPE\n// }\nexport type History = ReturnType<typeof createHistory>\n\ntype Event = {\n  type: keyof typeof EVENT_TYPE;\n  item: HistoryItem;\n  actions: (DoActions|UndoActions);\n  items?: HistoryItem[];\n}\n\ntype CreateHistoryOptions = {\n  onEvent: (\n    event: Event\n  ) => boolean|void;\n}\n\nexport const createHistory = (options: CreateHistoryOptions) => {\n  const {\n    onEvent = () => {},\n  } = options\n  const ref = {\n    current: null as unknown as History,\n  }\n  const record: HistoryRecord = R.clone(DEFAULT_HISTORY_DATA_ITEM)\n\n  const history = {\n    record,\n    add: (item: HistoryItemOptionalId) => {\n      const { currentIndex, items } = record\n      record.items = R.slice(\n        0,\n        currentIndex,\n      )(items)\n      record.items.push({\n        id: R.uuid(),\n        ...item,\n      })\n      record.currentIndex = record.items.length\n    },\n    clear: () => {\n      const {\n        current: history,\n      } = ref\n      history.set(R.clone(DEFAULT_HISTORY_DATA_ITEM))\n    },\n    set: (newHistoryRecord: HistoryRecord) => {\n      Object.keys(newHistoryRecord).forEach((key) => {\n        // @ts-ignore\n        record[key] = newHistoryRecord[key]\n      })\n    },\n    undo: () => {\n      const item = record?.items?.[record.currentIndex - 1]\n      if (item) {\n        const passed = onEvent({\n          item,\n          type: EVENT_TYPE.UNDO,\n          actions: item.undo,\n        }) ?? true\n        if (passed) {\n          record.currentIndex -= 1\n        }\n      }\n    },\n    redo: () => {\n      const { currentIndex } = record\n      const item = record?.items?.[currentIndex]\n      if (item) {\n        const passed = onEvent({\n          item,\n          type: EVENT_TYPE.REDO,\n          actions: item.do,\n        }) ?? true\n        if (passed) {\n          record.currentIndex = currentIndex + 1\n        }\n      }\n    },\n    undoAll: () => R.when(\n      R.allPass([\n        R.isNotNil,\n        () => record.items.length > record.currentIndex,\n      ]),\n      () => {\n        const {\n          items,\n        } = record\n        const relatedItems = R.slice(0, record.currentIndex + 1)(items)\n        const undoList = R.unnest(\n          R.map(\n            (item) => item.undo,\n            relatedItems,\n          ),\n        ) as UndoActions[]\n        const doList = R.unnest(\n          R.map(\n            (item) => item.do,\n            relatedItems,\n          ),\n        ) as DoActions[]\n        onEvent({\n          item: {\n            id: R.uuid,\n            do: doList,\n            undo: undoList,\n          },\n          actions: undoList,\n          items: relatedItems,\n          type: EVENT_TYPE.UNDO_ALL,\n        })\n        record.currentIndex = DEFAULT_INDEX\n      },\n    )(record),\n    redoAll: () => R.when(\n      R.allPass([\n        R.isNotNil,\n        () => record.items.length > record.currentIndex,\n      ]),\n      () => {\n        const {\n          items,\n        } = record\n        const relatedItems = R.slice(0, record.currentIndex + 1)(items)\n        const undoList = R.unnest(\n          R.map(\n            (item) => item.undo,\n            relatedItems,\n          ),\n        ) as UndoActions[]\n        const doList = R.unnest(\n          R.map(\n            (item) => item.do,\n            relatedItems,\n          ),\n        ) as DoActions[]\n        onEvent({\n          item: {\n            id: R.uuid,\n            do: doList,\n            undo: undoList,\n          },\n          actions: doList,\n          items: relatedItems,\n          type: EVENT_TYPE.REDO_ALL,\n        })\n        record.currentIndex = DEFAULT_INDEX\n      },\n    )(record),\n    delete: (ids: string[]) => {\n      record.items = record.items.filter((item, index) => {\n        const deleted = ids.includes(item.id)\n        if (deleted && index < record.currentIndex) {\n          record.currentIndex -= 1\n        }\n        return !deleted\n      })\n    },\n    getEventIdsByDoItemIds: (ids: string[]) => {\n      const events = record.items.filter((item) => {\n        const doItems = item.do.map((doItem) => doItem.id)\n        const intersection = R.intersection(doItems, ids)\n        return intersection.length > 0\n      })\n      return events.map((event) => event.id)\n    },\n    reorder: (fromIndex: number, toIndex: number) => {\n      record.items = R.reorder(fromIndex, toIndex)(record.items)\n    },\n  }\n  ref.current = history\n  return history\n}\n","import React from 'react'\nimport {\n  Modal,\n  Paper,\n  Typography,\n  Divider,\n  Slide,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Link,\n  Breadcrumbs,\n  Button,\n  Collapse,\n} from '@mui/material'\nimport { Icon } from '@components/Icon'\nimport { useGraphEditor } from '@hooks'\nimport { EVENT } from '@constants'\nimport {\n  View, DataRender, dataRenderPath, isReact,\n} from 'colay-ui'\nimport Form from '@rjsf/material-ui'\nimport ExpandLess from '@mui/icons-material/ExpandLess'\nimport ExpandMore from '@mui/icons-material/ExpandMore'\nimport * as R from 'colay/ramda'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\n\ntype SidebarItemData = {\n  label: string;\n  children?: SidebarItemData[];\n  icon?: string;\n  id: string\n} | string\n\nexport type PreferencesModalProps = {\n  isOpen?: boolean;\n  sidebar?: SidebarItemData[];\n  components?: Record<string, React.ReactNode>;\n}\n\nconst getId = (sidebarItem: SidebarItemData) => sidebarItem?.id ?? sidebarItem\n\nexport const ElementSettingsModal = (props: PreferencesModalProps) => {\n  const {\n    sidebar: sidebar_ = MOCK_SIDEBAR_DATA,\n    components = MOCK_COMPONENTS,\n  } = props\n\n  const [\n    {\n      onEvent,\n      graphEditorLocalDataRef,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      onEvent: editor.onEvent,\n      graphEditorLocalDataRef: editor.localDataRef,\n    }),\n  )\n  const sidebar = React.useMemo(() => {\n    const normalize = (sidebar: SidebarItemData) => {\n      if (typeof sidebar === 'string') {\n        return {\n          id: sidebar,\n          label: sidebar,\n        }\n      }\n      return {\n        label: sidebar.id,\n        ...sidebar,\n        children: sidebar.children?.map((item) => normalize(item)) ?? [],\n      }\n    }\n    return sidebar_?.map((item) => normalize(item)) ?? []\n  }, [sidebar_])\n  const [state, update] = useImmer({\n    componentId: getId(sidebar[0]),\n    selectedPath: [getId(sidebar[0])],\n  })\n\n  const onSelect = React.useCallback((path) => {\n    const item = dataRenderPath(['children'], path, sidebar)\n    update((draft) => {\n      draft.selectedPath = path\n      draft.componentId = getId(item)\n    })\n  }, [])\n\n  // @ts-ignore\n  const drawer = React.useMemo(() => createDrawer({\n    sidebar,\n    onSelect,\n    selectedPath: state.selectedPath,\n  }), [sidebar, components, state.selectedPath])\n  const Component = components[state.componentId] ?? React.Fragment\n  const form = components[state.componentId]\n  return (\n    <Paper\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        width: '80vw',\n        height: '80vh',\n      }}\n    >\n      <View>\n        <Typography variant=\"h6\">Preferences</Typography>\n      </View>\n      <View\n        style={{\n          flexDirection: 'row',\n        }}\n      >\n        <View\n          style={{\n            // width: '30%',\n            marginRight: 4,\n            flexDirection: 'row',\n          }}\n        >\n          <Slide\n            in\n          >\n            {drawer}\n          </Slide>\n          <Divider\n            orientation=\"vertical\"\n            flexItem\n          />\n        </View>\n        <View>\n          {/* <Breadcrumbs aria-label=\"breadcrumb\">\n            {\n              R.dropLast(1, state.selectedPath).map((pathName) => (\n                <Link\n                  color=\"inherit\"\n                  href=\"/\"\n                >\n                  {pathName}\n                </Link>\n              ))\n            }\n            <Typography color=\"text.primary\">{R.last(state.selectedPath)}</Typography>\n          </Breadcrumbs> */}\n          {\n      !isReact.compatible(Component)\n        ? (\n          <Paper\n            style={{\n              maxWidth: '80%',\n              maxHeight: '90%',\n              overflow: 'scroll',\n              padding: 2,\n            }}\n          >\n            <Form\n              {...form}\n              style={{\n                width: '100%',\n                height: '100%',\n              }}\n              schema={R.omit(['title'])(form.schema)}\n              onSubmit={({ formData }) => {\n                onEvent({\n                  type: EVENT.ELEMENT_SETTINGS_FORM_SUBMIT,\n                  payload: {\n                    name: state.componentId,\n                    value: formData,\n                    itemIds: graphEditorLocalDataRef.current.contextMenu.itemIds,\n                  },\n                })\n                graphEditorLocalDataRef.current.contextMenu.itemIds = []\n              }}\n            >\n              {\n              form.children ?? (\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n              >\n                Save\n              </Button>\n              )\n}\n            </Form>\n          </Paper>\n        )\n        : <Component />\n      }\n          {/* <Form\n              schema={{\n                type: 'object',\n                required: [\n                  'historyTabVisible',\n                  'playlistTabVisible',\n                ],\n                properties: {\n                  labelTextSize: {\n                    type: 'number',\n                    title: 'Label Text Size',\n                  },\n                  historyTabVisible: {\n                    type: 'boolean',\n                    title: 'History Tab Visible',\n                  },\n                  playlistTabVisible: {\n                    type: 'boolean',\n                    title: 'Playlist Tab Visible',\n                  },\n                },\n              }}\n              uiSchema={{\n                'ui:options': {\n                  label: false,\n                },\n              }}\n              // onSubmit={onSubmitCallback}\n            /> */}\n        </View>\n      </View>\n    </Paper>\n  )\n}\n\ntype CreateDrawerParams = {\n  sidebar: SidebarItemData[];\n  onSelect: (name: string) => void\n  selectedPath: string[]\n}\nconst createDrawer = (params: CreateDrawerParams) => {\n  const {\n    sidebar,\n    onSelect,\n    selectedPath,\n  } = params\n  return (\n    <View>\n      {/* <Toolbar /> */}\n      <Divider />\n      <List>\n        <DataRender\n      // @ts-ignore\n          data={sidebar}\n          extraData={[selectedPath, onSelect]}\n          accessor={['children']}\n          renderItem={(params) => {\n            const {\n              children,\n            } = params\n            const item = params.item as unknown as SidebarItemData\n            return (\n              <SidebarItem\n                item={item}\n                onSelect={onSelect}\n                path={params.path}\n                selectedPath={selectedPath}\n              >\n                {children}\n              </SidebarItem>\n            )\n          }}\n        />\n      </List>\n    </View>\n  )\n}\n\ntype SidebarItemProps = {\n  item: SidebarItemData;\n  children: React.ReactNode;\n  onSelect: (name: string)=>void\n}\nconst SidebarItem = (props: SidebarItemProps) => {\n  const {\n    children,\n    item: propItem,\n    onSelect,\n    path,\n    selectedPath,\n  } = props\n  const [open, setOpen] = React.useState(false)\n  const item = (R.is(String)(propItem) ? {\n    label: propItem,\n    id: propItem,\n  } : propItem) as Exclude<SidebarItemData, string>\n  const handleClick = () => {\n    onSelect(path)\n    setOpen(!open)\n  }\n  const hasChildren = !!item.children\n  const selected = selectedPath.join('').includes(path.join(''))\n  return (\n    <>\n      <ListItem\n        button\n        onClick={handleClick}\n        selected={selected}\n      >\n        <ListItemIcon>\n          {item.icon}\n        </ListItemIcon>\n        <ListItemText primary={item.label} />\n        {hasChildren ? (open ? <ExpandLess /> : <ExpandMore />) : null}\n      </ListItem>\n      <Collapse\n        in={open}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List\n          component=\"div\"\n          disablePadding\n          sx={{ ml: 2 }}\n        >\n          {children}\n        </List>\n      </Collapse>\n    </>\n  )\n}\n\nconst MOCK_COMPONENTS = {\n  General: () => <div>General</div>,\n  Visualization: {\n    schema: {\n      type: 'object',\n      properties: {\n        size: {\n          title: 'Size',\n          type: 'integer',\n          minimum: 10,\n          maximum: 50,\n        },\n        fontSize: {\n          title: 'Font Size',\n          type: 'integer',\n          minimum: 10,\n          maximum: 50,\n        },\n        backgroundColor: {\n          type: 'string',\n          title: 'color picker',\n          default: '#151ce6',\n        },\n        textColor: {\n          type: 'string',\n          title: 'color picker',\n          default: '#151ce6',\n        },\n      },\n    },\n    uiSchema: {\n      size: {\n        'ui:widget': 'range',\n      },\n      fontSize: {\n        'ui:widget': 'range',\n      },\n      backgroundColor: {\n        'ui:widget': 'color',\n      },\n      textColor: {\n        'ui:widget': 'color',\n      },\n    },\n  },\n  // Visualization: () => <div>Visualization</div>,\n  Filter: () => <div>Filter</div>,\n  History: () => <div>History</div>,\n  Settings: () => <div>Settings</div>,\n}\n\nconst MOCK_SIDEBAR_DATA = [\n  {\n    icon: <Icon name=\"settings\" />,\n    id: 'General',\n    children: [\n      'Visualization',\n    ],\n  },\n  // {\n  //   icon: <Icon name=\"bookmark\" />,\n  //   id: 'Visualization',\n  //   children: [\n  //     {\n  //       icon: <Icon name=\"filter\" />,\n  //       id: 'Filter',\n  //       children: [\n  //         'History',\n  //       ],\n  //     },\n  //     'Settings',\n  //   ],\n  // },\n]\n","import { Graph } from '@components'\nimport { GraphEditorProps } from '@components/GraphEditor'\nimport GraphLayouts from '@core/layouts'\nimport {\n  ControllerState, DataItem, EditorMode, EventInfo,\n  GraphEditorRef, GraphLabelData, RDFType, RecordedEvent,\n} from '@type'\nimport {\n  getSelectedItemByElement,\n  getUndoEvents,\n  getSelectedElementInfo,\n} from '@utils'\nimport {\n  EDITOR_MODE, EVENT,\n} from '@constants'\nimport { createHistory } from '@utils/createHistory'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\nimport { Position } from 'colay-ui/type'\nimport { download } from 'colay-ui/utils'\nimport * as R from 'colay/ramda'\nimport * as PIXI from 'pixi.js'\nimport React from 'react'\nimport * as V from 'colay/vector'\nimport {\n  ElementSettingsModal,\n} from '@components/GraphEditor/modals/ElementSettingsModal'\n\n// type ControllerOptions = {\n//   // onEvent?: (info: EventInfo, draft: ControllerState) => boolean;\n// }\n\ntype UseControllerData = Pick<\nGraphEditorProps,\n'nodes' | 'edges' | 'mode'\n| 'actionBar' | 'dataBar' | 'settingsBar'\n| 'graphConfig' | 'events' | 'label' | 'playlists' | 'selectedElementIds'\n| 'modals' | 'isFocusMode'\n> & {\n  onEvent?: (info: EventInfo & {\n    graphEditor: GraphEditorRef;\n  }, draft: ControllerState) => boolean;\n}\n\n// export type UseControllerResult = [\n//   UseControllerData,\n//   {},\n// ]\n\nconst closeAllBars = (draft:UseControllerData) => {\n  draft.actionBar!.isOpen = false\n  draft.dataBar!.isOpen = false\n  draft.settingsBar!.isOpen = false\n}\n\nexport const useController = (\n  useControllerData: Partial<UseControllerData>,\n  _graphEditorRef?: React.MutableRefObject<GraphEditorRef>,\n  // options: ControllerOptions = {},\n) => {\n  const controllerConfig: UseControllerData = React.useMemo<UseControllerData>(\n    () => R.mergeDeepAll([\n      DEFAULT_CONTROLLER_CONFIG,\n      useControllerData,\n    ]) as UseControllerData, [], // useControllerData\n  )\n  const eventHistory = React.useMemo(() => createHistory({\n    onEvent: (event) => {\n      const {\n        actions,\n      } = event\n      actions.map(onEvent)\n    },\n  }), [])\n  const localGraphEditorRef = React.useRef(null)\n  const graphEditorRef = _graphEditorRef ?? localGraphEditorRef\n  const localDataRef = React.useRef({\n    recordedEvents: [] as RecordedEvent[],\n    // targetNode: null,\n  })\n  const [state, updateState] = useImmer(controllerConfig)\n  type UpdateFunction = (draft: UseControllerData, config: {\n    graphEditorRef: React.MutableRefObject<GraphEditorRef>\n  }) => void\n  const update = React.useCallback( (updater: UpdateFunction) => {\n    updateState( (draft) => {\n      // @ts-ignore\n      updater(draft, { graphEditorRef })\n    })\n  }, [updateState, graphEditorRef])\n  const onEvent = React.useCallback((eventInfo: EventInfo) => {\n    const {\n      type,\n      payload = {},\n      index = 0,\n      dataItem = {} as DataItem,\n      event,\n      elementId,\n      avoidEventRecording,\n      avoidHistoryRecording,\n    } = eventInfo\n    const graphEditor = graphEditorRef.current!\n    const element = elementId\n      ? graphEditor.cy.$id(`${elementId}`)\n      : null\n    // const isNode = element?.isNode()\n    // const targetPath = isNode ? 'nodes' : 'edges'\n    update( (draft) => {\n      try {\n        if (!avoidHistoryRecording) {\n          const {\n            addHistory,\n            events: undoEvents,\n            // @ts-ignore\n          } = getUndoEvents(\n            [eventInfo], { graphEditor, controllerState: state },\n          )\n          if (addHistory) {\n            eventHistory.add({\n              do: [\n                {\n                  ...eventInfo,\n                  event,\n                  avoidEventRecording: true,\n                  avoidHistoryRecording: true,\n                },\n              ],\n              undo: undoEvents.map((e) => ({\n                ...e,\n                avoidEventRecording: true,\n                avoidHistoryRecording: true,\n              })),\n            })\n          }\n        }\n        if (\n          draft.actionBar?.eventRecording\n          && type !== EVENT.TOGGLE_RECORD_EVENTS\n          && !avoidEventRecording\n        ) {\n          localDataRef.current.recordedEvents.push({\n            ...eventInfo,\n            event,\n          })\n        }\n        const isAllowedToProcess =  controllerConfig.onEvent?.({\n          ...eventInfo,\n          graphEditor,\n          // @ts-ignore\n          update,\n          state,\n        }, draft)\n        if (isAllowedToProcess === false) {\n          return\n        }\n        const {\n          item: eventRelatedItem,\n        } = (element && getSelectedItemByElement(element, draft)) ?? {}\n        const targetDataList = eventRelatedItem?.data!// getSelectedItemByElement(element, draft).data\n        switch (type) {\n          case EVENT.REDO_EVENT:\n            eventHistory.redo()\n            break\n          case EVENT.UNDO_EVENT:\n            eventHistory.undo()\n            break\n          case EVENT.UPDATE_DATA: {\n            const {\n              selectedItem,\n            } = getSelectedElementInfo(draft, graphEditor)\n            selectedItem!.data = payload.value\n            break\n          }\n          case EVENT.ADD_DATA:\n            targetDataList.push({\n              ...payload,\n              value: [payload.value],\n            })\n            break\n          case EVENT.ADD_NODE: {\n            const {\n              items,\n              edgeItems,\n            } = payload\n            draft.nodes = draft.nodes.concat(items)\n            draft.edges = draft.edges.concat(edgeItems ?? [])\n            // const { position } = payload\n            // draft.nodes.push({\n            //   id: `${draft.nodes.length + 1}`, // R.uuid(),\n            //   position,\n            //   data: [],\n            // })\n            if (draft.mode === EDITOR_MODE.ADD) {\n              draft.mode = EDITOR_MODE.DEFAULT\n            }\n            break\n          }\n          case EVENT.DELETE_NODE: {\n            const {\n              itemIds = [],\n            } = payload as {\n              itemIds: { id: string } []\n            }\n            // const itemIds = items.map((item) => item.id)\n            // const itemIndex = draft.nodes.findIndex((node) => node.id === item.id)\n            // draft.nodes.splice(itemIndex, 1)\n            draft.nodes = draft.nodes.filter((nodeItem) => !itemIds.includes(nodeItem.id))\n            draft.edges = draft.edges.filter(\n              (edgeItem) => !itemIds.includes(edgeItem.source)\n              && !itemIds.includes(edgeItem.target),\n            )\n            if (draft.mode === EDITOR_MODE.DELETE) {\n              draft.mode = EDITOR_MODE.DEFAULT\n            }\n            break\n          }\n          case EVENT.ADD_EDGE: {\n            draft.edges = draft.edges.concat(payload.items)\n            // const {\n            //   id,\n            //   source,\n            //   target,\n            // } = payload\n            // draft.edges.push({\n            //   id,\n            //   source,\n            //   target,\n            //   data: {},\n            // })\n            if (draft.mode === EDITOR_MODE.ADD) {\n              draft.mode = EDITOR_MODE.DEFAULT\n            }\n            break\n          }\n          case EVENT.DELETE_EDGE: {\n            const {\n              itemIds = [],\n            } = payload as {\n              itemIds: { id: string } []\n            }\n            // const itemIds = items.map((item) => item.id)\n            draft.edges = draft.edges.filter((edgeItem) => !itemIds.includes(edgeItem.id))\n            if (draft.mode === EDITOR_MODE.DELETE) {\n              draft.mode = EDITOR_MODE.DEFAULT\n            }\n            break\n          }\n          case EVENT.PRESS_BACKGROUND: {\n            draft.selectedElementIds = []\n            break\n          }\n          case EVENT.ELEMENT_SELECTED_WITH_ZOOM: {\n            const {\n              itemIds,\n            } = payload\n            draft.selectedElementIds = itemIds\n            const {\n              selectedElement,\n            } = getSelectedElementInfo({\n              ...state,\n              selectedElementIds: itemIds,\n            }, graphEditor)\n            if (selectedElement) {\n              const {\n                viewport,\n              } = graphEditor\n              const TARGET_SIZE = 2000 // viewport.hitArea.width / 2// 800\n              // const MARGIN_SIZE = 180\n\n              // element.neighborhood().layout({\n              //   ...Graph.Layouts.circle,\n              //   boundingBox: {\n              //     x1: center.x - TARGET_SIZE / 2,\n              //     y1: center.y - TARGET_SIZE / 3,\n              //     w: TARGET_SIZE / 2,\n              //     h: TARGET_SIZE / 2,\n              //   },\n              // }).start()\n              // if (viewport.hitArea.width === TARGET_SIZE) {\n              //   TARGET_SIZE += 500\n              // }\n              let position\n              if (selectedElement.isNode()) {\n                position = selectedElement.position()\n              } else {\n                position = V.midpoint(\n                  selectedElement.source().position(),\n                )(selectedElement.target().position())\n              }\n              const center = {\n                x: position.x + TARGET_SIZE / 4,\n                y: position.y,\n              }\n              const centerPoint = new PIXI.Point(center.x, center.y)\n              viewport.center = centerPoint\n              // viewport.snapZoom({\n              //   center: centerPoint,\n              //   width: TARGET_SIZE,\n              //   forceStart: true,\n              //   time: Graph.Layouts.grid.animationDuration + 500,\n              //   removeOnComplete: true,\n              //   removeOnInterrupt: true,\n              //   noMove: false,\n              // })\n            }\n\n            break\n          }\n          case EVENT.ELEMENT_SELECTED: {\n            const {\n              itemIds,\n            } = payload\n            draft.selectedElementIds = itemIds\n            const {\n              selectedElement,\n            } = getSelectedElementInfo({\n              ...state,\n              selectedElementIds: itemIds,\n            }, graphEditor)\n            if (event && event.data!.originalEvent.metaKey && selectedElement?.isNode()) {\n              draft.dataBar!.isOpen = true\n              const {\n                viewport,\n              } = graphEditor\n              const TARGET_SIZE = 2000 // viewport.hitArea.width / 2// 800\n              // const MARGIN_SIZE = 180\n              const position = selectedElement.position()\n              const center = {\n                x: position.x + TARGET_SIZE / 4,\n                y: position.y,\n              }\n              selectedElement.neighborhood().layout({\n                ...Graph.Layouts.circle,\n                boundingBox: {\n                  x1: center.x - TARGET_SIZE / 2,\n                  y1: center.y - TARGET_SIZE / 3,\n                  w: TARGET_SIZE / 2,\n                  h: TARGET_SIZE / 2,\n                },\n              }).start()\n              viewport.snapZoom({\n                center: new PIXI.Point(center.x, center.y),\n                width: TARGET_SIZE,\n                forceStart: true,\n                time: Graph.Layouts.grid.animationDuration + 500,\n                removeOnComplete: true,\n                removeOnInterrupt: true,\n              })\n            }\n\n            break\n          }\n          case EVENT.FOCUS: {\n            const {\n              itemIds = [],\n            } = payload\n            if (!draft.previousDataList) {\n              draft.previousDataList = []\n            }\n            draft.previousDataList.push({\n              nodes: draft.nodes.map((node) => ({ ...node, position: {\n                x: graphEditor?.cy.$id(node.id).position().x,\n                y: graphEditor?.cy.$id(node.id).position().y,\n              }, \n              })),\n              edges: draft.edges,\n            })\n            draft.nodes = draft.nodes.filter((nodeItem) => itemIds.includes(nodeItem.id))\n            draft.edges = draft.edges.filter(\n              (edgeItem) => itemIds.includes(edgeItem.source)\n              && itemIds.includes(edgeItem.target),\n            )\n            draft.isFocusMode = true\n            break\n          }\n          case EVENT.DEFOCUS: {\n            if (draft.previousDataList) {\n              const previousData =  draft.previousDataList.pop()\n              draft.nodes = previousData.nodes\n              draft.edges = previousData.edges\n              if (draft.previousDataList.length === 0) {\n                draft.isFocusMode = false\n              }\n            }\n            break\n          }\n          case EVENT.MODE_CHANGED: {\n            draft.mode = payload.value\n            // localDataRef.current.targetNode.current = null\n            break\n          }\n          case EVENT.CHANGE_DATA_NAME:\n            targetDataList[index].name = payload.value\n            break\n          case EVENT.CHANGE_DATA_VALUE:\n            targetDataList[index].value[payload.valueIndex] = getValueByType(\n              dataItem.type!,\n              payload.value,\n            )\n            break\n          case EVENT.ADD_DATA_VALUE:\n            targetDataList[index].value.push(payload.value)\n            break\n          case EVENT.DELETE_DATA_VALUE:\n            targetDataList[index].value.splice(payload.valueIndex, 1)\n            break\n          case EVENT.DATA_VALUE_UP: {\n            const { value } = targetDataList[index]\n            const { length } = value\n            const temporary = value[payload.valueIndex]\n            const changeIndex = (payload.valueIndex === 0\n              ? (length - 1)\n              : (payload.valueIndex - 1)) % length\n            value[payload.valueIndex] = value[changeIndex]\n            value[changeIndex] = temporary\n            break\n          }\n          case EVENT.DATA_VALUE_DOWN: {\n            const { value } = targetDataList[index]\n            const { length } = value\n            const temporary = value[payload.valueIndex]\n            const changeIndex = (payload.valueIndex + 1) % length\n            value[payload.valueIndex] = value[changeIndex]\n            value[changeIndex] = temporary\n            break\n          }\n          case EVENT.DELETE_DATA:\n            targetDataList.splice(index, 1)\n            break\n\n          case EVENT.CHANGE_DATA_NAME_ADDITIONAL: {\n            const additionalItem = targetDataList[index]!.additional![payload.index]!\n            additionalItem.name = payload.value\n            break\n          }\n          case EVENT.CHANGE_DATA_VALUE_ADDITIONAL: {\n            const additionalItem = targetDataList[index]!.additional![payload.index]\n            targetDataList[index]!.additional![\n              payload.index\n            ].value[payload.valueIndex] = getValueByType(\n              additionalItem.type, payload.value,\n            )\n            break\n          }\n          case EVENT.ADD_DATA_ADDITIONAL:\n            targetDataList[index]!.additional!.push(payload)\n            break\n          case EVENT.ADD_DATA_VALUE_ADDITIONAL: {\n            targetDataList[index]!.additional![payload.index].value.push(payload.value)\n            break\n          }\n          case EVENT.DELETE_DATA_VALUE_ADDITIONAL:\n            targetDataList[index]!.additional![payload.index].value.splice(payload.valueIndex, 1)\n            break\n          case EVENT.DELETE_DATA_ADDITIONAL:\n            targetDataList[index]!.additional!.splice(payload.index, 1)\n            break\n          case EVENT.TOGGLE_FILTER_BAR:\n            draft.settingsBar!.isOpen = !draft.settingsBar?.isOpen\n            break\n          case EVENT.TOGGLE_DATA_BAR:\n            draft.dataBar!.isOpen = !draft.dataBar?.isOpen\n            break\n          case EVENT.TOGGLE_ACTION_BAR:\n            draft.actionBar!.isOpen = !draft.actionBar?.isOpen\n            break\n          case EVENT.IMPORT_DATA:\n\n            R.mapObjIndexed((value, key) => {\n              // @ts-ignore\n              draft[key] = value\n            })(payload.value)\n            const {\n              eventHistory: eventHistoryData,\n            } = payload.value ?? {}\n            eventHistory.set({\n              currentIndex: eventHistoryData.events.length,\n              items: eventHistoryData.events.map((event, i) => ({\n                id: R.uuid(),\n                do: [event],\n                undo: [eventHistoryData.undoEvents[i]],\n              })),\n            })\n            break\n          case EVENT.IMPORT_EVENTS:\n            closeAllBars(draft)\n            draft.events = [...(payload.value ?? [])]\n            break\n          case EVENT.PLAY_EVENTS:\n            closeAllBars(draft)\n            draft.events = [...(payload.events ?? [])]\n            break\n          case EVENT.APPLY_EVENTS:\n            payload.events.map((event: EventInfo) => onEvent(event))\n            break\n          case EVENT.EXPORT_DATA:\n            download(payload.value, 'perfect-graph.json')\n            break\n          case EVENT.TOGGLE_RECORD:\n            draft.actionBar!.recording = !draft.actionBar?.recording\n            break\n          case EVENT.TOGGLE_RECORD_EVENTS:\n            if (draft.actionBar?.eventRecording) {\n              download(JSON.stringify(localDataRef.current.recordedEvents), 'recorded-events.json')\n              localDataRef.current.recordedEvents = []\n            }\n            draft.actionBar!.eventRecording = !draft.actionBar?.eventRecording\n            break\n          case EVENT.RECORD_FINISHED:\n            download(eventInfo.payload.value, 'perfect-graph.mp4')\n            break\n          case EVENT.LAYOUT_CHANGED: {\n            let layout: any\n            if (payload.value.name) {\n              layout = R.pickBy((val) => R.isNotNil(val))({\n                // @ts-ignore\n                ...GraphLayouts[payload.value.name],\n                ...payload.value,\n              })\n            }\n            draft.graphConfig!.layout = layout\n            break\n          }\n          case EVENT.SET_POSITIONS_IMPERATIVELY: {\n            const {\n              positions,\n              oldLayout,\n            } = payload\n            type PositionItem = {\n              elementId: string;\n              position: Position;\n            }\n            positions.forEach((positionItem: PositionItem) => {\n              graphEditor?.cy.$id(positionItem.elementId).position(positionItem.position)\n            })\n            draft.graphConfig!.layout = oldLayout\n            break\n          }\n\n          case EVENT.SET_NODE_LOCAL_LABEL: {\n            const {\n              value,\n            } = payload\n            draft.label!.nodes[eventRelatedItem!.id] = value\n            break\n          }\n          case EVENT.CLEAR_NODE_LOCAL_LABEL: {\n            delete draft.label!.nodes[eventRelatedItem!.id]\n            break\n          }\n          case EVENT.TOGGLE_NODE_GLOBAL_LABEL_FIRST: {\n            draft.label!.isGlobalFirst!.nodes = !draft.label?.isGlobalFirst!.nodes\n            break\n          }\n          case EVENT.SET_NODE_GLOBAL_LABEL: {\n            const {\n              value,\n            } = payload\n            draft.label!.global.nodes = value\n            break\n          }\n          case EVENT.CLEAR_NODE_GLOBAL_LABEL: {\n            draft.label!.global!.nodes! = []\n            break\n          }\n          case EVENT.SELECT_CLUSTER: {\n            const {\n              itemIds = [],\n            } = payload\n            const selectedClusters = draft.graphConfig?.clusters?.filter(\n              (cluster) => itemIds.includes(cluster.id),\n            )\n            draft.selectedElementIds = R.concatAll(\n              selectedClusters!.map((cluster) => cluster.ids),\n            )\n            break\n          }\n          case EVENT.DELETE_CLUSTER: {\n            const {\n              itemIds = [],\n            } = payload\n            draft.graphConfig!.clusters = draft.graphConfig?.clusters?.filter(\n              (cluster) => !itemIds.includes(cluster.id),\n            )\n            break\n          }\n          case EVENT.DELETE_CLUSTER_ELEMENT: {\n            const {\n              clusterId,\n              itemIds = [],\n            } = payload\n            const selectedCluster = draft.graphConfig?.clusters?.find(\n              (cluster) => cluster.id === clusterId,\n            )\n            selectedCluster!.ids = selectedCluster!.ids.filter(\n              (id) => !itemIds.includes(id),\n            )\n            break\n          }\n          case EVENT.CREATE_CLUSTER: {\n            const {\n              items = [],\n            } = payload\n            draft.graphConfig!.clusters = draft.graphConfig?.clusters?.concat(items)\n            break\n          }\n          case EVENT.PRESS_ADD_CLUSTER_ELEMENT: {\n            if (draft.mode === EDITOR_MODE.ADD_CLUSTER_ELEMENT) {\n              draft.mode = EDITOR_MODE.DEFAULT\n              return\n            }\n            draft.mode = EDITOR_MODE.ADD_CLUSTER_ELEMENT\n            break\n          }\n          case EVENT.ADD_CLUSTER_ELEMENT: {\n            const {\n              clusterId,\n              itemIds,\n            } = payload\n            const selectedCluster = draft.graphConfig?.clusters?.find(\n              (cluster) => cluster.id === clusterId,\n            )\n            selectedCluster!.ids = R.union((selectedCluster?.ids ?? []), itemIds)\n            break\n          }\n          case EVENT.CHANGE_CLUSTER_VISIBILITY: {\n            const {\n              clusterId,\n              value,\n            } = payload\n            const selectedCluster = draft.graphConfig?.clusters?.find(\n              (cluster) => cluster.id === clusterId,\n            )\n            selectedCluster!.visible = value\n            break\n          }\n          case EVENT.DELETE_HISTORY_ITEM: {\n            const {\n              itemIds = [],\n            } = payload\n            eventHistory.delete(eventHistory.getEventIdsByDoItemIds(itemIds))\n            break\n          }\n          case EVENT.REORDER_HISTORY_ITEM: {\n            const {\n              fromIndex,\n              toIndex,\n            } = payload\n            eventHistory.reorder(\n              fromIndex,\n              toIndex,\n            )\n            break\n          }\n          // case EVENT.CREATE_CLUSTER_BY_ALGORITHM: {\n          // const {\n          //   config = {},\n          //   name,\n          // } = payload\n          // const clusterResult = Clusters[name].getByItem({\n          //   cy: graphEditor?.cy,\n          //   nodes: draft.nodes,\n          //   edges: draft.edges,\n          //   ...config,\n          // })\n          //   // draft.graphConfig.layout = oldLayout\n          //   break\n          // }\n          case EVENT.REORDER_CLUSTER: {\n            const {\n              fromIndex,\n              toIndex,\n            } = payload\n            draft.graphConfig!.clusters = R.reorder(\n              fromIndex,\n              toIndex,\n              draft.graphConfig!.clusters!,\n            )\n            break\n          }\n          case EVENT.CREATE_PLAYLIST: {\n            const {\n              items = [],\n            } = payload\n            draft.playlists = draft.playlists!.concat(items)\n            break\n          }\n          case EVENT.REORDER_PLAYLIST: {\n            const {\n              fromIndex,\n              toIndex,\n            } = payload\n            draft.playlists = R.reorder(\n              fromIndex,\n              toIndex,\n              draft.playlists!,\n            )\n            break\n          }\n          case EVENT.DELETE_PLAYLIST: {\n            const {\n              itemIds = [],\n            } = payload\n            draft.playlists = draft.playlists!.filter((playlist) => !itemIds.includes(playlist.id))\n            break\n          }\n          case EVENT.ELEMENT_SETTINGS: {\n            if (draft.modals?.ElementSettings) {\n              draft.modals.ElementSettings.isOpen = true\n            }\n            break\n          }\n          case EVENT.ELEMENT_SETTINGS_FORM_SUBMIT: {\n            const {\n              name,\n              value,\n            } = payload\n            // draft.modals.ElementSettings.isOpen = true\n            switch (name) { \n              case 'Visualization':\n\n                break\n            \n              default:\n                break\n            }\n            break\n          }\n          case EVENT.CLOSE_MODAL: {\n            const {\n              name,\n            } = payload\n            draft.modals[name].isOpen = false\n            break\n          }\n          default:\n            break\n        }\n      } catch (error) {\n        console.log('error', error)\n      }\n    })\n  }, [state])\n\n  return [\n    // @ts-ignore\n    {\n      ...state,\n      ...(\n        !_graphEditorRef\n          ? { ref: localGraphEditorRef }\n          : {}\n      ),\n      eventHistory: {\n        currentIndex: eventHistory.record.currentIndex - 1,\n        events: R.unnest(\n          R.map((item) => item.do, eventHistory.record.items),\n        ),\n        undoEvents: R.unnest(\n          R.map((item) => item.undo, eventHistory.record.items),\n        ),\n      },\n      onEvent,\n    } as Pick<GraphEditorProps, 'nodes' | 'edges' | 'onEvent' | 'graphConfig' | 'eventHistory'>,\n    {\n      update,\n      onEvent,\n    },\n  ]\n}\n\nconst getValueByType = (type: RDFType, value: string) => value\n\nconst DEFAULT_CONTROLLER_CONFIG: UseControllerData = {\n  nodes: [],\n  edges: [],\n  isLoading: false,\n  label: {\n    global: { nodes: ['id'], edges: ['id'] },\n    nodes: {},\n    edges: {},\n    isGlobalFirst: {\n      edges: false,\n      nodes: false,\n    },\n  } as GraphLabelData,\n  actionBar: {\n    isOpen: false,\n  },\n  dataBar: {\n    isOpen: false,\n  },\n  settingsBar: {\n    isOpen: false,\n  },\n  mode: EDITOR_MODE.DEFAULT as EditorMode,\n  selectedElementIds: [] as string[] | undefined,\n  graphConfig: {\n    clusters: [],\n  },\n  playlists: [\n    // {\n    //   id: R.uuid(),\n    //   name: 'My playlist',\n    //   events: MOCK_DATA.events,\n    // },\n    // {\n    //   id: R.uuid(),\n    //   name: 'My playlist2',\n    //   events: MOCK_DATA.events,\n    // },\n  ],\n  modals: {\n    ElementSettings: {\n      isOpen: false,\n      render: ElementSettingsModal,\n    },\n  },\n}\n","import * as R from 'colay/ramda'\n// import mergeAllOf from 'json-schema-merge-allof'\n// @ts-ignore\nimport toJSONSchema from 'to-json-schema'\n\nexport const createSchema = (itemList: any[]) => {\n  const options = {\n    objects: { additionalProperties: false },\n    arrays: { mode: 'tuple' },\n  }\n  return {\n    ...toJSONSchema(R.mergeAll(itemList), options),\n    title: 'Filter',\n  }\n  // const allOf = itemList.map((item) => {\n  //   let baseSchema\n  //   try {\n  //     baseSchema = toJSONSchema(item, options)\n  //   } catch (error) {\n  //     baseSchema = null\n  //   }\n  //   return baseSchema\n  // }).filter((item) => item !== null)\n  // const schema = {\n  //   type: ['object'],\n  //   // additionalProperties: {\n  //   //   type: 'string',\n  //   //   minLength: 5\n  //   // },\n  //   title: 'Filter',\n  //   allOf,\n  // }\n  // return mergeAllOf(schema)\n}\n// export const createSchema = (itemList: object[]) => {\n//   let required: string[] = []\n//   let baseSchema = { properties: { } }\n//   itemList.map((item: object) => {\n//     const keys = Object.keys(item)\n//     if (R.isEmpty(required)) {\n//       required = keys\n//       // @ts-ignore\n//       baseSchema = toJSONSchema(item)\n//       return\n//     }\n//     const schema = toJSONSchema(item)\n//     baseSchema.properties = {\n//       ...baseSchema.properties,\n//       ...schema.properties,\n//     }\n//     required = R.intersection(required, keys)\n//   })\n//   return {\n//     ...baseSchema,\n//     required,\n//   }\n// }\n","import React from 'react'\nimport * as R from 'colay/ramda'\nimport * as PIXI from 'pixi.js'\nimport { Graph,  } from '../../src/components'\nimport { RenderNode as RenderNodeType,  } from '../../src/type'\n\n\nexport type RenderNodeProps = Parameters<RenderNodeType>[0]\n\nconst DEFAULT_FONT_SIZE = 20\nconst TOP_SCALE = 3.1\nexport const RenderNode = (props: RenderNodeProps) => {\n  const {\n    item, element, cy, theme,\n    visualization, \n    filtering,\n    labelPath,\n    label,\n   graphRef ,\n } = props\n  const text = R.takeLast(6, `${label}`)//item.id\n  const size = calculateNodeSize(item.data, visualization.nodeSize)\n  const color = visualization.nodeColor ? calculateColor(\n    item.data,\n    visualization.nodeColor\n  ) : theme.palette.background.paper\n  const hasSelectedEdge = element.connectedEdges(':selected').length > 0\n  const textRef = React.useRef(null)\n  const localDataRef = React.useRef({\n    scale: {\n      x: 1,\n      y: 1\n    },\n    text: {\n      top: - DEFAULT_FONT_SIZE * TOP_SCALE,\n      left:- DEFAULT_FONT_SIZE / 2, \n    }\n  })\n  React.useEffect(() => {\n    const onZoom = () => {\n        const xScale = 1/graphRef.current.viewport.scale.x\n        const yScale = 1/graphRef.current.viewport.scale.y\n        localDataRef.current.scale.x = xScale\n        localDataRef.current.scale.y = yScale\n        if (xScale >= 1 && xScale <= 5) {\n          textRef.current.scale.x = xScale\n          textRef.current.scale.y = yScale\n          const top =  - DEFAULT_FONT_SIZE * yScale\n          const left =  - (DEFAULT_FONT_SIZE / 2) * xScale\n          textRef.current.x = left\n          textRef.current.y = top\n          return\n        }\n    }\n    if (graphRef.current.viewport) {\n      onZoom()\n      graphRef.current.viewport.on('zoomed',onZoom)\n    }\n    return () => {\n      if (graphRef.current.viewport) {\n        graphRef.current.viewport.off('zoomed',onZoom)\n      }\n    }\n  }, [graphRef.current.viewport])\n  return (\n    <Graph.View\n      style={{\n        width: size,\n        height: size,\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        backgroundColor: hasSelectedEdge\n        ? theme.palette.secondary.main\n        : (\n          element.selected()\n          ? theme.palette.primary.main\n          : (\n            element.hovered()\n            ? theme.palette.secondary.main\n            : color\n            )\n          ),\n        borderRadius: size,\n      }}\n      pointertap={(e) => {\n        cy.$(':selected').unselect()\n        element.select()\n      }}\n    >\n      <Graph.Text\n        ref={textRef}\n        style={{\n          position: 'absolute',\n          left: localDataRef.current.text.left,\n          top: localDataRef.current.text.top  - size/3,\n          fontSize: DEFAULT_FONT_SIZE\n        }}\n        isSprite\n      >\n        {text}\n      </Graph.Text>\n    </Graph.View>\n  )\n}\n\nconst NODE_SIZE = {\n  width: 80,\n  height: 80,\n}\n\nconst NODE_SIZE_RANGE_MAP = {\n  size: [60, 250],\n  community: [0, 10],\n  in_degree: [0, 10],\n  out_degree: [0, 10],\n  degree: [0, 20],\n  year: [\n    1969,\n    2015\n  ],\n}\nconst calculateNodeSize = (data: object, fieldName?: keyof typeof NODE_SIZE_RANGE_MAP) => {\n  if (!fieldName) {\n    return NODE_SIZE_RANGE_MAP.size[0]\n  }\n  const fieldRange = NODE_SIZE_RANGE_MAP[fieldName]\n  const sizeRangeGap = NODE_SIZE_RANGE_MAP.size[1] - NODE_SIZE_RANGE_MAP.size[0]\n  const fieldRangeGap = fieldRange[1] - fieldRange[0]\n  const fieldRangeValue = (data[fieldName] ?? fieldRange[0]) - fieldRange[0]\n  return  ((fieldRangeValue / fieldRangeGap) * sizeRangeGap) + NODE_SIZE_RANGE_MAP.size[0]\n}\nconst calculateColor = (data: object, fieldName?: keyof typeof NODE_SIZE_RANGE_MAP) => {\n  if (!fieldName) {\n    return perc2color(0)\n  }\n  const fieldRange = NODE_SIZE_RANGE_MAP[fieldName]\n  const sizeRangeGap = NODE_SIZE_RANGE_MAP.size[1] - NODE_SIZE_RANGE_MAP.size[0]\n  const fieldRangeGap = fieldRange[1] - fieldRange[0]\n  const fieldRangeValue = (data[fieldName] ?? fieldRange[0]) - fieldRange[0]\n  return  perc2color((fieldRangeValue / fieldRangeGap) * 100)\n}\nconst perc2color = (\n  perc: number,\n  min = 20, \n  max = 80\n) => {\n  var base = (max - min);\n\n  if (base === 0) { perc = 100; }\n  else {\n      perc = (perc - min) / base * 100; \n  }\n  var r, g, b = 0;\n  if (perc < 50) {\n      r = 255;\n      g = Math.round(5.1 * perc);\n  }\n  else {\n      g = 255;\n      r = Math.round(510 - 5.10 * perc);\n  }\n  var h = r * 0x10000 + g * 0x100 + b * 0x1;\n  return '#' + ('000000' + h.toString(16)).slice(-6);\n}\n","import React from 'react'\nimport * as R from 'colay/ramda'\nimport * as PIXI from 'pixi.js'\nimport { Graph,  } from '../../src/components'\nimport { RenderEdge as RenderEdgeType,  } from '../../src/type'\n\n\nexport type RenderEdgeProps = Parameters<RenderEdgeType>[0]\n\nconst DEFAULT_FONT_SIZE = 16\n\nexport const RenderEdge = ({\n   item, element, cy, theme,\n   visualization, \n   filtering,\n  graphRef \n}: RenderEdgeProps) => {\n  const text = R.takeLast(6, item.id)\n  const textRef = React.useRef(null)\n  const configRef = React.useRef({\n    fontSize: DEFAULT_FONT_SIZE\n  })\n  React.useEffect(() => {\n    const onZoom = () => {\n      const xScale = 1/graphRef.current.viewport.scale.x\n        const yScale = 1/graphRef.current.viewport.scale.y\n        if (xScale >= 1 && xScale <= 5){\n          textRef.current.scale.x = xScale\n          textRef.current.scale.y = yScale\n        }\n    }\n    if (graphRef.current.viewport) {\n      onZoom()\n      graphRef.current.viewport.on('zoomed', onZoom)\n    }\n    return () => {\n      if (graphRef.current.viewport) {\n        graphRef.current.viewport.off('zoomed', onZoom)\n      }\n    }\n    \n  }, [graphRef.current.viewport])\n  \n  return (\n    <Graph.View\n              interactive\n              style={{\n                position: 'absolute',\n                justifyContent: 'center',\n                alignItems: 'center',\n                display: 'flex',\n              }}\n              pointertap={() => {\n                cy.$(':selected').unselect()\n                element.select()\n              }}\n            >\n              <Graph.Text\n                ref={textRef}\n                style={{\n                  // position: 'absolute',\n                  // top: -40,\n                  // backgroundColor: DefaultTheme.palette.background.paper,\n                  fontSize: DEFAULT_FONT_SIZE\n                }}\n                isSprite\n              >\n                {text}\n              </Graph.Text>\n            </Graph.View>\n  )\n}\n\n","import Amplify, { API } from \"aws-amplify\";\n// import awsExports from \"./aws-exports\";\n\nconst API_AUTH_MODE = {\n  API_KEY: 'API_KEY'\n} as const\n\nconst convertJSONStringFields = (item) => {\n  return {\n    ...item,\n    ...(item.position ? { position: JSON.parse(item.position) } : {}),\n    data: JSON.parse(item.data)\n  }\n}\n\nconst LIST_CASES = `query QueryNetworkByUserInput(\n  $DataSources: [String]\n  $Keywords: String\n  $Articles: String\n  $Eclis: String\n  $DegreesSources: Int\n  $DegreesTargets: Int\n  $DateStart: AWSDate\n  $DateEnd: AWSDate\n  $Instances: [String]\n  $Domains: [String]\n  $Doctypes: [String]\n) {\n  queryNetworkByUserInput(\n    DataSources: $DataSources\n    Keywords: $Keywords\n    Articles: $Articles\n    Eclis: $Eclis\n    DegreesSources: $DegreesSources\n    DegreesTargets: $DegreesTargets\n    DateStart: $DateStart\n    DateEnd: $DateEnd\n    Instances: $Instances\n    Domains: $Domains\n    Doctypes: $Doctypes\n  ) {\n    nodes {\n      id\n      data\n    }\n    edges {\n      id\n      source\n      target\n      data\n    }\n    statistics\n    message\n  }\n}`\n\nconst GET_ELEMENT_DATA = `query GetElementData($id: String) {\n  fetchNodeData(Ecli: $id) {\n    data\n    id\n  }\n}`\n\nconst TEST_AUTH = `query TestAuth($id: String) {\n  testAuth(Ecli: $id) {\n    data\n    id\n  }\n}`\n\ntype listCasesVariables = {\n  DataSources: string[];\n}\n\nexport async function listCases(variables: listCasesVariables) {\n  try {\n    console.log(variables)\n    const listCasesResult = await API.graphql({\n      query: LIST_CASES,\n      // authMode: API_AUTH_MODE.API_KEY,\n      variables\n    })\n\n    const caseResults = listCasesResult.data.queryNetworkByUserInput\n    console.log(caseResults)\n\n    return {\n      nodes: caseResults.nodes.map(convertJSONStringFields),\n      edges: caseResults.edges.map(convertJSONStringFields),\n      networkStatistics: JSON.parse(caseResults.statistics),\n      message: caseResults.message,\n      // edges: project.edges.items.map(convertJSONStringFields),\n    }\n\n    // return caseResults.map(project => ({\n    //   // ...project,\n    //   nodes: project.nodes.items.map(convertJSONStringFields),\n    //   // edges: project.edges.items.map(convertJSONStringFields),\n    // }))\n  } catch (err) {\n    console.log('error creating node:', err)\n  }\n}\n\nconst COMPLEX_QUERY = `query ListCases($query) {\n  complexQuery(query: $query) {\n    items {\n      abstract\n      country\n      court\n      date\n      doctype\n      id\n      subject\n    }\n  }\n}`\n\nexport async function complexQuery(query: any) {\n  try {\n    const listCasesResult = await API.graphql({\n      query: COMPLEX_QUERY,\n      // authMode: API_AUTH_MODE.API_KEY,\n      variables: query\n    })\n    const caseResults = listCasesResult.data.listCaselaws.items\n    return caseResults\n    // return caseResults.map(project => ({\n    //   // ...project,\n    //   nodes: project.nodes.items.map(convertJSONStringFields),\n    //   // edges: project.edges.items.map(convertJSONStringFields),\n    // }))\n  } catch (err) {\n    console.log('error creating node:', err)\n  }\n}\n\ntype GetElementDataVariables = {\n  id: string;\n}\n\nexport async function getElementData(variables: GetElementDataVariables) {\n  try {\n    const elementDataResult = await API.graphql({\n      query: GET_ELEMENT_DATA,\n      // authMode: API_AUTH_MODE.API_KEY,\n      variables\n    })\n    const result = elementDataResult.data.fetchNodeData.data\n    return result ? JSON.parse(result) : {}\n    // return caseResults.map(project => ({\n    //   // ...project,\n    //   nodes: project.nodes.items.map(convertJSONStringFields),\n    //   // edges: project.edges.items.map(convertJSONStringFields),\n    // }))\n  } catch (err) {\n    console.log('error getElementData node:', err)\n  }\n}\n\n\nexport async function testAuth(variables: GetElementDataVariables) {\n  try {\n    const elementDataResult = await API.graphql({\n      query: TEST_AUTH,\n      // authMode: API_AUTH_MODE.API_KEY,\n      variables\n    })\n    const result = elementDataResult.data.testAuth.data\n    return result ? JSON.parse(result) : {}\n  } catch (err) {\n    console.log('error testAuth:', err)\n  }\n}","import React from 'react'\nimport { Button, Slider, Typography } from '@mui/material'\n\nconst SliderUIField = ({ formData, schema, onChange, name }) => {\n\n  return (\n    <>\n      <Typography id={`${schema.title}-continuous-slider`} gutterBottom>\n        {schema.title ?? name}\n      </Typography>\n      <Slider\n        value={formData ?? [schema.minimum, schema.maximum]}\n        onChange={(e) => {\n          onChange(e.target.value)\n        }}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby={`${schema.title}-continuous-slider`}\n        min={schema.minimum}\n        max={schema.maximum}\n      />\n    </>\n  )\n}\nexport const getQueryBuilderSchema = () => {\n  return {\n    // children: <div></div>,\n    schema: {\n      title: 'Fetch Data',\n      type: 'object',\n      required: [\n        // 'title',\n        // 'year',\n        // 'rechtsgebied',\n        // 'adjustLayout',\n      ],\n      additionalProperties: false,\n      properties: {\n        DataSources: {\n          type: 'array',\n          title: 'Data sources',\n          uniqueItems: true,\n          items: {\n            enum: [\n              'RS',\n              'ECHR',\n              'Eurlex'\n            ],\n            enumNames: [\n              'Rechtspraak',\n              'European Court of Human Rights',\n              'Eurlex'\n            ],\n            type: 'string'\n          },\n        },\n        Eclis: {\n          type: 'string',\n          title: 'ECLIs'\n        },\n        Keywords: {\n          type: 'string',\n          title: 'Keywords'\n        },\n        Articles: {\n          type: 'string',\n          title: 'Articles'\n        },\n        Date: {\n          type: 'array',\n          title: 'Date',\n          items: {\n            type: 'number',\n          },\n          minimum: 1969,\n          maximum: 2015,\n        },\n        Instances: {\n          type: 'array',\n          title: 'Instances',\n          uniqueItems: true,\n          items: {\n            enum: [\n              '',\n              'Hoge Raad',\n              'Raad van State',\n              'Centrale Raad van Beroep',\n              'College van Beroep voor het bedrijfsleven',\n              'Gerechtshof Arnhem-Leeuwarden',\n              'Gerechtshof Amsterdam'\n            ],\n            type: 'string'\n          },\n        },\n        Domains: {\n          type: 'array',\n          title: 'Domains',\n          uniqueItems: true,\n          items: {\n            enum: [\n              '',\n              'Not',\n              'Sure',\n              'What'\n            ],\n            type: 'string'\n          },\n        },\n        Doctypes: {\n          type: 'array',\n          title: 'Document types',\n          uniqueItems: true,\n          items: {\n            enum: [\n              '',\n              'DEC',\n              'OPI'\n            ],\n            enumNames: [\n              '',\n              'Decision',\n              'Opinion'\n            ],\n            type: 'string'\n          },\n        },\n        DegreesSources: {\n          type: 'integer',\n          title: 'Degrees Sources',\n          minimum: 1,\n          maximum: 5,\n        },\n        DegreesTargets: {\n          type: 'integer',\n          title: 'Degrees Targets',\n          minimum: 1,\n          maximum: 5,\n        },\n      },\n    },\n    uiSchema: {\n      'Date': {\n        'ui:field': SliderUIField,\n      },\n      // 'degreesSources': {\n      //   'ui:field': SliderUIField,\n      // },\n      // 'degreesTargets': {\n      //   'ui:field': SliderUIField,\n      // },\n      // 'source':{\n      //   'ui:widget': 'checkboxes'\n      // },\n      // 'liPermission':{\n      //   'ui:widget': 'select'\n      // },\n    }\n  }\n}","// @ts-nocheck\nimport React from 'react'\nimport Form from '@rjsf/material-ui'\nimport * as API from '../API'\nimport { Modal, Button, Box, Typography, TextField, Paper,IconButton } from '@mui/material'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { getQueryBuilderSchema } from './constants'\n\nexport type QueryBuilderProps = {\n  query: any;\n  onStart: () => void;\n  onError: (e: Error) => void;\n  onFinish: (data: any) => void;\n  onClose: () => void;\n  isOpen: boolean;\n}\n\nconst transformData = (data) => {\n  const date = data.Date;\n  console.log(date)\n  return {\n    \"DateStart\": `${date[0]}-01-01`,\n    \"DateEnd\": `${date[1]}-12-31`,\n    ...data\n  }\n}\n\nexport const QueryBuilder = (props: QueryBuilderProps) => {\n  const {\n    isOpen,\n    onStart,\n    onError,\n    onFinish,\n    query,\n    onClose\n  } = props\n\n  const [state, setState] = React.useState(query)\n  return (\n    <Modal\n      open={isOpen}\n      // onClose={onClose}\n      style={{\n        display: 'flex',\n        // flexDirection: 'column-reverse',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      BackdropProps={{\n        // style: {\n        //   backgroundColor: 'rgba(0, 0, 0, 0)',\n        // },\n        // onClick: () => {\n        // },\n      }}\n    >\n      <Paper style={{\n        display: 'flex',\n        flexDirection: 'column',\n        width: '80%',\n        height: '80%',\n        padding: 10,\n        overflow: 'scroll'\n      }}\n      >\n        \n        <Box\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            marginBottom: 10\n          }}\n        >\n          <Typography variant=\"h6\">Query Builder</Typography>\n          <IconButton \n            aria-label=\"Example\"\n            onClick={onClose}\n            // style={{\n            //   position: 'absolute',\n            //   right: 24,\n            //   top: 24\n            // }}\n          >\n            <CloseIcon  />\n          </IconButton>\n        </Box>\n        <Box\n          style={{\n            display: 'flex',\n            flexDirection: 'column'\n          }}\n        >\n          <Form\n            schema={getQueryBuilderSchema().schema}\n            uiSchema={getQueryBuilderSchema().uiSchema}\n            onChange={e => setState(e.formData)}\n            formData={state}\n            onSubmit={async e => {\n              onStart()\n              \n              try {\n                let casesData = await API.listCases(transformData(e.formData))\n                // let casesData = prepareData(cases)\n                // console.log('logCasesData',casesData)\n                if (casesData.nodes.length == 0) {\n                  throw new Error(\"No cases returned\")\n                }\n                else {\n                  onFinish({\n                    nodes: casesData.nodes,\n                    edges: casesData.edges,\n                    networkStatistics: casesData.networkStatistics,\n                    message: casesData.message,\n                  })\n                }\n              } catch (e) {\n                console.log(e)\n                onError(e)\n              }\n            }}\n          />\n        </Box>\n      </Paper>\n    </Modal>\n\n  )\n\n}\n\n\n","import {\n  Modal\n} from '@mui/material';\nimport React from 'react';\n\n\ntype HelpModalProps = {\n  isOpen: boolean\n  videoId: string\n  onClose: () => void\n}\n\nexport const HelpModal = (props: HelpModalProps) => {\n  const {\n    isOpen,\n    videoId,\n    onClose\n  } = props\n  return (\n    <Modal\n      open={isOpen}\n      onClose={onClose}\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <iframe\n        width=\"853\"\n        height=\"480\"\n        src={`https://www.youtube.com/embed/${videoId}`}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n        title=\"Embedded youtube\"\n      />\n    </Modal>\n  )\n}","/* eslint-disable */\n// @ts-nocheck\nimport React from 'react'\nimport * as R from 'colay/ramda'\nimport {\n  useTheme as useMuiTheme,\n  ThemeProvider as MuiThemeProvider,\n  createTheme as createMuiTheme,\n  Button,\n  Typography,\n  Backdrop,\n  CircularProgress,\n  Modal,\n  Slide,\n  Snackbar,\n  Alert,\n  AlertTitle,\n} from '@mui/material'\nimport { View, useForwardRef, useMeasure } from 'colay-ui'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\nimport {\n  DarkTheme,\n  DefaultTheme,\n  ThemeProvider,\n  useTheme\n} from '../../src/core/theme'\nimport { GraphRef } from '../../src/type'\nimport { GraphEditorProps, GraphEditor } from '../../src/components/GraphEditor'\nimport { Graph } from '../../src/components'\nimport { UseEffect } from '../../src/components/UseEffect'\nimport { drawLine } from '../../src/components/Graphics'\nimport defaultData from './data'\nimport * as C from 'colay/color'\nimport { getFilterSchema, getFetchSchema, VIEW_CONFIG_SCHEMA, RECORDED_EVENTS } from './constants'\nimport { EVENT } from '../../src/constants'\nimport { useController } from '../../src/plugins/controller'\nimport { createSchema } from '../../src/plugins/createSchema'\nimport { getSelectedItemByElement, getSelectedElementInfo } from '../../src/utils'\nimport { calculateStatistics } from './utils/networkStatistics'\nimport { RenderNode } from './RenderNode'\nimport { RenderEdge } from './RenderEdge'\nimport * as API from './API'\nimport { QueryBuilder } from './QueryBuilder'\nimport { HelpModal } from './HelpModal'\nimport { TermsOfService } from './TermsOfService'\n// import { Data } from '../../components/Graph/Default'\n// import { Auth } from 'aws-amplify'\nimport { useUser } from './useUser'\nimport GraphLayouts from '../../src/core/layouts'\n\nexport const ACTIONS = {\n  TEST_API: 'TEST_API',\n}\n\nconst HELP_VIDEO_ID = \"OrzMIhLpVps\"\n\nconst MUIDarkTheme = createMuiTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\nconst MUILightTheme = createMuiTheme({\n  palette: {\n    mode: 'light',\n  },\n});\nconst filterEdges = (nodes: { id: string }[]) => (edges: { source: string; target: string }[]) => {\n  const nodeMap = R.groupBy(R.prop('id'))(nodes)\n  return R.filter(\n    (edge) => nodeMap[edge.source] && nodeMap[edge.target]\n  )(edges)\n}\nconst CHUNK_COUNT = 3\nconst prepareData = (data) => {\n  const {\n    nodes,\n    edges\n  } = data\n  const preNodes = R.splitEvery(Math.ceil(nodes.length / CHUNK_COUNT))(nodes)[0]\n  const preEdges = filterEdges(preNodes)(edges)\n  return {\n    nodes: preNodes,\n    edges: preEdges\n  }\n}\n\nconst populate = (times, data) => ({\n  nodes: R.concatAll(R.times(()=>R.clone(data.nodes), times)).map(\n    (n, i) => i<data.nodes.length ? n : ({\n    ...n,\n    id: i, \n  })\n  ),\n  edges: R.concatAll(R.times(()=>R.clone(data.edges), times)).map(\n    (n, i) => i<data.edges.length ? n : ({\n    ...n,\n    id: i,\n  })\n  )\n})\n\nexport const createMockData = (nodeSize: number, edgeSize: number) => {\n  const nodes = R.range(0, nodeSize).map((index) => ({ id: `node-${index}` }) )\n  const edges = R.range(0, edgeSize).map((index) => ({ \n    id: `edge-${index}`,\n    source: `node-${Math.floor(Math.random() * nodeSize)}`,\n    target: `node-${Math.floor(Math.random() * nodeSize)}`,\n  }))\n  return {\n    nodes,\n    edges\n  }\n}\nconst COUNT = 1000\nconst data = createMockData(COUNT, COUNT)\n\n// const data = prepareData(defaultData)\n// const data = populate(4,prepareData(defaultData))\n\nconsole.log('NODES:', data.nodes.length, )\nconsole.log('EDGES:', data.edges.length, )\ntype Props = Partial<GraphEditorProps>\n\nconst NODE_SIZE = {\n  width: 80,\n  height: 80,\n}\n\nconst NODE_SIZE_RANGE_MAP = {\n  size: [60, 250],\n  community: [0, 10],\n  in_degree: [0, 10],\n  out_degree: [0, 10],\n  degree: [0, 20],\n  year: [\n    1969,\n    2015\n  ],\n}\nconst calculateNodeSize = (data: object, fieldName?: keyof typeof NODE_SIZE_RANGE_MAP) => {\n  if (!fieldName) {\n    return NODE_SIZE_RANGE_MAP.size[0]\n  }\n  const fieldRange = NODE_SIZE_RANGE_MAP[fieldName]\n  const sizeRangeGap = NODE_SIZE_RANGE_MAP.size[1] - NODE_SIZE_RANGE_MAP.size[0]\n  const fieldRangeGap = fieldRange[1] - fieldRange[0]\n  const fieldRangeValue = (data[fieldName] ?? fieldRange[0]) - fieldRange[0]\n  return ((fieldRangeValue / fieldRangeGap) * sizeRangeGap) + NODE_SIZE_RANGE_MAP.size[0]\n}\nconst calculateColor = (data: object, fieldName?: keyof typeof NODE_SIZE_RANGE_MAP) => {\n  if (!fieldName) {\n    return perc2color(0)\n  }\n  const fieldRange = NODE_SIZE_RANGE_MAP[fieldName]\n  const sizeRangeGap = NODE_SIZE_RANGE_MAP.size[1] - NODE_SIZE_RANGE_MAP.size[0]\n  const fieldRangeGap = fieldRange[1] - fieldRange[0]\n  const fieldRangeValue = (data[fieldName] ?? fieldRange[0]) - fieldRange[0]\n  return perc2color((fieldRangeValue / fieldRangeGap) * 100)\n}\nconst perc2color = (\n  perc: number,\n  min = 20,\n  max = 80\n) => {\n  var base = (max - min);\n\n  if (base === 0) { perc = 100; }\n  else {\n    perc = (perc - min) / base * 100;\n  }\n  var r, g, b = 0;\n  if (perc < 50) {\n    r = 255;\n    g = Math.round(5.1 * perc);\n  }\n  else {\n    g = 255;\n    r = Math.round(510 - 5.10 * perc);\n  }\n  var h = r * 0x10000 + g * 0x100 + b * 0x1;\n  return '#' + ('000000' + h.toString(16)).slice(-6);\n}\n\nconst AUTO_CREATED_SCHEMA = {\n  schema: createSchema(data.nodes)\n}\n\n\n\nconst DataBarHeader = () => {\n  // const [user] = useUser()\n  return (\n    <View\n      style={{ flexDirection: 'row', justifyContent: 'space-between' }}\n    >\n      {/* <Typography>{user?.attributes?.email}</Typography> */}\n      <Button\n        color=\"secondary\"\n        // onClick={() => Auth.signOut()}\n      >\n        Signout\n      </Button>\n    </View>\n  )\n}\n\nconst AppContainer = ({\n  changeMUITheme,\n  dispatch,\n  width,\n  height,\n  ...rest\n}) => {\n  const alertRef= React.useRef(null)\n  const configRef = React.useRef({\n    visualization: {\n      nodeSize: null,\n      nodeColor: null\n    },\n    fetching: {\n      source: [\n        \"Rechtspraak\"\n      ],\n      year: [\n        1969,\n        2015\n      ],\n      instances: [\n        \"Hoge Raad\",\n        \"Raad van State\",\n        \"Centrale Raad van Beroep\",\n        \"College van Beroep voor het bedrijfsleven\",\n        \"Gerechtshof Arnhem-Leeuwarden\"\n      ],\n      domains: [\n        \"Not\"\n      ],\n      doctypes: [\n        \"DEC\",\n        \"OPI\"\n      ],\n      degreesSources: 3,\n      popup: false,\n      liPermission: false,\n      keywords: \"test\",\n      degreesTargets: 3,\n      eclis: \"\",\n      articles: \"\"\n    },\n    filtering: {\n      year: [1960, 2021],\n      degree: [0, 100],\n      indegree: [0, 100],\n      outdegree: [0, 100]\n    }\n  })\n\n  const FILTER_SCHEMA = React.useMemo(() => getFilterSchema(), [])\n  const FETCH_SCHEMA = React.useMemo(() => getFetchSchema({\n    onPopupPress: async () => {\n      updateState((draft) => {\n        draft.queryBuilder.visible = true\n      })\n    }\n  }), [])\n  const THEMES = {\n    Dark: DarkTheme,\n    Default: DefaultTheme\n  }\n  const NODE_ID = 'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2014:3519'\n  const filteredDataRef = React.useRef({})\n  const [state, updateState] = useImmer({\n    queryBuilder: {\n      visible: false,\n      query: {\n        DataSources: [\n          \"RS\"\n        ],\n        Date: [\n          1969,\n          2015\n        ],\n        Instances: [\n          \"Hoge Raad\", \"Raad van State\",\n        ],\n        Domains: [\n          \"\"\n        ],\n        Doctypes: [\n          \"DEC\",\n          \"OPI\"\n        ],\n        DegreesSources: 1,\n        Keywords: \"\",\n        DegreesTargets: 1,\n        Eclis: \"ECLI:NL:GHSGR:1972:AB4988\",\n        Articles: \"\"\n      },\n    },\n    helpModal: {\n      isOpen: false,\n    }\n  })\n  const ActionBarRight = React.useMemo(() => () => (\n    <View\n      style={{ flexDirection: 'row' }}\n    >\n      <Button\n        onClick={() => updateState((draft) => {\n          draft.helpModal.isOpen = true\n        })}\n      >\n        Help\n      </Button>\n      <Button\n        onClick={() => dispatch({\n          type: ACTIONS.TEST_API\n        })}\n      >\n        Test the API\n      </Button>\n    </View>\n  ), [dispatch])\n  const [controllerProps, controller] = useController({\n    ...data,\n    // nodes: [],\n    // edges: [],\n    // events: RECORDED_EVENTS,\n    graphConfig: {\n      layout: Graph.Layouts.circle,\n      zoom: 0.2,\n      nodes: {},\n      clusters: [\n        // {\n        //   id: '123',\n        //   name: 'SimpleCluster',\n        //   ids: [\n        //      'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:XX:2010:BL0510'\n        //     // 'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2015:3019',\n        //     // 'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2015:644',\n        //     // 'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2014:3519'\n        //   ],\n        //   childClusterIds: []\n        // },\n        // {\n        //   id: '1234',\n        //   name: 'SimpleCluster2',\n        //   ids: [\n        //     'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2015:3019',\n        //     'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2015:644',\n        //     'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2014:3519'\n        //   ],\n        //   childClusterIds: []\n        // }\n      ]\n    },\n    // modals: {\n    //   ElementSettings: {\n    //     form: {\n    //       schema: FILTER_SCHEMA.schema,\n    //     },\n    //     isOpen: false\n    //   }\n    // },\n    preferencesModal: {\n      // isOpen: true,\n    },\n    settingsBar: {\n      opened: true,\n      // forms: [AUTO_CREATED_SCHEMA,FETCH_SCHEMA, VIEW_CONFIG_SCHEMA, {...FILTER_SCHEMA,  formData: configRef.current.filtering}, ],\n      forms: [{ ...FETCH_SCHEMA, formData: configRef.current.fetching }, VIEW_CONFIG_SCHEMA, { ...FILTER_SCHEMA, formData: configRef.current.filtering },],\n      createClusterForm: {\n        ...FILTER_SCHEMA,\n        schema: { ...FILTER_SCHEMA.schema, title: 'Create Cluster', },\n        formData: configRef.current.filtering\n      },\n    },\n    dataBar: {\n      // isOpen: true,\n      editable: true,\n      header: DataBarHeader,\n    },\n    actionBar: {\n      // isOpen: true,\n      right: ActionBarRight,\n      // autoOpen: true,\n      eventRecording: false,\n      actions: {\n        // add: { visible: false },\n        // delete: { visible: false },\n      },\n      theming: {\n        options: [\n          {\n            name: 'Dark',\n            value: 'Dark',\n          },\n          {\n            name: 'Default',\n            value: 'Default',\n          }\n        ],\n        value: 'Default'\n      },\n    },\n    onEvent: async ({\n      type,\n      payload,\n      elementId,\n      graphRef,\n      graphEditor,\n      update,\n      state,\n    }, draft) => {\n      const {\n        cy,\n      } = graphEditor\n      const element = cy.$id(elementId)\n      // const {\n      //   item: eventRelatedItem,\n      // } = (element && getSelectedItemByElement(element, draft)) ?? {}\n      switch (type) {\n        case EVENT.ELEMENT_SELECTED: {\n          // draft.isLoading = true\n          const {\n            itemIds,\n          } = payload\n          draft.selectedElementIds = itemIds\n          const {\n            selectedItem\n          } = getSelectedElementInfo(draft, graphEditor)\n          let elementData = null\n          // try {\n          //   elementData = await API.getElementData({ id: selectedItem.data.ecli });\n          // } catch (error) {\n          //   alertRef.current.alert({\n          //     text: JSON.stringify(error),\n          //     type: 'error'\n          //   })\n          //   console.error(error)\n          // }\n          if (elementData && !R.isEmpty(elementData)) {\n            selectedItem.data = elementData\n          } else {\n            // alertRef.current.alert({\n            //   type: 'warning',\n            //   text: 'Data is not available!'\n            // })\n          }\n          break\n        }\n        case EVENT.CREATE_CLUSTER_FORM_SUBMIT: {\n          const {\n            name,\n            formData,\n          } = payload\n          const {\n            year,\n            degree,\n            indegree,\n            outdegree\n          } = formData\n          const clusterItemIds = draft.nodes.filter((item) => {\n            const element = cy.$id(item.id)\n            return (\n              R.inBetween(year[0], year[1])(item.data.year)\n              && R.inBetween(degree[0], degree[1])(element.degree())\n              && R.inBetween(indegree[0], indegree[1])(element.indegree())\n              && R.inBetween(outdegree[0], outdegree[1])(element.outdegree())\n\n            )\n          }).map((item) => item.id)\n          draft.graphConfig.clusters.push({\n            id: R.uuid(),\n            name,\n            ids: clusterItemIds,\n            childClusterIds: []\n          })\n          return false\n        }\n        case EVENT.SETTINGS_FORM_CHANGED: {\n          draft.settingsBar.forms[payload.index].formData = payload.value\n          if (payload.form.schema.title === FILTER_SCHEMA.schema.title) {\n            configRef.current = {\n              ...configRef.current,\n              filtering: payload.value\n            }\n            draft.graphConfig.nodes.filter = {\n              test: ({ element, item }) => {\n                const {\n                  year,\n                  degree,\n                  indegree,\n                  outdegree\n                } = payload.value\n                return (\n                  R.inBetween(year[0], year[1])(item.data.year)\n                  && R.inBetween(degree[0], degree[1])(element.degree())\n                  && R.inBetween(indegree[0], indegree[1])(element.indegree())\n                  && R.inBetween(outdegree[0], outdegree[1])(element.outdegree())\n\n                )\n              },\n              settings: {\n                opacity: 0.2\n              }\n            }\n\n          } else {\n            configRef.current = {\n              ...configRef.current,\n              visualization: payload.value\n            }\n          }\n          return false\n          break\n        }\n\n        case EVENT.CHANGE_THEME: {\n          const {\n            value\n          } = payload\n          draft.graphConfig.theme = THEMES[value]\n          changeMUITheme(value)\n          draft.actionBar.theming.value = value\n          return false\n          break\n        }\n        // case EVENT.LAYOUT_CHANGED: {\n        //   const {\n        //     value\n        //   } = payload\n        //   let layout: any\n        //     if (value.name) {\n        //       layout = R.pickBy((val) => R.isNotNil(val))({\n        //         // @ts-ignore\n        //         ...GraphLayouts[value.name],\n        //         ...value,\n        //       })\n        //     }\n        //     const { hitArea } = graphEditorRef.current.viewport\n        //     console.log(graphEditorRef.current.viewport)\n        //   const boundingBox = {\n        //     x1: hitArea.x + 300,\n        //     y1: hitArea.y + 300,\n        //     w: hitArea.width,\n        //     h: hitArea.height,\n        //   }\n        //     draft.graphConfig!.layout = {\n        //       ...layout,\n        //       boundingBox\n        //     }\n          \n        //   return false\n        //   break\n        // }\n        // case EVENT.ELEMENT_SELECTED: {\n        //   if (element.isNode()) {\n        //     // const TARGET_SIZE = 700\n        //     // const {\n        //     //   viewport\n        //     // } = graphRef.current\n        //     // const currentBoundingBox = {\n        //     //   x1: viewport.hitArea.x,\n        //     //   y1: viewport.hitArea.y,\n        //     //   w: viewport.hitArea.width,\n        //     //   h: viewport.hitArea.height,\n        //     // }\n        //     // const zoom = (currentBoundingBox.w / TARGET_SIZE ) * graphRef.current.viewport.scale.x\n        //     // const position = element.position()\n        //     // graphRef.current.viewport.snapZoom({\n        //     //   center: position, \n        //     //   width: TARGET_SIZE,\n        //     //   height: TARGET_SIZE,\n        //     //   time: Graph.Layouts.grid.animationDuration\n        //     // })\n        //     // element.connectedEdges().connectedNodes().layout({\n        //     //   ...Graph.Layouts.random,\n        //     //   boundingBox: {\n        //     //     ...currentBoundingBox,\n        //     //     h: TARGET_SIZE,\n        //     //     w: TARGET_SIZE,\n        //     //     // x1: element.position().x,\n        //     //     // y1: element.position().y,\n        //     //   }\n        //     // }).start()\n        //   }\n        //   // return false\n        //   break\n        // }\n\n        default:\n          break;\n      }\n      return null\n    }\n  })\n  // React.useEffect(() => {\n  //    if (user){\n  //     Auth.updateUserAttributes(user, {\n  //       'custom:isOldUser': 'no'\n  //     })\n  //    }\n  // }, [user])\n  // React.useEffect(() => {\n  //   const call = async () =>{\n  //     const results = await listCases()\n  //     const nodes = results.map(({id, ...data}) => ({\n  //       id: `${data.doctype}:${id}`,\n  //       data\n  //     }))\n  //     controller.update((draft) => {\n  //       draft.nodes = nodes\n  //       draft.edges = []\n  //     })\n  //   }\n  //   call()\n  // }, [])\n  \n  // React.useEffect(() => {\n  //   setTimeout(() => {\n  //     controller.update((draft) => {\n  //       draft.graphConfig.clusters[0].visible = true\n  //     })\n  //   }, 9000)\n  // }, [])\n  React.useEffect(() => {\n    // setTimeout(() => {\n    //   controller.update((draft, { graphEditorRef }) => {\n    //     try {\n    //       const { hitArea } = graphEditorRef.current.viewport\n    //       const margin = 500\n    //       const boundingBox = {\n    //         x1: hitArea.x + margin,\n    //         y1: hitArea.y + margin,\n    //         w: hitArea.width - 2*margin,\n    //         h: hitArea.height - 2*margin,\n    //       }\n    //       const layout = Graph.Layouts.cose\n    //       draft.graphConfig!.layout = {\n    //         ...layout,\n    //         animationDuration: 0,\n    //         boundingBox,\n    //       } \n    //     } catch (error) {\n    //       console.log('error',error)\n    //     }\n    //   })\n    // }, 1000)\n}, [])\n\n  return (\n    <View\n      style={{ display: 'flex', flexDirection: 'column', width: '100%', height: '100%' }}\n    >\n      <GraphEditor\n        {...controllerProps}\n        // {...R.omit(['eventHistory', ])(controllerProps)}\n        payload={[configRef.current]}\n        style={{ width, height }}\n        renderNode={(props) => (\n          <RenderNode\n            {...props}\n            {...configRef.current}\n          />\n        )}\n        renderEdge={RenderEdge}\n        {...rest}\n      />\n      <QueryBuilder\n        isOpen={state.queryBuilder.visible}\n        query={state.queryBuilder.query}\n        onClose={() => updateState((draft) => {\n          draft.queryBuilder.visible = false\n        })}\n        onStart={() => {\n          controller.update((draft) => {\n            draft.isLoading = true\n          })\n          updateState((draft) => {\n            draft.queryBuilder.visible = false\n          })\n        }}\n        onError={(error) => {\n          controller.update((draft) => {\n            draft.isLoading = false\n          })\n          updateState((draft) => {\n            draft.queryBuilder.visible = true\n          })\n          alertRef.current.alert({\n            type: 'warning',\n            text: error.message\n          })\n        }}\n        onFinish={({\n          nodes = [],\n          edges= [],\n          networkStatistics,\n          message\n        } = {}) => {\n          controller.update((draft) => {\n            draft.nodes = nodes\n            draft.edges = edges\n            draft.networkStatistics = {\n              local: networkStatistics\n            }\n            draft.isLoading = false\n            draft.graphConfig!.layout = Graph.Layouts.circle\n          })\n          if (message) {\n            alertRef.current.alert({\n              type: 'warning',\n              text: message\n            })\n          }\n        }}\n      />\n      <HelpModal \n        isOpen={state.helpModal.isOpen}\n        onClose={() => updateState((draft) => {\n          draft.helpModal.isOpen = false\n        })}\n        videoId={HELP_VIDEO_ID}\n      />\n      {/* <TermsOfService\n          user={user}\n          onAgree={async () => {\n            updateState((draft) => {\n              draft.helpModal.isOpen = true\n            })\n            await Auth.updateUserAttributes(user, {\n              'custom:isOldUser': 'yes'\n            })\n          }}\n          // onDisagree={() => {\n          //   alert('To proceed on signin, you need to accept the Terms of Usage!')\n          // }}\n        /> */}\n        <AlertContent \n          ref={alertRef}\n        />\n      <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={controllerProps.isLoading}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </View>\n  )\n}\n\nconst AlertContent = React.forwardRef((props,forwardedRef) => {\n    const [open, setOpen] = React.useState(false);\n    const [messageInfo, setMessageInfo] = React.useState(undefined);\n    const ref = useForwardRef(\n      forwardedRef,\n      {},\n      ()=> ({\n        alert: (message) => {\n          setMessageInfo({\n            key: R.uuid(),\n            ...message,\n          })\n          setOpen(true)\n        }\n      })\n    )\n    const handleClose = (event, reason) => {\n      // if (reason === 'clickaway') {\n      //   return;\n      // }\n      setOpen(false);\n    }\n    const TransitionUp = React.useCallback((props) =>(\n      <Slide \n        {...props}\n        direction=\"down\"\n          handleExited={() => {\n          setMessageInfo(undefined);\n        }}\n      />\n    ), [])\n    return (\n      <Snackbar\n        key={messageInfo?.key}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={open}\n        autoHideDuration={4000}\n        TransitionComponent={TransitionUp}\n        onClose={handleClose}\n      >\n        <Alert \n          onClose={handleClose}\n          severity={messageInfo?.type ?? 'error'}\n        >\n          <AlertTitle>{messageInfo ? R.upperFirst(messageInfo.type): ''}</AlertTitle>\n          {\n            messageInfo?.text\n          }\n        </Alert>\n      </Snackbar>\n    )\n})\n\nconst MUI_THEMES = {\n  Dark: MUIDarkTheme,\n  Light: MUILightTheme,\n}\n\nexport default (props: Props) => {\n  const [theme, setTheme] = React.useState(MUI_THEMES.Light)\n  return (\n    <MuiThemeProvider theme={theme}>\n      <AppContainer\n        changeMUITheme={(name) => setTheme(MUI_THEMES[name])}\n        {...props}\n      />\n    </MuiThemeProvider>\n  )\n}\n\n// type Node = {\n//   id: string;\n//   data: {\n//     year: string;\n//     ...\n//   },\n// }\n\n// type Edge = {\n//   id: string;\n//   source: string;\n//   target: string;\n//   data: {\n//     year: string;\n//     ...\n//   },\n// }","import React from 'react'\nimport App from './_examples/CaseLawExplorerExample'\nimport ProfilesApp from './_examples/Profiles'\nimport { ThemeProvider, createTheme } from '@mui/material'\nimport { useMeasure,View } from 'colay-ui'\n\nconst theme = createTheme()\n\nimport cytoscape from 'cytoscape'\n// @ts-ignore\nimport euler from 'cytoscape-euler'\n// @ts-ignore\nimport cise from 'cytoscape-cise'\n// @ts-ignore\nimport d3Force from 'cytoscape-d3-force'\n// @ts-ignore\nimport cola from 'cytoscape-cola'\n// @ts-ignore\nimport avsdf from 'cytoscape-avsdf'\n// @ts-ignore\nimport dagre from 'cytoscape-dagre'\n// @ts-ignore\nimport spread from 'cytoscape-spread'\n// @ts-ignore\nimport klay from 'cytoscape-klay'\n\ncytoscape.use(klay)\nspread(cytoscape)\ncytoscape.use(dagre)\ncytoscape.use(avsdf)\ncytoscape.use(euler)\ncytoscape.use(cise)\ncytoscape.use(cola)\ncytoscape.use(d3Force)\n\nexport default () => {\n  const [containerRef, { width, height, initialized }] = useMeasure()\n  return (\n    <ThemeProvider theme={theme}>\n          <View \n      ref={containerRef}\n      style={{\n        width: '100%', height: '100%'\n      }}\n    >\n      {\n        initialized && (\n          <App\n            dispatch={() => {}}\n            {...{width, height}}\n          />\n        )\n      }\n    </View>\n    </ThemeProvider>\n    \n  )\n}\n"],"sourceRoot":""}