{"version":3,"sources":["src/core/theme/index.ts","src/core/animation.ts","src/core/layouts/index.ts","src/constants/index.tsx","src/utils/index.ts","src/components/Image/index.tsx","src/components/Text/index.tsx","src/components/View/index.tsx","src/components/templates/Profile.tsx","src/core/clusters/index.ts","src/components/Graphics/index.tsx","src/components/Pressable/index.tsx","src/utils/addFlexLayout/flex-layout/YogaContants.ts","src/utils/addFlexLayout/flex-layout/YogaAnimationManager.ts","src/utils/addFlexLayout/flex-layout/YogaLayout.ts","src/utils/addFlexLayout/flex-layout/index.ts","src/utils/addFlexLayout/index.ts","src/utils/addFlexLayout/flex-layout/displayObjectPolyfill.ts","src/utils/addFlexLayout/flex-layout/containerPolyfill.ts","src/core/config.ts","src/hooks/useGraph.ts","src/hooks/useElement.ts","src/hooks/useNode.ts","src/hooks/useGraphEditor.ts","src/components/Container/index.tsx","src/core/utils/events.tsx","src/components/ClusterNodeContainer/index.tsx","src/components/EdgeContainer/index.tsx","src/hooks/useEdge.ts","src/components/NodeContainer/index.tsx","src/components/Graph/DefaultRenderClusterNode.tsx","src/components/Graph/DefaultRenderNode.tsx","src/components/Graph/DefaultRenderEdge.tsx","src/components/Viewport/index.tsx","src/components/Graph/index.tsx","src/components/index.ts","src/components/HoverContainer/index.tsx","src/components/ContextMenu.tsx","src/utils/networkStatistics.ts","src/utils/TimeoutManager/smart-timer.ts","src/utils/TimeoutManager/index.ts","src/components/Icon.tsx","src/utils/DocumentPicker/index.ts","src/components/GraphEditor/ActionBar/LayoutOptions/getFormProps.tsx","src/components/GraphEditor/ActionBar/LayoutOptions/index.tsx","src/components/GraphEditor/ActionBar/index.tsx","src/hooks/useDrag.tsx","src/components/ResizeDivider.tsx","src/components/GraphEditor/DataBar/JSONEditor.tsx","src/components/GraphEditor/DataBar/GlobalNetworkStatistics.tsx","src/components/GraphEditor/DataBar/LocalNetworkStatistics.tsx","src/components/GraphEditor/DataBar/ConnectedElements.tsx","src/components/GraphEditor/DataBar/index.tsx","src/components/GraphEditor/ModalComponent.tsx","src/components/GraphEditor/MouseIcon.tsx","src/components/GraphEditor/PreferencesModal/index.tsx","src/components/GraphEditor/RecordedEventsModal.tsx","src/components/SortableList.tsx","src/components/SpeedDialCreator.tsx","src/components/TabPanel.tsx","src/components/GraphEditor/SettingsBar/ClusterTable/CreateClusterByAlgorithm.tsx","src/components/GraphEditor/SettingsBar/ClusterTable/index.tsx","src/components/GraphEditor/SettingsBar/EventHistoryTable.tsx","src/components/GraphEditor/SettingsBar/PlaylistTable/index.tsx","src/components/GraphEditor/SettingsBar/index.tsx","src/components/GraphEditor/index.tsx","src/utils/useTimeoutManager.tsx","_examples/CaseLawExplorerExample/constants.tsx","src/utils/createHistory.ts","src/components/GraphEditor/modals/ElementSettingsModal.tsx","src/plugins/controller/index.tsx","src/plugins/createSchema.ts","_examples/CaseLawExplorerExample/RenderNode.tsx","_examples/CaseLawExplorerExample/RenderEdge.tsx","_examples/CaseLawExplorerExample/API.ts","_examples/CaseLawExplorerExample/QueryBuilder/constants.tsx","_examples/CaseLawExplorerExample/QueryBuilder/index.tsx","_examples/CaseLawExplorerExample/HelpModal.tsx","_examples/CaseLawExplorerExample/index.tsx","App.tsx"],"names":["DefaultTheme","palette","common","black","white","mode","primary","light","main","dark","contrastText","secondary","error","warning","info","success","grey","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","contrastThreshold","tonalOffset","text","disabled","divider","background","paper","default","action","active","hover","hoverOpacity","selected","selectedOpacity","disabledBackground","disabledOpacity","focus","focusOpacity","activatedOpacity","DarkTheme","icon","Context","Provider","useProvider","createProvider","value","ThemeProvider","useTheme","animationOptions","animate","animationEasing","animationDuration","animateFilter","animationThreshold","cose","name","ready","stop","refresh","fit","padding","nodeDimensionsIncludeLabels","randomize","componentSpacing","nodeRepulsion","node","nodeOverlap","idealEdgeLength","edge","edgeElasticity","nestingFactor","gravity","numIter","initialTemp","coolingFactor","minTemp","breadthfirst","directed","circle","grid","spacingFactor","avoidOverlap","roots","undefined","maximal","transform","position","concentric","startAngle","Math","PI","sweep","clockwise","equidistant","minNodeSpacing","height","width","degree","levelWidth","nodes","maxDegree","radius","sort","avoidOverlapPadding","condense","rows","cols","random","euler","springLength","springCoeff","mass","pull","theta","dragCoeff","movementThreshold","timeStep","maxIterations","ungrabifyWhileSimulating","cise","nodeSeparation","idealInterClusterEdgeLengthCoefficient","allowNodesInsideCircle","maxRatioOfNodesInsideCircle","gravityRange","cola","maxSimulationTime","handleDisconnected","convergenceThreshold","nodeSpacing","flow","alignment","gapInequalities","edgeLength","edgeSymDiffLength","edgeJaccardLength","unconstrIter","userConstIter","allConstIter","avsdf","dagre","nodeSep","edgeSep","rankSep","rankDir","ranker","minLen","edgeWeight","i","pos","spread","minDist","expandingFactor","prelayout","maxExpandIterations","klay","EVENT","ELEMENT_DATA_FIELDS","EDITOR_MODE","ADD","DELETE","CONTINUES_ADD","CONTINUES_DELETE","DEFAULT","ADD_CLUSTER_ELEMENT","LAYOUT_NAMES","Object","keys","Layouts","PIXI_EVENT_NAMES","onPress","onHoverEnd","onHoverStart","onPressEnd","onPressMove","onPressStart","onRightPress","CYTOSCAPE_EVENT","processProps","props","mutableInstance","newProps","map","eventName","domEventName","callback","preprocessProps","IS_FLEX_DEFAULT","applyDefaultProps","instance","oldProps","config","isFlex","rescaleToYoga","style","restProps","flex","yoga","flexDirection","keepAspectRatio","R","resizeMode","fromConfig","_visible","visible","nativeApplyDefaultProps","getTextureFromProps","elementType","pureProps","source","rest","isUriSource","image","uri","texture","emitChange","requestAnimationFrame","window","dispatchEvent","CustomEvent","check","inType","validator","hasOwnProperty","valid","typeofs","some","t","instanceofs","PIXI","result","HTMLImageElement","HTMLVideoElement","HTMLCanvasElement","from","once","getSelectedItemByElement","element","id","targetPath","isNode","index","findIndex","targetItem","item","getSelectedElementInfo","controllerState","graphEditor","itemIds","selectedElementIds","selectedItemId","selectedElement","cy","$id","selectedItem","type","getLabel","path","readTextFile","async","blob","encoding","Promise","res","rej","reader","FileReader","addEventListener","readAsText","calculateObjectBoundsWithoutChildren","container","x","scale","y","children","length","object","getChildAt","removeChildren","forEach","child","addChild","box","getClusterVisibility","clusters","cluster","ids","includes","calculateVisibilityByContext","context","contextUtils","get","values","settings","visibility","throttleTimeTable","getBoundingBox","startPos","endPos","abs","cyUnselectAll","elements","unselect","getPointerPositionOnViewport","viewport","event","getEventClientPosition","options","interaction","mapPositionToPoint","left","top","e","touches","changedTouches","clientX","clientY","update","data","getNodeContext","getEdgeContext","getElementData","getItemFromElement","ImagePIXI","PixiComponent","create","applyProps","_props","Image","wrapComponent","PositionStyleKeys","processTextProps","textStyle","key","C","TextPIXI","isSprite","color","theme","pixiText","updateText","forceToRender","_","__","oldPropsRest","propsRest","Text","forwardedRef","count","setCount","React","useState","ref","c","isForwardRef","ViewPIXI","backgroundColor","borderRadius","borderWidth","borderColor","clear","beginFill","lineStyle","drawCircle","drawRoundedRect","endFill","View","ProfileTemplate","story","link","onClick","paddingLeft","paddingTop","interactive","buttonMode","pointertap","open","title","paragraph","fontFamily","fontSize","wordWrap","wordWrapWidth","getAttribute","params","pathText","edges","find","split","Clusters","markov","attributes","markovClustering","getByItem","configSchema","required","properties","expandFactor","inflateFactor","multFactor","configForm","defaultValue","kMeans","k","distance","enum","sensitivityThreshold","choices","kMedoids","fuzzyCMeans","hierarchical","hierarchicalClustering","linkage","threshold","dendrogramDepth","addDendrogram","affinityPropagation","preference","damping","maximum","minimum","includeMin","minIterations","max","min","controlPointsCreator","to","unitVector","normVector","upperVector","V","lowerVector","chunkDistanceVector","semiChunkDistanceVector","isUpper","startVec","endVec","start","mid","end","midVec","drawLine","fromBoundingBox","toBoundingBox","fill","graphics","alpha","arrowHead","margin","undirectedUnitVector","undirectedNormVector","marginVector","radiusFrom","hypot","radiusTo","centerOfFrom","centerOfTo","bottomCenter","unitDistanceVec","perpendicularUnitDistanceVec","leftControlPoint","rightControlPoint","topControlPoint","drawPolygon","drawArrowHead","controlPoints","control1","control2","moveTo","bezierCurveTo","lineTo","zIndex","GraphicsPIXI","Graphics","forwardRef","FlexDirection","column","FLEX_DIRECTION_COLUMN","FLEX_DIRECTION_COLUMN_REVERSE","row","FLEX_DIRECTION_ROW","FLEX_DIRECTION_ROW_REVERSE","JustifyContent","JUSTIFY_FLEX_START","JUSTIFY_FLEX_END","center","JUSTIFY_CENTER","JUSTIFY_SPACE_BETWEEN","JUSTIFY_SPACE_AROUND","FlexWrap","wrap","WRAP_WRAP","WRAP_NO_WRAP","WRAP_WRAP_REVERSE","Align","stretch","ALIGN_STRETCH","auto","ALIGN_AUTO","baseline","ALIGN_BASELINE","ALIGN_CENTER","ALIGN_FLEX_START","ALIGN_FLEX_END","ALIGN_SPACE_BETWEEN","ALIGN_SPACE_AROUND","PositionType","relative","POSITION_TYPE_RELATIVE","absolute","POSITION_TYPE_ABSOLUTE","Display","DISPLAY_FLEX","none","DISPLAY_NONE","YogaEdges","EDGE_TOP","EDGE_RIGHT","EDGE_BOTTOM","EDGE_LEFT","YogaConstants","YogaCustomSizeConfig","AUTO","SCREEN_SIZE","WINDOW_SIZE","yogaAnimationManager","delta","toDelete","anim","this","animations","elapsed","progress","easing","time","push","curX","fromX","toX","curY","fromY","toY","remove","add","splice","indexOf","YogaLayout","constructor","pixiObject","DisplayObject","Yoga","Node","__hasYoga","fillDefaults","target","_texture","on","LAYOUT_UPDATED_EVENT","_lastLayout","_cachedLayout","emit","NEED_LAYOUT_UPDATE","parent","_needUpdateAsRoot","_animation","val","root","assign","copy","layout","copyStyle","aspectRatio","_width","_height","setFlexDirection","setAlignItems","setAlignContent","setWidth","setHeight","getChildCount","removeChild","insertChild","updateGap","filter","requestLayoutUpdate","recalculateLayout","performance","now","calculateLayout","_lastRecalculationDuration","willLayoutWillBeRecomputed","getComputedLayout","getWidth","unit","UNIT_PERCENT","round","parseFloat","calculatedWidth","getHeight","calculatedHeight","_aspectRatio","newHeight","animationConfig","shouldRunAnimation","getComputedWidth","getComputedHeight","_parseValue","direction","getFlexDirection","just","setJustifyContent","getJustifyContent","align","getAlignContent","getAlignItems","setAlignSelf","getAlignSelf","setFlexWrap","getFlexWrap","grow","setFlexGrow","getFlexGrow","shrink","setFlexShrink","getFlexShrink","basis","setFlexBasis","getFlexBasis","setPositionType","getPositionType","setPadding","getPadding","setMargin","getMargin","_marginTop","_marginLeft","setBorder","getBorder","border","setPosition","getPosition","setMinWidth","getMinWidth","setMinHeight","getMinHeight","setMaxWidth","getMaxWidth","setMaxHeight","getMaxHeight","setDisplay","getDisplay","_gap","firstChildrenSkipped","marginTop","marginLeft","UNIT_POINT","toString","UNIT_AUTO","renderer","Map","console","log","usePixiSharedTicker","prototype","defineProperty","__yoga","set","v","display","destroy","free","call","checkIfBoundingBoxChanged","j","bounds","_bounds","tw","orig","th","updateHorizontalVertices","_yogaLayoutHash","_prevYogaLayoutHash","w","maxX","minX","h","maxY","minY","updateYogaLayout","updated","AFTER_LAYOUT_UPDATED_EVENT","applyDisplayObjectPolyfill","proto","__flex","newFlex","flexRecursive","__flexRecursive","addChildAt","containerUpdateTransform","updateTransform","beginIndex","endIndex","begin","range","slice","isRoot","isRendering","applyContainerPolyfill","shared","initializeYogaLayout","cytoscape","use","d3Force","ROUND_PIXELS","PRECISION_FRAGMENT","LOW","RESOLUTION","SCALE_MODE","NEAREST","mutableGraphMap","useElement","contextRef","renderEvents","initializedRef","useInitializedRef","useEffect","current","render","connectedEdges","off","oldFiltered","filtered","test","useMemo","hovered","DEFAULT_BOUNDING_BOX","onPositionChange","graphID","isCluster","clustersByNodeId","clustersByChildClusterId","setState","useStateWithCallback","useRef","mutableEdge","boundingBox","group","onHover","onHoverExit","clusterVisibility","oldVisible","useSelector","createStoreProvider","immer","GraphEditorProvider","useGraphEditor","Container","onDrag","draggable","onDown","onMove","mutableData","document","keepDragging","dragTrack","posDiff","originalEvent","DEFAULT_POSITION","ClusterNodeContainer","graphRef","containerRef","positionAcc","clusterElementPos","calculatedPosition","useNode","useCallback","opacity","calculateEdgeGroupInfo","edgeID","targetElement","sourceElement","betweenEdges","edgesWith","betweenEdgesCount","betweenEdgesMedian","floor","edgeIndex","edgeEl","sortedIndex","calculateVectorInfo","fromPosition","toPosition","distanceVector","midpointPosition","sign","EdgeContainer","defaultDrawLine","graphicsRef","drawLineCallback","edgeGroupInfo","sourceElementContext","targetElementContext","nodeFiltered","nodeVisible","nodeDataUpdated","sourceContext","targetContext","sourceVisible","targetVisible","newNodeVisible","forceRender","oldNodeFiltered","newNodeFiltered","useEdge","mouseover","mouseout","NodeContainer","DefaultRenderClusterNode","hasSelectedEdge","justifyContent","alignItems","select","substring","DefaultRenderNode","DefaultRenderEdge","QUALITY_LEVEL","DEFAULT_EVENT_HANDLER","ReactViewportComp","app","ticker","stage","onCreate","onBoxSelectionStart","onBoxSelection","onBoxSelectionEnd","ViewportNative","screenWidth","screenHeight","worldWidth","worldHeight","plugins","passiveWheel","divWheel","view","sortableChildren","drag","pressDrag","pinch","wheel","trackpadPinch","wheelZoom","localDataRef","boxSelection","enabled","startPosition","currentPosition","boxElement","currentTarget","isMultipleTouches","pause","isClick","setTimeout","resume","endPosition","pBoxElement","drawGraphics","preventDefault","cull","Simple","dirtyTest","addList","getVisibleBounds","dirty","visibleChildren","objectCount","qualityLevel","traverse","displayObject","oldQualityLevel","qualityChanged","HIGH","LINEAR","MEDIUM","moving","mutableViewport","zoom","resize","removeListener","clickEvent","toWorld","global","nativeEvent","setZoom","setTransform","scaleX","scaleY","rotation","skewX","skewY","pivotX","pivotY","didMount","willUnmount","Viewport","useApp","viewportRef","useForwardRef","keyboardRef","pressedKeys","intervalTimeout","keyDownListener","body","interval","setInterval","pointer","newCenter","keyUpListener","clearInterval","removeEventListener","DEFAULT_NODE_CONFIG","DEFAULT_EDGE_CONFIG","DEFAULT_CONFIG","Graph","renderNode","renderEdge","extraData","configProp","renderClusterNode","graphId","stageRef","onLoad","isExistRef","graph","cyInstance","headless","styleEnabled","nodeID","clusterById","childClusterIds","clusterId","useGraph","graphLayoutRef","hitArea","x1","y1","createLayout","nodeConfigIds","globalNodeConfig","edgeConfigIds","globalEdgeConfig","onPressCallback","resolution","devicePixelRatio","antialias","autoDensity","elementIds","selectedCollection","elementPosition","x_","y_","isPositionInBox","accessor","keyExtractor","renderItem","isEqual","Function","Pressable","viewRef","mutableContainer","HoverContainer","renderHoverElement","state","pointerover","pointerout","EDGE","NODE","ContextMenu","onSelect","items","graphEditorRef","Portal","Menu","onClose","anchorReference","anchorPosition","label","MenuItem","calculateStatistics","n","indegree","indegreeCentralityCalc","outdegree","outdegreeCentralityCalc","degreeCentralityNormalized","degreeCentralityCalc","closeness","closenessCentralityCalc","closenessCentralityNormalized","betweenness","betweennessCentralityCalc","betweennessCentrality","rank","pageRankCalc","pageRank","nodeStatisticsMap","nodeId","MetadataRecord","ms","Date","getTime","Timeout","erase","clearTimeout","keyId","metadata","originalMs","args","Error","executedTime","executed","exists","paused","metaDataRecord","timeSpentWaiting","startTime","remainingTime","replace","lastExecuted","pending","remaining","restart","newCallback","newMs","newParams","createTimeoutManager","timers","onFinish","onFinishCallback","autostart","onPlayChanged","onPlayChangedCallback","isEmpty","timeoutInstances","afterTotal","started","controller","durationCounter","createDurationCounter","totalDuration","after","duration","currentIndex","finished","timeoutInstance","timer","instantiate","ICONS","assessment","Assessment","add_circle","AddCircle","addjust","Adjust","delete_rounded","DeleteRounded","record_voice_over_rounded","RecordVoiceOverRounded","build_circle_outlined","BuildCircleOutlined","more_vert","MoreVert","edit","Edit","build_circle","BuildCircle","repeat_one","RepeatOne","sort_by_alpha","SortByAlpha","close","Close","info_outlined","InfoOutlined","Filter","arrow_drop_down_rounded","ArrowDropDownRounded","arrow_drop_up_rounded","ArrowDropUpRounded","bookmarks","Bookmarks","bookmark","Bookmark","bookmark_border","BookmarkBorder","minimize","Minimize","videocam","Videocam","fiber_manual_record","FiberManualRecord","Settings","redo","Redo","chevron_left","ChevronLeft","chevron_right","ChevronRight","keyboard_arrow_up","KeyboardArrowUp","keyboard_arrow_down","KeyboardArrowDown","playlist_add","PlaylistAdd","playlist_play","PlaylistPlay","expand_more","ExpandMore","play_arrow","PlayArrow","navigate_before","NavigateBefore","navigate_next","NavigateNext","beenhere","Beenhere","unfold_less","UnfoldLess","unfold_more","UnfoldMore","my_location","MyLocation","drag_handle","DragHandle","Icon","IconSelected","uuidv4","multiple","input","createElement","setAttribute","appendChild","resolve","reject","files","targetFile","onerror","onload","file","lastModified","size","output","readAsDataURL","MouseEvent","asNumber","guessType","utils","nums","Set","processValue","schema","has","every","LayoutNameSelect","readonly","autofocus","onChange","onBlur","onFocus","rawErrors","enumOptions","enumDisabled","emptyValue","anchorEl","onOpen","useDisclosure","hoveredIndexRef","TextField","autoFocus","InputLabelProps","SelectProps","onMouseEnter","onMouseLeave","LayoutNameItem","openInfo","isOpen","Typography","src","alt","LayoutOptions","onEvent","onSubmitCallback","payload","form","formData","Box","Button","sx","Popover","anchorOrigin","vertical","horizontal","transformOrigin","Backdrop","drawer","uiSchema","onSubmit","DEFAULT_ACTIONS","delete","recordEvents","actions","import","RECORDING_STATUS_MAP","OPTIONS","Import","Export","ImportEvents","MoreOptions","renderMoreAction","onAction","theming","IconButton","option","DocumentPicker","getDocumentAsync","fileText","JSON","parse","handleMenuItemClick","FormControl","fullWidth","InputLabel","Select","labelId","themeOption","ActionBar","autoOpen","recording","eventRecording","LeftComponent","right","RightComponent","graphConfig","editor","animationStyle","animationRef","useAnimation","bottom","autoPlay","play","recordingRef","styles","button","startIcon","variant","onDoubleClick","Recorder","getStream","captureStream","startRecording","stopRecording","status","onStop","avoidHistoryRecording","marginRight","useDrag","prevX","prevY","panelRect","getBoundingClientRect","mousemove","stopPropagation","cancelBubble","returnValue","pauseEvent","newX","newY","mouseup","ResizeDivider","cursor","JSONEditor","newData","ace","GlobalNetworkStatistics","Accordion","defaultExpanded","AccordionSummary","aria-controls","AccordionDetails","collapsed","onCollapse","noChild","alignContent","LocalNetworkStatistics","ConnectedElements","itemList","toArray","List","dense","ListItem","ListItemIcon","ListItemText","DataBar","editable","header","HeaderComponent","footer","FooterComponent","networkStatistics","globalLabel","localLabel","isGlobalLabelFirst","graphEditorConfig","isGlobalFirst","local","hasStatistics","isEditing","onMouseDown","rect","Paper","overflowY","overflowX","wordBreak","isLocalLabel","isGlobalLabel","textDecoration","component","isValidURL","href","Divider","url","URL","protocol","ModalComponent","onCloseCallback","Modal","onBackdropClick","maxWidth","maxHeight","overflow","MouseIcon","onMouseMove","PreferencesModal","sidebar","MOCK_SIDEBAR_DATA","components","createDrawer","Slide","in","orientation","flexItem","Breadcrumbs","aria-label","Link","labelTextSize","historyTabVisible","playlistTabVisible","SidebarItem","propItem","setOpen","String","hasChildren","Collapse","timeout","unmountOnExit","disablePadding","ml","RecordedEventsModal","timeoutManager","alert","currentTimer","BackdropProps","CircularProgressWithLabel","CircularProgress","SortableList","onReorder","onDragEnd","droppableId","destination","droppableProvided","droppableSnapshot","droppableProps","innerRef","draggableId","provided","snapshot","rubric","placeholder","SpeedDialCreator","SpeedDial","ariaLabel","ICON_SIZE","FabProps","minWidth","minHeight","SpeedDialAction","tooltipTitle","tooltipPlacement","TabPanel","role","hidden","aria-labelledby","CLUSTER_ALGORITHM_NAMES","CreateClusterByAlgorithm","updateState","useImmer","selectedClusterName","draft","clusterName","ClusterTable","createClusterForm","editorMode","graphEditorLocalDataRef","expanded","selectedClusterIds","currentTab","createClusterDialog","hasSelected","Card","Checkbox","checked","inputProps","fromIndex","toIndex","draggableProps","SpeedDialActionsView","disableFocusRipple","disableRipple","disableTouchRipple","dragHandleProps","elementId","ListItemAvatar","ListItemSecondaryAction","Dialog","DialogTitle","marginBottom","issuedClusterId","EventHistoryTable","onCreatePlaylistClick","selectedEventIds","eventHistory","avoidEventRecording","events","undoEvents","PlaylistTable","createPlaylistDialog","onCreatePlaylist","playlists","selectedPlaylistIds","playlist","SettingsBar","forms","Fragment","playlistWithoutEvents","playlistEvents","eventId","other","date","MODE_ICON_MAP_BY_URL","DEFAULT_HANDLER","DEFAULT_GRAPH_EDITOR_CONFIG","enableNetworkStatistics","extractGraphEditorData","cache","stringify","convert","dataBar","actionBar","GraphEditor","onEventCallback","settingsBar","preferencesModal","isLoading","modals","initialized","targetNode","newClusterBoxSelection","contextMenu","eventsModal","collection","eventInfo","clusterCollections","clusterLength","el","eventTimeoutsManager","deps","renderOnTimeout","renderOnFinished","renderOnPlayChanged","useTimeoutManager","getMilliseconds","graphEditorValue","delay","_id","throttle","pageY","offsetHeight","offsetTop","rightclick","labelPath","modalName","otherItem","SliderUIField","gutterBottom","Slider","valueLabelDisplay","VIEW_CONFIG_SCHEMA","additionalProperties","nodeSize","nodeColor","DEFAULT_HISTORY_DATA_ITEM","EVENT_TYPE","createHistory","record","history","newHistoryRecord","undo","do","undoAll","relatedItems","undoList","doList","redoAll","deleted","getEventIdsByDoItemIds","doItems","doItem","reorder","getId","sidebarItem","selectedPath","join","MOCK_COMPONENTS","General","Visualization","textColor","History","closeAllBars","useController","useControllerData","_graphEditorRef","controllerConfig","DEFAULT_CONTROLLER_CONFIG","localGraphEditorRef","recordedEvents","updater","dataItem","addHistory","oldSelectedElementIds","relatedEdges","edgeItem","edgeItems","oldLayout","positions","metaKey","getUndoEvents","eventRelatedItem","targetDataList","concat","nodeItem","TARGET_SIZE","centerPoint","neighborhood","snapZoom","forceStart","removeOnComplete","removeOnInterrupt","valueIndex","getValueByType","temporary","changeIndex","additional","additionalItem","eventHistoryData","download","GraphLayouts","positionItem","selectedClusters","selectedCluster","ElementSettings","sidebar_","normalize","componentId","dataRenderPath","Component","isReact","compatible","RenderNode","visualization","filtering","calculateNodeSize","calculateColor","textRef","onZoom","xScale","yScale","$","NODE_SIZE_RANGE_MAP","community","in_degree","out_degree","year","fieldName","fieldRange","sizeRangeGap","fieldRangeGap","perc2color","fieldRangeValue","perc","r","g","base","b","RenderEdge","convertJSONStringFields","getQueryBuilderSchema","DataSources","uniqueItems","enumNames","Eclis","Keywords","Articles","Instances","Domains","Doctypes","DegreesSources","DegreesTargets","transformData","QueryBuilder","onStart","onError","query","casesData","variables","caseResults","API","graphql","queryNetworkByUserInput","statistics","message","err","HelpModal","videoId","frameBorder","allow","allowFullScreen","ACTIONS","MUIDarkTheme","createMuiTheme","MUILightTheme","edgeSize","toJSONSchema","objects","arrays","DataBarHeader","AppContainer","changeMUITheme","dispatch","alertRef","configRef","fetching","instances","domains","doctypes","degreesSources","popup","liPermission","keywords","degreesTargets","eclis","articles","FILTER_SCHEMA","getFilterSchema","FETCH_SCHEMA","onPopupPress","getFetchSchema","queryBuilder","THEMES","Dark","Default","helpModal","ActionBarRight","controllerProps","opened","elementData","clusterItemIds","AlertContent","messageInfo","setMessageInfo","handleClose","reason","TransitionUp","handleExited","Snackbar","autoHideDuration","TransitionComponent","Alert","severity","AlertTitle","MUI_THEMES","Light","setTheme","createTheme","useMeasure"],"mappings":"0NAEO,MAAMA,EAAe,CAC1BC,QAAS,CACPC,OAAQ,CACNC,MAAO,OACPC,MAAO,QAETC,KAAM,QACNC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBE,MAAO,CACLL,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBG,QAAS,CACPN,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,uBAEhBI,KAAM,CACJP,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBK,QAAS,CACPR,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,uBAEhBM,KAAM,CACJC,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERC,kBAAmB,EACnBC,YAAa,GACbC,KAAM,CACJ3B,QAAS,sBACTK,UAAW,sBACXuB,SAAU,uBAEZC,QAAS,sBACTC,WAAY,CACVC,MAAO,qBACPC,QAAS,WAEXC,OAAQ,CACNC,OAAQ,sBACRC,MAAO,sBACPC,aAAc,IACdC,SAAU,sBACVC,gBAAiB,IACjBV,SAAU,sBACVW,mBAAoB,sBACpBC,gBAAiB,IACjBC,MAAO,sBACPC,aAAc,IACdC,iBAAkB,OAKXC,EAAY,CACvBjD,QAAS,CACPC,OAAQ,CACNC,MAAO,OACPC,MAAO,QAETC,KAAM,OACNC,QAAS,CACPC,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBC,UAAW,CACTJ,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBE,MAAO,CACLL,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBG,QAAS,CACPN,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,uBAEhBI,KAAM,CACJP,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,QAEhBK,QAAS,CACPR,MAAO,UACPC,KAAM,UACNC,KAAM,UACNC,aAAc,uBAEhBM,KAAM,CACJC,GAAI,UACJC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,WAERC,kBAAmB,EACnBC,YAAa,GACbC,KAAM,CACJ3B,QAAS,OACTK,UAAW,2BACXuB,SAAU,2BACViB,KAAM,4BAERhB,QAAS,4BACTC,WAAY,CACVC,MAAO,UACPC,QAAS,WAEXC,OAAQ,CACNC,OAAQ,OACRC,MAAO,4BACPC,aAAc,IACdC,SAAU,4BACVC,gBAAiB,IACjBV,SAAU,2BACVW,mBAAoB,4BACpBC,gBAAiB,IACjBC,MAAO,4BACPC,aAAc,IACdC,iBAAkB,QAKlB,QACJG,EADI,SAEJC,EAFI,YAGJC,GACEC,YAAe,CACjBC,MAAOxD,IAIIyD,EAAgBJ,EAChBK,EAAW,KACtB,MAAOF,GAASF,IAChB,OAAOE,G,4BC7LF,MAAMG,EAAmB,CAK9BC,QAAS,MAGTC,gBAAiB,SAGjBC,kBAAmB,IAMnBC,cAAe,KAAM,EAIrBC,mBAAoB,K,urBClBP,OACbC,KAAK,EAAD,CACFC,KAAM,OAGNC,UAGAC,SAGAC,QAAS,GAGTC,KAAK,EAGLC,QAAS,GAMTC,6BAA6B,EAG7BC,WAAW,EAGXC,iBAAkB,GAGlBC,cAAgBC,GAAS,KAGzBC,YAAa,EAGbC,gBAAkBC,GAAS,GAG3BC,eAAiBD,GAAS,GAG1BE,cAAe,IAGfC,QAAS,EAGTC,QAAS,IAGTC,YAAa,IAGbC,cAAe,IAGfC,QAAS,GACN3B,GAEL4B,aAAa,EAAD,CACVrB,KAAM,eAENI,KAAK,EACLkB,UAAU,EACVjB,QAAS,GACTkB,QAAQ,EACRC,MAAM,EACNC,cAAe,KAEfC,cAAc,EACdpB,6BAA6B,EAC7BqB,WAAOC,EACPC,SAAS,EACT5B,WAAO2B,EACP1B,UAAM0B,EACNE,UAAW,CAACpB,EAAMqB,IAAaA,GAC5BtC,GAGLuC,WAAW,EAAD,CACRhC,KAAM,aAENI,KAAK,EACLC,QAAS,GACT4B,WAAY,IAAQC,KAAKC,GACzBC,WAAOR,EACPS,WAAW,EACXC,aAAa,EACbC,eAAgB,GAEhBb,cAAc,EACdpB,6BAA6B,EAC7BkC,YAAQZ,EACRa,WAAOb,EACPH,mBAAeG,EACfI,WAAatB,GACXA,EAAKgC,SACPC,WAAaC,GACXA,EAAMC,YAAc,EACtB5C,WAAO2B,EACP1B,UAAM0B,EACNE,UAAW,CAACpB,EAAMqB,IAAaA,GAC5BtC,GAEL8B,OAAO,EAAD,CACJvB,KAAM,SAENI,KAAK,EACLC,QAAS,GAETqB,cAAc,EACdpB,6BAA6B,EAC7BmB,mBAAeG,EACfkB,YAAQlB,EACRK,WAAY,IAAQC,KAAKC,GACzBC,WAAOR,EACPS,WAAW,EACXU,UAAMnB,EACN3B,WAAO2B,EACP1B,UAAM0B,EACNE,UAAW,CAACpB,EAAMqB,IAAaA,GAC5BtC,GAEL+B,KAAK,EAAD,CACFxB,KAAM,OAENI,KAAK,EACLC,QAAS,GAETqB,cAAc,EACdsB,oBAAqB,GACrB1C,6BAA6B,EAC7BmB,mBAAeG,EACfqB,UAAU,EACVC,UAAMtB,EACNuB,UAAMvB,EACNG,SAAWrB,MACXqC,UAAMnB,EACN3B,WAAO2B,EACP1B,UAAM0B,EACNE,UAAW,CAACpB,EAAMqB,IAAaA,GAC5BtC,GAkBL2D,OAAO,EAAD,CACJpD,KAAM,SAENI,KAAK,EACLC,QAAS,GAETJ,WAAO2B,EACP1B,UAAM0B,EACNE,UAAW,CAACpB,EAAMqB,IAAaA,GAC5BtC,GAEL4D,MAAM,EAAD,CACHrD,KAAM,QAMNsD,aAAezC,GAAS,IAMxB0C,YAAc1C,GAAS,KAKvB2C,KAAO9C,GAAS,GAKhBM,SAAU,IAIVyC,KAAM,KAMNC,MAAO,KAGPC,UAAW,IAGXC,kBAAmB,EAKnBC,SAAU,GAKV1D,QAAS,GAMT2D,cAAe,IAIfC,0BAA0B,EAO1B1D,QAAS,GAOTqB,cAAc,EAGdzB,UACAC,SAKAK,WAAW,GACRd,GAELuE,KAAK,EAAD,CACFhE,KAAM,OAqBNN,SAAS,EAGTS,QAAS,GAGTP,uBAAmBgC,EAGnBjC,qBAAiBiC,EAIjBxB,KAAK,EAGLC,QAAS,GAIT4D,eAAgB,KAIhBC,uCAAwC,IAGxCC,wBAAwB,EAGxBC,4BAA6B,GAI7Bb,YAAa,IAGb9C,cAAe,KAGfO,QAAS,IAGTqD,aAAc,IAGdpE,UACAC,UACGT,GAEL6E,KAAK,EAAD,CACFtE,KAAM,OACNN,SAAS,EACTS,QAAS,EACToE,kBAAmB,IACnBR,0BAA0B,EAC1B3D,KAAK,EACLC,QAAS,GAETC,6BAA6B,EAG7BL,UACAC,SAGAK,WAAW,EACXmB,cAAc,EACd8C,oBAAoB,EACpBC,qBAAsB,IACtBC,YAAYhE,GAAe,GAC3BiE,UAAM/C,EACNgD,eAAWhD,EACXiD,qBAAiBjD,EAIjBkD,gBAAYlD,EACZmD,uBAAmBnD,EACnBoD,uBAAmBpD,EAGnBqD,kBAAcrD,EACdsD,mBAAetD,EACfuD,kBAAcvD,GACXnC,GAEL2F,MAAM,EAAD,CACHpF,KAAM,QACNC,UAGAC,SAGAC,QAAS,GAETC,KAAK,EAELC,QAAS,GAET0D,0BAA0B,EAE1BrE,QAAS,MAETE,kBAAmB,IAEnBqE,eAAgB,IACbxE,GAEL4F,MAAM,EAAD,CACHrF,KAAM,QACNsF,aAAS1D,EACT2D,aAAS3D,EACT4D,aAAS5D,EACT6D,aAAS7D,EACT8D,YAAQ9D,EACR+D,OAAO9E,GAAe,EACtB+E,WAAW/E,GAAe,EAG1BT,KAAK,EACLC,QAAS,GACToB,mBAAeG,EACftB,6BAA6B,EAC7BZ,SAAS,EACTG,cAAa,CAACa,EAAMmF,KAAY,EAChCjG,kBAAmB,IACnBD,qBAAiBiC,EAEjBE,UAAS,CAACpB,EAAMoF,IAAcA,EAC9B7F,UACAC,UACGT,GAELsG,OAAO,EAAD,CACJ/F,KAAM,SACNN,SAAS,EACTO,WAAO2B,EACP1B,UAAM0B,EACNxB,KAAK,EACL4F,QAAS,GACT3F,QAAS,GACT4F,iBAAkB,EAKlBC,UAAW,CAAElG,KAAM,QACnBmG,oBAAqB,EAErB5F,WAAW,GACRd,GAEL2G,KAAM,ICjbD,MAUMC,EACU,sBADVA,EAEU,sBAFVA,EAGgB,4BAHhBA,EAIK,iBAJLA,EAKD,WALCA,EAMD,WANCA,EAOD,WAPCA,EAQG,eARHA,EAUI,gBAVJA,EAW0B,sCAX1BA,EAagB,4BAbhBA,EAckB,8BAdlBA,EAeO,mBAfPA,EAiBmB,+BAjBnBA,EAkBQ,oBAlBRA,EAmBG,eAnBHA,EAoBc,0BApBdA,EAqBa,yBArBbA,EAsBE,cAtBFA,EAuB8B,0CAvB9BA,EAyBiB,6BAzBjBA,EA0BK,iBA1BLA,GA2BM,kBA3BNA,GA4BM,kBA5BNA,GA6BI,gBA7BJA,GA8Ba,yBA9BbA,GA+BK,iBA/BLA,GAgCa,yBAhCbA,GAiCmB,+BAjCnBA,GAkCQ,oBAlCRA,GAmCE,cAnCFA,GAoCE,cApCFA,GAqCU,sBArCVA,GAsCE,cAtCFA,GAuCM,kBAvCNA,GAwCiB,6BAxCjBA,GAyCO,mBAzCPA,GA0CO,mBA1CPA,GA2CmB,+BA3CnBA,GA4CE,cA5CFA,GA6CE,cA7CFA,GA8CI,gBA9CJA,GAgDK,iBAhDLA,GAqDG,eArDHA,GAsDE,cAtDFA,GAuDgB,4BAvDhBA,GAwDO,mBAxDPA,GAyDM,kBAzDNA,GA0DC,aA1DDA,GA2DM,kBA3DNA,GA4DW,uBA5DXA,GA6DO,mBA7DPA,GA8DK,iBA9DLA,GA+DY,wBA/DZA,GAgEW,uBAhEXA,GAiEiB,6BAjEjBA,GAkEY,wBAlEZA,GAmEQ,oBAnERA,GAoEM,kBApENA,GAqEQ,oBArERA,GAsEqB,iCAtErBA,GAuEe,2BAvEfA,GAyEW,uBAzEXA,GA0EI,gBA1EJA,GA2EC,aA3EDA,GA4EE,cAGFC,GAGL,OAHKA,GAIF,YAGEC,GAAc,CACzBC,IAAK,MACLC,OAAQ,SACRC,cAAe,gBACfC,iBAAkB,mBAClBC,QAAS,UACTC,oBAAqB,uBAiBVC,GAAeC,OAAOC,KAAKC,GAE3BC,GAAmB,CAC9BC,QAAS,aACTC,WAAY,WACZC,aAAc,YACdC,WAAY,YACZC,YAAa,cACbC,aAAc,cACdC,aAAc,cAmCHC,GACH,SADGA,GAED,WAFCA,GAGD,WAHCA,GAIC,aAJDA,GAKG,eALHA,GAMC,aANDA,GAOG,eAPHA,GAQL,OARKA,GASA,YATAA,GAUD,W,6kCCrHL,MAqIDC,GAAe,CAACC,EAA4BC,KAChD,MAAMC,EAAQ,MACTF,GAaL,OAVAb,OACGC,KAAKE,IACLa,IAAKC,IAEJ,MAAMC,EAAef,GAAiBc,GAChCE,EAAWN,EAAMI,GACnBE,IACFJ,EAASG,GAAgBC,KAGxBJ,GAQIK,GAAkDP,GAAhC,MAC1BA,GAGQQ,IAAkB,EAElBC,GAAoB,CAC/BC,EACAC,EAEAT,EAAc,GACdU,EAAkC,CAChCC,OAAQL,GACRM,eAAe,MAGjB,MAAMb,EAAkBS,GAClB,OACJG,EAASL,GADL,cAEJM,GAAgB,GACdF,GACE,MAAEG,EAAQ,IAAqBb,EAAdc,EAAvB,GAAqCd,EAArC,IACa,IAAD,EAARW,IACFZ,EAAgBgB,MAAO,EACvBhB,EAAgBiB,KAAKC,cAArB,iBAAqCJ,QAArC,IAAqCA,OAArC,EAAqCA,EAAOI,qBAA5C,QAA6D,SAC7DlB,EAAgBiB,KAAKE,gBAAkBC,IACrCnB,EAASoB,WACT,WAGFrB,EAAgBiB,KAAKJ,cAAgBA,EACrCb,EAAgBiB,KAAKK,WAAWR,IASlC,OAFAd,EAAgBuB,SAAWtB,EAASuB,QAE7BC,4BACLzB,EACAF,GAAaY,GACbZ,GAAaiB,KAYJW,GAAsB,CAACC,EAAqBC,EAAiC,MACxF,MAAM,OACJC,GAEED,EADCE,EAFL,GAGIF,EAHJ,IAIMG,EAAcX,IAAM,MAANA,CAAaS,GAC3B9B,EAA0B,SAC3B+B,GACCC,EAAe,CAAEC,MAAOH,EAAOI,KAAU,CAAEC,QAASL,IAEpDM,EAAa,IAAMC,sBAAsB,KAC7CC,OAAOC,cAAc,IAAIC,YAAY,oCAGjCC,EAAQ,CAACC,EAAaC,KAC1B,GAAI3C,EAAM4C,eAAeF,GAAS,CAChC,MAAMG,EAAQF,EAAUG,QAAQC,KAAMC,UAAkBhD,EAAM0C,KAAYM,IACrEL,EAAUM,YAAYF,KAAM9E,GAAW+B,EAAM0C,aAAmBzE,GAIrE,OAHAoD,KAAY,CACV,CAACA,KAAUwB,GAAQxB,IAAU,GAAEO,KAAec,uBADhDrB,CAEG,IACIrB,EAAM0C,KAIjB,GAAI1C,EAAMmC,QAIR,OAHAd,KAAY,CACV,CAACA,IAASA,IAAMrB,EAAMmC,mBAAmBe,MAAgB7B,IAAYO,EAAF,gDADrEP,CAEG,IACIrB,EAAMmC,QAEf,MAAMgB,EAASV,EAAM,QAAS,CAAEK,QAAS,CAAC,UAAWG,YAAa,CAACG,qBAC5DX,EAAM,QAAS,CAAEK,QAAS,CAAC,UAAWG,YAAa,CAACI,qBACpDZ,EAAM,SAAU,CACjBK,QAAS,CAAC,SAAU,UACpBG,YAAa,CAACG,iBAAkBC,iBAAkBC,kBAAmBJ,OAG3E7B,KAAY,CACV,CAACA,KAAU8B,GAAS9B,IAAYO,EAAF,uCADhCP,CAEG,IAEH,MAAMc,EAAUe,IAAaK,KAAKJ,GAQlC,OAPAhB,EAAQqB,KAAK,SAAUpB,GACvBD,EAAQqB,KAAK,SAAUpB,GAEnBD,EAAQU,OACVT,IAGKD,GAGIsB,GAA2B,CACtCC,EACA1O,KAEA,MAAM2O,EAAKD,EAAQC,KAEbC,EADSF,EAAQG,SACK,QAAU,QAChCC,EAAQ9O,EAAK4O,GAAYG,UAAWC,GAA4BA,EAAWL,KAAOA,GACxF,MAAO,CACLM,KAAMjP,EAAK4O,GAAYE,GACvBA,MAAOA,IAIEI,GAAyB,CACpCC,EAAkCC,KAElC,MAAMC,EAAUF,EAAgBG,mBAC1BC,EAAiBlD,IAAA,OAAOgD,QAAP,IAAOA,IAAW,IACnCG,EAAkBD,EACpBH,EAAYK,GAAGC,IAAK,GAAEH,GACtB,KACJ,IAAKC,EACH,MAAO,GAET,MACMZ,EADSY,EAAgBX,SACH,QAAU,QAChCC,EAAQK,EAAgBP,GAAYG,UACvCC,GAA4BA,EAAWL,KAAOY,GAEjD,MAAO,CACLI,aAAcR,EAAgBP,GAAYE,GAC1CU,kBACAV,QACAc,KAAMhB,IAIGiB,GAAW,CAACC,EAAiB,GAAIb,KAAtB,aAAqD5C,IAAUyD,GACnFb,EAAKN,GADoE,UAExEtC,IAAO,CAAC3C,MAA6BoG,GAAOb,UAF4B,QAEnBA,EAAKN,IASlDoB,GAAeC,MAAOC,EAAYC,IAAsB,IAAIC,QACvE,CAACC,EAAKC,KACJ,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,OAAQ,KAC9B,MAAM,OAAErC,GAAWmC,EAEnBF,EAAIjC,KAENmC,EAAOE,iBAAiB,QAAU1Q,IAChCuQ,EAAIvQ,KAENwQ,EAAOG,WAAWR,EAAMC,KAIfQ,GACXC,IAEA,MAAMxL,EAAW,CACfyL,EAAGD,EAAUC,EAAID,EAAUE,MAAMD,EACjCE,EAAGH,EAAUG,EAAIH,EAAUE,MAAMC,GAEnC,GAAkC,IAA9BH,EAAUI,SAASC,OACrB,OAAO,SACF7L,GADL,IAEEU,MAAO,EACPD,OAAQ,IAGZ,MAAMqL,EAASN,EAAUO,WAAW,GAC9BH,EAAWE,EAAOE,iBACxB,GAAqB,IAAjBF,EAAOpL,MAIT,OAHAkL,EAASK,QAASC,IAChBJ,EAAOK,SAASD,KAEX,SACFX,GAAqCO,IACrC9L,GAGP,MAAMoM,EAAgB,SACjBpM,GADiB,IAEpBU,MAAOoL,EAAOpL,MAAQoL,EAAOJ,MAAMD,EACnChL,OAAQqL,EAAOrL,OAASqL,EAAOJ,MAAMC,IAKvC,OAHAC,EAASK,QAASC,IAChBJ,EAAOK,SAASD,KAEXE,GAGIC,GAAuB,CAAC7C,EAAY8C,EAAsB,MACrE,IAAIhF,GAAU,EAMd,OALAgF,EAASL,QAASM,IACe,IAAD,EAA1BA,EAAQC,IAAIC,SAASjD,KACvBlC,EAAUA,KAAW,UAAEiF,EAAQjF,eAAV,aAGlBA,GAeIoF,GACXnD,IAEA,MAAMoD,EAAUC,GAAaC,IAAItD,GAQjC,OAPmBrC,IAAMA,IAANA,CAAgBlC,OAAO8H,OAAOH,EAAQI,SAASC,cAoV9DC,GAA4C,GA+BrCC,GAAiB,CAC5BC,EAAoBC,EAAkBC,GAAM,KAE5C,MAAM3M,EAAQ0M,EAAO3B,EAAI0B,EAAS1B,EAC5BhL,EAAS2M,EAAOzB,EAAIwB,EAASxB,EAGnC,OAAO,SACFwB,GADL,IAIEzM,MAAO2M,EAAMlN,KAAKkN,IAAI3M,GAASA,EAC/BD,OAAQ4M,EAAMlN,KAAKkN,IAAI5M,GAAUA,KAIxB6M,GAAiBhD,IAC5BA,EAAGiD,SAAS,aAAaC,YAWdC,GAA+B,CAC1CC,EACAC,KAEA,MAAM3N,EAAW4N,GAAuBD,GAUxC,OARID,EAASG,QAAQC,aAEnBJ,EAASG,QAAQC,YAAYC,mBAAmB/N,EAAUA,EAASyL,EAAGzL,EAAS2L,GAEjF3L,EAASyL,GAAKiC,EAAShC,MAAMD,EAC7BzL,EAAS2L,GAAK+B,EAAShC,MAAMC,EAC7B3L,EAASyL,GAAKiC,EAASM,KACvBhO,EAAS2L,GAAK+B,EAASO,IAChBjO,GAGI4N,GAA0BM,IAAO,IAAD,QAC3C,MAAMP,EAAK,8BAAGO,EAAEC,eAAL,aAAG,EAAY,UAAf,kBAAqBD,EAAEE,sBAAvB,aAAqB,EAAmB,UAAxC,QAA8CF,EACzD,MAAO,CACLzC,EAAGkC,EAAMU,QACT1C,EAAGgC,EAAMW,UASA1B,GAAe,CAC1B2B,OAAQ,CAAChF,EAAkBoD,KACzBpD,EAAQiF,KAAK,CACX,CAACjK,IAA8BoI,KAGnCE,IAAMtD,GAAqBA,EAAQiF,KAAKjK,IACxCkK,eAAiBlF,GAAkCA,EAAQiF,KACzDjK,IAEFmK,eAAiBnF,GAAkCA,EAAQiF,KACzDjK,KAISoK,GAAkBpF,GAAqBA,EAAQiF,KAAKjK,IAEpDqK,GAAsBrF,IAAD,CAChCC,GAAID,EAAQC,KACZgF,KAAMG,GAAepF,K,mYCh3BvB,MAAMsF,GAAYC,wBAAuC,QAAS,CAChEC,OAASlJ,GACU,IAAIkD,IAAYvB,GAAoB,SAAU3B,IAGjEmJ,WAAY,CAAClJ,EAA8BU,EAAUyI,KAAY,IAAD,EAC9D,MAAMpJ,EAAQO,GAAgB6I,IACxB,OAGJtH,GAEE9B,EADCgB,EAJL,GAKIhB,EALJ,KAMoBqB,IAAM,MAANA,CAAaS,IAEfA,EAAOI,OAAP,UAAevB,EAASmB,cAAxB,aAAe,EAAiBI,MAC3CJ,IAAWnB,EAASmB,UAEzB7B,EAAgBkC,QAAUR,GAAoB,SAAU3B,IAY1DS,GAAkBR,EAAiBU,EAAUK,EAAW,CAAEF,eAAe,OAYtE,MAAMuI,GAAQC,aARrB,SAAsBtJ,GACpB,OACE,kBAACgJ,GACKhJ,M,80CC/BV,MAAMuJ,GAAoB,CAAC,OAAQ,MAAO,QAAS,UAC7CC,GAAoBxJ,IACxB,MAAM,MAAEe,EAAQ,IAAOf,EACvB,OAAO,SACFA,GADL,IAEEe,MAAOM,IAAOkI,GAAPlI,CAA0BN,GACjC0I,UAAWpI,IAETA,KACAA,IACE,EAAEqI,EAAKhS,KAA0B2J,IAAO,CACtC,CAACA,IAAS,SAAU,IAAO,CAAC,OAAQsI,IAAYjS,KAChD,CAAC2J,IAAS,mBAAoB,IAAO,CAAC,kBAAmBsI,IAAYjS,KACrE,CAAC2J,IAAS,oBAAqB,IAAO,CAAC,iBAAkBsI,IAAYjS,KACrE,CAAC2J,IAAS,oBAAqB,iBAAO,CAAC,qBAAD,UAAuBA,KAAS3J,UAAhC,aAAuB,EAAkB,MAC/E,CAAC2J,IAAKA,IAAS,CAACqI,EAAKhS,MALU2J,CAO9BqI,IAELrI,IACAA,IAAO,CACL,CACEA,IAAU,CACRA,IAAM,mBACNA,IAAM,kBACNA,IAAM,wBAERA,KAAMA,IAAW,eAAe,IAElC,CACEA,IACAA,OAzBKA,CA6BTA,IAAO,CAACkI,IAARlI,CAAA,MAAiCN,QAKjC6I,GAAWX,wBAAqD,WAAY,CAChFC,OAASlJ,IACP,MAAM,MACJe,EAAQ,IACNf,GACE,KACJ7J,EAAO,GADH,UACOsT,EAAY,GADnB,SACuBI,GACzBL,GAAiB,SAChBxJ,GADe,IAElBe,MAAM,IACJ+I,MAAO9J,EAAM+J,MAAM5V,QAAQgC,KAAK3B,SAC7BuM,MAGDiJ,EAAW,IAAI9G,IAAU/M,EAAMsT,GACrC,GAAII,EAAU,CACZG,EAASC,YAAW,GAGpB,OAFmB,IAAI/G,IAAY8G,EAAS7H,SAI9C,OAAO6H,GAETb,WAAY,CACVzI,EACAC,EACAX,KAEA,MAAM,MACJe,EAAQ,IACNf,EACJU,EAASwJ,cAAgBlK,EAAMkK,cAC/B,MAAM,EAA8CV,GAAiB7I,IAA7DxK,KAAMgU,EAAGV,UAAWW,GAA5B,EAAmCC,EAAnC,SACM,EAEFb,GAAiB,SAChBxJ,GADe,IAElBe,MAAM,IACJ+I,MAAO9J,EAAM+J,MAAM5V,QAAQgC,KAAK3B,SAC7BuM,OAND,KACJ5K,EAAO,GADH,UACOsT,EAAY,GADnB,SACuBI,GAD7B,EAC0CS,EAD1C,SAcA,GALA7J,GACEC,EACA2J,EACAC,GAEET,EAAU,CACZ,MAAMG,EAAW,IAAI9G,IAAU/M,EAAMsT,GACrCO,EAASC,YAAW,GACpBvJ,EAASyB,QAAU6H,EAAS7H,aAE5BzB,EAASvK,KAAOA,EAChBuK,EAASK,MAAQ0I,KA6BVc,GAAOjB,YAlBA,CAClBtJ,EACAwK,KAEA,MAAM,SAAEzE,GAAsB/F,EAAT+B,EAArB,GAA8B/B,EAA9B,IACM+J,EAAQnS,KACP6S,EAAOC,GAAYC,IAAMC,SAAS,GACzC,OACE,kBAAChB,GAAD,IACEiB,IAAKL,EACLrU,KAAM4P,EACNgE,MAAOA,EACPG,cAAe,IAAMQ,EAAUI,GAAMA,EAAI,IACrC/I,KAOK,CAAEgJ,cAAc,I,iNC5H/B,MAAMC,GAAW/B,wBAAqD,OAAQ,CAC5EC,OAAQ,IACW,IAAIhG,IAQvBiG,WAAY,CAACzI,EAAyBC,EAAUyI,KAC9C,MAAMpJ,EAAQO,GAAgB6I,IAE5BrI,OAAO,MACLlG,EAAQ6F,EAAS7F,MADZ,OAELD,EAAS8F,EAAS9F,OAFb,gBAGLqQ,EAHK,aAILC,EAAe,EAJV,YAKLC,EAAc,EALT,YAMLC,EAAc,SACZ,IACFpL,EAEJ,GADAU,EAAS2K,QACLJ,EAAiB,CACnBvK,EAAS4K,UAAU3B,IAAYsB,GAAkBtB,IAAWsB,IAC5DvK,EAAS6K,UAAUJ,EAAaxB,IAAYyB,IAC5C,MAAMlQ,EAASL,EAAQ,EAClBA,IAAUD,GAAYsQ,GAAgBhQ,EACzCwF,EAAS8K,WAAWtQ,EAAQA,EAAQA,GAEpCwF,EAAS+K,gBAAgB,EAAG,EAAG5Q,EAAOD,EAAQsQ,GAGlDxK,EAASgL,UACTjL,GAAkBC,EAAUC,EAAUX,MAmB7B2L,GAAOrC,YAfA,CAClBtJ,EACAwK,KAEA,MAAMT,EAAQnS,IACd,OACE,kBAACoT,GAAD,IACEH,IAAKL,EACLT,MAAOA,GACH/J,KAQK,CAAE+K,cAAc,ICUlBa,GAAkBtC,YAlER,CACrBtJ,EACAoK,KAEA,MAAM,KACJhS,EADI,MAEJ6J,EAFI,MAGJ4J,EAHI,KAIJC,EAJI,QAKJC,GACE/L,EACJ,OACE,oCACE,kBAAC2L,GAAD,CAAM5K,MAAO,CACXlG,MAAO,IACPD,OAAQ,IACRuG,cAAe,MACf+J,aAAc,GACdD,gBAAiB,UACjBe,YAAa,GACbC,WAAY,KAGZ,kBAAC5C,GAAD,CACEvH,OAAQ,CAAEI,IAAKD,GACflB,MAAO,CACLlG,MAAO,IACPD,OAAQ,OAGZ,kBAAC+Q,GAAD,CACE5K,MAAO,CAAEI,cAAe,SAAUtG,MAAO,MAEzC,kBAAC8Q,GAAD,CACE5K,MAAO,CACLoH,KAAM,IAER+D,aAAW,EACXC,YAAU,EACVC,WAAY,KACNN,GACFxJ,OAAO+J,KAAKP,EAAM,UAEb,OAAPC,QAAO,IAAPA,SAGF,kBAACxB,GAAD,CACExJ,MAAOA,GAAMuL,OAEZlU,IAGL,kBAACmS,GAAD,CAEExJ,MAAOA,GAAMwL,WAEZV,OAYX,CACEd,cAAc,IAIZhK,GAAQ,CACZwL,UAAW,CAETC,WAAY,2CACZC,SAAU,GAWV5R,MAAO,IACP6R,UAAU,EACVC,cAAe,IACf7C,MAAO,QACP3B,KAAM,IAERmE,MAAO,CAELE,WAAY,2CACZC,SAAU,GAWV5R,MAAO,IACP6R,UAAU,EACVC,cAAe,IACf7C,MAAO,U,s6CCrHX,MAAM8C,GAAgBC,GAIfnJ,IACL,MAAM,SACJoJ,EADI,MAEJ9R,EAAQ,GAFJ,MAGJ+R,EAAQ,IACNF,EACElJ,EAAKD,EAAQC,KACbM,GAAQP,EAAQG,SAAW7I,EAAQ+R,GAAOC,KAAM/I,GAASA,EAAKN,KAAOA,GAC3E,OAAOtC,IAAOyL,EAASG,MAAM,KAAMhJ,IAgBxBiJ,GAA6C,CACxDC,OAAQ,CAONnG,IAAK,QAAC,GAAEvC,EAAF,WAAM2I,GAAP,EAAsBpF,EAAtB,gBAAoCvD,EAAGiD,WAAW2F,iBAAd,SACpCrF,GADoC,IAEvCoF,WAAY,CACTnU,GAAuBA,EAAK0P,KAAKyE,QAGtCE,UAAW,QAAC,GACV7I,EADU,MACNzJ,EADM,MACC+R,EADD,WACQK,GADT,EACwBpF,EADxB,gBAGLvD,EAAGiD,WAAW2F,iBAAd,SACDrF,GADC,IAEJoF,WAAY,CACVR,GAAa,CACXG,QACA/R,QACA8R,SAAUM,SAIhBG,aAAc,CACZC,SAAU,CAAC,cACXC,WAAY,CACVL,WAAY,CACVxI,KAAM,SACNpO,QAAS,QACTxB,KAAM,2LAER0Y,aAAc,CACZ9I,KAAM,SACNpO,QAAS,EACTxB,KAAM,4GAER2Y,cAAe,CACb/I,KAAM,SACNpO,QAAS,EACTxB,KAAM,uGAER4Y,WAAY,CACVhJ,KAAM,SACNpO,QAAS,EACTxB,KAAM,oGAERkH,cAAe,CACb0I,KAAM,SACNpO,QAAS,GACTxB,KAAM,uEAIZ6Y,WAAY,CACVT,WAAY,CACVxI,KAAM,SACNkJ,aAAc,QACd9Y,KAAM,0LACNwY,UAAU,GAEZE,aAAc,CACZ9I,KAAM,SACNkJ,aAAc,EACd9Y,KAAM,4GAER2Y,cAAe,CACb/I,KAAM,SACNkJ,aAAc,EACd9Y,KAAM,uGAER4Y,WAAY,CACVhJ,KAAM,SACNkJ,aAAc,EACd9Y,KAAM,oGAERkH,cAAe,CACb0I,KAAM,SACNkJ,aAAc,GACd9Y,KAAM,uEAIZ+Y,OAAQ,CAON/G,IAAK,QAAC,GAAEvC,EAAF,WAAM2I,GAAP,EAAsBpF,EAAtB,gBAAoCvD,EAAGzJ,QAAQ+S,OAAX,SACpC/F,GADoC,IAEvCoF,WAAY,CACTtU,GAAuBA,EAAK6P,KAAKyE,QAGtCE,UAAW,QAAC,GACV7I,EADU,MACNzJ,EADM,MACC+R,EADD,WACQK,GADT,EACwBpF,EADxB,gBAGLvD,EAAGiD,WAAWqG,OAAd,SACD/F,GADC,IAEJoF,WAAY,CACVR,GAAa,CACXG,QACA/R,QACA8R,SAAUM,SAIhBG,aAAc,CACZC,SAAU,CAAC,aAAc,IAAK,YAC9BC,WAAY,CACVL,WAAY,CACVxI,KAAM,SACNpO,QAAS,QACTxB,KAAM,0XAERgZ,EAAG,CACDpJ,KAAM,SACNpO,QAAS,EACTxB,KAAM,qCAERiZ,SAAU,CACRrJ,KAAM,SACNpO,QAAS,YACT0X,KAAM,CAAC,YAAa,mBAAoB,YAAa,OACrDlZ,KAAM,0GAERkH,cAAe,CACb0I,KAAM,SACNpO,QAAS,GACTxB,KAAM,6DAERmZ,qBAAsB,CACpBvJ,KAAM,SACNpO,QAAS,KACTxB,KAAM,iGAIZ6Y,WAAY,CACVT,WAAY,CACVxI,KAAM,SACNkJ,aAAc,QACd9Y,KAAM,yXACNwY,UAAU,GAEZQ,EAAG,CACDpJ,KAAM,SACNkJ,aAAc,EACd9Y,KAAM,oCACNwY,UAAU,GAEZS,SAAU,CACRrJ,KAAM,SACNkJ,aAAc,YACdM,QAAS,CAAC,YAAa,mBAAoB,YAAa,OACxDpZ,KAAM,yGACNwY,UAAU,GAEZtR,cAAe,CACb0I,KAAM,SACNkJ,aAAc,GACd9Y,KAAM,6DAERmZ,qBAAsB,CACpBvJ,KAAM,SACNkJ,aAAc,KACd9Y,KAAM,iGAIZqZ,SAAU,CAORrH,IAAK,QAAC,GAAEvC,EAAF,WAAM2I,GAAP,EAAsBpF,EAAtB,gBAAoCvD,EAAGzJ,QAAQqT,SAAX,SACpCrG,GADoC,IAEvCoF,WAAY,CACTtU,GAAuBA,EAAK6P,KAAKyE,QAGtCE,UAAW,QAAC,GACV7I,EADU,MACNzJ,EADM,MACC+R,EADD,WACQK,GADT,EACwBpF,EADxB,gBAELvD,EAAGiD,WAAW2G,SAAd,SACDrG,GADC,IAEJoF,WAAY,CACVR,GAAa,CACXG,QACA/R,QACA8R,SAAUM,SAIhBG,aAAc,CACZC,SAAU,CAAC,aAAc,IAAK,YAC9BC,WAAY,CACVL,WAAY,CACVxI,KAAM,SACNpO,QAAS,QACTxB,KAAM,2RAERgZ,EAAG,CACDpJ,KAAM,SACNpO,QAAS,EACTxB,KAAM,qCAERiZ,SAAU,CACRrJ,KAAM,SACNpO,QAAS,YACT0X,KAAM,CAAC,YAAa,mBAAoB,YAAa,OACrDlZ,KAAM,0GAERkH,cAAe,CACb0I,KAAM,SACNpO,QAAS,GACTxB,KAAM,+DAIZ6Y,WAAY,CACVT,WAAY,CACVxI,KAAM,SACNkJ,aAAc,QACd9Y,KAAM,0RACNwY,UAAU,GAEZQ,EAAG,CACDpJ,KAAM,SACNkJ,aAAc,EACd9Y,KAAM,oCACNwY,UAAU,GAEZS,SAAU,CACRrJ,KAAM,SACNkJ,aAAc,YACdM,QAAS,CAAC,YAAa,mBAAoB,YAAa,OACxDpZ,KAAM,yGACNwY,UAAU,GAEZtR,cAAe,CACb0I,KAAM,SACNkJ,aAAc,GACd9Y,KAAM,+DAIZsZ,YAAa,CAMXtH,IAAK,QAAC,GAAEvC,EAAF,WAAM2I,GAAP,EAAsBpF,EAAtB,gBAAoCvD,EAAGzJ,QAAQsT,YAAX,SACpCtG,GADoC,IAEvCoF,WAAY,CACTtU,GAAuBA,EAAK6P,KAAKyE,QAGtCE,UAAW,QAAC,GACV7I,EADU,MACNzJ,EADM,MACC+R,EADD,WACQK,GADT,EACwBpF,EADxB,gBAGLvD,EAAGiD,WAAW4G,YAAd,SACDtG,GADC,IAEJoF,WAAY,CACVR,GAAa,CACXG,QACA/R,QACA8R,SAAUM,SAIhBG,aAAc,CACZC,SAAU,CACR,aACA,IACA,YAEFC,WAAY,CACVL,WAAY,CACVxI,KAAM,SACNpO,QAAS,QACTxB,KAAM,2RAERgZ,EAAG,CACDpJ,KAAM,SACNpO,QAAS,EACTxB,KAAM,qCAERiZ,SAAU,CACRrJ,KAAM,SACNpO,QAAS,YACT0X,KAAM,CAAC,YAAa,mBAAoB,YAAa,OACrDlZ,KAAM,0GAERkH,cAAe,CACb0I,KAAM,SACNpO,QAAS,GACTxB,KAAM,6DAERmZ,qBAAsB,CACpBvJ,KAAM,SACNpO,QAAS,KACTxB,KAAM,iGAIZ6Y,WAAY,CACVT,WAAY,CACVxI,KAAM,SACNkJ,aAAc,QACd9Y,KAAM,0RACNwY,UAAU,GAEZQ,EAAG,CACDpJ,KAAM,SACNkJ,aAAc,EACd9Y,KAAM,oCACNwY,UAAU,GAEZS,SAAU,CACRrJ,KAAM,SACNkJ,aAAc,YACdM,QAAS,CAAC,YAAa,mBAAoB,YAAa,OACxDpZ,KAAM,yGACNwY,UAAU,GAEZtR,cAAe,CACb0I,KAAM,SACNkJ,aAAc,GACd9Y,KAAM,6DAERmZ,qBAAsB,CACpBvJ,KAAM,SACNkJ,aAAc,KACd9Y,KAAM,iGAIZuZ,aAAc,CAOZvH,IAAK,QAAC,GAAEvC,EAAF,WAAM2I,GAAP,EAAsBpF,EAAtB,gBAAoCvD,EAAGzJ,QAAQwT,uBAAX,SACpCxG,GADoC,IAEvCoF,WAAY,CACTtU,GAAuBA,EAAK6P,KAAKyE,QAGtCE,UAAW,QAAC,GACV7I,EADU,MACNzJ,EADM,MACC+R,EADD,WACQK,GADT,EACwBpF,EADxB,gBAELvD,EAAGiD,WAAW8G,uBAAd,SACDxG,GADC,IAEJoF,WAAY,CACVR,GAAa,CACXG,QACA/R,QACA8R,SAAUM,SAIhBG,aAAc,CACZC,SAAU,CAAC,aAAc,WAAY,QACrCC,WAAY,CACVL,WAAY,CACVxI,KAAM,SACNpO,QAAS,QACTxB,KAAM,2RAERiZ,SAAU,CACRrJ,KAAM,SACNpO,QAAS,YACT0X,KAAM,CAAC,YAAa,mBAAoB,YAAa,OACrDlZ,KAAM,yGACNwY,UAAU,GAEZiB,QAAS,CACP7J,KAAM,SACNpO,QAAS,SACT0X,KAAM,CAAC,OAAQ,MAAO,WAAY,OAClClZ,KAAM,0EAERT,KAAM,CACJqQ,KAAM,SACNpO,QAAS,YACT0X,KAAM,CAAC,YAAa,aACpBlZ,KAAM,6QAER0Z,UAAW,CACT9J,KAAM,SACNpO,QAAS,KACTxB,KAAM,qQAER2Z,gBAAiB,CACf/J,KAAM,SACNpO,QAAS,KACTxB,KAAM,uLAER4Z,cAAe,CACbhK,KAAM,SACNpO,QAAS,KACTxB,KAAM,2MAIZ6Y,WAAY,CACVT,WAAY,CACVxI,KAAM,SACNkJ,aAAc,QACd9Y,KAAM,0RACNwY,UAAU,GAEZS,SAAU,CACRrJ,KAAM,SACNkJ,aAAc,YACdM,QAAS,CAAC,YAAa,mBAAoB,YAAa,OACxDpZ,KAAM,yGACNwY,UAAU,GAEZiB,QAAS,CACP7J,KAAM,SACNkJ,aAAc,SACdM,QAAS,CAAC,OAAQ,MAAO,WAAY,OACrCpZ,KAAM,0EAERT,KAAM,CACJqQ,KAAM,SACNkJ,aAAc,YACdM,QAAS,CAAC,YAAa,aACvBpZ,KAAM,4QACNwY,UAAU,GAEZkB,UAAW,CACT9J,KAAM,SACNkJ,aAAc,KACd9Y,KAAM,qQAER2Z,gBAAiB,CACf/J,KAAM,SACNkJ,aAAc,KACd9Y,KAAM,uLAER4Z,cAAe,CACbhK,KAAM,SACNkJ,aAAc,KACd9Y,KAAM,2MAIZ6Z,oBAAqB,CAOnB7H,IAAK,QAAC,GAAEvC,EAAF,WAAM2I,GAAP,EAAsBpF,EAAtB,gBAAoCvD,EAAGzJ,QAAQ6T,oBAAX,SACpC7G,GADoC,IAEvCoF,WAAY,CACTtU,GAAuBA,EAAK6P,KAAKyE,QAGtCE,UAAW,QAAC,GACV7I,EADU,MACNzJ,EADM,MACC+R,EADD,WACQK,GADT,EACwBpF,EADxB,gBAGLvD,EAAGiD,WAAWmH,oBAAd,SACD7G,GADC,IAEJoF,WAAY,CACVR,GAAa,CACXG,QACA/R,QACA8R,SAAUM,SAIhBG,aAAc,CACZC,SAAU,CAAC,aAAc,YACzBC,WAAY,CACVL,WAAY,CACVxI,KAAM,SACNpO,QAAS,QACTxB,KAAM,2RAERiZ,SAAU,CACRrJ,KAAM,SACNpO,QAAS,YACT0X,KAAM,CAAC,YAAa,mBAAoB,YAAa,OACrDlZ,KAAM,0GAER8Z,WAAY,CACVlK,KAAM,SACNpO,QAAS,SACT0X,KAAM,CAAC,OAAQ,MAAO,WAAY,OAClClZ,KAAM,yVAER+Z,QAAS,CACPnK,KAAM,SACNpO,QAAS,GACTwY,QAAS,EACTC,QAAS,GACTC,YAAY,EACZla,KAAM,gCAERma,cAAe,CACbvK,KAAM,SACNpO,QAAS,IACTxB,KAAM,0EAERkH,cAAe,CACb0I,KAAM,SACNpO,QAAS,IACTxB,KAAM,4EAIZ6Y,WAAY,CACVT,WAAY,CACVxI,KAAM,SACNkJ,aAAc,QACd9Y,KAAM,0RACNwY,UAAU,GAEZS,SAAU,CACRrJ,KAAM,SACNkJ,aAAc,YACdM,QAAS,CAAC,YAAa,mBAAoB,YAAa,OACxDpZ,KAAM,yGACNwY,UAAU,GAEZsB,WAAY,CACVlK,KAAM,SACNkJ,aAAc,SACdM,QAAS,CAAC,OAAQ,MAAO,WAAY,OACrCpZ,KAAM,yVAER+Z,QAAS,CACPnK,KAAM,SACNkJ,aAAc,GACdsB,IAAK,EACLC,IAAK,GACLH,YAAY,EACZla,KAAM,gCAERma,cAAe,CACbvK,KAAM,SACNkJ,aAAc,IACd9Y,KAAM,0EAERkH,cAAe,CACb0I,KAAM,SACNkJ,aAAc,IACd9Y,KAAM,6E,sjBCrkBd,MAAMsa,GACK1O,IAQP,MAAM,KACJ2C,EADI,GAEJgM,EAFI,SAGJtB,EAHI,MAIJxD,EAJI,WAKJ+E,EALI,WAMJC,GACE7O,EACE8O,EAAcC,KAAiB1B,EAAjB0B,CAA2BF,GACzCG,EAAcD,MAAkB,EAAlBA,CAAqBD,GACnCG,EAAsBxO,IAC1BsO,KAAWpM,GACXoM,KAAelF,GAFWpJ,CAG1BkO,GACIO,EAA0BH,KAAe,EAAfA,CAAkBE,GAClD,OAAOxO,IACL,CAAC8I,EAAGrG,KACF,MAAMiM,EAAUjM,EAAQ,IAAM,EACxBkM,EAAW3O,IACfsO,KAAiB7L,GACjB6L,KAAMpM,GAFSlC,CAGfwO,GACII,EAASN,KAAMK,EAANL,CAAgBE,GAK/B,MAAO,CACLK,MAAOF,EACPG,IANa9O,IACbsO,KAAMG,GACNH,KAAMI,EAAUL,EAAcE,GAFjBvO,CAGb2O,GAIAI,IAAKH,EACLP,cACAW,OAAQhP,IACNsO,KAAMG,GADAzO,CAEN2O,KAnBD3O,CAsBLA,IAAQ,EAAGoJ,KAoCJ6F,GACX1P,IAuBA,MACE2C,KAAMgN,EACNhB,GAAIiB,EAFA,KAGJC,EAAO9G,IAAYzV,EAAaC,QAAQmC,WAAWC,OAH/C,SAIJmD,EAJI,KAKJkL,EALI,SAMJ8L,EANI,MAOJ7V,EAAQ,EAPJ,MAQJ8V,EAAQ,EARJ,UASJC,EAAY,CACV1V,OAAQ,GAVN,SAYJ+S,EAZI,OAaJ4C,EAAS,CACPjL,EAAG,EACHE,EAAG,GAfD,WAiBJ0J,EAjBI,WAkBJC,EAlBI,qBAmBJqB,EAnBI,qBAoBJC,GAEEnQ,EACEoQ,EAAe,CACnBpL,EAAGmL,EAAqBnL,EAAIiL,EAAOjL,EACnCE,EAAGiL,EAAqBjL,EAAI+K,EAAO/K,GAE/BmL,EAAa3W,KAAK4W,MAAMX,EAAgB1V,MAAO0V,EAAgB3V,QAAU,EACzEuW,EAAW7W,KAAK4W,MAAMV,EAAc3V,MAAO2V,EAAc5V,QAAU,EACnEwW,EAAezB,KACnBY,EAAgB1V,MAAQ,EACxB0V,EAAgB3V,OAAS,EAFN+U,CAGnBY,GACIc,EAAa1B,KACjBa,EAAc3V,MAAQ,EACtB2V,EAAc5V,OAAS,EAFN+U,CAGjBa,GACIjN,EAAOlC,IACXsO,KAAMA,KAAiBsB,EAAjBtB,CAA6BH,IACnCG,KAAMqB,GAFK3P,CAGX+P,GACI7B,EAAKlO,IACTsO,KAAWA,KAAiBwB,EAAjBxB,CAA2BH,IACtCG,KAAMqB,GAFG3P,CAGTgQ,GACFX,EAASrF,QACTqF,EAASnF,UAAU1Q,EAAO4V,EAAME,GAE5BjX,GAzGgB,GACpBgX,WACAnB,KACArU,SAAS,GACTsU,aACAiB,WAQA,MAAMa,EAAe/B,EACfgC,EAAkB5B,KAAiBzU,EAAjByU,CAAyBH,GAC3CgC,EAA+B7B,MAAUrV,KAAKC,GAAK,EAApBoV,CAAuB4B,GACtDE,EAAmBpQ,IACvBsO,MAAkB,GAClBA,KAAM2B,GAFiBjQ,CAGvBmQ,GACIE,EAAoBrQ,IACxBsO,KAAM2B,GADkBjQ,CAExBmQ,GACIG,EAAkBhC,KAAM4B,EAAN5B,CAAuBJ,GAC/CmB,EAASpF,UAAUmF,GACnBC,EAASkB,YACP,IAAI1O,IAAWuO,EAAiB7L,EAAG6L,EAAiB3L,GACpD,IAAI5C,IAAWwO,EAAkB9L,EAAG8L,EAAkB5L,GACtD,IAAI5C,IAAWyO,EAAgB/L,EAAG+L,EAAgB7L,IAEpD4K,EAAShF,UACTgF,EAAS7G,UAAW,GA2ElBgI,C,kWAAc,EACZnB,WACAlB,aACAD,KACAkB,QACGG,IAIPvP,IAAO,CACL,CACEA,IAAS,UACT,KACE,MAAMyQ,EAAgBxC,GAA4B,CAChD/L,OACAgM,KACA9E,MAAO,EACPwD,SAAU,IACVuB,WAAYsB,EACZrB,WAAYsB,IAEd1P,IACE,EACE6O,QACAE,MACA2B,WACAC,eAEAtB,EAASuB,OAAO/B,EAAMtK,EAAGsK,EAAMpK,GAC/B4K,EAASwB,cACPH,EAASnM,EAAGmM,EAASjM,EAAGkM,EAASpM,EAAGoM,EAASlM,EAAGsK,EAAIxK,EAAGwK,EAAItK,IATjEzE,CAYEyQ,KAGN,CACEzQ,IAAS,YACT,KACE,MAAMyQ,EAAgBxC,GAA4B,CAChD/L,OACAgM,KACA9E,MAAO,EACPwD,SAAU,IACVuB,WAAYsB,EACZrB,WAAYsB,IAEd1P,IACE,EACE6O,QACAC,MACAC,UAEAM,EAASuB,OAAO/B,EAAMtK,EAAGsK,EAAMpK,GAC/B4K,EAASyB,OACPhC,EAAIvK,EAAGuK,EAAIrK,GAEb4K,EAASuB,OAAO9B,EAAIvK,EAAGuK,EAAIrK,GAC3B4K,EAASyB,OACP/B,EAAIxK,EAAGwK,EAAItK,IAZjBzE,CAeEyQ,KAGN,CACEzQ,IACA,KACE,GAAI4M,EAAU,CACZ,MAAM6D,EAAgBxC,GAA4B,CAChD/L,OACAgM,KACA9E,MAAO,EACPwD,WACAuB,WAAYsB,EACZrB,WAAYsB,IAEd1P,IACE,EACE8O,MACAD,QACAE,UAEAM,EAASuB,OAAO/B,EAAMtK,EAAGsK,EAAMpK,GAC/B4K,EAASwB,cACPhC,EAAMtK,EAAGsK,EAAMpK,EAAGqK,EAAIvK,EAAGuK,EAAIrK,EAAGsK,EAAIxK,EAAGwK,EAAItK,IARjDzE,CAWEyQ,QAEFpB,EAASuB,OAAO1O,EAAKqC,EAAGrC,EAAKuC,GAC7B4K,EAASyB,OAAO5C,EAAG3J,EAAG2J,EAAGzJ,MAlFjCzE,CAsFGuD,GACH8L,EAAShF,UACTgF,EAAS0B,QPjGsB,KO8H3BC,GAAepJ,wBAAyC,YAAa,CACzEC,OAASlJ,GACU,IAAIkD,IAGvBiG,WAAY,CAAClJ,EAAgCU,EAAUyI,KACrD,MAEKpI,EADL,MADcT,GAAgB6I,IAK9B3I,GAAkBR,EAAiBU,EAAUK,MAa1C,MAAMsR,GAAWhJ,aATxB,SAAyBtJ,EAAmBuS,GAC1C,OACE,kBAACF,GAAD,IACExH,IAAK0H,GACDvS,MAMS,CACf+K,cAAc,I,wlBChTX,M,moBCxBA,MAAMyH,GAAgB,CAC3BC,OAAQvR,KAAKwR,sBACb,iBAAkBxR,KAAKyR,8BACvBC,IAAK1R,KAAK2R,mBACV,cAAe3R,KAAK4R,4BAGTC,GAAiB,CAC5B,aAAc7R,KAAK8R,mBACnB,WAAY9R,KAAK+R,iBACjBC,OAAQhS,KAAKiS,eACb,gBAAiBjS,KAAKkS,sBACtB,eAAgBlS,KAAKmS,sBAGVC,GAAW,CACtBC,KAAMrS,KAAKsS,UACX,UAAWtS,KAAKuS,aAChB,eAAgBvS,KAAKwS,mBAGVC,GAAQ,CACnBC,QAAS1S,KAAK2S,cACdC,KAAM5S,KAAK6S,WACXC,SAAU9S,KAAK+S,eACff,OAAQhS,KAAKgT,aACb,aAAchT,KAAKiT,iBACnB,WAAYjT,KAAKkT,eACjB,gBAAiBlT,KAAKmT,oBACtB,eAAgBnT,KAAKoT,oBAGVC,GAAe,CAC1BC,SAAUtT,KAAKuT,uBACfC,SAAUxT,KAAKyT,wBAGJC,GAAU,CACrB3T,KAAMC,KAAK2T,aACXC,KAAM5T,KAAK6T,cASAC,GAAY,CAAC9T,KAAK+T,SAAU/T,KAAKgU,WAAYhU,KAAKiU,YAAajU,KAAKkU,WAYpEC,GAAgB,CAC3B7C,iBACAO,kBACAO,YACAK,SACAY,gBACAK,QAN2B,GAO3BU,qBAzBkC,CAClCC,KAAM,OACNC,YAAa,SACbC,YAAa,UAuBbT,cCpCK,MAAMU,GAAuB,IAhC7B,MAA4B,c,YACM,I,EADP,gB,EAAA,M,sFAGzBhN,OAAOiN,GACZA,GAAS,KACT,MAAMC,EAAW,GACjB,IAAK,MAAMC,KAAQC,KAAKC,WAAY,CAClCF,EAAKG,SAAWL,EAChB,IAAIM,EAAWJ,EAAKK,OAAOL,EAAKG,QAAUH,EAAKM,MAE3CF,EAAW,IACbA,EAAW,EACXL,EAASQ,KAAKP,IAEhBA,EAAKQ,KAAOR,EAAKS,OAAST,EAAKU,IAAMV,EAAKS,OAASL,EACnDJ,EAAKW,KAAOX,EAAKY,OAASZ,EAAKa,IAAMb,EAAKY,OAASR,EAGrD,IAAK,MAAMJ,KAAQD,EACjBE,KAAKa,OAAOd,GAITe,IAAIf,GACTC,KAAKC,WAAWK,KAAKP,GAGhBc,OAAOd,GACZC,KAAKC,WAAWc,OAAOf,KAAKC,WAAWe,QAAQjB,GAAO,K,yHCYnD,MAAMkB,GAwEXC,YAAYC,EAA4B,IAAIC,eAAkB,mEAnD9B,IAmD6B,oFAvCtC,GAuCsC,wLAvBxB,GAuBwB,0DAhBjC,GAgBiC,8CAT9C,GAS8C,qBAJxC,GAIwC,sBAFvC,GAGpBpB,KAAKhd,KAAOqe,KAAKC,KAAKlO,SACtB+N,EAAWI,WAAY,EACvBvB,KAAKwB,eACLxB,KAAKyB,OAASN,EACHnB,KAAKyB,OAAQC,SACtB1B,KAAKjb,MAAQib,KAAKlb,OAAS,OAE3Bkb,KAAKjb,MAAQib,KAAKlb,OAAS,QAGzBqc,aAAsB/T,KAAa+T,aAAsB/T,OAC3D4S,KAAK1U,iBAAkB,GAIzB6V,EAAWQ,GAAGV,GAAWW,qBAA6B,KACpD5B,KAAK6B,YAAc7B,KAAK8B,cACxB9B,KAAK8B,mBAAgB5d,EACrB8b,KAAK/P,SAASK,QAASC,GAAUA,EAAMkR,OAAOM,KAAKd,GAAWW,yBAGhET,EAAWQ,GAAGV,GAAWe,mBAA2B,KAE7ChC,KAAKiC,OAGRjC,KAAKiC,OAAOR,OAAOM,KAAKd,GAAWe,oBAFnChC,KAAKkC,mBAAoB,IAON,qBACvB,OAAOlC,KAAKmC,WAGC,SAACC,GACd,MAAMC,EAAOpB,GAAWhd,MAAMiN,IAAIkR,GAC9BC,GACFA,EAAK7R,SAASwP,MAQXvU,WAAWX,GAChBzB,OAAOiZ,OAAOtC,KAAMlV,GAOL,WAACA,GAChBkV,KAAKvU,WAAWX,GAOXyX,KAAKC,GACVxC,KAAKhd,KAAKyf,UAAUD,EAAOxf,MAC3Bgd,KAAKhV,cAAgBwX,EAAOxX,cAC5BgV,KAAK0C,YAAcF,EAAOE,YAC1B1C,KAAK1U,gBAAkBkX,EAAOlX,gBAC9B0U,KAAK2C,OAASH,EAAOG,OACrB3C,KAAK4C,QAAUJ,EAAOI,QAGjBpB,eACLxB,KAAKhd,KAAK6f,iBAAiBxB,KAAKtE,oBAChCiD,KAAKhd,KAAK8f,cAAczB,KAAKhD,kBAC7B2B,KAAKhd,KAAK+f,gBAAgB1B,KAAKhD,kBAC/B2B,KAAKhd,KAAKggB,SAAS,QACnBhD,KAAKhd,KAAKigB,UAAU,QAGfzS,SAASpF,EAAkB4C,EAAQgS,KAAKhd,KAAKkgB,iBAC9C9X,EAAK6W,QACP7W,EAAK6W,OAAOkB,YAAY/X,GAE1B4U,KAAKhd,KAAKogB,YAAYhY,EAAKpI,KAAMgL,GACjCgS,KAAK/P,SAAS8Q,OAAO/S,EAAO,EAAG5C,GAC/BA,EAAK6W,OAASjC,KACdA,KAAKqD,YAGAF,YAAY/X,GACjB,MAAM,OAAE8E,GAAW8P,KAAK/P,SACxB+P,KAAK/P,SAAW+P,KAAK/P,SAASqT,OAAQ/S,GAAUA,IAAUnF,GACtD8E,IAAW8P,KAAK/P,SAASC,QAC3B8P,KAAKhd,KAAKmgB,YAAY/X,EAAKpI,MAE7BoI,EAAK6W,YAAS/d,EAMTqf,sBACLvD,KAAKyB,OAAOM,KAAKd,GAAWe,oBAGvBwB,oBACL,MAAMpJ,EAAQqJ,YAAYC,MAC1B1D,KAAKhd,KAAK2gB,kBACV3D,KAAK4D,2BAA6BH,YAAYC,MAAQtJ,EACtD4F,KAAKyB,OAAOM,KAAKd,GAAWW,sBAGvBhP,SACAoN,KAAKyB,OAAOQ,SAAUjC,KAAKiC,QAK5BjC,KAAKkC,oBAAsBlC,KAAKiC,QAClCjC,KAAKwD,oBAEPxD,KAAKkC,mBAAoB,GAPvBlC,KAAKiC,OAAOkB,YAAYnD,MAUX,aACf,OAAQA,KAAKiC,OAMkB,6BAC/B,QAASjC,KAAK2C,QAA0B,SAAhB3C,KAAK2C,QAAqC,SAAhB3C,KAAK2C,UAC1C3C,KAAK4C,SAA4B,SAAjB5C,KAAK4C,SAAuC,SAAjB5C,KAAK4C,QAGxDiB,6BACL,OAAQ7D,KAAK8B,cAIRgC,oBACL,IAAK9D,KAAK8B,cAAe,CAkBvB,GAjBA9B,KAAK8B,cAAgB9B,KAAKhd,KAAK8gB,oBAGT,aAAlB9D,KAAK3b,UAA2B2b,KAAKiC,QAAUjC,KAAKhd,KAAK+gB,WAAWC,OAAS3C,KAAK4C,eACpFjE,KAAK8B,cAAc/c,MAAQP,KAAK0f,MAAMC,WAAWnE,KAAK2C,QAAoB,IAAM3C,KAAKiC,OAAOmC,kBAGxE,aAAlBpE,KAAK3b,UAA2B2b,KAAKiC,QAAUjC,KAAKhd,KAAKqhB,YAAYL,OAAS3C,KAAK4C,eACrFjE,KAAK8B,cAAchd,OAASN,KAAK0f,MAAMC,WAAWnE,KAAK4C,SAAqB,IAAM5C,KAAKiC,OAAOqC,mBAS5FtE,KAAKuE,cAAgBvE,KAAK1U,gBAAiB,CAC7C,MAAMkZ,EAAYxE,KAAKoE,gBAAkBpE,KAAKuE,aAC9CvE,KAAK8B,cAAcxP,MAAQ0N,KAAKsE,iBAAmBE,GAAa,EAChExE,KAAK8B,cAAchd,OAAS0f,EAC5BxE,KAAKlb,OAASkb,KAAKsE,iBAGiK,IAAD,QAArL,IAAItE,KAAKyE,iBAAqBzE,KAAKyE,gBAAgBC,qBAAsB1E,KAAKyE,gBAAgBC,mBAAmB1E,KAAMA,KAAK6B,aAAe7B,KAAK8B,cAAe9B,KAAK8B,eAelK9B,KAAKmC,WAAkB,CACrB5B,KAAMP,KAAK8B,cAAczP,KACzBqO,KAAMV,KAAK8B,cAAcxP,UAhB3B0N,KAAKmC,WAAa,CAChB3B,OAAO,UAAAR,KAAK6B,mBAAL,eAAkBxP,OAAQ2N,KAAK8B,cAAczP,KACpDsO,OAAO,UAAAX,KAAK6B,mBAAL,eAAkBvP,MAAO0N,KAAK8B,cAAcxP,IACnDiO,MAAM,UAAAP,KAAK6B,mBAAL,eAAkBxP,OAAQ2N,KAAK8B,cAAczP,KACnDqO,MAAM,UAAAV,KAAK6B,mBAAL,eAAkBvP,MAAO0N,KAAK8B,cAAcxP,IAClDmO,IAAKT,KAAK8B,cAAczP,KACxBuO,IAAKZ,KAAK8B,cAAcxP,IACxB+N,KAAML,KAAKyE,gBAAgBpE,KAC3BH,QAAS,EACTE,OAAQJ,KAAKyE,gBAAgBrE,QAG/BR,GAAqBkB,IAAId,KAAKmC,YAYlC,OAHAnC,KAAK8B,cAAczP,KAAO2N,KAAKmC,WAAW5B,KAC1CP,KAAK8B,cAAcxP,IAAM0N,KAAKmC,WAAWzB,KAElCV,KAAK8B,cAGQ,gBAAClgB,GACjBoe,KAAKuE,eAAiB3iB,IAG1Boe,KAAKuE,aAAe3iB,EACpBoe,KAAKuD,uBAGe,kBACpB,OAAOvD,KAAKuE,aAGsB,gCAClC,MAAuB,SAAhBvE,KAAK2C,OAGuB,iCACnC,MAAwB,SAAjB3C,KAAK4C,QAMY,sBACxB,OAAO5C,KAAK8B,cAAgB9B,KAAK8B,cAAc/c,MAAQib,KAAKhd,KAAK2hB,mBAMxC,uBACzB,OAAO3E,KAAK8B,cAAgB9B,KAAK8B,cAAchd,OAASkb,KAAKhd,KAAK4hB,oBAWpD,UAAChjB,GACXoe,KAAK2C,SAAW/gB,IAGpBoe,KAAK2C,OAAS/gB,EACA,SAAVA,GACFoe,KAAKhd,KAAKggB,SAASphB,GAErBoe,KAAKuD,uBAGS,YACd,OAAOvD,KAAK6E,YAAY7E,KAAKhd,KAAK+gB,YAWnB,WAACniB,GACZoe,KAAK4C,UAAYhhB,IAGrBoe,KAAK4C,QAAUhhB,EACD,SAAVA,GACFoe,KAAKhd,KAAKigB,UAAUrhB,GAEtBoe,KAAKuD,uBAGU,aACf,OAAOvD,KAAK6E,YAAY7E,KAAKhd,KAAKqhB,aAIZ,kBAACS,GAEvB9E,KAAKhd,KAAK6f,iBAAyCtD,GAAc7C,cAAcoI,IAC/E9E,KAAKqD,YACLrD,KAAKuD,sBAIiB,oBACtB,OAAOhE,GAAc7C,cAAcsD,KAAKhd,KAAK+hB,oBAItB,mBAACC,GACxBhF,KAAKhd,KAAKiiB,kBAA2C1F,GAActC,eAAe+H,IAClFhF,KAAKuD,sBAIkB,qBACvB,OAAOhE,GAActC,eAAe+C,KAAKhd,KAAKkiB,qBAIzB,iBAACC,GACtBnF,KAAKhd,KAAK+f,gBAAgCxD,GAAc1B,MAAMsH,IAC9DnF,KAAKuD,sBAIgB,mBACrB,OAAOhE,GAAc1B,MAAMmC,KAAKhd,KAAKoiB,mBAIlB,eAACD,GACpBnF,KAAKhd,KAAK8f,cAA8BvD,GAAc1B,MAAMsH,IAC5DnF,KAAKuD,sBAIc,iBAEnB,OAAOhE,GAAc1B,MAAMmC,KAAKhd,KAAKqiB,iBAInB,cAACF,GACnBnF,KAAKhd,KAAKsiB,aAA6B/F,GAAc1B,MAAMsH,IAC3DnF,KAAKuD,sBAIa,gBAElB,OAAOhE,GAAc1B,MAAMmC,KAAKhd,KAAKuiB,gBAIpB,aAAC9H,GAClBuC,KAAKhd,KAAKwiB,YAA+BjG,GAAc/B,SAASC,IAChEuC,KAAKuD,sBAIY,eAEjB,OAAOhE,GAAc/B,SAASwC,KAAKhd,KAAKyiB,eAGvB,aAACC,GAClB1F,KAAKhd,KAAK2iB,YAAYD,GACtB1F,KAAKuD,sBAGY,eACjB,OAAOvD,KAAKhd,KAAK4iB,cAGE,eAACC,GACpB7F,KAAKhd,KAAK8iB,cAAcD,GACxB7F,KAAKuD,sBAGc,iBACnB,OAAOvD,KAAKhd,KAAK+iB,gBAGC,cAACC,GACnBhG,KAAKhd,KAAKijB,aAAaD,GACvBhG,KAAKuD,sBAGa,gBAClB,OAAOvD,KAAKhd,KAAKkjB,eAIA,aAACpX,GAClBkR,KAAKhd,KAAKmjB,gBAAuC5G,GAAcd,aAAa3P,IAC5EkR,KAAKuD,sBAIY,eAEjB,OAAOhE,GAAcd,aAAauB,KAAKhd,KAAKojB,mBAG5B,YAACrL,GACjBmE,GAAU5O,QAAQ,CAACnN,EAAM6K,KACvB,MAAMpM,EAAQmZ,EAAO/M,GACrBgS,KAAKhd,KAAKqjB,WAAWljB,EAAMvB,KAE7Boe,KAAKuD,sBAGW,cAChB,OAAOrE,GAAU7U,IAAKlH,GAAS6c,KAAKhd,KAAKsjB,WAAWnjB,GAAMvB,OAAS,GAGhD,eAACA,GACpBoe,KAAKrd,QAAU,CAACf,EAAOA,EAAOA,EAAOA,GAGlB,eAACA,GACpBoe,KAAKhd,KAAKqjB,WAAWhF,KAAKlC,SAAUvd,GACpCoe,KAAKuD,sBAGc,iBACnB,OAAOvD,KAAKhd,KAAKsjB,WAAWjF,KAAKlC,UAAUvd,OAAS,EAG9B,kBAACA,GACvBoe,KAAKhd,KAAKqjB,WAAWhF,KAAKhC,YAAazd,GACvCoe,KAAKuD,sBAGiB,oBACtB,OAAOvD,KAAKhd,KAAKsjB,WAAWjF,KAAKhC,aAAazd,OAAS,EAGnC,gBAACA,GACrBoe,KAAKhd,KAAKqjB,WAAWhF,KAAK/B,UAAW1d,GACrCoe,KAAKuD,sBAGe,kBACpB,OAAOvD,KAAKhd,KAAKsjB,WAAWjF,KAAK/B,WAAW1d,OAAS,EAGhC,iBAACA,GACtBoe,KAAKhd,KAAKqjB,WAAWhF,KAAKjC,WAAYxd,GACtCoe,KAAKuD,sBAGgB,mBACrB,OAAOvD,KAAKhd,KAAKsjB,WAAWjF,KAAKjC,YAAYxd,OAAS,EAGvC,WAACmZ,GAChBmE,GAAU5O,QAAQ,CAACnN,EAAM6K,KACvB,MAAMpM,EAAQmZ,EAAO/M,GACrBgS,KAAKhd,KAAKujB,UAAUpjB,EAAMvB,KAE5Boe,KAAKuD,sBAGa,cAAC3hB,GACnBoe,KAAKjF,OAAS,CAACnZ,EAAOA,EAAOA,EAAOA,GAGrB,aACf,OAAOsd,GAAU7U,IAAKlH,GAAS6c,KAAKhd,KAAKwjB,UAAUrjB,GAAMvB,OAAS,GAGhD,cAACA,GACfoe,KAAKyG,aAAe7kB,IACtBoe,KAAKyG,WAAa7kB,EAClBoe,KAAKhd,KAAKujB,UAAUlF,KAAKlC,SAAUvd,GACnCoe,KAAKuD,uBAIW,gBAClB,OAAOvD,KAAKyG,WAGS,iBAAC7kB,GACtBoe,KAAKhd,KAAKujB,UAAUlF,KAAKhC,YAAazd,GACtCoe,KAAKuD,sBAGgB,mBACrB,OAAOvD,KAAKhd,KAAKwjB,UAAUnF,KAAKhC,aAAazd,OAAS,EAGnC,eAACA,GAChBoe,KAAK0G,cAAgB9kB,IACvBoe,KAAK0G,YAAc9kB,EACnBoe,KAAKhd,KAAKujB,UAAUlF,KAAK/B,UAAW1d,GACpCoe,KAAKuD,uBAIY,iBACnB,OAAOvD,KAAK0G,YAGQ,gBAAC9kB,GACrBoe,KAAKhd,KAAKujB,UAAUlF,KAAKjC,WAAYxd,GACrCoe,KAAKuD,sBAGe,kBACpB,OAAOvD,KAAKhd,KAAKwjB,UAAUnF,KAAKjC,YAAYxd,OAAS,EAGtC,WAACmZ,GAChBmE,GAAU5O,QAAQ,CAACnN,EAAM6K,KACvB,MAAMpM,EAAQmZ,EAAO/M,GACrBgS,KAAKhd,KAAK2jB,UAAUxjB,EAAMvB,KAE5Boe,KAAKuD,sBAGU,aACf,OAAOrE,GAAU7U,IAAKlH,GAAS6c,KAAKhd,KAAK4jB,UAAUzjB,IAGjC,cAACvB,GACnBoe,KAAK6G,OAAS,CAACjlB,EAAOA,EAAOA,EAAOA,GAGlB,cAACA,GACnBoe,KAAKhd,KAAK2jB,UAAUtF,KAAKlC,SAAUvd,GACnCoe,KAAKuD,sBAGa,gBAClB,OAAOvD,KAAKhd,KAAK4jB,UAAUvF,KAAKlC,UAGX,iBAACvd,GACtBoe,KAAKhd,KAAK2jB,UAAUtF,KAAKhC,YAAazd,GACtCoe,KAAKuD,sBAGgB,mBACrB,OAAOvD,KAAKhd,KAAK4jB,UAAUvF,KAAKhC,aAGb,eAACzd,GACpBoe,KAAKhd,KAAK2jB,UAAUtF,KAAK/B,UAAW1d,GACpCoe,KAAKuD,sBAGc,iBACnB,OAAOvD,KAAKhd,KAAK4jB,UAAUvF,KAAK/B,WAGZ,gBAAC1d,GACrBoe,KAAKhd,KAAK2jB,UAAUtF,KAAKjC,WAAYxd,GACrCoe,KAAKuD,sBAGe,kBACpB,OAAOvD,KAAKhd,KAAK4jB,UAAUvF,KAAKjC,YAGpB,QAACxd,GACboe,KAAKhd,KAAK8jB,YAAYzF,KAAKlC,SAAUvd,GACrCoe,KAAKuD,sBAGO,UACZ,OAAOvD,KAAK6E,YAAY7E,KAAKhd,KAAK+jB,YAAY1F,KAAKlC,WAGpC,WAACvd,GAChBoe,KAAKhd,KAAK8jB,YAAYzF,KAAKhC,YAAazd,GACxCoe,KAAKuD,sBAGU,aACf,OAAOvD,KAAK6E,YAAY7E,KAAKhd,KAAK+jB,YAAY1F,KAAKhC,cAGtC,SAACzd,GACdoe,KAAKhd,KAAK8jB,YAAYzF,KAAK/B,UAAW1d,GACtCoe,KAAKuD,sBAGQ,WACb,OAAOvD,KAAK6E,YAAY7E,KAAKhd,KAAK+jB,YAAY1F,KAAK/B,YAGrC,UAAC1d,GACfoe,KAAKhd,KAAK8jB,YAAYzF,KAAKjC,WAAYxd,GACvCoe,KAAKuD,sBAGS,YACd,OAAOvD,KAAK6E,YAAY7E,KAAKhd,KAAK+jB,YAAY1F,KAAKjC,aAGlC,aAACxd,GAClBoe,KAAKhd,KAAKgkB,YAAYplB,GACtBoe,KAAKuD,sBAGY,eACjB,OAAOvD,KAAK6E,YAAY7E,KAAKhd,KAAKikB,eAGhB,cAACrlB,GACnBoe,KAAKhd,KAAKkkB,aAAatlB,GACvBoe,KAAKuD,sBAGa,gBAClB,OAAOvD,KAAK6E,YAAY7E,KAAKhd,KAAKmkB,gBAGjB,aAACvlB,GAClBoe,KAAKhd,KAAKokB,YAAYxlB,GACtBoe,KAAKuD,sBAGY,eACjB,OAAOvD,KAAK6E,YAAY7E,KAAKhd,KAAKqkB,eAGhB,cAACzlB,GACnBoe,KAAKhd,KAAKskB,aAAa1lB,GACvBoe,KAAKuD,sBAGa,gBAClB,OAAOvD,KAAK6E,YAAY7E,KAAKhd,KAAKukB,gBAIlB,YAAC3lB,GACjBoe,KAAKhd,KAAKwkB,WAA6BjI,GAAcT,QAAQld,IAC7Doe,KAAKuD,sBAIW,cAEhB,OAAOzE,QAAQkB,KAAKhd,KAAKykB,cAGb,QAACrF,GACTpC,KAAK0H,OAAStF,IAGlBpC,KAAK0H,KAAOtF,EACZpC,KAAKqD,YACLrD,KAAKuD,uBAGO,UACZ,OAAOvD,KAAK0H,KAGPrE,YACL,IAAKrD,KAAK0H,KACR,OAGF,IAAIC,GAAuB,EAC3B3H,KAAK/P,SAASK,QAAQ,CAACC,EAAOvC,KACxB2Z,IACqB,WAAvB3H,KAAK3U,cAA6BkF,EAAMqX,UAAY5H,KAAK0H,KAAOnX,EAAMsX,WAAa7H,KAAK0H,MAGnE,aAAnBnX,EAAMlM,WACRsjB,GAAuB,KAKrB9C,YAAYjjB,GAClB,OAAIA,EAAMoiB,OAAS3C,KAAKyG,WACf3D,WAAWviB,EAAMA,OAGtBA,EAAMoiB,OAAS3C,KAAK4C,aACZriB,EAAMA,MAAMmmB,WAAd,IAGNnmB,EAAMoiB,OAAS3C,KAAK2G,UACf,YADT,GCjvBG,IAAyBC,G,GDUnBhH,G,eAIiB,G,GAJjBA,G,QASoC,IAAIiH,K,GATxCjH,G,uBAWmC,wB,GAXnCA,G,6BAayC,8B,GAbzCA,G,qBAeiC,sBEtD1CvW,KACFyd,QAAQC,IAAI,qBDeP,SAA8BlW,EAA8B,CAAEmW,qBAAqB,KEcnF,SAAoCC,EAAiBlb,IAAmBkb,WAC7Ejf,OAAOkf,eAAeD,EAAW,OAAQ,CACvCpX,MAKE,OAJK8O,KAAKwI,SACRxI,KAAKwI,OAAS,IAAIvH,GAAWjB,MAC7BA,KAAKuB,WAAY,GAEZvB,KAAKwI,QAEdC,IAAIC,GACF1I,KAAKwI,OAASE,KAIlBrf,OAAOkf,eAAeD,EAAW,UAAW,CAC1CpX,MACE,OAAO8O,KAAKtU,UAEd+c,IAAIC,GACE1I,KAAKuB,WAAavB,KAAKtU,WAAagd,IACtC1I,KAAKwI,OAAOG,QAAUD,EAAI,OAAS,QAErC1I,KAAKtU,SAAWgd,KAIpB,MAAM,QAAEE,GAAYN,EACpBA,EAAUM,QAAU,WACd5I,KAAKuB,YACPvB,KAAK5U,KAAK6E,SAAW,GACrB+P,KAAK5U,KAAKpI,KAAK6lB,OACf7I,KAAK5U,KAAK6W,YAAS/d,EACnB8b,KAAKuB,WAAY,SACVvB,KAAK5U,MAEdwd,EAAQE,KAAK9I,OAGfsI,EAAUS,0BAA4B,WAC/B/I,KAAa7L,YACf6L,KAAa7L,YAAW,GAG3B,IAAK,IAAIhM,EAAI,EAAG6gB,EAAIhJ,KAAKwI,OAAOvY,SAASC,OAAQ/H,EAAI6gB,EAAG7gB,IAClD6X,KAAKwI,OAAOvY,SAAS9H,GAAGsZ,OAAO9V,SACjCqU,KAAKwI,OAAOvY,SAAS9H,GAAGsZ,OAAOsH,4BAInC,MAAM1c,EAAyB2T,KAAa0B,SACtCuH,EAAUjJ,KAAakJ,QAE7B,GAAI7c,EAAS,CACX,IAAI8c,EAAK3kB,KAAKkN,IAAIsO,KAAKwI,OAAOxd,cAAgB,EAAIgV,KAAKjQ,MAAMD,GAAKzD,EAAQ+c,KAAKrkB,MAC3EskB,EAAK7kB,KAAKkN,IAAIsO,KAAKwI,OAAOxd,cAAgB,EAAIgV,KAAKjQ,MAAMC,GAAK3D,EAAQ+c,KAAKtkB,QAC1Ekb,KAAKwI,OAAOxd,eAAwBgV,KAAMsJ,0BAC7CH,EAAYnJ,KAAMjb,MAClBskB,EAAYrJ,KAAMlb,QACTkb,KAAKwI,OAAOxd,eAAiBgV,KAAKwI,OAAOld,kBAClD0U,KAAKwI,OAAO9F,YAAcrW,EAAQ+c,KAAKrkB,MAAQsH,EAAQ+c,KAAKtkB,QAG9Dkb,KAAKuJ,gBAAuB,OAALJ,EAAoB,KAALE,EAClCrJ,KAAKuJ,kBAAoBvJ,KAAKwJ,sBACD,SAAxBxJ,KAAKwI,OAAQ7F,QAAqB3C,KAAKwI,OAAOxlB,KAAKggB,SAASmG,GACnC,SAAzBnJ,KAAKwI,OAAQ5F,SAAsB5C,KAAKwI,OAAOxlB,KAAKigB,UAAUoG,GACrErJ,KAAK+B,KAAKd,GAAWe,qBAGvBhC,KAAKwJ,oBAAsBxJ,KAAKuJ,qBAC3B,GAAIN,EAAQ,CAGjB,GAFAjJ,KAAKuJ,iBAAmB,IAEW,SAAxBvJ,KAAKwI,OAAQ7F,OAAmB,CACzC,MAAM8G,EAAIjlB,KAAK0f,MAAM+E,EAAOS,KAAOT,EAAOU,MAC1C3J,KAAKwI,OAAOxlB,KAAKggB,SAASyG,GAC1BzJ,KAAKuJ,iBAAuB,MAAJE,EAG1B,GAAoC,SAAzBzJ,KAAKwI,OAAQ5F,QAAoB,CAC1C,MAAMgH,EAAIplB,KAAK0f,MAAM+E,EAAOY,KAAOZ,EAAOa,MAC1C9J,KAAKwI,OAAOxlB,KAAKigB,UAAU2G,GAC3B5J,KAAKuJ,iBAAuB,KAAJK,GAGI,MAA1B5J,KAAKuJ,iBAAgCvJ,KAAKuJ,kBAAoBvJ,KAAKwJ,qBACrExJ,KAAK+B,KAAKd,GAAWe,oBAEvBhC,KAAKwJ,oBAAsBxJ,KAAKuJ,kBAIpCjB,EAAUyB,iBAAmB,WAC3B/J,KAAKwI,OAAO5V,SACZ,MAAMoX,EAAUhK,KAAKwI,OAAO3E,6BACtBrB,EAASxC,KAAKwI,OAAO1E,qBAEvBkG,GAAWhK,KAAKwI,OAAO/D,mBACxBzE,KAAK5b,UAA8BC,SAASokB,IAAIjG,EAAOnQ,KAAMmQ,EAAOlQ,KAEjE0N,KAAKwI,OAAOxd,gBACPgV,KAAMjb,MAAQyd,EAAOzd,MACrBib,KAAMlb,OAAS0d,EAAO1d,QAG3BklB,GACFhK,KAAK+B,KAAKd,GAAWgJ,2BAA4BzH,IAIrD,IAAK,IAAIra,EAAI,EAAG6gB,EAAIhJ,KAAKwI,OAAOvY,SAASC,OAAQ/H,EAAI6gB,EAAG7gB,IAClD6X,KAAKwI,OAAOvY,SAAS9H,GAAGsZ,OAAO9V,SACjCqU,KAAKwI,OAAOvY,SAAS9H,GAAGsZ,OAAOsI,oBF7HrCG,GGHK,SAAgCC,EAAa/c,IAAekb,WACjEjf,OAAOkf,eAAe4B,EAAO,OAAQ,CACnCjZ,MACE,OAAO8O,KAAKoK,QAEd3B,IAAI4B,IACGrK,KAAK7U,MAAQkf,IAChBrK,KAAK/P,SAASK,QAASC,IACrByP,KAAK5U,KAAKoF,SAASD,EAAMnF,MACrB4U,KAAKsK,eAAiB/Z,aAAiBnD,MAAiC,IAAfmD,EAAMpF,OACjEoF,EAAM+Z,eAAgB,KAG1BtK,KAAK+B,KAAKd,GAAWe,qBAGnBhC,KAAK7U,OAASkf,GAChBrK,KAAK/P,SAASK,QAASC,IACrByP,KAAK5U,KAAK+X,YAAY5S,EAAMnF,QAGhC4U,KAAKoK,OAASC,KAIlBhhB,OAAOkf,eAAe4B,EAAO,gBAAiB,CAC5CjZ,MACE,OAAO8O,KAAKuK,iBAEd9B,IAAI4B,GACFrK,KAAKuK,gBAAkBF,EACvBrK,KAAK7U,KAAOkf,KAIhB,MAAM,SAAE7Z,GAAa2Z,GACf,eAAE9Z,GAAmB8Z,GACrB,WAAEK,GAAeL,GACjB,YAAEhH,GAAgBgH,EAClBM,EAA2BN,EAAMO,gBAEvCP,EAAM3Z,SAAW,YAAaP,GAC5B,GAAwB,IAApBA,EAASC,OAAc,CACzB,MAAMK,EAAQN,EAAS,GACnB+P,KAAK7U,OACPoF,EAAMnF,KAAOmF,EAAMnF,MAAQ,IAAI6V,GAAW1Q,GAC1CA,EAAMgR,WAAY,EAClBvB,KAAK5U,KAAKoF,SAASD,EAAMnF,OAGvB4U,KAAKsK,eAAiB/Z,aAAiBnD,MAAiC,IAAfmD,EAAMpF,OACjEoF,EAAM+Z,eAAgB,GAExBtK,KAAK+B,KAAKd,GAAWe,oBAEvB,OAAOxR,EAASsY,KAAK9I,QAAS/P,IAGhCka,EAAMK,WAAa,SAAUja,EAAOvC,GAWlC,OAVIgS,KAAK7U,OACPoF,EAAMnF,KAAOmF,EAAMnF,MAAQ,IAAI6V,GAAW1Q,GAC1CyP,KAAKuB,WAAY,EACjBvB,KAAK5U,KAAKoF,SAASD,EAAMnF,KAAM4C,IAG7BgS,KAAKsK,eAAiB/Z,aAAiBnD,MAAiC,IAAfmD,EAAMpF,OACjEoF,EAAM+Z,eAAgB,GAExBtK,KAAK+B,KAAKd,GAAWe,oBACdwI,EAAW1B,KAAK9I,KAAMzP,EAAOvC,IAGtCmc,EAAMhH,YAAc,YAAalT,GAC/B,GAAwB,IAApBA,EAASC,OAAc,CACzB,MAAMK,EAAQN,EAAS,GACnB+P,KAAK7U,MACP6U,KAAK5U,KAAK+X,YAAY5S,EAAMnF,MAE9B4U,KAAK+B,KAAKd,GAAWe,oBAEvB,OAAOmB,EAAY2F,KAAK9I,QAAS/P,IAGnCka,EAAM9Z,eAAiB,SAAUsa,EAAYC,GAC3C,GAAI5K,KAAKuB,UAAW,CAClB,MAAMsJ,EAAQF,GAAc,EACtBrQ,EAA0B,kBAAbsQ,EAAwBA,EAAW5K,KAAK/P,SAASC,OAC9D4a,EAAQxQ,EAAMuQ,EAEpB,GAAIC,EAAQ,GAAKA,GAASxQ,EAAK,CACb0F,KAAK/P,SAAS8a,MAAMF,EAAOC,GACnCxa,QAASC,GAAUA,EAAMgR,WAAavB,KAAK5U,KAAK+X,YAAY5S,EAAMnF,OAE5E4U,KAAK+B,KAAKd,GAAWe,oBAEvB,OAAO3R,EAAeyY,KAAK9I,KAAM2K,EAAYC,IAG/CT,EAAMO,gBAAkB,WAMtB,OALI1K,KAAKuB,WAAavB,KAAKwI,OAAOwC,QAAU/J,GAAWgK,cACrDjL,KAAK+I,4BACL/I,KAAK+J,oBAGAU,EAAyB3B,KAAK9I,OHpGvCkL,GACIhZ,EAAQmW,qBACVjb,IAAY+d,OAAOrK,IAAKjB,GAAUD,GAAqBhN,OAAOiN,IClBhEuL,ID2B8BnD,GCzBd7a,OD0BPuU,GAAG,YAAa,IAAMV,GAAWgK,aAAc,GACxDhD,GAAStG,GAAG,aAAc,IAAMV,GAAWgK,aAAc,I,gMIf3DI,KAAUC,IAAI5iB,MACdL,KAAOgjB,MACPA,KAAUC,IAAI3jB,MACd0jB,KAAUC,IAAI5jB,MACd2jB,KAAUC,IAAI3lB,MACd0lB,KAAUC,IAAIhlB,MACd+kB,KAAUC,IAAI1kB,MACdykB,KAAUC,IAAIC,MAUdne,IAAcoe,cAAe,EAE7Bpe,IAAcqe,mBAAqBre,IAAese,IAClDte,IAAcue,WAAa,EAC3Bve,IAAcwe,WAAaxe,IAAiBye,QCrCrC,MAAMC,GAIR,GAgBW5hB,I,UCET,MAAM6hB,GAAc7hB,IACzB,MAAM,QAEJ0D,EAFI,WAGJoe,EAHI,OAIJlhB,EAJI,KAKJqD,GACEjE,GACE,aACJ+hB,EAAe,IACbnhB,EACEohB,EAAiBC,eA6EvB,OA3EAtX,IAAMuX,UACJ,KACMF,EAAeG,SACjBze,EAAQiF,KAAK,CACX,CAACjK,IAAD,OAA4BuF,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAM0E,QAIxC,QAAC1E,QAAD,IAACA,OAAD,EAACA,EAAM0E,OAGTgC,IAAMuX,UACJ,KACEH,EAAa3b,QAAShG,IACpBsD,EAAQ+T,GAAGrX,EAAW,KAAO,IAAD,IAC1B,UAAA0hB,EAAWK,eAAX,mBAAoBC,cAApB,qBAIJ,MAAMve,EAASH,EAAQG,SAwBvB,OAvBAH,EAAQ+T,GAAG3X,GAAwB,KACjC,GAAI+D,EACDH,EAAyB2e,iBAAiBjc,QAASnN,IAClDA,EAAK4e,KAAK/X,UAEP,CACL,MAAM7G,EAAOyK,EACbzK,EAAK6I,SAAS+V,KAAK/X,IACnB7G,EAAKse,SAASM,KAAK/X,OAGvB4D,EAAQ+T,GAAG3X,GAA0B,KACnC,GAAI+D,EACDH,EAAyB2e,iBAAiBjc,QAASnN,IAClDA,EAAK4e,KAAK/X,UAEP,CACL,MAAM7G,EAAOyK,EACbzK,EAAK6I,SAAS+V,KAAK/X,IACnB7G,EAAKse,SAASM,KAAK/X,OAIhB,KACLiiB,EAAa3b,QAAShG,IACpBsD,EAAQ4e,IAAIliB,KAGdsD,EAAQ4e,IAAIxiB,IACZ4D,EAAQ4e,IAAIxiB,MAIhB,CAAC4D,EAASqe,IAGZpX,IAAMuX,UAAU,KAAO,IAAD,MACpB,MAAMK,EAAcT,EAAWK,QAASjb,SAASsb,SAE3CA,EAAQ,oBAAG5hB,EAAOwY,cAAV,iBAAG,EAAeqJ,YAAlB,aAAG,SAAsB,CAAE/e,UAASO,gBAApC,SAKgC,IAAD,GAJ7C6d,EAAWK,QAASjb,SAASsb,SAAWA,EACpCD,IAAgBC,KAClBzb,GAAa2B,OAAOhF,EAASoe,EAAWK,SAEpCtb,GAA6BnD,KAC/B,UAAAoe,EAAWK,eAAX,SAAoBC,YAGvB,CAACxhB,EAAOwY,SAGXzO,IAAM+X,QAAQ,KACZhf,EAAQif,QAAU,4BAAMb,EAAWK,eAAjB,aAAM,EAAoBjb,SAASyb,SACrDjf,EAAQ8e,SAAW,4BAAMV,EAAWK,eAAjB,aAAM,EAAoBjb,SAASsb,WACrD,CAAC9e,IACG,I,6rBClFT,MAAMkf,GAAuB,CAC3Bhd,EAAG,EACHE,EAAG,EACHjL,MAAO,EACPD,OAAQ,GAGMoF,WACd,MAAM,SACJ7F,EADI,iBAEJ0oB,EAFI,QAGJC,EAHI,OAIJliB,EAAS,GAJL,KAKJqD,EALI,UAMJ8e,GAAY,GACV/iB,GACE,GACJ2D,GACEM,EACE+d,EAAiBC,gBACjB,GAAExd,EAAF,iBAAMue,EAAN,yBAAwBC,GAA6BrB,GAAgBkB,GACrErc,EAAWsc,EACbE,EAAyBtf,GACzBqf,EAAiBrf,IACd,CAAEuf,GAAYC,YAAqB,GAAI,QACxCrB,EAAanX,IAAMyY,OAAoB,CAC3ChB,OAAS9hB,GAAuB4iB,EAAS,GAAI5iB,GAC7CuiB,iBAAkB,KACA,OAAhBA,QAAgB,IAAhBA,KAAmB,CAAEnf,UAASoD,QAASgb,EAAWK,UAClDze,EAAQ2e,iBAAiBjc,QAASid,IACZtc,GAAaC,IAAIqc,GACzBR,sBAGhBS,YAAaV,GACb1b,SAAU,CACRsb,UAAU,EACVrb,WAAY,CACVT,QAASF,GAAqB7C,EAAI8C,IAEpCkc,SAAS,KAGPjf,EAAUiH,IAAM+X,QAAQ,IAAMje,EAAImS,IAAI,CAC1CjO,KAAM,CACJhF,KACA,CAACjF,IAA8BojB,EAAWK,QAC1C,CAACzjB,IAAD,OAA4BuF,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAM0E,MAEpCxO,SAAS,MAAMA,GACfopB,MAAO,UAEW,CAAC9e,EAAId,IAwDzB,OAvDAgH,IAAMuX,UACJ,KACE,MACEC,SAAS,iBACPU,IAEAf,EACE0B,EAAU,KACd1B,EAAWK,QAAQjb,SAASyb,SAAU,EACtC5b,GAAa2B,OAAOhF,EAASoe,EAAWK,UAEpCsB,EAAc,KAClB3B,EAAWK,QAAQjb,SAASyb,SAAU,EACtC5b,GAAa2B,OAAOhF,EAASoe,EAAWK,UAK1C,OAHAze,EAAQ+T,GAAG3X,GAA0B+iB,GACrCnf,EAAQ+T,GAAG3X,GAA2B0jB,GACtC9f,EAAQ+T,GAAG3X,GAA0B2jB,GAC9B,KACL/f,EAAQ4e,IAAIxiB,GAA2B,IAAG4D,EAAQC,KAAQkf,GAC1Dnf,EAAQ4e,IAAIxiB,GAA4B,IAAG4D,EAAQC,KAAQ6f,GAC3D9f,EAAQ4e,IAAIxiB,GAA2B,IAAG4D,EAAQC,KAAQ8f,GAC1Dhf,EAAIkS,OAAOjT,KAGf,CAACe,EAAId,IAEPgH,IAAM+X,QAAQ,KACRV,EAAeG,SACjBze,EAAQvJ,SAASA,IAElB,CAACA,EAASyL,EAAGzL,EAAS2L,IAEzB6E,IAAM+X,QAAQ,KACZ,MAAMgB,EAAoBld,GAAqB9C,EAAQC,KAAM8C,GAC7D,GAAIid,IAAsB5B,EAAWK,QAAQjb,SAASC,WAAWT,QAAS,CACxE,MAAMid,EAAa9c,GAA6BnD,GAChDoe,EAAWK,QAAQjb,SAASC,WAAWT,QAAUgd,EAKjD3c,GAAa2B,OAAOhF,EAASoe,EAAWK,SACpCwB,IAAe9c,GAA6BnD,IAC9Coe,EAAWK,QAAQC,WAGtB,CAAC1e,EAAS+C,IACbob,GAAW,CACTC,aACArd,KACAf,UACA9C,SACAqD,SAEK,CACLP,UACAoD,QAASgb,EAAWK,QACpB1b,WACAhC,OC1IJ,MAEEnN,QAFI,eAGJssB,GACArsB,SAJI,IAKFssB,YACF,GAAyC,CAAEC,OAAO,IAIvCC,GAAsBxsB,GACtBysB,GAAiBJ,GCoBvB,MAAMK,GAAYhb,wBACvB,gBACA,CACEC,OAASlJ,IACP,MAAM,OACJkkB,EADI,UAEJC,GAAY,EAFR,YAGJjY,GAAc,GACZlM,EACEU,EAAW,IAAIwC,IAErB,GADAxC,EAASwL,YAAcA,GAAeiY,EAClCA,EAAW,CACb,MAAM,OAAEC,EAAF,OAAUC,GCxCjB,SACLH,GAEA,MAAMI,EAA4C,CAAEnqB,SAAU,MAyC9D,OAHAoqB,SAAS/e,iBAAiB,YAAa,KACrC8e,EAAYnqB,SAAW,OAElB,CACLiqB,OAzCcjqB,IACdmqB,EAAYnqB,SAAWA,GAyCvBkqB,OAvCclqB,GAAuBkH,KACrCA,IACA,KAAO,IAAD,EACJ,MAAM8B,EAAM,UAAI+gB,EAAOvU,KAAW2U,EAAYnqB,SAAvBwV,CAAkCxV,WAA7C,QAA2D,GASvE,OAPAmqB,EAAYnqB,SAAWA,GACM,KAAnB,OAANgJ,QAAM,IAANA,OAAA,EAAAA,EAAQqhB,gBACVF,EAAYnqB,SAAW,MAErBkH,IAAM,WAAY8B,KACnBmhB,EAA6BnqB,SAAWgJ,EAAOhJ,UAE3CgJ,GAZ4B9B,CAiCrCijB,EAAYnqB,WDAmBsqB,CAAWC,IACpC,MAAQ3M,QAAQ,MAAElS,IAAYnF,EAC9BA,EAASkF,GAAK8e,EAAQ9e,EAAIC,EAAMD,EAChClF,EAASoF,GAAK4e,EAAQ5e,EAAID,EAAMC,EAChCoe,GAAUA,EAAO,CAAEte,EAAGlF,EAASkF,EAAGE,EAAGpF,EAASoF,MAEhDpF,EACG+W,GAAG,cAAgBpP,IAClB,MAAM,cAAEsc,GAAkBtc,EAAEM,MACtB,EAAE/C,EAAF,EAAKE,GAAMiC,GAAuB4c,GACxCP,EAAO,CAAExe,IAAGE,QAEb2R,GAAG,cAAgBpP,IAClB,MAAM,cAAEsc,GAAkBtc,EAAEM,MACtB,EAAE/C,EAAF,EAAKE,GAAMiC,GAAuB4c,GACxCN,EAAO,CAAEze,IAAGE,QAIlB,OAAOpF,GAETyI,WAAY,CAAClJ,EAAiCU,EAAUyI,KAAY,IAAD,EACjE,MAAMpJ,EAAQO,GAAgB6I,IACxB,KACJjB,EAAO,EADH,IAEJC,EAAM,EAFF,MAGJvN,EAHI,OAIJD,GAJI,UAKFoF,EAAMe,aALJ,QAKa,GACnBN,GACER,EACAU,EACAX,EACA,CACEa,QAAQ,IAGZZ,EAAgB2F,EAAIuC,EACpBlI,EAAgB6F,EAAIsC,EACpBvN,IAAUoF,EAAgBpF,MAAQA,GAClCD,IAAWqF,EAAgBrF,OAASA,MEhEpCgqB,GAAmB,CAAEhf,EAAG,EAAGE,EAAG,GA4FvB+e,GAAuBvb,YA3FA,CAClCtJ,EACAoK,KACI,IAAD,UACH,MAAM,KACJnG,EADI,QAEJ6e,EAFI,SAGJ/c,EAHI,OAIJnF,EAAS,GAJL,SAKJkkB,GACE9kB,EACE+kB,EAAepa,IAAMyY,OAAqB,MAChDzY,IAAMuX,UAAU,KACd,GAAIje,EAAK0C,IAAIX,OAAS,EAAG,CACvB,MAAMgf,EAAc,CAClBpf,EAAG,EACHE,EAAG,GAEL7B,EAAK0C,IAAIP,QAASzC,IAChB,MACMshB,EADiBxgB,EAAGC,IAAIf,GACWxJ,WACzC6qB,EAAYpf,GAAKqf,EAAkBrf,EACnCof,EAAYlf,GAAKmf,EAAkBnf,IAErC,MAAM,OAAEE,GAAW/B,EAAK0C,IAClBue,EAAqB,CACzBtf,EAAGof,EAAYpf,EAAII,EACnBF,EAAGkf,EAAYlf,EAAIE,GAErBtC,EAAQvJ,SAAS+qB,KAElB,CAACjhB,EAAK0C,MACT,MAAM,QAAEjD,EAAF,QAAWoD,EAAX,GAAoBrC,GAAO0gB,GAAQ,CACvCrC,UACAliB,SACAzG,SAAQ,UAAEyG,EAAOzG,gBAAT,QAAqByqB,GAC7B/B,iBAAkB,EAAGnf,cACnB,MAAMiC,EAAYof,EAAa5C,SACzB,EAAEvc,EAAF,EAAKE,GAAMpC,EAAQvJ,WACzBwL,EAAUC,EAAIA,EACdD,EAAUG,EAAIA,EACdgB,EAAQwc,YAAY1d,EAAIA,EACxBkB,EAAQwc,YAAYxd,EAAIA,GAE1B7B,UAEI,EAAE2B,EAAF,EAAKE,GAAMpC,EAAQvJ,WACnB+pB,EAASvZ,IAAMya,YAClBlnB,IACCwF,EAAQvJ,SAAS+D,IAEnB,CAACwF,IAEHiH,IAAMuX,UAAU,KACd,MAAMvc,EAAYof,EAAa5C,QAC/Brb,EAAQwc,YAAc5d,GACpBC,KAGJ,MAAMoE,EAAQnS,IACR6J,EAAUoF,GAA6BnD,KAA7B,UAA0CO,EAAKxC,eAA/C,UACV4jB,EAAUve,EAAQI,SAASsb,SAC7B,EADY,oBAEX5hB,EAAOwY,cAFI,iBAEX,EAAelS,gBAFJ,aAEX,EAAyBme,eAFd,QAEyB,GACzC,OACE,kBAACpB,GAAD,CACEpZ,IAAKka,EACLhkB,MAAO,CACLoH,KAAMvC,EACNwC,IAAKtC,GAEP6K,MAAO0U,EACP5jB,QAASA,EACT0iB,WAAS,EACTD,OAAQA,GAMPne,EAAS,CACR9B,OACAP,UACAe,KACAsF,QACA+a,eAQN,CACE/Z,cAAc,I,6rBCzFlB,MAGaua,GAA0BrsB,IACrC,MAAMssB,EAAStsB,EAAK0K,KACd6hB,EAAgBvsB,EAAKse,SACrBkO,EAAgBxsB,EAAK6I,SACrB4jB,EAAeF,EAAcG,UAAUF,GACvCG,EAAoBF,EAAa1f,OACjC6f,EAAqBvrB,KAAKwrB,MAAMF,EAAoB,GAC1D,IAAIG,EAAY,EAChBL,EAAatf,QAAQ,CAAC4f,EAAQ/nB,KACxB+nB,EAAOriB,OAAS4hB,IAClBQ,EAAY9nB,KAGhB,IAAIgoB,EAAc,EAOlB,OANIL,EAAoB,IACtBK,EAAc5kB,KAASwkB,EAAoBA,EAAqB,GAAGE,GAC/DH,EAAoB,IAAM,GAAKK,GAAe,IAChDA,GAAe,IAGZ,CACLA,cACAniB,MAAOiiB,EACPtb,MAAOmb,IAGEM,GAAsB,CACjCpkB,EACAyN,KAEA,MAAM4W,EAAerkB,EAAO3H,WACtBisB,EAAa7W,EAAGpV,WAChBksB,EAAiB1W,KAAWwW,EAAXxW,CAAyByW,GAI1C5W,EAAaG,KAAY0W,GACzB5W,EAAaE,KAASrV,KAAKC,GAAK,EAAnBoV,CAAsBH,GAEnC8W,EAAmB3W,KAAWwW,EAAXxW,CAAyByW,GAC5CG,EAAOzkB,EAAO6B,KAAO4L,EAAG5L,KAAO,GAAK,EAC1C,MAAO,CACLwiB,eACAC,aACAC,iBACA7W,aACAC,aACA6W,mBACAxV,qBAAsBnB,KAAiB4W,EAAjB5W,CAAuBH,GAC7CuB,qBAAsBpB,KAAiB4W,EAAjB5W,CAAuBF,KAmLpC+W,GAAgBld,YAhLA,CAC3BtJ,EACAoK,KACI,IAAD,MACH,MAAM,KACJnG,EADI,QAGJ6e,EAHI,SAIJ/c,EAJI,SAKJuK,EAAWmW,GALP,OAMJ7lB,EAAS,GANL,SAOJkkB,GACE9kB,EACE+J,EAAQnS,IACR8uB,EAAc/b,IAAMyY,OAAsB,MAC1C2B,EAAepa,IAAMyY,OAAqB,MAM1CuD,EAAmBhc,IAAMya,YAAY,EACzC1hB,UACAe,SAKA,MAAM+gB,EAAgB9hB,EAAQ6T,SACxBkO,EAAgB/hB,EAAQ5B,SACxB8kB,EAAgBtB,GAAuB5hB,IACvC,eACJ2iB,EADI,iBAIJC,EAJI,WAKJ7W,EALI,WAMJD,EANI,qBAOJsB,EAPI,qBAQJC,GACEmV,GAAoBT,EAAeD,GACvCT,EAAa5C,QAASvc,EAAI0gB,EAAiB1gB,EACzCghB,EAAcX,YAAclV,EAAqBnL,EAjG9B,GAmGrBmf,EAAa5C,QAASrc,EAAIwgB,EAAiBxgB,EACzC8gB,EAAcX,YAAclV,EAAqBjL,EApG9B,GAsGrB,MAAM+gB,EAAuB9f,GAAa6B,eAAe6c,GACnDqB,EAAuB/f,GAAa6B,eAAe4c,GAEzD,OAAOlV,EAAS,OACdrM,OACAP,UAEAohB,WACA/a,QACA0b,gBACAD,gBACA/U,KAAM9G,IACJjG,EAAQ7M,WACJkT,EAAM5V,QAAQK,QAAQE,KACrBgP,EAAQ5B,SAASjL,YAAc6M,EAAQ6T,SAAS1gB,WAC/CkT,EAAM5V,QAAQU,UAAUH,KACxBqV,EAAM5V,QAAQmC,WAAWC,OAEjCma,SAAUgW,EAAYvE,QACtB5S,GAAIuX,EAAqBxD,YACzB/f,KAAMsjB,EAAqBvD,YAC3B5pB,UAAU,EACVuU,SA5HmB,GA4HT2Y,EAAcX,YACxBpV,OAAQ,CACNjL,EA7He,GA6HZghB,EAAcX,YACjBngB,EA9He,GA8HZ8gB,EAAcX,aAEnBI,iBACA7W,aACAC,aACAqB,uBACAC,wBACG6V,GA7BU,IA8BbniB,SAED,CAACsgB,EAAc2B,IACZ7D,EAAmBlY,IAAMya,YAAY,EAAG1hB,cAC5CijB,EAAiB,CACfliB,KACAf,aAED,CAACijB,KACE,QAAEjjB,EAAF,GAAWe,EAAX,QAAeqC,GCnJJ9G,KACjB,MAAM,iBACJ6iB,EADI,QAEJC,EAFI,OAGJliB,EAAS,GAHL,KAIJqD,GACEjE,GACE,GACJ2D,EADI,OAEJ7B,EAFI,OAGJyV,GACEtT,GACE,GAAEQ,GAAOmd,GAAgBkB,IACxB,CAAEI,GAAYC,YAAqB,GAAI,QAExCrB,EAAanX,IAAMyY,OAAoB,CAC3ChB,OAAS9hB,IACP4iB,EAAS,GAAI5iB,IAEfuiB,iBAAkB,KACA,OAAhBA,QAAgB,IAAhBA,KAAmB,CAEjBnf,QAASoe,EAAWK,QAAQze,QAC5BoD,QAASgb,EAAWK,QACpB1d,QAGJf,QAAS,KACTwD,SAAU,CACRsb,UAAU,EACVuE,cAAc,EACd5f,WAAY,CACV6f,aAAa,MAInBlF,EAAWK,QAAQze,QAAUiH,IAAM+X,QAAQ,KACzC,MACEP,SAAS,QACPze,IAEAoe,EAIJ,OAHIpe,GACFe,EAAGkS,OAAOjT,GAELe,EAAImS,IAAI,CACbjO,KAAM,CACJhF,KACA7B,SACAyV,SACA,CAAC7Y,IAA8BojB,EAAWK,QAC1C,CAACzjB,IAAD,OAA4BuF,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAM0E,MAEpC4a,MAAO,WAIX,CAAC9e,EAAId,EAAI7B,EAAQyV,IACjB,MACE4K,SAAS,QACPze,IAEAoe,EAkEJ,OAjEAnX,IAAMuX,UACJ,KACEJ,EAAWK,QAAQU,iBAAmB,KACpB,OAAhBA,QAAgB,IAAhBA,KAAmB,CAAEpe,KAAIf,UAASoD,QAASgb,EAAWK,WAExDpb,GAAa2B,OACXhF,EACAoe,EAAWK,UAGf,CAACU,IAEHlY,IAAMuX,UAAU,IAAM,KAAQzd,EAAIkS,OAAOjT,IAEvC,CAACe,EAAId,EAAI7B,EAAQyV,IAInB5M,IAAMuX,UACJ,KACE,MAAM+E,EAAkB,KAEtB,MAAMtD,EAAa9c,GAA6BnD,GAC1CwjB,EAAgBngB,GAAaC,IAAItD,EAAQ5B,UACzCqlB,EAAgBpgB,GAAaC,IAAItD,EAAQ6T,UACzC6P,EAAgBvgB,GAA6BnD,EAAQ5B,UACrDulB,EAAgBxgB,GAA6BnD,EAAQ6T,UACrD+P,EAAiBF,GAAiBC,EACxC,IAAIE,GAAc,EACdD,IAAmBxF,EAAWK,QAAQjb,SAASC,WAAW6f,cAC5DlF,EAAWK,QAAQjb,SAASC,WAAW6f,YAAcM,EACrDvgB,GAAa2B,OAAOhF,EAASoe,EAAWK,SACpCwB,IAAe9c,GAA6BnD,KAC9C6jB,GAAc,IAGlB,MAAMC,EAAkB1F,EAAWK,QAAQjb,SAAS6f,aAC9CU,EAAkBP,EAAchgB,SAASsb,UAC5C2E,EAAcjgB,SAASsb,SAC1BV,EAAWK,QAAQjb,SAAS6f,aAAeU,EACvCA,IAAoBD,IACtBD,GAAc,EACdxgB,GAAa2B,OAAOhF,EAASoe,EAAWK,UAEtCoF,GACFzF,EAAWK,QAAQC,UAMvB,OAHA1e,EAAQ5B,SAAS2V,GAAG3X,GAAsBmnB,GAC1CvjB,EAAQ6T,SAASE,GAAG3X,GAAsBmnB,GAEnC,KACLvjB,EAAQ5B,SAASwgB,IAAIxiB,GAAuB,IAAG4D,EAAQC,KAAQsjB,GAC/DvjB,EAAQ6T,SAAS+K,IAAIxiB,GAAuB,IAAG4D,EAAQC,KAAQsjB,KAGnE,CAACvjB,IAEHme,GAAW,CACTC,aACArd,KACAf,UACAO,OACArD,WAEK,CACL8C,UACAoD,QAASgb,EAAWK,QACpB1d,ODgB+BijB,CAAQ,CACvC5E,UACAD,mBACAjiB,SACAqD,SAEF0G,IAAMuX,UACJ,KACEyE,EAAiB,CACfliB,KACAf,cAINiH,IAAMuX,UACJ,KACE6C,EAAa5C,QAAS/P,QxBXU,IwBalC,IAEF,MAAMwU,EAAgBtB,GAAuB5hB,IACvC,iBAEJ4iB,EAFI,WAGJF,EAHI,aAIJD,EAJI,qBAKJpV,GACEmV,GAAoBxiB,EAAQ5B,SAAU4B,EAAQ6T,UAC5C9V,EAAUoF,GAA6BnD,GAEvC2hB,EADWve,EAAQI,SAASsb,UAAY1b,EAAQI,SAAS6f,aAE3D,EADoB,iBAEnBnmB,QAFmB,IAEnBA,GAFmB,UAEnBA,EAAQwY,cAFW,iBAEnB,EAAgBlS,gBAFG,aAEnB,EAA0Bme,eAFP,QAEkB,GAEpCG,EAAgB9hB,EAAQ6T,SACxBkO,EAAgB/hB,EAAQ5B,SAC9B,OACE,oCACE,kBAACmiB,GAAD,CACEpZ,IAAKka,EACLpU,MAAO0U,EACP5jB,QAASA,EACTV,MAAO,CACLoH,KAAMme,EAAiB1gB,EACrBghB,EAAcX,YAAclV,EAAqBnL,EA5LpC,GA8LfwC,IAAKke,EAAiBxgB,EACpB8gB,EAAcX,YAAclV,EAAqBjL,EA/LpC,GAiMfsM,QxB5C4B,IwB8C9BlG,aAAW,EACXyb,UAAW,KACTjkB,EAAQmU,KAAK/X,KAEf8nB,SAAU,KACRlkB,EAAQmU,KAAK/X,MAKbiG,EAAS,OACP9B,OACAP,UACA6L,GAAI6W,EACJ7iB,KAAM4iB,EACN1hB,KACAsF,QACA+a,YACG8B,GARG,IASNpB,gBACAC,oBAIN,kBAACnT,GAAD,CACEzH,IAAK6b,EACLjlB,QAASA,EACTkP,MAAO0U,MAWb,CACEta,cAAc,IElPZ6Z,GAAmB,CAAEhf,EAAG,EAAGE,EAAG,GAgFvB+hB,GAAgBve,YA/EA,CAC3BtJ,EACAoK,KACI,IAAD,UACH,MAAM,KACJnG,EADI,QAEJ6e,EAFI,SAGJ/c,EAHI,OAIJnF,EAAS,GAJL,SAKJkkB,GACE9kB,EACE+kB,EAAepa,IAAMyY,OAAO,OAC5B,QAAE1f,EAAF,QAAWoD,EAAX,GAAoBrC,GAAO0gB,GAAQ,CACvCrC,UACAliB,SACAzG,SAAQ,oBAAEyG,EAAOzG,gBAAT,QAAqB8J,EAAK9J,gBAA1B,QAAsCyqB,GAC9C/B,iBAAkB,EAAGnf,cACnB,MAAM,EAAEkC,EAAF,EAAKE,GAAMpC,EAAQvJ,WAEzB4qB,EAAa5C,QAAQvc,EAAIA,EAEzBmf,EAAa5C,QAAQrc,EAAIA,EACzBgB,EAAQwc,YAAY1d,EAAIA,EACxBkB,EAAQwc,YAAYxd,EAAIA,GAE1B7B,UAEI,EAAE2B,EAAF,EAAKE,GAAMpC,EAAQvJ,WACnB+pB,EAASvZ,IAAMya,YAClBlnB,IACCwF,EAAQvJ,SAAS+D,IAEnB,CAACwF,IAEHiH,IAAMuX,UAAU,KAEdpb,EAAQwc,YAAc5d,GACpBqf,EAAa5C,WAGjB,MAAMpY,EAAQnS,IACR6J,EAAUoF,GAA6BnD,GACvC2hB,EAAUve,EAAQI,SAASsb,SAC7B,EADY,oBAEX5hB,EAAOwY,cAFI,iBAEX,EAAelS,gBAFJ,aAEX,EAAyBme,eAFd,QAEyB,GACzC,OACE,kBAACpB,GAAD,CACEpZ,IAAKka,EACLhkB,MAAO,CACLoH,KAAMvC,EACNwC,IAAKtC,GAEP6K,MAAO0U,EACP5jB,QAASA,EACT0iB,WAAS,EACTD,OAAQA,EACRyD,UAAW,KACTjkB,EAAQmU,KAAK/X,KAEf8nB,SAAU,KACRlkB,EAAQmU,KAAK/X,MAOdiG,EAAS,CACR9B,OACAP,UACAe,KACAsF,QACA+a,WACAhe,cAQN,CACEiE,cAAc,ICnGL+c,GAAuC,EAClD7jB,OAAMP,UAASe,KAAIsF,YACd,IAAD,IACJ,MAAMge,EAAkBrkB,EAAQ2e,eAAe,aAAarc,OAAS,EACrE,OACE,kBAAC,GAAD,CACEjF,MAAO,CACLlG,MAAO,IACPD,OAAQ,IACRotB,eAAgB,SAChBC,WAAY,SACZxJ,QAAS,OACTxT,gBAAiB8c,EACbhe,EAAM5V,QAAQU,UAAUH,KACvBgP,EAAQ7M,WACPkT,EAAM5V,QAAQK,QAAQE,KACtBqV,EAAM5V,QAAQY,QAAQL,KAC5BwW,aAAc,IAEhBgB,aAAW,EACXE,WAAY,KACV3E,GAAchD,GACdf,EAAQwkB,WAGV,kBAAC,GAAD,CACEnnB,MAAO,CACL5G,SAAU,WACViO,KAAM,GACN0B,MAAO,SAETD,UAAQ,GANV,oBAQGxI,IAAO4C,EAAKN,GAAGsJ,MAAM,aARxB,aAQG,EAA4Bkb,UAAU,EAAG,WAR5C,QAQmDlkB,EAAKN,MChCjDykB,GAAgC,EAC3CnkB,OAAMP,UAASe,KAAIsF,YACd,IAAD,IACJ,MAAMge,EAAkBrkB,EAAQ2e,eAAe,aAAarc,OAAS,EACrE,OACE,kBAAC,GAAD,CACEjF,MAAO,CACLlG,MAAO,GACPD,OAAQ,GACRotB,eAAgB,SAChBC,WAAY,SACZxJ,QAAS,OACTxT,gBAAiB8c,EACbhe,EAAM5V,QAAQU,UAAUH,KACvBgP,EAAQ7M,WACPkT,EAAM5V,QAAQK,QAAQE,KACtBqV,EAAM5V,QAAQmC,WAAWC,MAC/B2U,aAAc,IAEhBgB,aAAW,EACXE,WAAY,KACV3E,GAAchD,GACdf,EAAQwkB,WAGV,kBAAC,GAAD,CACEnnB,MAAO,CACL5G,SAAU,WACViO,KAAM,GACN0B,MAAO,SAETD,UAAQ,GANV,oBAQGxI,IAAO4C,EAAKN,GAAGsJ,MAAM,aARxB,aAQG,EAA4Bkb,UAAU,EAAG,WAR5C,QAQmDlkB,EAAKN,MClCjD0kB,GAAgC,EAC3C5jB,KACAR,OACAP,cAH2C,eAK3C,kBAAC,GAAD,CACE3C,MAAO,CAGL5G,SAAU,WAEV6tB,eAAgB,SAChBC,WAAY,SACZxJ,QAAS,QAOXrS,WAAY,KACV3E,GAAchD,GACdf,EAAQwkB,WAGV,kBAAC,GAAD,CACEnnB,MAAO,CAIL+I,MAAO,QACP2C,SAAU,IAEZ5C,UAAQ,GARV,oBAUGxI,IAAO4C,EAAKN,GAAGsJ,MAAM,aAVxB,aAUG,EAA4Bkb,UAAU,EAAG,WAV5C,QAUmDlkB,EAAKN,M,onBCxB5D,MAAM2kB,GACE,EADFA,GAEI,EAFJA,GAGC,EA2CDC,GAAwB,OACxBC,GAAoBvf,wBAAc,WAAY,CAClDC,OAASlJ,IACP,MACEyoB,KAAK,SACH1K,EADG,OAEH2K,EAFG,MAGHC,GAJE,OAMJ/tB,EANI,MAOJC,EAPI,SAQJ+tB,EARI,oBASJC,EAAsBN,GATlB,eAUJO,EAAiBP,GAVb,kBAWJQ,EAAoBR,IAClBvoB,EACE6H,EAAyB,IAAImhB,KAAe,CAChDC,YAAapuB,EACbquB,aAActuB,EACduuB,WAAYtuB,EACZuuB,YAAaxuB,EACb8tB,SACAzgB,YAAa8V,EAASsL,QAAQphB,YAC9BqhB,cAAc,EACdC,SAAUxL,EAASyL,OAEb,OAARZ,QAAQ,IAARA,KAAW/gB,GACXA,EAAS4hB,kBAAmB,EAC5B5hB,EACG6hB,KAAK,CAAEC,WAAW,IAClBC,QACAC,MAAM,CACLC,eAAe,EACfC,WAAW,IAEf,MAAMC,EAAe,CACnB7H,QAAS,CACP8H,aAAc,CACZC,SAAS,EACTC,cAAe,KACfC,gBAAiB,KACjBC,WAAY,QAKlBxiB,EAAS4P,GACP,cACCpP,IAIC,GACEA,EAAEkP,SAAWlP,EAAEiiB,gB7BqvBSjiB,KAAO,IAAD,EACtC,MAAMC,EAAO,UAAGD,EAAEC,eAAL,QAAgBD,EAAEE,eAC/B,OAAOD,GAAWA,EAAQtC,OAAS,G6BtvBvBukB,CAAkBliB,GACtB,CAEA,MAAMlO,EAAWyN,GAA6BC,EAAUQ,EAAEM,KAAKgc,eAC/DqF,EAAa7H,QAAQ8H,aAAaE,cAAgB,CAChDvkB,EAAGzL,EAASyL,EACZE,EAAG3L,EAAS2L,GAEd+B,EAASwhB,QAAQmB,MAAM,QAGzB3iB,EAAS4iB,SAAU,EACnBC,WAAW,KACT7iB,EAAS4iB,SAAU,GAClB,OAGP5iB,EAAS4P,GAAG,YAAcpP,IAExB,GADAR,EAASwhB,QAAQsB,OAAO,QACpBX,EAAa7H,QAAQ8H,aAAaC,QAAS,CAC7C,MAAM,WACJG,EADI,gBAEJD,EAFI,cAGJD,GACEH,EAAa7H,QAAQ8H,aACzBlB,EAAkB,CAChBjhB,MAAOO,EACP8hB,cAAeA,EACfS,YAAaR,EACb9G,YAAajc,GAAe8iB,EAAgBC,KAE9CviB,EAASoR,YAAYoR,GACX,OAAVA,QAAU,IAAVA,KAAY3L,UAEdsL,EAAa7H,QAAQ8H,aAAe,KAEtCpiB,EAAS4P,GAAG,cAAgBpP,IAE1B,GAAI2hB,EAAa7H,QAAQ8H,aAAaE,gBAAkBH,EAAa7H,QAAQ8H,aAAaI,WAAY,CACpG,MAAMlwB,EAAWyN,GAA6BC,EAAUQ,EAAEM,KAAKgc,eAC/D,GACEtjB,IACEsO,KAAWqa,EAAa7H,QAAQ8H,aAAaE,eAC7Cxa,KAFFtO,CAGElH,GAAY,GAAI,CAClB,MAAMkwB,EAAa,IAAInnB,IACvB2E,EAASvB,SAAS+jB,GAClBL,EAAa7H,QAAQ8H,aAAaI,WAAaA,EAC/CxB,EAAoB,CAClB/gB,MAAOO,EACP8hB,cAAeH,EAAa7H,QAAQ8H,aAAaE,gBAEnDH,EAAa7H,QAAQ8H,aAAaC,SAAU,GAGhD,GAAIF,EAAa7H,QAAQ8H,aAAaC,QAAS,CAE7C,MAAM/vB,EAAWyN,GAA6BC,EAAUQ,EAAEM,KAAKgc,eAC/DqF,EAAa7H,QAAQ8H,aAAaG,gBAAkB,CAClDxkB,EAAGzL,EAASyL,EACZE,EAAG3L,EAAS2L,GAEd,MAAM,cACJqkB,EADI,gBAEJC,EACAC,WAAYQ,GACVb,EAAa7H,QAAQ8H,aACnBI,EAAaQ,EACbvH,EAAcjc,GAAe8iB,EAAgBC,GACnDtB,EAAe,CACbhhB,MAAOO,EACPuiB,YAAaR,EACbD,cAAeA,EACf7G,gBAEF+G,EAAWzkB,EAAI0d,EAAY1d,EAC3BykB,EAAWvkB,EAAIwd,EAAYxd,EvBqFP,EAACpF,EAAyBV,KAGpD,MACEe,OAAO,MACLlG,EAAQ,EADH,OAELD,EAAS,EAFJ,gBAGLqQ,EAAkB,QAHb,aAILC,EAAe,EAJV,YAKLC,EAAc,EALT,YAMLC,EAAc,SACZ,IACFpL,EACJU,EAAS2K,QACT3K,EAAS4K,UAAU3B,IAAYsB,GAAkBtB,IAAWsB,IAC5DvK,EAAS6K,UAAUJ,EAAaxB,IAAYyB,IAC5C,MAAMlQ,EAASL,EAAQ,EAClBA,IAAUD,GAAYsQ,GAAgBhQ,EACzCwF,EAAS8K,WAAWtQ,EAAQA,EAAQA,GAEpCwF,EAAS+K,gBAAgB,EAAG,EAAG5Q,EAAOD,EAAQsQ,GAEhDxK,EAASgL,WuB1GHof,CAAaT,EAAY,CACvBtpB,MAAO,CACLlG,MAAOyoB,EAAYzoB,MACnBD,OAAQ0oB,EAAY1oB,OACpBqQ,gBAAiB,gBACjBG,YAAa,kBACbD,YAAa,EAAItD,EAAShC,MAAMD,QAKxCiC,EAAS4P,GAAG,QAAU9O,IAEpBA,EAAKb,MAAMijB,mBAyBb,MAAMC,EAAO,IAAIC,KAAO,CACtBC,WAAW,IAgFb,OA9EAF,EAAKG,QAAQtjB,EAAS9B,UACtBilB,EAAKA,KAAKnjB,EAASujB,oBAGnBloB,IAAY+d,OAAOrK,IAAI,KACjB/O,EAASwjB,QACXL,EAAKA,KAAKnjB,EAASujB,oBACnBvjB,EAAS9B,SAAS5F,IAAKkG,IACjBhF,IAAUgF,EAAM7E,YAClB6E,EAAM5E,QAAU4E,EAAM7E,YAG1BqG,EAASwjB,OAAQ,GAGnB,MAAMC,EAAkBzjB,EAAS9B,SAASqT,OAAQ/S,GAAUA,EAAM5E,SAC5D8pB,EAAcD,EAAgBtlB,OAC9BwlB,EAAeD,EAAc,IAC/BjD,GAEAiD,EAAc,IACVjD,GACAA,GAEFmD,EAAYC,IACZA,aAAyBxoB,KAC3BwoB,EAAcxhB,gBAEZwhB,EAAc3lB,UAChB2lB,EAAc3lB,SAASK,QAASC,IAC9BolB,EAASplB,MASf,GAAIwB,EAAS2jB,eAAiBA,EAI5B,OAHA3jB,EAAS8jB,gBAAkB9jB,EAAS2jB,aACpC3jB,EAAS2jB,aAAeA,EACxB3jB,EAAS+jB,gBAAiB,EAClBJ,GACN,KAAKlD,GAEHplB,IAAcoe,cAAe,EAE7Bpe,IAAcqe,mBAAqBre,IAAe2oB,KAClD3oB,IAAcue,WAAa,GAC3Bve,IAAcwe,WAAaxe,IAAiB4oB,OAC5C,MACF,KAAKxD,GACHplB,IAAcoe,cAAe,EAE7Bpe,IAAcqe,mBAAqBre,IAAe6oB,OAClD7oB,IAAcue,WAAa,GAC3Bve,IAAcwe,WAAaxe,IAAiBye,QAC5C,MACF,KAAK2G,GACHplB,IAAcoe,cAAe,EAE7Bpe,IAAcqe,mBAAqBre,IAAese,IAClDte,IAAcue,WAAa,GAC3Bve,IAAcwe,WAAaxe,IAAiBye,QAM9C9Z,EAAS+jB,iBAAmB/jB,EAASmkB,SACvCnkB,EAAS+jB,gBAAiB,EACtB/jB,EAAS8jB,gBAAkB9jB,EAAS2jB,cArCxCF,EAAgBllB,QAASC,IACvBolB,EAASplB,QA0CRwB,GAETsB,WAAY,CACV8iB,EACAtrB,EACAT,KAEA,MAAM,UACJhG,EADI,QAEJqF,EAFI,KAGJ2sB,EAHI,MAIJrxB,EAJI,OAKJD,GACEsF,EACJ+rB,EAAgBE,OAAOtxB,EAAOD,GAC9BqxB,EAAgBG,eAAe,aAAcH,EAAgBI,YAC7DJ,EAAgBI,WAAchkB,GAA6BhH,IACzDA,IAASgH,EAAEkP,QACX,KACE,MAAM,EAAE3R,EAAF,EAAKE,GAAMmmB,EAAgBK,QAAQjkB,EAAEM,KAAK4jB,QAChD,OAAOlrB,KACLA,KAAS,GACT,WAAM9B,QAAN,IAAMA,OAAN,EAAMA,EAAU,CAAEitB,YAAankB,EAAGlO,SAAU,CAAEyL,IAAGE,OAF5CzE,CAGL4qB,EAAgBxB,UAEpBppB,IATyDA,CAUzDgH,EAAEiiB,eACJjpB,KACEA,IAASV,EAASurB,MAClB,IAAMD,EAAgBQ,QAAhB,OAAwBP,QAAxB,IAAwBA,IAAQ,GAAG,GAF3C7qB,CAGE6qB,GACF7qB,KACEA,IAASV,EAASzG,WAClB,IAAM+xB,EAAgBS,aAAhB,OACJxyB,QADI,IACJA,OADI,EACJA,EAAW0L,EADP,OAEJ1L,QAFI,IAEJA,OAFI,EAEJA,EAAW4L,EAFP,OAGJ5L,QAHI,IAGJA,OAHI,EAGJA,EAAWyyB,OAHP,OAIJzyB,QAJI,IAIJA,OAJI,EAIJA,EAAW0yB,OAJP,OAKJ1yB,QALI,IAKJA,OALI,EAKJA,EAAW2yB,SALP,OAMJ3yB,QANI,IAMJA,OANI,EAMJA,EAAW4yB,MANP,OAOJ5yB,QAPI,IAOJA,OAPI,EAOJA,EAAW6yB,MAPP,OAQJ7yB,QARI,IAQJA,OARI,EAQJA,EAAW8yB,OARP,OASJ9yB,QATI,IASJA,OATI,EASJA,EAAW+yB,QAXf5rB,CAaEnH,GACF+xB,EAAgBxU,GAAG,aAAcwU,EAAgBI,aAGnDa,SAAU,OAEVC,YAAa,SA4GR,MAAMC,GAAW9jB,aApGxB,SAAyBtJ,EAAsB6K,GAC7C,MAAM,SACJ9E,GAEE/F,EADC+B,EAFL,GAGI/B,EAHJ,IAIMyoB,EAAM4E,mBACNC,EAAcC,YAAc1iB,EAAK,IAmBjC2iB,EAAc7iB,IAAMyY,OAAO,CAC/BqK,YAAa,GACbC,gBAAiB,OA8DnB,OA5DA/iB,IAAMuX,UAAU,KACd,MAAMyL,EAAmBtlB,IACvB,GAAIkc,SAASqJ,OAASvlB,EAAEkP,SACtBiW,EAAYrL,QAAQsL,YAAYplB,EAAEqB,MAAO,GACpC8jB,EAAYrL,QAAQuL,iBAAiB,CACxC,MAAMG,EAAWC,YAAY,KAC3B,MACE3L,SAAS,OACPjP,IAEAoa,GAEFnL,SAAS,YACPsL,IAEAD,EACEO,EAAU,CACdnoB,EAAG,EACHE,EAAG,GAGL3G,OAAOC,KAAKquB,GAAattB,IAAKuJ,IAC5B,OAAQA,GACN,IAAK,aACHqkB,EAAQnoB,GAJK,GAKb,MACF,IAAK,YACHmoB,EAAQnoB,GAPK,GAQb,MACF,IAAK,UACHmoB,EAAQjoB,GAVK,GAWb,MACF,IAAK,YACHioB,EAAQjoB,GAbK,MAoBnB,MAAMkoB,EAAY,IAAI9qB,IAAWgQ,EAAOtN,EAAImoB,EAAQnoB,EAAGsN,EAAOpN,EAAIioB,EAAQjoB,GAC1EwnB,EAAYnL,QAAQjP,OAAS8a,GAC5B,GACHR,EAAYrL,QAAQuL,gBAAkBG,IAKtCI,EAAiB5lB,IACrB6lB,cAAcV,EAAYrL,QAAQuL,iBAClCF,EAAYrL,QAAQuL,gBAAkB,KACtCF,EAAYrL,QAAQsL,YAAc,IAIpC,OAFAlJ,SAAS/e,iBAAiB,UAAWmoB,GACrCpJ,SAAS/e,iBAAiB,QAASyoB,GAC5B,KACL1J,SAAS4J,oBAAoB,UAAWR,GACxCpJ,SAAS4J,oBAAoB,QAASF,KAEvC,IAED,kBAACzF,GAAD,IACE3d,IAAKyiB,EACL7E,IAAKA,GACD1mB,GAEHgE,KAMY,CACfgF,cAAc,I,wkCCralB,MA8NMqjB,GAAsB,CAC1BrM,aAAc,CACZjiB,GACAA,GACAA,GACAA,GACAA,GACAA,KAIEuuB,GAAsB,CAC1BtM,aAAc,CACZjiB,GACAA,GACAA,GACAA,GACAA,GACAA,KAIEwuB,GAAiB,CACrBvkB,MAAO7V,GC7RIq6B,GDgSQjlB,YAxPA,CAACtJ,EAAmB6K,KAAuC,IAAD,MAC7E,MAAM,MACJ9J,EAAQ,GADJ,MAEJ/F,EAAQ,GAFJ,MAGJ+R,EAAQ,GAHJ,QAIJxN,EAJI,WAKJivB,EAAapG,GALT,WAMJqG,EAAapG,GANT,SAOJ/X,EAPI,UAQJoe,EACA9tB,OAAQ+tB,EAAa,GATjB,eAUJ7F,EAVI,mBAWJxkB,EAAqB,GAXjB,SAYJyB,EAZI,kBAaJ6oB,EAAoB9G,IAClB9nB,EAEEnF,EAAK,OAAGkG,QAAH,IAAGA,OAAH,EAAGA,EAAOlG,MACfD,EAAM,OAAGmG,QAAH,IAAGA,OAAH,EAAGA,EAAOnG,OAChBgG,EAAS+J,IAAM+X,QAAQ,OAAC,MACzB4L,IACAK,GACD,CAACA,KACC,MAAE5kB,GAAUnJ,EACZkiB,EAAUnY,IAAM+X,QAAgB,4BAAM9hB,EAAOiuB,eAAb,QAAwBxtB,QAAU,CAACT,EAAOiuB,UAC1EC,EAAWnkB,IAAMyY,OAAkC,OACnD,GAAE3e,GdvDMzE,KACd,MAAM,OACJ+uB,EADI,GAEJprB,EAFI,SAGJ8C,EAAW,IACTzG,EACEgvB,EAAarkB,IAAMyY,QAAO,GAC1B6L,EAAQtkB,IAAM+X,QAAQ,KAC1B,GAAId,GAAgBje,GAElB,OADAqrB,EAAW7M,SAAU,EACdP,GAAgBje,GAEzB,MAAMurB,EAAa/N,KAAU,CAC3BzZ,SAAU,GACVynB,UAAU,EACVC,cAAc,IA+BhB,OALAxN,GAAgBje,GAAM,CACpBc,GAAIyqB,EACJlM,iBAAkB,GAClBC,yBAA0B,IAErBrB,GAAgBje,IACtB,CAACA,KACE,GACJc,GACEwqB,EAmCJ,OAlCAtkB,IAAM+X,QAAQ,KACZ,MAAMM,EAAqC,GAC3Cvc,EAASL,QAASM,IAChBA,EAAQC,IAAIP,QAASipB,IAAY,IAAD,EAC9B,MAAMC,EAAW,UAAGtM,EAAiBqM,UAApB,QAA+B,GAChDC,EAAYlZ,KAAK1P,GACjBsc,EAAiBqM,GAAUC,MAG/B,MAAMrM,EAAqD,GAC3Dxc,EAASL,QAASM,IAChBA,EAAQ6oB,gBAAgBnpB,QAASopB,IAAe,IAAD,EAC7C,MAAMF,EAAW,UAAGrM,EAAyBuM,UAA5B,QAA0C,GAC3DF,EAAYlZ,KAAK1P,GACjBuc,EAAyBuM,GAAaF,MAG1CL,EAAMjM,iBAAmBA,EACzBiM,EAAMhM,yBAA2BA,GAChC,CAACgM,EAAOxoB,IACXkE,IAAMuX,UAAU,KACd,IAAI8M,EAAW7M,QAIf,OAHAuI,WAAW,KACH,OAANqE,QAAM,IAANA,KAAStqB,IACR,KACI,KACAuqB,EAAW7M,iBACPP,GAAgBje,GACvBc,EAAGia,aAKT,CAACja,IACMwqB,Gc9BQQ,CAAS,CACtB9rB,GAAImf,EACJiM,OAAQ,OAERtoB,SAAU7F,EAAO6F,WAEbqe,EAAWyI,YAAwB1iB,EAAK,CAAEpG,OAC1CirB,EAAiB/kB,IAAMyY,OAA0B,MACvDzY,IAAMuX,UAAU,KAAO,IAAD,EACpB4C,EAAS3C,QAAQsG,IAAjB,UAAuBqG,EAAS3M,eAAhC,aAAuB,EAAkBsG,IACrC3D,EAAS3C,QAAQsG,KACnB3D,EAAS3C,QAAQsG,IAAIe,KAAKhkB,iBAAiB,cAAgB6C,IACzDA,EAAE0iB,oBAGL,CAAC+D,EAAS3M,UACbxX,IAAMuX,UAAU,KACdza,GAAchD,GACdH,EAAmB8B,QAASzC,IAC1Bc,EAAGC,IAAIf,GAAIukB,YAEZ,CAAC5jB,EAAoBG,IACxBkG,IAAMuX,UAAU,KACd,GAAI4M,EAAS3M,SAAWvhB,EAAO0X,OAAQ,CAAC,IAAD,EACrC,MAAM,QAAEqX,GAAY7K,EAAS3C,QAAQta,SAC/Byb,EAAc,CAClBsM,GAAID,EAAQ/pB,EACZiqB,GAAIF,EAAQ7pB,EACZyZ,EAAGoQ,EAAQ90B,MACX6kB,EAAGiQ,EAAQ/0B,QAEb,UAAA80B,EAAevN,eAAf,SAAwB7pB,OAExBo3B,EAAevN,QAAU1d,EAAGqrB,aAAH,IACvBxM,eACG1iB,EAAO0X,SAEZoX,EAAevN,QAAQ1K,GAAG,aAAc,KAEtCiY,EAAevN,QAAU,KAEzB1d,EAAGsI,QAAQ3G,QAASnN,IACE8N,GAAaC,IAAI/N,GACzB4pB,qBAGdiC,EAAS3C,QAAQta,SAASwjB,OAAQ,IAEpCqE,EAAevN,QAAQjS,UAExB,CAACtP,EAAO0X,SACX,MAAMrN,EAAkBN,IAAM+X,QAC5B,IAAM/Y,IAAYI,EAAM5V,QAAQmC,WAAWE,SAC3C,CAACuT,EAAM5V,QAAQmC,WAAWE,UAE5BmU,IAAMuX,UAAU,KACd4M,EAAS3M,QAASsG,IAAI1K,SAAS9S,gBAAkBA,GAChD,CAACA,IACJ,MAAM,EAAN,SAIKmjB,IAJL,UAKMxtB,EAAO5F,aALb,QAKsB,KAJpB2L,IAAKopB,GADP,EAEKC,EAFL,SAOM,EAAN,SAIK3B,IAJL,UAKMztB,EAAOmM,aALb,QAKsB,KAJpBpG,IAAKspB,GADP,EAEKC,EAFL,SAQMC,EAAkBxlB,IAAMya,YAAa/c,IACzCZ,GAAchD,GACP,OAAPlF,QAAO,IAAPA,KAAU8I,IACT,CAAC5D,EAAIlF,IACR,OACE,kBAAC,IAAD,CACEwB,MAAOA,GAEP,kBAAC,QAAD,CAEE8J,IAAKikB,EACCj0B,QAAOD,SACboN,QAAS,CACPnN,QACAD,SACAw1B,WAAY9tB,OAAO+tB,kBAAoB,EACvCC,WAAW,EACXC,aAAa,EACbtlB,oBAGF,kBAAC,EAAD,CACEvT,MAAOqS,GAEP,kBAACqjB,GAAD,CACExE,SAAW/gB,IACTid,EAAS3C,QAAQta,SAAWA,GAE9BtI,QAAS4wB,EACTjE,KAAMtrB,EAAOsrB,KACbhyB,UAAW0G,EAAO1G,UACZW,QAAOD,SACbmuB,kBAAmB,EACjBjhB,QACAwb,kBAEA7b,GAAchD,GACd,MAAM+rB,EAAuB,GACvBC,EAAqBhsB,EAAGzJ,QAAQoe,OAAQ1V,IAC5C,MAAMgtB,EAAkBhtB,EAAQvJ,WAE1BtD,GADiBkQ,GAAaC,IAAItD,GACvBmD,GAA6BnD,I9BimB/B,EAACvJ,EAAoBoM,KAClD,MAAM,EACJX,EADI,EAEJE,GACE3L,EACEw2B,EAAKpqB,EAAIX,EAAIW,EAAI1L,MACjB+1B,EAAKrqB,EAAIT,EAAIS,EAAI3L,OACjB0M,EACDf,EAAIX,EAAI+qB,EAAKpqB,EAAIX,EAAI+qB,EADpBrpB,EAEDf,EAAIT,EAAI8qB,EAAKrqB,EAAIT,EAAI8qB,EAEpBrpB,EACDhB,EAAIX,EAAI+qB,EAAKA,EAAKpqB,EAAIX,EADrB2B,EAEDhB,EAAIT,EAAI8qB,EAAKA,EAAKrqB,EAAIT,EAE3B,OAAOF,GAAK0B,GAAcxB,GAAKwB,GAAc1B,GAAK2B,GAC/CzB,GAAKyB,G8BhnBWspB,CAAgBH,EAAiBpN,IAKtC,OAJIzsB,IACF6M,EAAQwkB,SACRsI,EAAWpa,KAAK1S,EAAQC,OAEnB9M,IAEK,OAAdiyB,QAAc,IAAdA,KAAiB,CACfxF,cACA5b,SAAU+oB,EACV3oB,QACA0oB,iBAIJ,kBAAC,IAAD,CACE9B,UAAW,CAACA,EAAW9tB,EAAO5F,MAAO4F,EAAO6F,UAC5CkC,KAAM3N,EACN81B,SAAU,CAAC,YACXC,aAAe9sB,GAASA,EAAKN,GAC7BqtB,WAAY,EAAG/sB,WAAH,aACV,kBAAC4jB,GAAD,CACE/E,QAASA,EACT7e,KAAMA,EACN6gB,SAAUA,EACVlkB,OAAM,gBACAovB,QADA,IACAA,IAAoB,IADpB,iBAEAD,QAFA,IAEAA,OAFA,EAEAA,EAAgB9rB,EAAKN,WAFrB,QAE4B,KAGjC6qB,MAIP,kBAAC,IAAD,CACEE,UAAW,CAACA,EAAW9tB,EAAOmM,MAAOnM,EAAO6F,UAC5CkC,KAAMoE,EACN+jB,SAAU,CAAC,YACXC,aAAe9sB,GAASA,EAAKN,GAC7BqtB,WAAY,EAAG/sB,WAAH,aACV,kBAACuiB,GAAD,CACE1D,QAASA,EACT7e,KAAMA,EACN6gB,SAAUA,EACVxU,SAAUA,EACV1P,OAAM,gBACAsvB,QADA,IACAA,IAAoB,IADpB,iBAEAD,QAFA,IAEAA,OAFA,EAEAA,EAAgBhsB,EAAKN,WAFrB,QAE4B,KAGjC8qB,MAIP,kBAAC,IAAD,CACEC,UAAW,CAACA,GACZ/lB,KAAI,UAAE/H,EAAO6F,gBAAT,QAAqB,GACzBqqB,SAAU,CAAC,YACXC,aAAe9sB,GAASA,EAAKN,GAC7BqtB,WAAY,EAAG/sB,WAAH,aACV,kBAAC4gB,GAAD,CACE/B,QAASA,EACT7e,KAAMA,EACN6gB,SAAUA,EACVlkB,OAAM,gBACAovB,QADA,IACAA,IAAoB,IADpB,iBAEAD,QAFA,IAEAA,OAFA,EAEAA,EAAgB9rB,EAAKN,WAFrB,QAE4B,KAGjCirB,MAIN7oB,OAoCX,CACEgF,cAAc,EACdkmB,QAAS5vB,IAAgBA,IAAK6vB,aCvRlC3C,GAAM5iB,KAAOA,GACb4iB,GAAMhkB,KAAOA,GACbgkB,GAAMllB,MAAQA,GACdklB,GAAM4C,UxBFoBnxB,IACxB,MAAM,WAUJmM,GAEEnM,EADC+B,EAXL,GAYI/B,EAZJ,IAuCMoxB,EAAUzmB,IAAMyY,OAAuB,MAW7C,OAVAzY,IAAMuX,UAAU,KACd7gB,KACEA,IACA,KACE,MAAMgwB,EAAmBD,EAAQjP,QACjCkP,EAAiBllB,aAAeA,EAChCklB,EAAiBnlB,aAAc,GALnC7K,CAOE+vB,EAAQjP,UACT,CAACiP,EAASjlB,IAEX,kBAACR,GAAD,IACEd,IAAKumB,GACDrvB,KwBnDVwsB,GAAMjc,SAAWA,GACjBic,GAAM3iB,gBAAkBA,GACxB2iB,GAAMlvB,QAAUA,EAChBkvB,GAAMrhB,SAAWA,GACjBqhB,GAAM+C,eC3ByBtxB,IAC7B,MAAM,SACJ+F,EADI,mBAEJwrB,GAEEvxB,EADC+B,EAHL,GAII/B,EAJJ,KAKOwxB,EAAOtO,GAAYvY,IAAMC,SAAS,CAAE+X,SAAS,IAC9CljB,EAAekL,IAAMya,YAAY,KACrClC,EAAS,CAAEP,SAAS,KACnB,IACGnjB,EAAamL,IAAMya,YAAY,KACnClC,EAAS,CAAEP,SAAS,KACnB,IACH,OACE,kBAAChX,GAAD,IACEO,aAAW,GACPnK,EAFN,CAGE0vB,YAAahyB,EACbiyB,WAAYlyB,IAEXuG,EACAyrB,EAAM7O,SAAW4O,MDOxBhD,GAAM3sB,YhC1BsB,CAC1B+vB,KAAM,OACNC,KAAM,Q,oCkCSR,MAEaC,GAAe7xB,IAC1B,MAAM,SACJ+F,EADI,SAEJ+rB,EAFI,MAGJC,EAAQ,GAHJ,KAIJ1lB,EAJI,SAKJlS,EAAW,CAAEyL,EAAG,EAAGE,EAAG,GALlB,eAMJksB,GACEhyB,EACJ,OACE,kBAACiyB,GAAA,EAAD,CAAQtsB,UAAW4e,SAASqJ,MAC1B,kBAACsE,GAAA,EAAD,CACE7lB,KAAMA,EACN8lB,QAAS,WAAML,QAAN,IAAMA,OAAN,EAAMA,IACfM,gBAAgB,iBAChBC,eAAgB,CACdlqB,KAAMhO,EAASyL,EACfwC,IAAKjO,EAAS2L,IAIdisB,EAAM5xB,IAAI,EAAGzI,QAAO46B,WAClB,kBAACC,GAAA,EAAD,CACE7oB,IAAKhS,EACLqU,QAAS,KACC,OAAR+lB,QAAQ,IAARA,KAAWp6B,KAGZ46B,O,uWCzCR,MAAME,GAAuB3lB,IAClC,MAAM,MACJ7R,EAAQ,GADJ,MAEJ+R,EAAQ,IACNF,EACEpI,EAAK0c,KAAU,CAEnBzZ,SAAUrG,IACRrG,EAAMmF,IAAKsyB,IAAD,CACR9pB,KAAM8pB,EACNlP,MAAO,WAETxW,EAAM5M,IAAKkI,IAAD,CACRM,KAAMN,EACNkb,MAAO,YAGX4L,UAAU,KAGVuD,SAAUC,EACVC,UAAWC,GACTpuB,EAAGiD,WAAWorB,2BAA2B,CAK3Cp5B,UAAU,KAGVoB,OAAQi4B,GACNtuB,EAAGiD,WAAWorB,2BAA2B,KAO3CE,UAAWC,GACTxuB,EAAGiD,WAAWwrB,8BAA8B,KAG9CC,YAAaC,GACX3uB,EAAGiD,WAAW2rB,sBAAsB,KAEtCC,KAAMC,GACJ9uB,EAAGiD,WAAW8rB,SAAS,IAErBC,EAAyC,GAkB/C,OAhBAhvB,EAAGzJ,QAAQmF,IAAKrH,IACd,MAAM46B,EAAS56B,EAAK6K,KASpB,OARA8vB,EAAkBC,GAAU,CAC1B54B,OAAQi4B,EAAqBj6B,GAC7B45B,SAAUC,EAAuB75B,GACjC85B,UAAWC,EAAwB/5B,GACnCk6B,UAAWC,EAAwBn6B,GACnCq6B,YAAaC,EAA0Bt6B,GACvC06B,SAAUD,EAAaz6B,I,kWAElB,EACL6K,GAAI+vB,GACDD,EAAkBC,MAGzBjvB,EAAGia,UACI+U,G,yHC9DT,MAAME,GASJ3c,YACS1W,EACAoJ,EACAkqB,EACA/mB,GACN,KAJMvM,WAIP,KAHOoJ,MAGP,KAFOkqB,KAEP,KADO/mB,SACP,iDAXc,GAWd,qBATiB,IAAIgnB,MAAOC,WAS5B,2BAPwB,IA6BrB,MAAMC,GAYC,aAACrqB,EAAasqB,GAAQ,GAChCC,aAAaF,GAAQG,MAAMxqB,WACpBqqB,GAAQG,MAAMxqB,GAEjBsqB,WACKD,GAAQI,SAASzqB,UACjBqqB,GAAQK,WAAW1qB,IAoBpB,cAAI2qB,GACZ,IAAI3qB,EACAkqB,EACA/mB,EACAvM,EAEJ,GAAoB,IAAhB+zB,EAAKruB,OACP,MAAMsuB,MAAM,gDAUd,GAPuB,oBAAZD,EAAK,IACb3qB,EAAKpJ,EAAUszB,KAAO/mB,GAAUwnB,IAEhC/zB,EAAUszB,KAAO/mB,GAAUwnB,EAC5B3qB,EAAMpJ,EAASud,aAGZvd,EACH,MAAMg0B,MAAM,+CAGdP,GAAQ1oB,MAAM3B,GAiBd,OAVAqqB,GAAQG,MAAMxqB,GAAOghB,WALN,KACbqJ,GAAQI,SAASzqB,GAAK6qB,cAAe,IAAIV,MAAOC,UAChDxzB,KAAYuM,IAG0B+mB,GAAM,GAC9CG,GAAQK,WAAW1qB,GAAOqqB,GAAQK,WAAW1qB,IAAQkqB,EAErDG,GAAQI,SAASzqB,GAAO,IAAIiqB,GAC1BrzB,EACAoJ,EACAkqB,EACA/mB,GAGK,IAAMknB,GAAQS,SAAS9qB,GAkBnB,iBAAI2qB,GACf,GAAoB,IAAhBA,EAAKruB,OACP,MAAMsuB,MAAM,mDAGd,IAAI5qB,EAEJ,GAAuB,oBAAZ2qB,EAAK,IACb3qB,GAAO2qB,MACH,CACL,MAAO/zB,GAAY+zB,EACnB3qB,EAAMpJ,EAASud,WAGjB,OAAOkW,GAAQU,OAAO/qB,IAAeqqB,GAAQxV,OAAO8V,GAOzC,cAAC3qB,GACZ,OAAOA,KAAOqqB,GAAQG,YAAqCl6B,IAA3B+5B,GAAQI,SAAUzqB,GAOrC,gBAACA,GACd,OAAOqqB,GAAQU,OAAO/qB,MAAUqqB,GAAQI,SAASzqB,GAAK6qB,aAOrC,oBAAC7qB,GAClB,OAAQqqB,GAAQS,SAAS9qB,GAErB,IAAImqB,KAAKE,GAAQI,SAASzqB,GAAK6qB,cAD/B,KAQQ,eAAC7qB,GACb,OAAOqqB,GAAQU,OAAO/qB,KAASqqB,GAAQS,SAAS9qB,GAOrC,cAACA,GACZ,OAAOqqB,GAAQU,OAAO/qB,KAChBqqB,GAAQS,SAAS9qB,IAClBqqB,GAAQI,SAASzqB,GAAKgrB,OAOb,iBAAChrB,GACf,IAAKqqB,GAAQI,SAASzqB,GAAM,OAAO,EAEnC,MAAMirB,EAAiBZ,GAAQI,SAASzqB,GAExC,OAAOqqB,GAAQW,OAAOhrB,GAClBirB,EAAef,GAAKe,EAAeC,iBACnCt6B,KAAK8U,IAAI,EAAGulB,EAAeE,UAAYF,EAAef,IAAK,IAAIC,MAAOC,WAO9D,eAACpqB,GACb,IAAKqqB,GAAQI,SAASzqB,IAAQqqB,GAAQS,SAAS9qB,GAAM,OAAO,EAE5D,MAAMirB,EAAiBZ,GAAQI,SAASzqB,GAQxC,OANAqqB,GAAQ1oB,MAAM3B,GAAK,GAEfirB,EAAeD,SACjBC,EAAeD,QAAS,GAGnBX,GAAQxV,IAAI7U,EAAKirB,EAAer0B,SAAUyzB,GAAQK,WAAW1qB,MAASirB,EAAe9nB,QAOlF,aAACnD,GACX,IAAKqqB,GAAQI,SAASzqB,IAAQqqB,GAAQW,OAAOhrB,IAAQqqB,GAAQS,SAAS9qB,GAAM,OAAO,EAEnFqqB,GAAQ1oB,MAAM3B,GAAK,GAEnB,MAAMirB,EAAiBZ,GAAQI,SAASzqB,GAKxC,OAHAirB,EAAeD,QAAS,EACxBC,EAAeC,kBAAmB,IAAIf,MAAOC,UAAYa,EAAeE,UAEjEF,EAAeC,iBAOX,cAAClrB,GACZ,IAAKqqB,GAAQI,SAASzqB,IAAQqqB,GAAQS,SAAS9qB,GAAM,OAAO,EAE5D,MAAMirB,EAAiBZ,GAAQI,SAASzqB,GAExC,IAAKirB,EAAeD,OAAQ,OAAO,EAEnC,MAAMN,EAAaL,GAAQK,WAAW1qB,GAChCorB,EAAgBH,EAAef,GAAKe,EAAeC,iBAEnDzxB,EAAS4wB,GAAQxV,IAAI7U,EAAKirB,EAAer0B,SAAUw0B,KAAkBH,EAAe9nB,QAI1F,OAFAknB,GAAQK,WAAW1qB,GAAO0qB,EAEnBjxB,EASS,mBAAC7C,EAAoBszB,EAAK,KAAM/mB,GAChD,IAAKvM,EACH,MAAMg0B,MAAM,uDAGd,MAAM5qB,EAAO,GAAEpP,KAAKkB,WAAW8E,IAAWy0B,QAAQ,MAAO,IAIzD,OAFAhB,GAAQxV,IAAI7U,EAAKpJ,EAAUszB,KAAO/mB,GAE3B,CACLxB,MAAO,CAAC2oB,GAAQ,IAASD,GAAQ1oB,MAAM3B,EAAKsqB,GAC5CQ,SAAU,IAAMT,GAAQS,SAAS9qB,GACjC+qB,OAAQ,IAAMV,GAAQU,OAAO/qB,GAC7BsrB,aAAc,IAAMjB,GAAQiB,aAAatrB,GACzC8gB,MAAO,IAAMuJ,GAAQvJ,MAAM9gB,GAC3BgrB,OAAQ,IAAMX,GAAQW,OAAOhrB,GAC7BurB,QAAS,IAAMlB,GAAQkB,QAAQvrB,GAC/BwrB,UAAW,IAAMnB,GAAQmB,UAAUxrB,GACnCyrB,QAAS,IAAMpB,GAAQoB,QAAQzrB,GAC/BihB,OAAQ,IAAMoJ,GAAQpJ,OAAOjhB,GAC7B6U,IAAK,CAAC6W,EAAuBC,EAAQ,KAAMC,IAAqBvB,GAAQxV,IAAI7U,EAAK0rB,EAAaC,KAAUC,K,GA3PjGvB,G,QACmB,I,GADnBA,G,aAG6B,I,GAH7BA,G,WAKyB,ICpC/B,MAAMwB,GAAuB,CAClCC,EAAc,GACdl1B,EACA0H,EAAmB,MAEnB,MACEytB,SAAUC,EADN,UAEJC,GAAY,EACZC,cAAeC,GACb7tB,EACE8tB,EAA4B,IAAlBN,EAAOxvB,OACjB+vB,EAAsC,GAC5C,IAAIC,EAAa,EACjB,MAKMJ,EAAiBK,IACjBA,EACFC,EAAWC,gBAAkBC,IAG7BF,EAAWC,iBAAmBjI,cAAcgI,EAAWC,iBAEzDD,EAAWxB,QAAUuB,EACA,OAArBJ,QAAqB,IAArBA,QAEF,IAAIQ,EAAgB,EACpBb,EAAOpvB,QAAQ,EAAGkwB,YAChBD,GAAiBC,IAEnB,MAAMF,EAAwB,IAAMtI,YAAY,KAC9CoI,EAAWK,UAAY,KACtB,KACGL,EAAa,CACjBM,aAAc,EACdH,gBACAE,SAAU,EACVJ,gBAAiB,KACjBX,SACAO,mBACAU,SAAUX,EACVpB,QAASiB,EACTnL,MAAO,KACLuL,EAAiB3vB,QAAQ,CAACswB,EAAiB5yB,KACrCA,GAASoyB,EAAWM,cACtBE,EAAgBlM,UAGpBoL,GAAc,IAEhB1lB,MAAO,KACL6lB,EAAiB3vB,QAAQ,CAACswB,EAAiB5yB,KACrCA,GAASoyB,EAAWM,cACtBE,EAAgB/L,WAGpBiL,GAAc,IAEhBvqB,MAAO,KACL0qB,EAAiB3vB,QAASswB,IACxBA,EAAgBrrB,UAGlB6qB,EAAWC,iBAAmBjI,cAAcgI,EAAWC,iBAnDzDD,EAAWO,UAAW,EACtBP,EAAWK,SAAW,EACN,OAAhBb,QAAgB,IAAhBA,SAwEF,OAnBAF,EAAOpvB,QAAQ,CAACuwB,EAAO7yB,KACrBkyB,GAAcW,EAAML,MACpB,MAAMI,EAAkB3C,GAAQ6C,YAAY,KAC1CV,EAAWM,aAAe1yB,EAAQ,EAClCxD,EAASq2B,EAAO7yB,EAAO4yB,GACnB5yB,IAAU0xB,EAAOxvB,OAAS,GAC5BkwB,EAAW7qB,SAEZ2qB,GACEL,GACHe,EAAgBlM,QAElBuL,EAAiB3f,KACfsgB,KAGAf,IACFO,EAAWC,gBAAkBC,KAExBF,G,wzBC9DT,MAAMW,GAAQ,CACZC,WAAYC,KACZC,WAAYC,KACZC,QAASC,KACTC,eAAgBC,KAChBC,0BAA2BC,KAC3BC,sBAAuBC,KACvBC,UAAWC,KACXC,KAAMC,KACNC,aAAcC,KACdC,WAAYC,KACZC,cAAeC,KACfC,MAAOC,KACPC,cAAeC,KACfnf,OAAQof,KACRC,wBAAyBC,KACzBC,sBAAuBC,KACvBC,UAAWC,KACXC,SAAUC,KACVC,gBAAiBC,KACjBC,SAAUC,KACVC,SAAUC,KACVC,oBAAqBC,KACrBtyB,SAAUuyB,KACVC,KAAMC,KACNC,aAAcC,KACdC,cAAeC,KACfC,kBAAmBC,KACnBC,oBAAqBC,KACrBC,aAAcC,KACdC,cAAeC,KACfC,YAAaC,KACbC,WAAYC,KACZC,gBAAiBC,KACjBC,cAAeC,KACfC,SAAUC,KACVC,YAAaC,KACbC,YAAaC,KACbC,YAAaC,KACbC,YAAaC,MASFC,GAAQ17B,IACnB,MAAM,KACJ5H,GAEE4H,EADC+B,EAFL,GAGI/B,EAHJ,IAIM27B,EAAe9E,GAAMz+B,GAC3B,OAEE,kBAACujC,EAAiB55B,I,yDChGtB,MAAM65B,GAASv6B,KAEA,QACb,WACE,MAAO,sBAGT,wBAAuB,KACrBuD,EAAO,MADc,SAErBi3B,GAAW,IAEX,MAAMC,EAAQvX,SAASwX,cAAc,SAWrC,OAVAD,EAAM/6B,MAAM0d,QAAU,OACtBqd,EAAME,aAAa,OAAQ,QAC3BF,EAAME,aAAa,SAAUp3B,GAC7Bk3B,EAAME,aAAa,KAAMJ,MACrBC,GACFC,EAAME,aAAa,WAAY,YAGjCzX,SAASqJ,KAAKqO,YAAYH,GAEnB,IAAI32B,QAAQ,CAAC+2B,EAASC,KAC3BL,EAAMt2B,iBAAiB,SAAU,KAC/B,GAAIs2B,EAAMM,MAAO,CACf,MAAMC,EAAaP,EAAMM,MAAM,GACzB92B,EAAS,IAAIC,WACnBD,EAAOg3B,QAAU,KACfH,EAAO,IAAI7H,MAAM,qEAEnBhvB,EAAOi3B,OAAS,EAAGhlB,aACjB,MAAMrV,EAAOqV,EAAepU,OAC5B+4B,EAAQ,CACNt3B,KAAM,UACN1C,MACA9J,KAAMikC,EAAWjkC,KACjBokC,KAAMH,EACNI,aAAcJ,EAAWI,aACzBC,KAAML,EAAWK,KACjBC,OAAQb,EAAMM,SAIlB92B,EAAOs3B,cAAcP,QAErBH,EAAQ,CAAEt3B,KAAM,WAGlB2f,SAASqJ,KAAK3U,YAAY6iB,KAG5B,MAAMh0B,EAAQ,IAAI+0B,WAAW,SAC7Bf,EAAMv5B,cAAcuF,O,kTC3C1B,MAAM,SAAEg1B,GAAF,UAAYC,IAAcC,KAE1BC,GAAO,IAAIC,IAAI,CAAC,SAAU,YAS1BC,GAAe,CAACC,EAAa1lC,KAEjC,MAAM,KAAEkN,EAAF,MAAQmtB,GAAUqL,EACxB,GAAc,KAAV1lC,EAAJ,CAEE,GAAa,UAATkN,GAAoBmtB,GAASkL,GAAKI,IAAItL,EAAMntB,MAChD,OAAOlN,EAAMyI,IAAI28B,IACjB,GAAa,YAATl4B,EACJ,MAAiB,SAAVlN,EACP,GAAa,WAATkN,EACJ,OAAOk4B,GAASplC,GAKlB,GAAI0lC,EAAOlvB,KAAM,CACf,GAAIkvB,EAAOlvB,KAAKovB,MAAO13B,GAA4B,WAAjBm3B,GAAUn3B,IAC1C,OAAOk3B,GAASplC,GAChB,GAAI0lC,EAAOlvB,KAAKovB,MAAO13B,GAA4B,YAAjBm3B,GAAUn3B,IAC5C,MAAiB,SAAVlO,EAIX,OAAOA,IAGH6lC,GAAoBv9B,IACxB,MAAM,OACJo9B,EADI,GAEJz5B,EAFI,MAGJ2uB,EAHI,SAIJ9kB,EAJI,SAKJpX,EALI,SAMJonC,EANI,QAOJx1B,EAPI,MAQJtQ,EARI,SASJmkC,EATI,UAUJ4B,EAVI,SAWJC,EAXI,OAYJC,EAZI,QAaJC,EAbI,UAcJC,EAAY,IACV79B,GACE,YAAE89B,EAAF,aAAeC,GAAiB/1B,EAEhCg2B,EAAanC,EAAW,GAAK,IAS7B,SACJoC,EADI,QAGJ9L,EAHI,OAIJ+L,GACEC,YAAc,IACZC,EAAkBzzB,IAAMyY,QAAQ,GACtC,OACE,kBAACib,GAAA,EAAD,CACE16B,GAAIA,EACJ2uB,MAAOA,GAAS8K,EAAO9wB,MACvB4b,QAAM,EACNxwB,MAAwB,qBAAVA,EAAwBsmC,EAAatmC,EACnD8V,SAAUA,EACVpX,SAAUA,GAAYonC,EACtBc,UAAWb,EACX3oC,MAAO+oC,EAAU73B,OAAS,EAC1B03B,SAxBc,EAChBnmB,QAAU7f,YACgDgmC,EAASP,GAAaC,EAAQ1lC,IAuBtFimC,OAtBY,EAAGpmB,QAAU7f,YAAkDimC,EAAOh6B,EAAIw5B,GAAaC,EAAQ1lC,IAuB3GkmC,QAtBa,EACfrmB,QAAU7f,YAC8BkmC,EAAQj6B,EAAIw5B,GAAaC,EAAQ1lC,IAqBvE6mC,gBAAiB,CACf5iB,QAAQ,GAEV6iB,YAAa,CACX3C,SAA8B,qBAAbA,GAAmCA,IAGpDiC,EAAoB39B,IAAI,EAAGzI,QAAO46B,SAAcr0B,KAChD,MAAM7H,EAAgB2nC,IAAyD,GAAxCA,EAAqBjnB,QAAQpf,GACpE,OACE,kBAAC66B,GAAA,EAAD,CACE7oB,IAAKzL,EACLvG,MAAOA,EACPtB,SAAUA,EACVqoC,aAAep2B,IACb+1B,EAAgBjc,QAAUlkB,EAC1BigC,EAAO71B,IAETq2B,aAAcvM,GAEd,kBAACwM,GAAD,CACEC,SAAU,CACRX,WACAY,OAAQT,EAAgBjc,UAAYlkB,GAEtCvG,MAAOA,EACP46B,MAAOA,EACPl8B,SAAUA,SA2ClBuoC,GAAkB3+B,IACtB,MAAM,MACJsyB,EADI,MAEJ56B,EAFI,SAGJknC,EAAW,IACT5+B,GACE,OACJ6+B,EADI,SAEJZ,GACEW,EAEJ,OACE,oCACE,kBAAC,IAAD,CACE79B,MAAO,CACLI,cAAe,MACf6mB,eAAgB,gBAChBntB,MAAO,SAGT,kBAACikC,GAAA,EAAD,KACGxM,GAEH,yBACEyM,IAAM,iEAAgErnC,cACtEmD,MAAO,GACPD,OAAQ,GACRokC,IAAK1M,O,iNCvKR,MAAM2M,GAAiBj/B,IAA+B,IAAD,EAC1D,MAAM,OACJsY,EAAS,GADL,QAEJ4mB,EAFI,OAGJ9B,GACEp9B,GACE,SACJi+B,EADI,OAEJY,EAFI,QAGJ1M,EAHI,OAIJ+L,GACEC,YAAc,IACZgB,EAAmBx0B,IAAMya,YAAa/c,IAC1C62B,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACPC,KAAMh3B,EACN3Q,MAAO2Q,EAAEi3B,YAGbnN,KACC,CAAC+M,IACJ,OACE,kBAACK,GAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAEEzzB,QAASmyB,EACTuB,GAAI,CACF31B,MAAQC,GAAUA,EAAM5V,QAAQgC,KAAKtB,YAJzC,UAOGyjB,EAAOlgB,YAPV,QAOkB,iBAiBlB,kBAACsnC,GAAA,EAAD,CAEErzB,KAAMwyB,EACNZ,SAAUA,EACV9L,QAASA,EACTwN,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,WAGd,kBAAC5N,GAAA,EAAD,KACE,kBAAC8N,EAAA,EAAD,CACE1zB,MAAI,EACJozB,GAAI,CACFtlC,SAAU,WACViO,IAAK,EACLD,KAAM,EACNiK,OAASrI,GAAUA,EAAMqI,OAAO4tB,OAChCnlC,MAAO,QACPD,OAAQ,YAId,kBAAC2kC,GAAA,EAAD,CACEE,GAAI,CACF5kC,MDxFS,ICyFTpC,QAAS,IAGX,kBAAC,KAAD,MDyLkB,CAC1B2kC,OAAQ,CACN9wB,MAAO,SACPmB,WAAY,CACVrV,KAAM,CACJwM,KAAM,SACNsJ,KAAMhP,IAERlH,kBAAmB,CACjB4M,KAAM,SACNqK,QAAS,EACTD,QAAS,KAEXzW,QAAS,CACPqM,KAAM,SACNqK,QAAS,EACTD,QAAS,KAEX9S,cAAe,CACb0I,KAAM,SACNqK,QAAS,EACTD,QAAS,KAEXrS,kBAAmB,CACjBiI,KAAM,SACNqK,QAAS,EACTD,QAAS,OAIfixB,SAAU,CACR7nC,KAAM,CACJ,WAAa4H,IACX,MAAM,OACJo9B,EADI,SAEJkC,GACEt/B,EACJ,OACE,kBAACu9B,GAAD,MACMv9B,EADN,CAEEtI,MAAO4nC,EACPt3B,QAAS,CACP81B,YAAaV,EAAOlvB,KAAK/N,IACtBzI,IAAD,CACE46B,MAAO56B,EACPA,mBCpOD0lC,EAAS,CAAEA,UAAW,GAF7B,CAIEkC,SAAU,CACRlnC,KAAMkgB,EAAOlgB,KACbJ,kBAAmBsgB,EAAOtgB,kBAC1BO,QAAS+f,EAAO/f,QAChB2D,cAAeoc,EAAOpc,cACtBS,kBAAmB2b,EAAO3b,mBAE5BujC,SAAUf,S,84BC/DtB,MAAMgB,GAAkB,CACtBvpB,IAAK,CAAEnV,SAAS,GAChB2+B,OAAQ,CAAE3+B,SAAS,GACnB4+B,aAAc,CAAE5+B,SAAS,GACzBuG,QAAS,CACPs4B,QAAS,CAAEC,OAAQ,CAAE9+B,SAAS,KAEhC6W,OAAQ,CAAE7W,SAAS,IAEf++B,GACG,QADHA,GAEE,OAFFA,GAGO,YAHPA,GAIE,OA8QFC,GAAU,CACdC,OAAQ,SACRC,OAAQ,SACRC,aAAc,iBAEVC,GAAe7gC,IAA6B,IAAD,EAC/C,MAAM,iBACJ8gC,EAAmB,KAAM,kBAACvB,GAAA,EAAD,OADrB,QAEJL,EAFI,SAGJ6B,EAHI,QAIJC,GACEhhC,GACE,SACJi+B,EADI,OAEJY,EAFI,QAGJ1M,EAHI,OAIJ+L,GACEC,YAAc,IAyClB,OACE,oCACE,kBAAC8C,GAAA,EAAD,CACEl1B,QAASmyB,GAET,kBAACxC,GAAD,CAAMtjC,KAAK,eAEb,kBAAC85B,GAAA,EAAD,CACE+L,SAAUA,EACV5xB,KAAMwyB,EACN1M,QAASA,EACTpxB,MAAO,CAAElG,MAAO,MAEfsE,OAAO8H,OAAOw5B,IAAStgC,IAAI,CAAC+gC,EAAQp9B,IACnC,kBAACyuB,GAAA,EAAD,CACE7oB,IAAKw3B,EAELn1B,QAAUjE,GAzDQ9C,OAAO8C,EAAwChE,KACzEquB,IAEA,OADehzB,OAAO8H,OAAOw5B,IAAS38B,IAEpC,KAAK28B,GAAQC,OAAQ,CACnB,MAAMv9B,QAAeg+B,GAAeC,iBAAiB,CAAEx8B,KAAM,qBAC7D,GAAoB,YAAhBzB,EAAOyB,KAAoB,CAC7B,MAAMy8B,QAAiBt8B,GAAa5B,EAAOq5B,MAC3C0C,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CAAE1nC,MAAO4pC,KAAKC,MAAMF,MAGjC,MAEF,KAAKZ,GAAQG,aAAc,CACzB,MAAMz9B,QAAeg+B,GAAeC,iBAAiB,CAAEx8B,KAAM,qBAC7D,GAAoB,YAAhBzB,EAAOyB,KAAoB,CAC7B,MAAMy8B,QAAiBt8B,GAAa5B,EAAOq5B,MAC3C0C,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CAAE1nC,MAAO4pC,KAAKC,MAAMF,MAGjC,MAEF,KAAKZ,GAAQE,OACXI,EAAS,CAAEn8B,KAAMnG,OA8BO+iC,CAAoB15B,EAAOhE,IAE9Co9B,IAGL,kBAACO,GAAA,EAAD,CAAaC,WAAS,GACpB,kBAACC,GAAA,EAAD,CAAYh+B,GAAG,sBAAf,SACA,kBAACi+B,GAAA,EAAD,CACEC,QAAQ,qBACRnE,SA/B0Cr1B,IAClD04B,EAAS,CAAEn8B,KAAMnG,EAAoB/G,MAAO2Q,EAAEkP,OAAO7f,QACrDy6B,KA8BQz6B,MAAK,OAAEspC,QAAF,IAAEA,OAAF,EAAEA,EAAStpC,OAHlB,OAKGspC,QALH,IAKGA,GALH,UAKGA,EAASh5B,eALZ,aAKG,EAAkB7H,IAAK2hC,GACtB,kBAACvP,GAAA,EAAD,CACE7oB,IAAKo4B,EAAYpqC,MACjBA,MAAOoqC,EAAYpqC,OAElBoqC,EAAY1pC,SAKpB0oC,OAMIiB,GAAYz4B,YA/WCtJ,IAA2B,IAAD,EAClD,MAAM,iBACJ8gC,EADI,OAEJjC,GAAS,EAFL,SAGJmD,GAAW,EAHP,UAIJC,GAAY,EAJR,eAKJC,GAAiB,EALb,SAOJnB,EACA54B,KAAMg6B,EACNC,MAAOC,EATH,QAUJrB,EAAU,CACRh5B,QAAS,CACP,CAAE5P,KAAM,UAAWV,MAAO,WAC1B,CAAEU,KAAM,OAAQV,MAAO,SAEzBA,MAAO,YAEPsI,IAEF,QACEk/B,EADF,eAEElN,EAFF,KAGEz9B,EAHF,YAIE+tC,IAEAte,GACDue,IAAD,CACErD,QAASqD,EAAOrD,QAChBlN,eAAgBuQ,EAAOvQ,eACvBz9B,KAAMguC,EAAOhuC,KACb+tC,YAAaC,EAAOD,gBAItBvhC,MAAOyhC,EACP33B,IAAK43B,GACHC,YAAa,CACfn/B,KAAM,CACJo/B,QA1CS,IA4CXpzB,GAAI,CACFozB,OAAQ,GAEVC,UAAU,IAGZj4B,IAAMuX,UAAU,KACdugB,EAAatgB,QAAQ0gB,KAAKhE,IACzB,CAAC4D,EAAatgB,QAAS0c,IAC1B,MAAM90B,EAAQnS,eACRkrC,EAAen4B,IAAMyY,OACzBod,IAEF71B,IAAM+X,QAAQ,KACZ,OAAQogB,EAAa3gB,SACnB,KAAKqe,GACHsC,EAAa3gB,QAAU8f,EAAYzB,GAA6BA,GAChE,MACF,KAAKA,GAKL,KAAKA,GACHsC,EAAa3gB,QAAU8f,EACnBzB,GACAA,GACJ,MACF,KAAKA,GACHsC,EAAa3gB,QAAU8f,EAAYzB,GAA6BA,KAMnE,CAACyB,IAIJ,MAAM3B,EAAUj/B,IAAiB8+B,GAAjB,UAAkCngC,EAAMsgC,eAAxC,QAAmD,IACnE,OACE,kBAACf,GAAA,EAAD,CACEx+B,MAAK,IACH5G,SAAU,WACVU,MAAO,OACPD,OAzFO,GA0FPuN,KAAM,EACNhH,cAAe,MACfsd,QAAS,OACTuJ,eAAgB,gBAEhB/c,gBAAiBlB,EAAM5V,QAAQmC,WAAWC,OACvCisC,IAGJL,GAAiB,kBAACA,EAAD,MAClB,kBAAC5C,GAAA,EAAD,CACEx+B,MAAO,CACLI,cAAe,MACf8mB,WAAY,SACZxJ,QAAS,OACT7jB,OAzGK,KA8GL0lC,EAAQ1pB,IAAInV,SACZ,kBAAC+9B,EAAA,EAAD,CACEz+B,MAAOgiC,GAAOC,OACdC,UACE,kBAACvH,GAAD,CAAMtjC,KAAK,eAEb2T,QAAS,IAAMmzB,EAAQ,CACrBt6B,KAAMnG,GACN2gC,QAAS,CACP1nC,MAAO,CACLiH,GAAYC,IACZD,GAAYG,eAEZ8H,SAASrS,GACPoK,GAAYK,QACZL,GAAYC,OAGpBskC,QAASvkC,GAAYG,gBAAkBvK,EAAO,YAAc,WAC5DuV,MAAO,CACLnL,GAAYC,IACZD,GAAYG,eAEZ8H,SAASrS,GAAQ,YAAc,UACjC4uC,cAAe,IAAMjE,EAAQ,CAC3Bt6B,KAAMnG,GACN2gC,QAAS,CAAE1nC,MAAOiH,GAAYG,kBAzBlC,OAiCAwhC,EAAQF,OAAO3+B,SACf,kBAAC+9B,EAAA,EAAD,CACEz+B,MAAOgiC,GAAOC,OACdC,UACE,kBAACvH,GAAD,CAAMtjC,KAAK,mBAEb0R,MAAO,CACLnL,GAAYE,OACZF,GAAYI,kBAEZ6H,SAASrS,GACP,UACA,YACJ2uC,QAASvkC,GAAYI,mBAAqBxK,EAAO,YAAc,WAC/DwX,QAAS,IAAMmzB,EAAQ,CACrBt6B,KAAMnG,GACN2gC,QAAS,CACP1nC,MAAO,CACLiH,GAAYE,OACZF,GAAYI,kBAEZ6H,SAASrS,GACPoK,GAAYK,QACZL,GAAYE,UAGpBskC,cAAe,IAAMjE,EAAQ,CAC3Bt6B,KAAMnG,GACN2gC,QAAS,CAAE1nC,MAAOiH,GAAYI,qBA3BlC,UAmCAuhC,EAAQhoB,OAAO7W,SACf,kBAACw9B,GAAD,IACE3mB,OAAM,OAAEgqB,QAAF,IAAEA,OAAF,EAAEA,EAAahqB,OACrB4mB,QAASA,GACLoB,EAAQhoB,SAKdgoB,EAAQD,aAAa5+B,SACrB,kBAACw/B,GAAA,EAAD,CACEl1B,QAAS,IAAMmzB,EAAQ,CAAEt6B,KAAMnG,MAE/B,kBAACi9B,GAAD,CACEtjC,KAAK,UACL0R,MAAQo4B,EAA6B,QAAZ,aAK/B,kBAACkB,GAAA,EAAD,CAEEC,UAAW,IAAMrR,EAAe7P,QAAQsG,IAAI1K,SAASyL,KAAK8Z,cAAc,IACxElhB,OAAQ,EACNmhB,iBACAC,gBACAC,aAEIX,EAAa3gB,UAAYqe,KAC3BsC,EAAa3gB,QAAUqe,GACvB+C,KAEET,EAAa3gB,UAAYqe,KAC3BsC,EAAa3gB,QAAUqe,GACvBgD,KAGA,kBAACvC,GAAA,EAAD,CACEl1B,QAAS,IAAMmzB,EAAQ,CAAEt6B,KAAMnG,MAE/B,kBAACi9B,GAAD,CACEtjC,KAAK,WACL0R,MAAkB,cAAX25B,EAAyB,UAAY,YAKpDC,OAAQ,CAACv5B,EAAGlF,KACVi6B,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CAAE1nC,MAAOuN,QAIxB,kBAAC47B,GAAD,CACEC,iBAAkBA,EAClBE,QAASA,EACT9B,QAASA,EACT6B,SAAUA,KAGbsB,GAAkB,kBAACA,EAAD,OAEhBL,GACC,kBAACf,GAAA,EAAD,CACElgC,MAAOgiC,GAAO1rC,KACd0U,QAAS,KACPmzB,EAAQ,CACNt6B,KAAMnG,GACNklC,uBAAuB,MAI3B,kBAACjI,GAAD,CACEtjC,KAAK,6BAoHsD,IAEnE2qC,GAAS,CACb1rC,KAAM,CACJwD,MAAO,GACPD,OAAQ,GACRT,SAAU,WACVgO,KAAM,EACNC,KAAM,GACNqE,SAAU,IAEZu2B,OAAQ,CACNY,YAAa,K,oEClcV,MAAMC,GAAW77B,IACtB,MAAM,IACJ6C,EADI,OAEJqZ,GACElc,EAsBJ,OApBgB2C,IAAMya,YAAatd,IACjC,MAAMO,EAAIP,EAAM0kB,YACVsX,EAAQz7B,EAAEzC,EACVm+B,EAAQ17B,EAAEvC,EACVk+B,EAAYn5B,EAAIsX,QAAQ8hB,wBAC9B,SAASC,EAAU77B,G1Cq3BIA,KACrBA,EAAE87B,iBAAiB97B,EAAE87B,kBACrB97B,EAAE0iB,gBAAgB1iB,EAAE0iB,iBACxB1iB,EAAE+7B,cAAe,EACjB/7B,EAAEg8B,aAAc,G0Cx3BZC,CAAWj8B,GACX,MAAMk8B,EAAOT,EAAQz7B,EAAEzC,EACjB4+B,EAAOT,EAAQ17B,EAAEvC,EACvBoe,EAAO,CAAEte,EAAG2+B,EAAMz+B,EAAG0+B,GAAQR,GAO/B1hC,OAAOkD,iBAAiB,YAAa0+B,GACrC5hC,OAAOkD,iBAAiB,WALxB,SAASi/B,IACPniC,OAAO6rB,oBAAoB,YAAa+V,GACxC5hC,OAAO6rB,oBAAoB,UAAWsW,OAIvC,K,84BCzBE,MAAMC,GAAiB1kC,IAA+B,IAAD,EAC1D,MAAOwxB,EAAOtO,GAAYvY,IAAMC,SAAS,CACvC4Y,SAAS,IAEX,OACE,4BACEziB,MAAK,IACHlG,MAAO22B,EAAMhO,QAAU,EAAI,EAC3B5oB,OAAQ,OACRqQ,gBAAiB,QACjB05B,OAAQ,cAJL,iBAKC3kC,QALD,IAKCA,OALD,EAKCA,EAAOe,aALR,QAKiB,IAEtB09B,aAAc,IAAMvb,EAAS,SAAKsO,GAAN,IAAahO,SAAS,KAClDkb,aAAc,IAAMxb,EAAS,SAAKsO,GAAN,IAAahO,SAAS,MAC9CxjB,K,0DCPH,MAAM4kC,GAAc5kC,IACzB,OACE,KACEiE,EADF,QAEEi7B,IAEAlb,GACDue,IAAD,CACEt+B,KAAMs+B,EAAO59B,aACbu6B,QAASqD,EAAOrD,WAGpB,OACE,oCACE,kBAAC,KAAD,CACExnC,MAAK,OAAEuM,QAAF,IAAEA,OAAF,EAAEA,EAAM0E,KACb+0B,SAAWmH,IACT3F,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP1nC,MAAOmtC,MAIbC,IAAKA,KACL/6B,MAAM,uBChBDg7B,GAA2B/kC,IACtC,MAAM,KACJ2I,EADI,QAEJu2B,GACEl/B,EACJ,OACE,kBAACglC,GAAA,EAAD,CACEC,iBAAe,GAEf,kBAACC,GAAA,EAAD,CACEC,gBAAc,mBAEd,kBAAC,KAAD,CACEpkC,MAAO,CACLI,cAAe,MACf6mB,eAAgB,gBAChBC,WAAY,SACZptB,MAAO,SAGT,kBAAC,KAAD,CACEkG,MAAO,CACLI,cAAe,MACf8mB,WAAY,WAGd,kBAAC6W,GAAA,EAAD,CACEoE,QAAQ,MADV,8BAMF,kBAAC,KAAD,CACEniC,MAAO,CAELI,cAAe,QAGjB,kBAAC8/B,GAAA,EAAD,CACEl1B,QAAU1D,IACRA,EAAE87B,kBACFjF,EAAQ,CACNt6B,KAAMnG,MAIV,kBAACi9B,GAAD,CACEtjC,KAAK,mBAMf,kBAACgtC,GAAA,EAAD,KACE,kBAAC,IAAD,CACEz8B,KAAMA,EACNxN,MAAO,EACPgN,KAAM,EAAGk9B,YAAWC,aAAYC,aAC9B,kBAACtE,GAAA,EAAD,CACEvE,KAAK,QACL+C,GAAI,CAAE7kC,OAAQ,IACdxE,SAAUmvC,EACVx5B,QAAS,IAAMu5B,GAAYD,IAE3B,kBAAC3J,GAAD,CACE36B,MAAO,CACL0L,SAAU84B,EAAU,GAAK,IAE3BntC,KACQmtC,EACI,sBACAF,EACE,0BACA,2BAKpBrU,WAAY,EAAG/sB,MAAQyF,MAAKhS,YAC1B,kBAAC,KAAD,CACEqJ,MAAO,CACLI,cAAe,MACf6mB,eAAgB,kBAGlB,kBAAC8W,GAAA,EAAD,CACEoE,QAAQ,YACRniC,MAAO,CAAEykC,aAAc,WAErB,GAAE97B,IAAMhS,EAAQ,KAAO,MAE1BA,EAEG,kBAAConC,GAAA,EAAD,CACEoE,QAAQ,YACRniC,MAAO,CAAEykC,aAAc,WAEtB9tC,GAGH,WCtGL+tC,GAA0BzlC,IACrC,MAAM,KACJ2I,GACE3I,EACJ,OACE,kBAACglC,GAAA,EAAD,CACEC,iBAAe,GAEf,kBAACC,GAAA,EAAD,CACEC,gBAAc,mBAEd,kBAAC,KAAD,CACEpkC,MAAO,CACLI,cAAe,MACf6mB,eAAgB,gBAChBC,WAAY,SACZptB,MAAO,SAGT,kBAAC,KAAD,CACEkG,MAAO,CACLI,cAAe,MACf8mB,WAAY,WAGd,kBAAC6W,GAAA,EAAD,CACEoE,QAAQ,MADV,6BAMF,kBAAC,KAAD,CACEniC,MAAO,CAELI,cAAe,WAkBvB,kBAACikC,GAAA,EAAD,KACE,kBAAC,IAAD,CACEz8B,KAAMA,EACNxN,MAAO,EACPgN,KAAM,EAAGk9B,YAAWC,aAAYC,aAC9B,kBAACtE,GAAA,EAAD,CACEvE,KAAK,QACL+C,GAAI,CAAE7kC,OAAQ,IACdxE,SAAUmvC,EACVx5B,QAAS,IAAMu5B,GAAYD,IAE3B,kBAAC3J,GAAD,CACE36B,MAAO,CACL0L,SAAU84B,EAAU,GAAK,IAE3BntC,KACQmtC,EACI,sBACAF,EACE,0BACA,2BAKpBrU,WAAY,EAAG/sB,MAAQyF,MAAKhS,YAC1B,kBAAC,KAAD,CACEqJ,MAAO,CACLI,cAAe,MACf6mB,eAAgB,kBAGlB,kBAAC8W,GAAA,EAAD,CACEoE,QAAQ,YACRniC,MAAO,CAAEykC,aAAc,WAErB,GAAE97B,IAAMhS,EAAQ,KAAO,MAE1BA,EAEG,kBAAConC,GAAA,EAAD,CACEoE,QAAQ,YACRniC,MAAO,CAAEykC,aAAc,WAEtB9tC,GAGH,W,gDC1FX,MAAMguC,GAAoB,KAC/B,OACE,gBAEElhC,EAFF,QAGE06B,IAEAlb,GACDue,IACC,MAAM,gBACJ/9B,EADI,aAEJG,EAFI,QAGJu6B,GACEqD,EACJ,MAAO,CACLt+B,KAAMs+B,EAAO59B,aACbH,kBACA06B,aAIN,IAAK16B,EACH,OAAO,KAET,MAAMX,EAASW,EAAgBX,SAC/B,IAAI8hC,EAUJ,OAREA,EADE9hC,EACSW,EAAgB6d,iBAAiBujB,UAAUzlC,IACpD4I,IAGS,CAACvE,EAAgB1C,SAAU0C,EAAgB+S,UAAUpX,IAC9D4I,IAIF,kBAACi8B,GAAA,EAAD,CACEC,iBAAe,GAEf,kBAACC,GAAA,EAAD,KACE,kBAACpG,GAAA,EAAD,CACEoE,QAAQ,MAEN,cAAYr/B,EAAS,QAAU,WAGrC,kBAACuhC,GAAA,EAAD,KACE,kBAACS,GAAA,EAAD,CACEC,OAAK,GAGPH,EAASxlC,IAAK8D,GACZ,kBAAC8hC,GAAA,EAAD,CACEr8B,IAAKzF,EAAKN,GACVq/B,QAAM,EACNj3B,QAAS,IAAMmzB,EAAQ,CACrBt6B,KAAMnG,GACN2gC,QAAS,CACP/6B,QAAS,CAACJ,EAAKN,KAEjBggC,uBAAuB,KAGzB,kBAACqC,GAAA,EAAD,KACE,kBAACtK,GAAD,CAAMtjC,KAAK,mBAEb,kBAAC6tC,GAAA,EAAD,CAAczxC,QAASyP,EAAKN,W,omCC5DxC,MAEauiC,GAAWlmC,IACtB,MAAM,SACJmmC,GAAW,EADP,OAEJtH,GAAS,EAFL,KAGJ1jC,GAAO,EACPirC,OAAQC,EACRC,OAAQC,GAENvmC,IAGF,KACEiE,EADF,QAEEi7B,EAFF,kBAGEsH,EAHF,YAIEC,EAJF,WAKEC,EALF,mBAMEC,EANF,gBAOEniC,KAjBJ,GAOIxE,EAPJ,IAmBIgkB,GACDue,IAAY,IAAD,QACV,MAAM,gBACJ/9B,EADI,aAEJG,EAFI,MAGJ2tB,EAHI,aAIJtI,EAJI,kBAKJwc,GACEjE,EACE3+B,EAA4B,OAAfY,QAAe,IAAfA,KAAiBX,SAAW,QAAU,QACzD,MAAO,CACL+iC,kBAAmBrE,EAAO3hC,OAC1BqD,KAAMs+B,EAAO59B,aACb+hC,WAAYliC,IAAe,OAAK8tB,QAAL,IAAKA,OAAL,EAAKA,EAAQ1uB,GAAR,OAAoBe,QAApB,IAAoBA,OAApB,EAAoBA,EAAchB,KAClE8iC,YAAW,OAAEnU,QAAF,IAAEA,GAAF,UAAEA,EAAO/F,cAAT,aAAE,EAAgB3oB,GAC7B+iC,mBAAkB,OAAErU,QAAF,IAAEA,GAAF,UAAEA,EAAOuU,qBAAT,aAAE,EAAuBjjC,GAC3Cs7B,QAASqD,EAAOrD,QAChBsH,kBAAmB,CACjBM,MAAK,UAAE9c,EAAa7H,QAASqkB,kBAAmBM,aAA3C,aAAE,SAAiDniC,QAAjD,IAAiDA,OAAjD,EAAiDA,EAAchB,IACtE4oB,OAAM,OAAEia,QAAF,IAAEA,GAAF,UAAEA,EAAmBja,cAArB,aAAE,SAA4B5nB,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAchB,KAEpDa,sBAIAwlB,EAAerf,IAAMyY,OAAO,CAChCvoB,MjDqDoC,OiDlDpCkG,MAAOyhC,EACP33B,IAAK43B,GACHC,YAAa,CACfn/B,KAAM,CACJ1I,MAAO,GAET0U,GAAI,CACF1U,MAAOmvB,EAAa7H,QAAQtnB,OAE9B+nC,UAAU,GACT,CAAC5Y,EAAa7H,QAAQtnB,QACnBkqB,EAAepa,IAAMyY,SAC3BzY,IAAMuX,UAAU,KAAO,IAAD,IACpB,UAAAugB,EAAatgB,eAAb,mBAAsB0gB,YAAtB,gBAA6BhE,IAC5B,CAAC4D,EAAc5D,IAClB,MAAMkI,EAAgB5nC,OAAO8H,OAAOu/B,GAAmBx5B,KAAMkL,GAAQA,IAC9DsZ,EAAOtO,GAAYvY,IAAMC,SAAS,CACvCo8B,WAAW,IAEPC,EAAcpD,GAAQ,CAC1Bh5B,IAAKka,EACLb,OAAQ,EAAGte,IAAGE,KAAKohC,KACjBld,EAAa7H,QAAQtnB,MAAQqsC,EAAKrsC,MAAQ+K,EAC3Bmf,EAAa5C,QACrBphB,MAAMlG,MAAWmvB,EAAa7H,QAAQtnB,MAAvB,QAG1B,OACE,kBAACssC,GAAA,EAAD,CACEt8B,IAAKka,EACLhkB,MAAK,IACH5G,SAAU,WACVS,OAAQ,OACRwN,IAAK,EACLqW,QAAS,OACTtd,cAAe,MACfihC,MAAO,GAEJI,IAGL,kBAACkC,GAAD,CACEuC,YAAaA,IAEf,kBAAC,KAAD,CACElmC,MAAO,CACLnG,OAAQ,OACRqG,KAAM,EAENmmC,UAAW,OACXC,UAAW,WAGZhB,GAAmB,kBAACA,EAAD,MACnBpiC,GACD,kBAAC+gC,GAAA,EAAD,CACEC,iBAAe,GAEf,kBAACC,GAAA,EAAD,KACE,kBAACpG,GAAA,EAAD,CACEoE,QAAQ,KACRniC,MAAO,CACLumC,UAAW,aACX7uC,QAAS,IAGT,SAAD,OAAQwL,QAAR,IAAQA,OAAR,EAAQA,EAAMN,MAGnB,kBAACyhC,GAAA,EAAD,KACE,kBAAC,KAAD,CAAMrkC,MAAO,CACXlG,MAAO,OACPD,OAAQmsC,EAAgB,MAAQ,SAStCZ,IAAQ,OAAIliC,QAAJ,IAAIA,OAAJ,EAAIA,EAAM0E,OAOd,kBAAC,KAAD,CACE5H,MAAO,CACLI,cAAe,MACf6mB,eAAgB,aAGlB,kBAACwX,EAAA,EAAD,CACEzzB,QAAS,IAAMmX,EAAS,SAAKsO,GAAN,IAAawV,WAAYxV,EAAMwV,cAErDxV,EAAMwV,UAAY,OAAS,SAOpCxV,EAAMwV,UAEF,kBAACpC,GAAD,MAGA,kBAAC,IAAD,CACElW,UAAW,CAACgY,EAAYD,GACxB99B,KAAI,OAAE1E,QAAF,IAAEA,OAAF,EAAEA,EAAM0E,KACZxN,KAAMA,EACNgN,KAAOnI,IACL,MACEiE,MAAM,KAAEa,GADJ,UAEJugC,EAFI,WAEOC,EAFP,QAEmBC,GACrBvlC,EACEunC,EAAelmC,IAASyD,EAAM4hC,GAC9Bc,EAAgBnmC,IAASyD,EAAM2hC,GACrC,OACE,kBAAC,KAAD,CACE1lC,MAAO,CACLI,cAAe,MACf8mB,WAAY,SACZrtB,OAAQ,KAIV,kBAACqmC,GAAA,EAAD,CACEvE,KAAK,QACL+C,GAAI,CAAE7kC,OAtLV,IAuLImR,QAAS,IAAMmzB,EACbqI,EACI,CACA3iC,KAAMnG,GAEN,CACAmG,KAAMnG,GACN2gC,QAAS,CACP1nC,MAAOoN,MAKf,kBAAC42B,GAAD,CACE36B,MAAO,CACL0L,SAtMR,GAuMQg7B,eAAiBd,EAAmC,GAAd,aAExCvuC,KACEmvC,EAAe,WAAa,qBAIlC,kBAACtG,GAAA,EAAD,CACEvE,KAAK,QACL+C,GAAI,CAAE7kC,OAhNV,IAiNImR,QAAS,IAAMmzB,EACbsI,EACI,CACA5iC,KAAMnG,GAEN,CACAmG,KAAMnG,GACN2gC,QAAS,CACP1nC,MAAOoN,MAKf,kBAAC42B,GAAD,CACE36B,MAAO,CACL0L,SAhOR,GAiOQg7B,eAAgBd,EAAqB,YAAc,IAErDvuC,KACEovC,EAAgB,YAAc,qBAIpC,kBAACvG,GAAA,EAAD,CACEvE,KAAK,QACL+C,GAAI,CAAE7kC,OA1OV,IA2OIxE,SAAUmvC,EACVx5B,QAAS,IAAMu5B,GAAYD,IAE3B,kBAAC3J,GAAD,CACE36B,MAAO,CACL0L,SAhPR,IAkPMrU,KACFmtC,EACI,sBACAF,EACE,0BACA,6BAOdrU,WAAY,EAAG/sB,MAAQyF,MAAKhS,YAC1B,kBAAC,KAAD,CACEqJ,MAAO,CACLI,cAAe,MACf6mB,eAAgB,gBAChBntB,MAAO,OACPotB,WAAY,WAGd,kBAAC6W,GAAA,EAAD,CACEoE,QAAQ,YACRniC,MAAO,CACLykC,aAAc,SACdrkC,cAAe,MACftG,MAAO,OACP6R,SAAU,eAGV,GAAEhD,IAAMhS,EAAQ,KAAO,KACxBA,EAEG,kBAAConC,GAAA,EAAD,CACEoE,QAAQ,YACRwE,UAAWC,GAAWjwC,GAAS,IAAM,OACrCujB,MAAM,SACN2sB,KAAMlwC,EACN6f,OAAO,SACPxW,MAAO,CAAE2L,SAAU,eAElBhV,GAGH,YAchB,kBAACmwC,GAAA,EAAD,MACA,kBAACnC,GAAD,MAEAqB,GACE,kBAAC,KAAD,CACEhmC,MAAO,CACLnG,OAAQ,MACRC,MAAO,SAIX2rC,EAAkBja,QAChB,kBAACwY,GAAD,CACEp8B,KAAM69B,EAAkBja,OACxB2S,QAASA,IAIX,kBAAC2I,GAAA,EAAD,MAEFrB,EAAkBM,OAChB,kBAACrB,GAAD,CACE98B,KAAM69B,EAAkBM,MACxB5H,QAASA,KAOdqH,GAAmB,kBAACA,EAAD,OAGtB,kBAACtF,GAAA,EAAD,CACElgC,MAAO,CACL5G,SAAU,WACVgO,MAAO,GACPC,IAAK,EACLqE,SAAU,IAEZV,QAAS,KACPmzB,EAAQ,CACNt6B,KAAMnG,GACNklC,uBAAuB,MAI3B,kBAACjI,GAAD,CACEtjC,KAAK,qBA8BFuvC,GAAcjwC,IACzB,IAAIowC,EACJ,IACEA,EAAM,IAAIC,IAAIrwC,GACd,MAAOyS,GACP,OAAO,EAET,MAAwB,UAAjB29B,EAAIE,UAAyC,WAAjBF,EAAIE,U,gOCzYlC,MAAMC,GAAkBjoC,IAAgC,IAAD,EAC5D,MAAM,OACJ6+B,GAAS,EADL,OAEJzc,EAFI,KAGJid,EAHI,QAIJlN,EAJI,KAKJ/5B,GACE4H,IAGF,QACEk/B,IAEAlb,GACDue,IAAD,CACErD,QAASqD,EAAOrD,WAGdgJ,EAAkBv9B,IAAMya,YAAY,KACjC,OAAP+M,QAAO,IAAPA,OACA+M,EAAQ,CACNt6B,KAAMnG,EACN2gC,QAAS,CACPhnC,WAGH,CAAC+5B,IACJ,OACE,kBAACgW,GAAA,EAAD,CACE97B,KAAMwyB,EACN1M,QAAS+V,EACTE,gBAAiBF,EACjBnnC,MAAO,CACL0d,QAAS,OACTwJ,WAAY,SACZD,eAAgB,WAIlBqX,EAEI,kBAAC8H,GAAA,EAAD,CACEpmC,MAAO,CACLsnC,SAAU,MACVC,UAAW,MACXC,SAAU,SACV9vC,QAAS,IAGX,kBAAC,KAAD,MACM4mC,EADN,CAEEjC,OAAQ/7B,IAAO,CAAC,SAARA,CAAkBg+B,EAAKjC,UAFjC,UAKEiC,EAAKt5B,gBALP,QAME,kBAACy5B,EAAA,EAAD,CACE56B,KAAK,SACL88B,WAAS,EACTwB,QAAQ,aAHV,WAaJ,2CACG9gB,QADH,IACGA,OADH,EACGA,EAAS,OCtFTomB,GAAaxoC,IACxB,MAAM,KACJ5H,EADI,OAEJusC,GAAS,GACP3kC,GACG,CAAEkjB,GAAYvY,IAAMC,SAAS,CAClChF,EAAG,EACHE,EAAG,IAuBL,OArBA6E,IAAMuX,UAAU,KACd,MAAMumB,EAAe3gC,IACnB,GAAI68B,EACF,OAEF,MAAMxqC,EAAW4N,GAAuBD,GACxCob,EAAS,CACPtd,EAAGzL,EAASyL,EAAI,GAChBE,EAAG3L,EAAS2L,EAAI,MAIpB,OADAye,SAAS/e,iBAAiB,YAAaijC,GAChC,KACLlkB,SAAS4J,oBAAoB,YAAasa,KAE3C,CAAC9D,IACJh6B,IAAMuX,UAAU,KACVyiB,IACFpgB,SAASqJ,KAAK7sB,MAAM4jC,OAAU,OAAMvsC,aAErC,CAACusC,EAAQvsC,IAEVA,IAASusC,EAEL,8BAAOvsC,GAWP,M,+ECjBD,MAAMswC,GAAoB1oC,IAC/B,MAAM,OACJ6+B,GAAS,EADL,QAEJ8J,EAAUC,GAFN,WAGJC,EAAa,IACX7oC,IAEF,QACEk/B,IAEAlb,GACDue,IAAD,CACErD,QAASqD,EAAOrD,WAIdc,EAASr1B,IAAM+X,QAAQ,IAAMomB,GAAaH,GAAU,CAACA,EAASE,IACpE,OACE,kBAACV,GAAA,EAAD,CACE97B,KAAMwyB,EACN1M,QAAS,IAAM+M,EAAQ,CACrBt6B,KAAMnG,KAERsC,MAAO,CACL0d,QAAS,OACTwJ,WAAY,SACZD,eAAgB,WAGlB,kBAACmf,GAAA,EAAD,CACEpmC,MAAO,CACL0d,QAAS,OACTtd,cAAe,SACftG,MAAO,OACPD,OAAQ,SAGV,kBAAC,IAAD,KACE,kBAACkkC,GAAA,EAAD,CAAYoE,QAAQ,MAApB,gBAEF,kBAAC,IAAD,CACEniC,MAAO,CACLI,cAAe,QAGjB,kBAAC,IAAD,CACEJ,MAAO,CAEL6iC,YAAa,EACbziC,cAAe,QAGjB,kBAAC4nC,EAAA,EAAD,CACEC,IAAE,GAEDhJ,GAEH,kBAAC6H,GAAA,EAAD,CACEoB,YAAY,WACZC,UAAQ,KAGZ,kBAAC,IAAD,KACE,kBAACC,GAAA,EAAD,CAAaC,aAAW,cACtB,kBAACC,GAAA,EAAD,CACEv/B,MAAM,UACN89B,KAAK,KAFP,WAMA,kBAAC9I,GAAA,EAAD,CAAYh1B,MAAM,gBAAlB,OAEF,kBAAC,KAAD,CACEszB,OAAQ,CACNx4B,KAAM,SACN4I,SAAU,CACR,oBACA,sBAEFC,WAAY,CACV67B,cAAe,CACb1kC,KAAM,SACN0H,MAAO,mBAETi9B,kBAAmB,CACjB3kC,KAAM,UACN0H,MAAO,uBAETk9B,mBAAoB,CAClB5kC,KAAM,UACN0H,MAAO,0BAIb2zB,SAAU,CACR,aAAc,CACZ3N,OAAO,WAYnBwW,GAAgBH,GACpB,6BAEE,kBAACd,GAAA,EAAD,MACA,kBAAChC,GAAA,EAAD,KACE,kBAAC,IAAD,CAEEl9B,KAAMggC,EACN7X,SAAU,CAAC,SACXE,WAAankB,IACX,MAAM,SACJ9G,GACE8G,EACE5I,EAAO4I,EAAO5I,KACpB,OACE,kBAACwlC,GAAD,CACExlC,KAAMA,GAEL8B,QAaT0jC,GAAezpC,IACnB,MAAM,SACJ+F,EACA9B,KAAMylC,GACJ1pC,GACGqM,EAAMs9B,GAAWh/B,IAAMC,UAAS,GAIjC3G,EAAQ5C,IAAKuoC,OAALvoC,CAAaqoC,GAAY,CACrCpX,MAAOoX,GACLA,EACEG,IAAgB5lC,EAAK8tB,MAC3B,OACE,oCACE,kBAACgU,GAAA,EAAD,CACE/C,QAAM,EACNj3B,QAXc,KAClB49B,GAASt9B,IAWLxV,UAAWgzC,GAAex9B,GAE1B,kBAAC25B,GAAA,EAAD,KACG/hC,EAAK5M,MAER,kBAAC4uC,GAAA,EAAD,CAAczxC,QAASyP,EAAKquB,QAC3BuX,EAAex9B,EAAO,kBAAC,KAAD,MAAiB,kBAAC,KAAD,MAAkB,MAE5D,kBAACy9B,GAAA,EAAD,CACEd,GAAI38B,EACJ09B,QAAQ,OACRC,eAAa,GAEb,kBAACnE,GAAA,EAAD,CACE6B,UAAU,MACVuC,gBAAc,EACdxK,GAAI,CAAEyK,GAAI,IAETnkC,MAOL6iC,GAAoB,CACxB,CACEvxC,KAAM,kBAACqkC,GAAD,CAAMtjC,KAAK,aACjBk6B,MAAO,UACPP,MAAO,CACL,OAGJ,CACE16B,KAAM,kBAACqkC,GAAD,CAAMtjC,KAAK,aACjBk6B,MAAO,YACPP,MAAO,CACL,CACE16B,KAAM,kBAACqkC,GAAD,CAAMtjC,KAAK,WACjBk6B,MAAO,SACPP,MAAO,CACL,YAGJ,U,84BChOC,MAAMoY,GAAuBnqC,IAA6B,IAAD,EAC9D,MAAM,eACJoqC,EADI,QAEJjY,GACEnyB,EACE6+B,GAAUuL,EAAe3T,UACxBjF,EAAOtO,GAAYvY,IAAMC,SAAS,CACvCy/B,MAAO,CACL5oC,SAAS,KAGP6oC,EAAY,UAAGF,EAAe5U,cAAlB,aAAG,EAAwB4U,EAAe5T,eACtD,SACJD,EADI,cAEJF,EAFI,aAGJG,EAHI,OAIJ9B,EAJI,iBAKJqB,GACEqU,EACJ,OACE,kBAACjC,GAAA,EAAD,CACE97B,KAAMwyB,EAEN99B,MAAO,CACL0d,QAAS,OACTtd,cAAe,kBAEjBopC,cAAe,CACbxpC,MAAO,CACLkK,gBAAiB,oBAEnBc,QAAS,KACPmX,EAAS,SACJsO,GADG,IAEN6Y,MAAM,SACD7Y,EAAM6Y,OADN,IAEH5oC,SAAS,OAGbipB,WAAW,KACTxH,EAAS,SACJsO,GADG,IAEN6Y,MAAM,SACD7Y,EAAM6Y,OADN,IAEH5oC,SAAS,QAGZ,SAIP,kBAAC0lC,GAAA,EAAD,CAAOpmC,MAAO,CACZ0d,QAAS,OACTtd,cAAe,WAGf,kBAAC,IAAD,CAAMJ,MAAO,CACXI,cAAe,MACf6mB,eAAgB,kBAGhB,kBAAC8W,GAAA,EAAD,CAAYoE,QAAQ,MAApB,eACC1R,EAAM6Y,MAAM5oC,SACb,kBAACq9B,GAAA,EAAD,CACEoE,QAAQ,KACRp5B,MAAM,SAFR,wDASF,kBAAC,IAAD,CACE/I,MAAO,CACL0d,QAAS,OACTtd,cAAe,MACf6mB,eAAgB,gBAChBC,WAAY,WAGd,kBAAC,IAAD,CAAMlnB,MAAO,CAAEI,cAAe,QAC5B,kBAACq+B,EAAA,EAAD,CACE11B,MAAO4qB,EAAS,UAAY,YAC5B3oB,QAAS,KACP2oB,EACI0V,EAAel6B,QACfk6B,EAAe5f,UAGpBkK,EAAS,OAAS,SAErB,kBAAC8K,EAAA,EAAD,CACE11B,MAAM,YACNiC,QAAS,KACPomB,MAHJ,UASF,kBAAC2M,GAAA,EAAD,CAAYoE,QAAQ,aAChB,mBAAD,OAAkBoH,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAc1lC,OAEnC,kBAAC,IAAD,CACE7D,MAAO,CACLI,cAAe,MACfvG,OAAQ,OACRqtB,WAAY,WAGd,kBAAC6W,GAAA,EAAD,CAAYoE,QAAQ,aAAc,WAAU1M,OAAkBT,EAAiB/vB,UAC/E,kBAACwkC,GAAD,CACE9yC,MACD6+B,EAAWF,EAAiB,WAWzC,SAASmU,GAA0BxqC,GACjC,OACE,kBAAC,IAAD,KACE,kBAACyqC,EAAA,EAAD,IACEvH,QAAQ,eACJljC,IAEN,kBAAC,IAAD,CACEe,MAAO,CACL5G,SAAU,WACViO,IAAK,EACLD,KAAM,EACNw6B,OAAQ,EACRP,MAAO,EACPna,WAAY,SACZD,eAAgB,WAGlB,kBAAC8W,GAAA,EAAD,CACEoE,QAAQ,UACRwE,UAAU,MACV59B,MAAM,iBAEFxP,KAAK0f,MACPha,EAAMtI,OADN,O,+NC9GL,MAAMgzC,GAA0C1qC,IACrD,MAAM,UACJ2qC,EADI,UAEJC,EAFI,KAGJjiC,EAAO,GAHH,WAIJqoB,GACEhxB,EACE6qC,EAAclgC,IAAM+X,QAAQ,IAAMrhB,OAAU,IAClD,OACE,kBAAC,KAAD,CAAiBupC,UAAYznC,IAClB,OAATynC,QAAS,IAATA,KAAYznC,IACPA,EAAO2nC,aAAgB3nC,EAAO2nC,YAAahnC,QAAUX,EAAOrB,OAAOgC,SAG/D,OAAT6mC,QAAS,IAATA,KAAYxnC,MAGZ,kBAAC,KAAD,CAAW0nC,YAAaA,GACrB,CAACE,EAAmBC,IACnB,8BACMD,EAAkBE,eADxB,CAEEpgC,IAAKkgC,EAAkBG,WAGrBviC,EAAKxI,IAAI,CAAC8D,EAAMH,IACd,kBAAC,KAAD,CACE4F,IAAKzF,EAAKN,GACVwnC,YAAalnC,EAAKN,GAClBG,MAAOA,GAIP,CAACsnC,EAAUC,EAAUC,IAAWta,EAAW,CACzC/sB,OACAH,QACAsnC,WACAC,WACAC,SACAP,oBACAC,wBAePD,EAAkBQ,gB,2OCjG/B,MAWaC,GAAoBxrC,IAC/B,MAAM,QACJsgC,GACEtgC,EAEJ,OACE,kBAAC,IAAD,CACEe,MAAO,CACLlG,MAnBU,GAoBVD,OApBU,KAuBZ,kBAAC6wC,GAAA,EAAD,CACEC,UAAU,0BACVr0C,KACE,kBAACqkC,GAAD,CACEtjC,KAAK,WACL2I,MAAO,CAAE0L,SAAUk/B,MAGvBC,SAAU,CACR7qC,MAAO,CACLlG,MAjCM,GAkCND,OAlCM,GAmCNixC,SAnCM,GAoCNC,UApCM,IAuCRhiC,MAAO,WAET/I,MAAO,CACLlG,MA1CQ,GA2CRD,OA3CQ,IA6CVggB,UAAU,QAGT0lB,EAAQngC,IAAK1J,IACX,MAAM,KACJY,EADI,KAEJe,EAFI,QAGJ2T,GACEtV,EACJ,OAEE,kBAACs1C,GAAA,EAAD,IACEriC,IAAKtR,EACL4zC,aAAc5zC,EACd6zC,iBAAiB,SACjBlgC,QAAU1D,IACRA,EAAE87B,kBACK,OAAPp4B,QAAO,IAAPA,KAAU1D,KAERhR,EARN,CASEA,KAEE,kBAACqkC,GAASrkC,W,smBClEpB,MAAO60C,GAAYlsC,IACxB,MAAM,SAAE+F,EAAF,MAAYrO,EAAZ,MAAmBoM,GAAmB9D,EAAT+B,EAAnC,GAA4C/B,EAA5C,IAEA,OACE,4BACEmsC,KAAK,WACLC,OAAQ10C,IAAUoM,EAClBH,GAAK,mBAAkBG,EACvBuoC,kBAAkB,cAAavoC,GAC3B/B,GAEHrK,IAAUoM,GACT,kBAACy7B,GAAA,EAAD,KACGx5B,K,2DCLX,MAAMumC,GAA0BntC,OAAOC,KAAK8N,IAE/Bq/B,GAA4BvsC,IACvC,MAAM,SACJkgC,GACElgC,IAEF,QACEk/B,IAEAlb,GACDue,IAAD,CACErD,QAASqD,EAAOrD,YAGb1N,EAAOgb,GAAeC,YAAS,CACpCC,oBAAqBJ,GAAwB,KAE/C,OACE,kBAAC,IAAD,CACEvrC,MAAO,CACLlG,MAAO,OACPD,OAAQ,SAGV,kBAAC+mC,GAAA,EAAD,CAAYh+B,GAAG,qCAAf,OACA,kBAACi+B,GAAA,EAAD,CACEC,QAAQ,oCACRnqC,MAAO85B,EAAMkb,oBACbhP,SAAWr1B,GAAMmkC,EAAaG,IAC5BA,EAAMD,oBAAsBrkC,EAAEkP,OAAO7f,SAGtC40C,GAAwBnsC,IAAKysC,GAC5B,kBAACra,GAAA,EAAD,CACE7oB,IAAKkjC,EACLl1C,MAAOk1C,GAENA,KAIP,kBAAC,KAAD,CACE1M,SAAWp4B,IAYTo3B,EAAQ,CACNt6B,KAAMnG,EACN2gC,QAAS,CACPx+B,OAAQkH,EAAMw3B,SACdlnC,KAAMo5B,EAAMkb,uBAGhBxM,KAEF9C,OAAQlwB,GAASskB,EAAMkb,qBAAqBn/B,iB,iNC7C7C,MAAMs/B,GAAgB7sC,IAC3B,MAAM,kBAGJ8sC,EAAoB,CAAE1P,OAAQ,KAC5Bp9B,IAEF,QACEk/B,EADF,SAEEz4B,EAAW,GAFb,WAGEsmC,EAHF,wBAIEC,IAEAhpB,GACDue,IAAD,YAAa,CACX97B,SAAQ,UAAE87B,EAAOD,mBAAT,aAAE,EAAoB77B,SAC9By4B,QAASqD,EAAOrD,QAChB8N,wBAAyBzK,EAAOvY,aAChC+iB,WAAYxK,EAAOhuC,SAGhBi9B,EAAOgb,GAAeC,YAAS,CACpCQ,UAAU,EACVC,mBAAoB,GACpBC,WAAY,EACZ7N,SAAU,GACV8N,oBAAqB,CACnBh1C,KAAM,GACNqJ,SAAS,KAGP4rC,EAAc7b,EAAM0b,mBAAmBlnC,OAAS,GAChD,SACJi4B,EADI,OAEJY,EAFI,QAGJ1M,EAHI,OAIJ+L,GACEC,YAAc,IAClB,OACE,oCACE,kBAAC6G,GAAA,EAAD,CACEiI,SAAUzb,EAAMyb,SAChBvP,SAAU,CAACr1B,EAAG4kC,IAAaT,EAAaG,IACtCA,EAAMM,SAAWA,KAGnB,kBAAC/H,GAAA,EAAD,CACEC,gBAAc,mBAEd,kBAAC,IAAD,CACEpkC,MAAO,CACLlG,MAAO,SAGT,kBAAC,IAAD,CACEkG,MAAO,CACLI,cAAe,MACf6mB,eAAgB,gBAChBC,WAAY,SACZptB,MAAO,SAGT,kBAAC,IAAD,CACEkG,MAAO,CACLI,cAAe,MACf8mB,WAAY,WAGd,kBAAC6W,GAAA,EAAD,CACEoE,QAAQ,MADV,aAMF,kBAACjC,GAAA,EAAD,CACEl1B,QAAU1D,IACRA,EAAE87B,kBAEFjG,EAAO71B,KAGT,kBAACqzB,GAAD,CACE5xB,MAA4B,IAArB0nB,EAAM2b,WAAmB,UAAY,YAC5C/0C,KAA2B,IAArBo5B,EAAM2b,WAAmB,aAAe,WAGlD,kBAACjb,GAAA,EAAD,CACE+L,SAAUA,EACV5xB,KAAMwyB,EACN1M,QAASA,GAIc,IAArBX,EAAM2b,YACJ,kBAAC5a,GAAA,EAAD,CAGExmB,QAAUjE,IACRA,EAAMq8B,kBACNqI,EAAaG,IACXA,EAAMQ,WAAa,IAErBhb,MARJ,SAeJ,kBAACI,GAAA,EAAD,CAEE17B,SAA+B,IAArB26B,EAAM2b,WAChBphC,QAAUjE,IACRA,EAAMq8B,kBACNqI,EAAaG,IACXA,EAAMQ,WAAa,EACnBR,EAAMM,UAAW,IAEnB9a,MATJ,aAcA,kBAACI,GAAA,EAAD,CAEE17B,SAA+B,IAArB26B,EAAM2b,WAChBphC,QAAUjE,IACRA,EAAMq8B,kBACNqI,EAAaG,IACXA,EAAMQ,WAAa,EACnBR,EAAMM,UAAW,IAEnB9a,MATJ,kBAiBJX,EAAMyb,UAAYI,GAChB,kBAACC,GAAA,EAAD,CACEvsC,MAAO,CACL0d,QAAS,OACTtd,cAAe,MACfvG,OAAQ,GACRC,MAAO,SAGT,kBAACkrC,GAAA,EAAD,KACE,kBAACwH,GAAA,EAAD,CACExhC,QAAU1D,GAAMA,EAAE87B,kBAClBqJ,SAAUnsC,IAAUmwB,EAAM0b,qBAC5B1b,EAAM0b,mBAAmBlnC,SAAWS,EAAST,OAC3C03B,SAAW51B,IACT,MAAM,QACJ0lC,GACE1lC,EAAMyP,OACVi1B,EAAaG,IAETA,EAAMO,mBADJM,EACyB/mC,EAAStG,IAAKuG,GAAYA,EAAQ/C,IAElC,MAIjC8pC,WAAY,CAAE,aAAc,sBAE9B,kBAACxM,GAAA,EAAD,CACEl1B,QAAU1D,IACRA,EAAE87B,kBACFjF,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP/6B,QAASmtB,EAAM0b,sBAGnBV,EAAaG,IACXA,EAAMO,mBAAqB,OAI/B,kBAACxR,GAAD,CACEtjC,KAAK,wBAUnB,kBAACgtC,GAAA,EAAD,KACE,kBAAC8G,GAAD,CACEx0C,MAAO85B,EAAM2b,WACbrpC,MAAO,GAGW,IAApB2C,EAAST,QACP,kBAAC84B,GAAA,EAAD,gCAKA,kBAAC+G,GAAA,EAAD,CAAMC,OAAK,GACT,kBAAC4E,GAAD,CACEC,UAAYxnC,IACV+7B,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACPsO,UAAWvqC,EAAOrB,OAAOgC,MACzB6pC,QAASxqC,EAAO2nC,YAAahnC,UAInC6E,KAAMlC,EACNuqB,WAAY,EACVoa,WACAnnC,KAAMyC,MAGN,MAAQC,IAAK6pB,EAAP,GAAmB7sB,EAAnB,KAAuBvL,GAASsO,EACtC,OACE,kBAACs+B,GAAA,EAAD,IACEt7B,IAAK/F,EACLkH,IAAKugC,EAASF,UACVE,EAASwC,gBAEb,kBAAC1I,GAAA,EAAD,CACEC,gBAAc,mBAEd,kBAAC,IAAD,CACEpkC,MAAO,CACLI,cAAe,MACf6mB,eAAgB,gBAChBC,WAAY,SACZptB,MAAO,SAGT,kBAAC,IAAD,CACEkG,MAAO,CACLI,cAAe,MACf8mB,WAAY,WAGd,kBAACslB,GAAA,EAAD,CACExhC,QAAU1D,GAAMA,EAAE87B,kBAClBqJ,QAAShc,EAAM0b,mBAAmBtmC,SAASF,EAAQ/C,IACnD+5B,SAAWr1B,IACT,MAAM,QAAEmlC,GAAYnlC,EAAEkP,OACtBi1B,EAAaG,IACPa,EACFb,EAAMO,mBAAmB92B,KAAK1P,EAAQ/C,IAEtCgpC,EAAMO,mBAAqBP,EAAMO,mBAAmB9zB,OACjDzV,GAAOA,IAAO+C,EAAQ/C,OAK/B8pC,WAAY,CAAE,aAAc,sBAE9B,kBAAC3O,GAAA,EAAD,CACEoE,QAAQ,MAEP9qC,IAIL,kBAAC,IAAD,CACE2I,MAAO,CACLI,cAAe,MACf8mB,WAAY,WAGd,kBAAC4lB,GAAD,CACEb,wBAAyBA,EACzBD,WAAYA,EACZ7N,QAASA,EACTj7B,KAAMyC,IAER,kBAACu6B,GAAA,EAAD,IACEhoC,KAAK,MACL60C,oBAAkB,EAClBC,eAAa,EACbC,oBAAkB,GACd5C,EAAS6C,iBAEb,kBAACvS,GAAD,CAAMtjC,KAAK,oBAKnB,kBAACgtC,GAAA,EAAD,KAEE5U,EAAWrwB,IAAK+tC,GACd,kBAACnI,GAAA,EAAD,CACEr8B,IAAKwkC,GAEL,kBAACC,GAAA,EAAD,KACE,kBAACZ,GAAA,EAAD,CAKEE,WAAY,CAAE,aAAc,oBAC5B1hC,QAAU1D,GAAMA,EAAE87B,qBAGtB,kBAAC8B,GAAA,EAAD,CACEzxC,QAAS6M,KAAO,GAAPA,CAAW6sC,KAEtB,kBAACE,GAAA,EAAD,KACE,kBAACnN,GAAA,EAAD,CACEhoC,KAAK,MACLmwC,aAAW,SACXr9B,QAAU1D,IACRA,EAAE87B,kBACFjF,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP/6B,QAAS,CAAC6pC,IAEZvK,uBAAuB,MAI3B,kBAACjI,GAAD,CAAMtjC,KAAK,iBAEb,kBAAC6oC,GAAA,EAAD,CACEhoC,KAAK,MACLmwC,aAAW,SACXr9B,QAAU1D,IACRA,EAAE87B,kBACFjF,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP/6B,QAAS,CAAC6pC,GACV1e,UAAW9oB,EAAQ/C,QAKzB,kBAAC+3B,GAAD,CAAMtjC,KAAK,8BAajC,kBAAC8zC,GAAD,CACEx0C,MAAO85B,EAAM2b,WACbrpC,MAAO,GAEP,kBAAC,KAAD,IACEo8B,SAAWp4B,IACT0kC,EAAaG,IACXA,EAAMrN,SAAWx3B,EAAMw3B,SACvBqN,EAAMS,oBAAoB3rC,SAAU,MAGpCqrC,KAGR,kBAACZ,GAAD,CACEx0C,MAAO85B,EAAM2b,WACbrpC,MAAO,GAEP,kBAACyoC,GAAD,CACErM,SAAU,KACRsM,EAAaG,IACXA,EAAMQ,WAAa,UAO/B,kBAACkB,GAAA,EAAD,CACElc,QAAS,IAAMqa,EAAaG,IAC1BA,EAAMS,oBAAoB3rC,SAAU,IAEtC4qC,kBAAgB,+BAChBhgC,KAAMmlB,EAAM4b,oBAAoB3rC,SAEhC,kBAAC6sC,GAAA,EAAD,CAAa3qC,GAAG,gCAAhB,kBACA,kBAAC,IAAD,CACE5C,MAAO,CACLlG,MAAO,MACPpC,QAAS,GACTuvB,eAAgB,WAGlB,kBAACqW,GAAA,EAAD,CACEt9B,MAAO,CACLwtC,aAAc,GACd1zC,MAAO,QAET6mC,WAAS,EACTpP,MAAM,OACN56B,MAAO85B,EAAM4b,oBAAoBh1C,KACjCslC,SAAU,EAAGnmB,QAAU7f,YAAc80C,EAAaG,IAChDA,EAAMS,oBAAoBh1C,KAAOV,MAGrC,kBAAC8nC,EAAA,EAAD,CACEkC,WAAS,EACT31B,QAAS,KACPygC,EAAaG,IACXA,EAAMQ,WAAa,EACnBR,EAAMS,oBAAoBh1C,KAAO,GACjCu0C,EAAMS,oBAAoB3rC,SAAU,IAEtCy9B,EAAQ,CACNt6B,KAAMnG,EACN2gC,QAAS,CACPE,SAAU9N,EAAM8N,SAChBlnC,KAAMo5B,EAAM4b,oBAAoBh1C,UAZxC,cAgCJy1C,GAAwB7tC,IAAsC,IAAD,EACjE,MACEiE,KAAMyC,EADF,WAEJqmC,EAFI,QAGJ7N,EAHI,wBAIJ8N,GACEhtC,EAEJ,OACE,kBAACwrC,GAAD,CACElL,QAAS,CACP,CACEloC,KAAM,SACNf,KAAM,CACJe,KAAM,kBAER2T,QAAU1D,IACRA,EAAE87B,kBACFjF,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP/6B,QAAS,CAACqC,EAAQ/C,SAK1B,CACEvL,MAA0B,IAApBsO,EAAQjF,QAAoB,UAAY,YAC9CpK,KAAM,CACJe,MAA0B,IAApBsO,EAAQjF,QAAoB,cAAgB,eAEpDsK,QAAU1D,IACRA,EAAE87B,kBACFjF,EAAQ,CACNt6B,KAAMnG,EACN2gC,QAAS,CACP5P,UAAW9oB,EAAQ/C,GACnBjM,OAA2B,IAApBgP,EAAQjF,aAKvB,CACErJ,KAAM,SACNf,KAAM,CACJe,KAAM,YAER2T,QAAU1D,IACRA,EAAE87B,kBACFjF,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP/6B,QAAS,CAACqC,EAAQ/C,SAK1B,CACEvL,KAAM,MACNf,KAAM,CACJe,KAAM,aACN0R,MAAOijC,IAAepuC,GAAYM,sBACnC,UAAA+tC,EAAwB7qB,eAAxB,eAAiCqsB,mBAAoB9nC,EAAQ/C,GACxD,UAAY,WAElBoI,QAAU1D,IACRA,EAAE87B,kBACFjF,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP5P,UAAW9oB,EAAQ/C,Y,84BC7gBnC,MA0Sa8qC,GAAoBnlC,YA1SCtJ,IAChC,MAAM,sBACJ0uC,GACE1uC,GACGwxB,EAAOgb,GAAeC,YAAS,CACpCQ,UAAU,EACV0B,iBAAkB,KAEdtB,EAAc7b,EAAMmd,iBAAiB3oC,OAAS,IAElD,QACEk5B,EADF,aAEE0P,IAEA5qB,GACDue,IAAD,CACErD,QAASqD,EAAOrD,QAChB0P,aAAcrM,EAAOqM,gBAGzB,OACE,kBAAC,IAAD,CACE7tC,MAAO,CAELqmC,UAAW,OACXC,UAAW,SAGXzsC,OAAQ,OACRC,MAAO,SAGT,kBAACmqC,GAAA,EAAD,CACEiI,SAAUzb,EAAMyb,SAChBvP,SAAU,CAACr1B,EAAG4kC,IAAaT,EAAaG,IACtCA,EAAMM,SAAWA,KAGnB,kBAAC/H,GAAA,EAAD,CACEC,gBAAc,mBAEd,kBAAC,IAAD,CACEpkC,MAAO,CACLlG,MAAO,SAGT,kBAAC,IAAD,CACEkG,MAAO,CACLI,cAAe,MACf6mB,eAAgB,gBAChBC,WAAY,SACZptB,MAAO,SAGT,kBAAC,IAAD,CACEkG,MAAO,CACLI,cAAe,MACf8mB,WAAY,WAGd,kBAAC6W,GAAA,EAAD,CACEoE,QAAQ,MADV,YAMF,kBAAC,IAAD,CACEniC,MAAO,CAELI,cAAe,QAGjB,kBAAC8/B,GAAA,EAAD,CACEl1B,QAAU1D,IACRA,EAAE87B,kBACFjF,EAAQ,CACNt6B,KAAMnG,GACNowC,qBAAqB,EACrBlL,uBAAuB,MAI3B,kBAACjI,GAAD,CACEtjC,KAAK,yBAGT,kBAAC6oC,GAAA,EAAD,CACEl1B,QAAU1D,IACRA,EAAE87B,kBACFjF,EAAQ,CACNt6B,KAAMnG,GACNowC,qBAAqB,EACrBlL,uBAAuB,MAI3B,kBAACjI,GAAD,CACEtjC,KAAK,yBAMXo5B,EAAMyb,UAAYI,GAChB,kBAACC,GAAA,EAAD,CACEvsC,MAAO,CACL0d,QAAS,OACTtd,cAAe,MACfvG,OAAQ,GACRC,MAAO,SAGT,kBAACkrC,GAAA,EAAD,KACE,kBAACwH,GAAA,EAAD,CACEC,SAAUnsC,IAAUmwB,EAAMmd,mBAChCnd,EAAMmd,iBAAiB3oC,SAAW4oC,EAAcE,OAAO9oC,OACjD03B,SAAWr1B,IACT,MAAM,QAAEmlC,GAAYnlC,EAAEkP,OACtBi1B,EAAaG,IAETA,EAAMgC,iBADJnB,EACuBoB,EAAcE,OAAO3uC,IAAK2H,GAAUA,EAAMnE,IAE1C,MAI/BoI,QAAU1D,GAAMA,EAAE87B,kBAClBsJ,WAAY,CAAE,aAAc,sBAE9B,kBAACxM,GAAA,EAAD,CACEl1B,QAAU1D,IACRA,EAAE87B,kBACFuK,EAAsBld,EAAMmd,kBAC5BnC,EAAaG,IACXA,EAAMgC,iBAAmB,OAI7B,kBAACjT,GAAD,CACEtjC,KAAK,kBAGT,kBAAC6oC,GAAA,EAAD,CACEl1B,QAAU1D,IACRA,EAAE87B,kBACFjF,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP/6B,QAASmtB,EAAMmd,oBAGnBnC,EAAaG,IACXA,EAAMgC,iBAAmB,OAI7B,kBAACjT,GAAD,CACEtjC,KAAK,wBASrB,kBAACgtC,GAAA,EAAD,KAEkC,IAAhCwJ,EAAcE,OAAO9oC,QACnB,kBAAC84B,GAAA,EAAD,+BAKF,kBAAC+G,GAAA,EAAD,CAAMC,OAAK,GACT,kBAAC4E,GAAD,CACEC,UAAYxnC,IACV,MAAM,OAAE6C,GAAW4oC,EAAcE,OACjC5P,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACPsO,UAAW1nC,EAAS7C,EAAOrB,OAAOgC,MAAQ,EAC1C6pC,QAAS3nC,EAAS7C,EAAO2nC,YAAahnC,MAAS,MAIrD6E,KAAMtH,IAAUutC,EAAcE,QAC9B9d,WAAY,EACVoa,WACAnnC,KAAM6D,EACNhE,YAEA,MAAM,OAAEkC,GAAW4oC,EAAcE,OACjC,OACE,kBAAC/I,GAAA,EAAD,IACEr8B,IAAK5B,EAAMnE,GACX9M,SAAU+3C,EAAcpY,eAAkBxwB,EAAS,EAAKlC,EACxD+G,IAAKugC,EAASF,UACVE,EAASwC,gBAEb,kBAACO,GAAA,EAAD,KACE,kBAACZ,GAAA,EAAD,CACEC,QAAShc,EAAMmd,iBAAiB/nC,SAASkB,EAAMnE,IAC/C+5B,SAAWr1B,IACT,MAAM,QAAEmlC,GAAYnlC,EAAEkP,OACtBi1B,EAAaG,IACPa,EACFb,EAAMgC,iBAAiBv4B,KAAKtO,EAAMnE,IAElCgpC,EAAMgC,iBAAmBhC,EAAMgC,iBAAiBv1B,OAAQzV,GAAOA,IAAOmE,EAAMnE,OAIlF8pC,WAAY,CAAE,aAAc,uBAGhC,kBAACxH,GAAA,EAAD,CACEzxC,QAASsT,EAAMlD,OAEjB,kBAAC,IAAD,CACE7D,MAAO,CACL0d,QAAS,OACTtd,cAAe,MACf8mB,WAAY,WAId,kBAACujB,GAAD,CACElL,QAAS,CACP,CACEloC,KAAM,OACNf,KAAM,CACJe,KAAM,iBAER2T,QAAU1D,GAAM62B,EAAQ,CACtBt6B,KAAMnG,EACN2gC,QAAS,CACP0P,OAAQ,CAAC,SACJhnC,GADG,IAEN+mC,qBAAqB,EACrBlL,uBAAuB,SAK/B,CACEvrC,KAAM,OACNf,KAAM,CACJe,KAAM,mBAER2T,QAAS,IAAMmzB,EAAQ,CACrBt6B,KAAMnG,EACN2gC,QAAS,CACP0P,OAAQ,CAAC,SACJF,EAAcG,WAAWjrC,IADtB,IAEN+qC,qBAAqB,EACrBlL,uBAAuB,SAK/B,CACEvrC,KAAM,SACNf,KAAM,CACJe,KAAM,kBAER2T,QAAS,IAAMmzB,EAAQ,CACrBt6B,KAAMnG,GACN2gC,QAAS,CACP/6B,QAAS,CAACyD,EAAMnE,KAElBkrC,qBAAqB,EACrBlL,uBAAuB,QAK/B,kBAAC1C,GAAA,EAAD,IACEhoC,KAAK,MACL60C,oBAAkB,EAClBC,eAAa,EACbC,oBAAkB,GACd5C,EAAS6C,iBAEb,kBAACvS,GAAD,CAAMtjC,KAAK,2BAc8D,I,iNC9Q1F,MAAM42C,GAAiBhvC,IAC5B,MAAM,qBACJivC,EADI,iBAEJC,GACElvC,IAEF,QACEk/B,EADF,UAEEiQ,EAAY,KAEZnrB,GACDue,IAAD,CACErD,QAASqD,EAAOrD,QAChBiQ,UAAW5M,EAAO4M,cAGf3d,EAAOgb,GAAeC,YAAS,CACpCQ,UAAU,EACVgC,qBAAsB,CACpB72C,KAAM,IAERg3C,oBAAqB,KAEjB/B,EAAc7b,EAAM4d,oBAAoBppC,OAAS,EACvD,OACE,oCACE,kBAACg/B,GAAA,EAAD,CACEiI,SAAUzb,EAAMyb,SAChBvP,SAAU,CAACr1B,EAAG4kC,IAAaT,EAAaG,IACtCA,EAAMM,SAAWA,KAGnB,kBAAC/H,GAAA,EAAD,CACEC,gBAAc,mBAEd,kBAAC,IAAD,CACEpkC,MAAO,CACLlG,MAAO,SAGT,kBAAC,IAAD,CACEkG,MAAO,CACLI,cAAe,MACf6mB,eAAgB,gBAChBC,WAAY,SACZptB,MAAO,SAGT,kBAAC,IAAD,CACEkG,MAAO,CACLI,cAAe,MACf8mB,WAAY,WAGd,kBAAC6W,GAAA,EAAD,CACEoE,QAAQ,MADV,eAQJ1R,EAAMyb,UAAYI,GAChB,kBAACC,GAAA,EAAD,CACEvsC,MAAO,CACL0d,QAAS,OACTtd,cAAe,MACfvG,OAAQ,GACRC,MAAO,SAGT,kBAACkrC,GAAA,EAAD,KACE,kBAACwH,GAAA,EAAD,CACExhC,QAAU1D,GAAMA,EAAE87B,kBAClBqJ,SAAUnsC,IAAUmwB,EAAM4d,sBAC5B5d,EAAM4d,oBAAoBppC,SAAWmpC,EAAUnpC,OAC7C03B,SAAWr1B,IACT,MAAM,QAAEmlC,GAAYnlC,EAAEkP,OACtBi1B,EAAaG,IAETA,EAAMyC,oBADJ5B,EAC0B2B,EAAUhvC,IAAKkvC,GAAaA,EAAS1rC,IAErC,MAIlC8pC,WAAY,CAAE,aAAc,sBAE9B,kBAACxM,GAAA,EAAD,CACEl1B,QAAU1D,IACRA,EAAE87B,kBACFqI,EAAaG,IACXA,EAAMyC,oBAAsB,KAE9BlQ,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP/6B,QAASmtB,EAAM4d,yBAKrB,kBAAC1T,GAAD,CACEtjC,KAAK,wBAUnB,kBAACgtC,GAAA,EAAD,KAEuB,IAArB+J,EAAUnpC,QACR,kBAAC84B,GAAA,EAAD,iCAKF,kBAAC+G,GAAA,EAAD,CAAMC,OAAK,GACT,kBAAC4E,GAAD,CACEC,UAAYxnC,GAAW+7B,EAAQ,CAC7Bt6B,KAAMnG,GACN2gC,QAAS,CACPsO,UAAWvqC,EAAOrB,OAAOgC,MACzB6pC,QAASxqC,EAAO2nC,YAAahnC,SAGjC6E,KAAMwmC,EACNne,WAAY,EACVoa,WACAnnC,KAAMorC,MAEN,MAAM,OAAEP,EAAF,GAAUnrC,EAAV,KAAcvL,GAASi3C,EAC7B,OACE,kBAACrK,GAAA,EAAD,IACEt7B,IAAK/F,EACLkH,IAAKugC,EAASF,UACVE,EAASwC,gBAEb,kBAAC1I,GAAA,EAAD,CACEC,gBAAc,mBAEd,kBAAC,IAAD,CACEpkC,MAAO,CACLI,cAAe,MACf6mB,eAAgB,gBAChBC,WAAY,SACZptB,MAAO,SAGT,kBAAC,IAAD,CACEkG,MAAO,CACLI,cAAe,MACf8mB,WAAY,WAGd,kBAACslB,GAAA,EAAD,CACExhC,QAAU1D,GAAMA,EAAE87B,kBAClBqJ,QAASH,GACR7b,EAAM4d,oBAAoBxoC,SAASyoC,EAAS1rC,IAC7C+5B,SAAWr1B,IACT,MAAM,QAAEmlC,GAAYnlC,EAAEkP,OACtBi1B,EAAaG,IACPa,EACFb,EAAMyC,oBAAoBh5B,KAAKi5B,EAAS1rC,IAExCgpC,EAAMyC,oBAAsBzC,EAAMyC,oBAAoBh2B,OACnDzV,GAAOA,IAAO0rC,EAAS1rC,OAKhC8pC,WAAY,CAAE,aAAc,sBAE9B,kBAAC3O,GAAA,EAAD,CACEoE,QAAQ,MAEP9qC,IAGL,kBAAC,IAAD,CACE2I,MAAO,CACLI,cAAe,MACf8mB,WAAY,WAGd,kBAACujB,GAAD,CACElL,QAAS,CACP,CACEloC,KAAM,SACNf,KAAM,CACJe,KAAM,kBAER2T,QAAU1D,IACRA,EAAE87B,kBACFqI,EAAaG,IACXA,EAAMyC,oBAAsB,KAE9BlQ,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP/6B,QAAS,CAACgrC,EAAS1rC,SAK3B,CACEvL,KAAM,OACNf,KAAM,CACJe,KAAM,cAER2T,QAAU1D,IACRA,EAAE87B,kBACFjF,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP0P,OAAQO,EAASP,eAO7B,kBAAC7N,GAAA,EAAD,IACEhoC,KAAK,MACL60C,oBAAkB,EAClBC,eAAa,EACbC,oBAAkB,GACd5C,EAAS6C,iBAEb,kBAACvS,GAAD,CAAMtjC,KAAK,oBAKnB,kBAACgtC,GAAA,EAAD,KAEI0J,EAAO3uC,IAAK2H,GACV,kBAACi+B,GAAA,EAAD,CACEr8B,IAAK5B,EAAMnE,IAEX,kBAACwqC,GAAA,EAAD,KACE,kBAACZ,GAAA,EAAD,CAaEE,WAAY,CAAE,aAAc,oBAC5B1hC,QAAU1D,GAAMA,EAAE87B,qBAGtB,kBAAC8B,GAAA,EAAD,CACEzxC,QAASsT,EAAMlD,OAEjB,kBAACwpC,GAAA,EAAD,KACE,kBAACnN,GAAA,EAAD,CACEhoC,KAAK,MACLmwC,aAAW,SACXr9B,QAAU1D,IACRA,EAAE87B,oBAGJ,kBAACzI,GAAD,CAAMtjC,KAAK,+BAcrC,kBAACi2C,GAAA,EAAD,CACElc,QAAS8c,EAAqB9c,QAC9Bka,kBAAgB,+BAChBhgC,KAAM4iC,EAAqBxtC,SAE3B,kBAAC6sC,GAAA,EAAD,CAAa3qC,GAAG,gCAAhB,mBACA,kBAAC,IAAD,CACE5C,MAAO,CACLlG,MAAO,MACPpC,QAAS,GACTuvB,eAAgB,WAGlB,kBAACqW,GAAA,EAAD,CACEt9B,MAAO,CACLwtC,aAAc,GACd1zC,MAAO,QAET6mC,WAAS,EACTpP,MAAM,OACN56B,MAAO85B,EAAMyd,qBAAqB72C,KAClCslC,SAAU,EAAGnmB,QAAU7f,YAAc80C,EAAaG,IAChDA,EAAMsC,qBAAqB72C,KAAOV,MAGtC,kBAAC8nC,EAAA,EAAD,CACEkC,WAAS,EACT31B,QAAS,KACPmjC,EAAiB,CACfvrC,GAAItC,OACJjJ,KAAMo5B,EAAMyd,qBAAqB72C,OAEnCo0C,EAAaG,IACXA,EAAMsC,qBAAqB72C,KAAO,OARxC,c,84BCxUV,MA2Nak3C,GAAchmC,YA3NCtJ,IAC1B,MAAM,OACJ6+B,GAAS,EADL,MAGJ0Q,EAAQ,GAHJ,kBAIJzC,GAGE9sC,IAEF,QACEk/B,EADF,aAEE0P,EAFF,SAGEnoC,EAHF,UAIE0oC,IAEAnrB,GACDue,IAAD,YAAa,CACXrD,QAASqD,EAAOrD,QAChB0P,aAAcrM,EAAOqM,aACrBO,UAAW5M,EAAO4M,UAClB1oC,SAAQ,UAAE87B,EAAOD,mBAAT,aAAE,EAAoB77B,YAK5BujB,EAAerf,IAAMyY,OAAO,CAChCvoB,M7DwEoC,O6DrEpCkG,MAAOyhC,EACP33B,IAAK43B,GACHC,YAAa,CACfn/B,KAAM,CACJ1I,MAAO,GAET0U,GAAI,CACF1U,MAAOmvB,EAAa7H,QAAQtnB,OAE9B+nC,UAAU,GACT,CAAC5Y,EAAa7H,QAAQtnB,QACzB8P,IAAMuX,UAAU,KACdugB,EAAatgB,QAAQ0gB,KAAKhE,IACzB,CAAC4D,EAAc5D,IAClB,MAAOrN,EAAOgb,GAAeC,YAAS,CACpCwC,qBAAsB,CACpBxtC,SAAS,GAEXktC,iBAAkB,KAEd5pB,EAAepa,IAAMyY,SACrB6jB,EAAcpD,GAAQ,CAC1Bh5B,IAAKka,EACLb,OAAQ,EAAGte,IAAGE,KAAKohC,KACjBld,EAAa7H,QAAQtnB,MAAQqsC,EAAKrsC,MAAQ+K,EAC3Bmf,EAAa5C,QACrBphB,MAAMlG,MAAWmvB,EAAa7H,QAAQtnB,MAAvB,QAG1B,OACE,kBAACssC,GAAA,EAAD,CACEt8B,IAAKka,EACLhkB,MAAK,IACH5G,SAAU,WACVS,OAAQ,OACRwN,IAAK,EACLD,KAAM,EACNsW,QAAS,OACTtd,cAAe,OACZqhC,IAGL,kBAAC,IAAD,CACEzhC,MAAO,CAELqmC,UAAW,OACXC,UAAW,SACXzsC,OAAQ,OACRqG,KAAM,IAIRsuC,EAAMpvC,IAAI,CAACk/B,EAAMv7B,KAAW,IAAD,MACzB,MAAMwI,EAAK,oBAAG+yB,EAAKjC,cAAR,aAAG,EAAa9wB,aAAhB,QAA0B,QAAOxI,EAC5C,OACE,kBAAC,IAAM0rC,SAAP,CAAgB9lC,IAAK4C,GACnB,kBAAC04B,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,KACE,kBAACpG,GAAA,EAAD,CACEoE,QAAQ,MAEP52B,IAGL,kBAAC84B,GAAA,EAAD,KACE,kBAAC,KAAD,MAGM/F,EAHN,CAIEjC,OAAQ/7B,IAAO,CAAC,SAARA,CAAkBg+B,EAAKjC,QAC/B8C,SACE73B,GACG62B,EAAQ,CACXt6B,KAAMnG,GACN2gC,QAAS,CAAEC,OAAM3nC,MAAO2Q,EAAEi3B,SAAUx7B,aATxC,UAaIu7B,EAAKt5B,gBAbT,QAcI,kBAACy5B,EAAA,EAAD,CACE56B,KAAK,SACL88B,WAAS,EACTwB,QAAQ,aAHV,YAYR,kBAAC,IAAD,CAAMniC,MAAO,CAAE2c,UAAW,EAAG6wB,aAAc,QAKjD,kBAAC1G,GAAA,EAAD,MAEA+G,GACA,oCACE,kBAAC,IAAD,CACE7tC,MAAO,CAELlG,MAAO,SAGT,kBAAC4zC,GAAD,CACEC,sBAAwBC,GAAqBnC,EAAaG,IACxDA,EAAMsC,qBAAqBxtC,SAAU,EACrCkrC,EAAMgC,iBAAmBA,OAI/B,kBAAC9G,GAAA,EAAD,CAAS9mC,MAAO,CAAE2c,UAAW,EAAG6wB,aAAc,MAIhD,kBAAC1G,GAAA,EAAD,MAEEsH,GACA,kBAACH,GAAD,CACEC,qBAAoB,SACfzd,EAAMyd,sBADS,IAElB9c,QAAS,IAAMqa,EAAaG,IAC1BA,EAAMsC,qBAAqBxtC,SAAU,MAGzCytC,iBAAmBO,IACjB,MAAMC,EAAiBle,EAAMmd,iBAAiBxuC,IAC3CwvC,GAAYf,EAAcE,OAAO9hC,KAAMlF,GAAUA,EAAMnE,KAAOgsC,IAC/Dx0C,KAAK,CAAC8I,EAAM2rC,IAAW3rC,EAAK4rC,KAAOD,EAAMC,KAAO,GAAK,GACvDrD,EAAaG,IACXA,EAAMsC,qBAAqBxtC,SAAU,IAEvCy9B,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACPrN,MAAO,CAAC,SAED0d,GAFA,IAGHX,OAAQY,WAUtB,kBAAC7H,GAAA,EAAD,MAEAphC,GACA,oCACE,kBAAC,IAAD,CACE1F,MAAO,CAELlG,MAAO,SAGT,kBAACgyC,GAAD,CACEC,kBAAmBA,KAGvB,kBAACjF,GAAA,EAAD,CAAS9mC,MAAO,CAAE2c,UAAW,EAAG6wB,aAAc,OAKlD,kBAAC7J,GAAD,CACEuC,YAAaA,IAEf,kBAAChG,GAAA,EAAD,CACElgC,MAAOgiC,GAAO1rC,KACd0U,QAAS,KACPmzB,EAAQ,CACNt6B,KAAMnG,GACNklC,uBAAuB,MAI3B,kBAACjI,GAAD,CACEtjC,KAAK,gBAOgE,IAEzE2qC,GAAS,CACb1rC,KAAM,CACJ8C,SAAU,WACVioC,OAAQ,GACRh6B,IAAK,EACLqE,SAAU,K,+iDCnMd,MACMqjC,GAAuB,CAC3B,CAACnxC,GAAYC,KAAO,qDACpB,CAACD,GAAYE,QAAU,qDACvB,CAACF,GAAYG,eAAiB,gDAC9B,CAACH,GAAYI,kBAAoB,sDACjC,CAACJ,GAAYM,qBAAuB,0DACpC,CAACN,GAAYK,SAAU,MAGnB+wC,GAAkB1uC,IAIlB2uC,GAAiD,CACrDC,yBAAyB,GAmrBrBC,GAA0BlwC,GAbfiG,KACf,MAAMkqC,EAAe,GACrB,OAAO7O,KAAK8O,UAAUnqC,EAAQ,CAACyD,EAAKhS,KAClC,GAAqB,kBAAVA,GAAgC,OAAVA,EAAgB,CAE/C,GAAIy4C,EAAMvpC,SAASlP,GAAQ,OAAO,KAGlCy4C,EAAM/5B,KAAK1e,GAEb,OAAOA,KAGiD24C,CAAQ,CAClE/N,YAAatiC,EAAMsiC,YACnBhQ,MAAOtyB,EAAMsyB,MAEbge,QAASjvC,IAAO,CAAC,SAAU,UAAWrB,EAAMswC,SAC5CC,UAAWlvC,IAAO,CAAC,QAAS,QAASrB,EAAMuwC,WAC3C3B,aAAc5uC,EAAM4uC,aACpBr6C,KAAMyL,EAAMzL,KACZyG,MAAOgF,EAAMhF,MACb+R,MAAO/M,EAAM+M,QAGFyjC,GAAclnC,YA7rBA,CACzBtJ,EACA6K,KAEA,MACEq0B,QAASuR,EAAkBV,GADvB,WAEJthB,EAFI,WAGJD,EAHI,YAIJ8T,EAJI,MAKJvhC,EALI,YAMJ2vC,EANI,UAOJH,EAPI,QAQJD,EAAU,GARN,iBASJK,EAAmB,GATf,MAUJ31C,EAVI,MAWJ+R,EAXI,mBAYJzI,EAAqB,GAZjB,MAaJguB,EAbI,KAcJ/9B,EAAOoK,GAAYK,QAdf,OAeJ8vC,EAfI,aAgBJF,EAhBI,OAiBJhuC,EAASovC,GAjBL,UAkBJb,EAlBI,kBAmBJ3I,EAnBI,UAoBJoK,GAAY,EApBR,OAqBJC,GAEE7wC,EADC+B,EAtBL,GAuBI/B,EAvBJ,IAyBMgqB,EAAerf,IAAMyY,OAAO,CAChC0tB,aAAa,EACbC,WAAY,KACZ/wC,QACAwuC,gBAAiB,KACjBwC,uBAAwB,CACtBxgB,WAAY,IAEdgW,kBAAmB,CACjBM,MAAO,MAETmK,YAAa,CACX5sC,QAAS,OAGNmtB,EAAOgb,GAAeC,YAAS,CACpCyE,YAAa,CACXzvC,SAAS,GAEXwvC,YAAa,CACXxvC,SAAS,EACTtH,SAAU,CACRyL,EAAG,EACHE,EAAG,IAGP8qC,WAAW,IAEb5mB,EAAa7H,QAAQniB,MAAQA,EAC7B2K,IAAMuX,UAAU,KACd8H,EAAa7H,QAAQ2uB,aAAc,GAIlC,IACH,MAAMjiB,EAAUlkB,IAAM+X,QACpB,mCAAM4f,QAAN,IAAMA,OAAN,EAAMA,EAAazT,eAAnB,QAA8BxtB,QAC9B,QAACihC,QAAD,IAACA,OAAD,EAACA,EAAazT,UAEVmD,EAAiBzE,YAAc1iB,GAErCF,IAAMuX,UAAU,KACdwI,WAAW,KACT7f,EAAIsX,QAAU6P,EAAe7P,SAC5B,MACF,CAAC6P,EAAe7P,UAEnB,MAAM3d,EAAkBmG,IAAM+X,QAC5B,KAAO,IAAD,IACJ,MAAMyuB,EAAU,UAAGnf,EAAe7P,eAAlB,iBAAG,EAAwB1d,UAA3B,aAAG,EAA4BC,IAAIrD,IAAOiD,IAC1D,OAA8B,KAAb,OAAV6sC,QAAU,IAAVA,OAAA,EAAAA,EAAYnrC,QACf,KACAmrC,GAgBN,CAACn2C,EAAO+R,EAAOzI,IAEXK,EAAeH,GAAmBf,GACtCe,EAAiB,CAAExJ,QAAO+R,UAC1B9I,KAGIi7B,EAAuBv0B,IAAMya,YAAagsB,IAC9C,MACEpxC,OAAO,MACLhF,EADK,MAEL+R,IAEAid,EAAa7H,QACjB,OAAQivB,EAAUxsC,MAChB,KAAKnG,GACHurB,EAAa7H,QAAQqsB,gBAAkB4C,EAAUhS,QAAQ5P,UACzD,MACF,KAAK/wB,EAA+C,CAAC,IAAD,MAClD,MAAM,OACJmC,EAAS,GADL,KAEJxI,GACEg5C,EAAUhS,QACRiS,EAA6CnkC,GAAS9U,GACzDkV,UADgD,IAE/C7I,GAAE,UAAEutB,EAAe7P,eAAjB,aAAE,EAAwB1d,GAC5BzJ,QACA+R,SACGnM,IAEP,IAAI0wC,GAAgB,iBAAChP,QAAD,IAACA,GAAD,UAACA,EAAa77B,gBAAd,aAAC,EAAuBT,cAAxB,QAAkC,GAAK,EAC3D,MAAMS,EAAW4qC,EAAmBlxC,IAAKgxC,IACvC,MAAM3gB,EAAa2gB,EAAWhxC,IAAKoxC,GAAOA,EAAG5tC,MAE7C,OADA2tC,GAAiB,EACV,CACL3tC,GAAItC,OACJjJ,KAAO,WAAUk5C,EACjB3qC,IAAK6pB,EACLjB,gBAAiB,MAElBnW,OAAQlB,KAAUA,GAcrB,YAbwB,IAApBzR,EAAST,OACXqkC,MAAM,iDAENoG,EAAgB,CACd9sC,GAAItC,OACJwuC,MAAM,IAAIhc,MAAOhW,WACjBjZ,KAAMnG,EACN2gC,QAAS,CACPrN,MAAOtrB,OAWjBgqC,EAAgB,YACVjsC,EAAkB,CAAE0pC,UAAW1pC,EAAgBb,MAAS,IACzDytC,GAFU,IAGbztC,GAAItC,OACJwuC,MAAM,IAAIhc,MAAOhW,YAEfuzB,EAAUtpC,MACN,CACAA,MAAOzG,IAAY,CACjB,CAAC,OAAQ,gBAAiB,YADrBA,CAEJ+vC,EAAUtpC,QAEb,MAGP,CAAC2oC,EAAD,OAAkB9rC,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAchB,KAC7B6tC,ECjPyB,EAC/Bhc,EACAl1B,EACA0H,EAAmB,MAEnB,MAAM,KACJypC,EAAO,GADH,gBAEJC,GAAkB,EAFd,iBAGJC,GAAmB,EAHf,oBAIJC,GAAsB,EAJlB,SAKJnc,EALI,UAMJE,GAAY,GACV3tB,GACG,CAAEkb,GAAYvY,IAAMC,SAAS,IAC9B4mC,EAAuB7mC,IAAM+X,QAAQ,IAAM6S,GAC/CC,EACA,CAACmB,EAAO7yB,EAAOimC,KACbzpC,EAASq2B,EAAO7yB,EAAOimC,GACnB2H,GACFxuB,EAAS,KAGb,CACEuS,SAAU,KACA,OAARA,QAAQ,IAARA,OACIkc,GACFzuB,EAAS,KAGb0S,cAAe,KACTgc,GACF1uB,EAAS,KAGbyS,cAED8b,GAOH,OANA9mC,IAAMuX,UACJ,IAAM,KACJsvB,EAAqBnmC,SAEvBomC,GAEKD,GDsMsBK,EAC3B,OAAC/C,QAAD,IAACA,IAAU,IAAI3uC,IAAI,CAAC2H,EAAOhE,IAAR,GAAC,MACfgE,GADc,IAEjBwuB,MAAa,OAANwY,QAAM,IAANA,KAAShrC,EAAQ,GACpB,IAAI+vB,KACJ/rB,EAAM+nC,MACNiC,kBAAoB,IAAIje,KAAKib,EAAOhrC,EAAQ,GAAG+rC,MAAMiC,kBACrD,KAELhqC,IACC2oC,EAAgB3oC,IAElB,CACE2pC,KAAM,CAAC3C,GACP6C,kBAAkB,EAClBC,qBAAqB,EACrBjc,WAAW,IAGfhrB,IAAMuX,UAAU,KAGN,IAAD,EAFFthB,EAAOqvC,wBAGVjmB,EAAa7H,QAAQqkB,kBAAkBM,MAAQzlC,IAC7CmxB,GAAoB,CAAEx3B,QAAO+R,UADgB,iBAE5Cy5B,QAF4C,IAE5CA,OAF4C,EAE5CA,EAAmBM,aAFyB,QAEhB,IAJ/B9c,EAAa7H,QAAQqkB,kBAAkBM,MAAvC,OAA+CN,QAA/C,IAA+CA,OAA/C,EAA+CA,EAAmBM,OAOnE,IACHn8B,IAAM+X,QAAQ,KAC2B,IAAD,EAAlCsH,EAAa7H,QAAQ2uB,cACvB9mB,EAAa7H,QAAQqkB,kBAAkBM,MAAQzlC,IAC7CmxB,GAAoB,CAAEx3B,QAAO+R,UADgB,iBAE5Cy5B,QAF4C,IAE5CA,OAF4C,EAE5CA,EAAmBM,aAFyB,QAEhB,MAGhC,CAAC9rC,EAAO+R,EAAR,OAAey5B,QAAf,IAAeA,OAAf,EAAeA,EAAmBM,MAAOlmC,EAAOqvC,0BACnDtlC,IAAMuX,UAAU,KACd8H,EAAa7H,QAAQ4uB,WAAa,MACjC,CAACx8C,IACJ,MAAMw9C,EAAmBpnC,IAAM+X,QAAQ,MACrC9hB,SACAguC,eACAE,SACAxM,cACAhQ,QACA/9B,OACA2qC,UACAiQ,YACA7qC,qBACA0lB,eACArlB,eACAH,kBACAgiC,oBACAxU,iBACAh3B,QACA+R,UAEF,CACEnM,EACAguC,EACAE,EACAxM,EACAhQ,EACA/9B,EACA2qC,EACAiQ,EACA7qC,EACAK,EACAH,EACAgiC,EACAxU,EACAh3B,EACA+R,IAKF,OAHIilB,EAAe7P,UACjB6P,EAAe7P,QAAQrb,QAAUirC,GAGjC,kBAAChuB,GAAD,CACErsB,MAAOq6C,GAEP,kBAACxS,GAAA,EAAD,CAEEx+B,MAAK,SACAA,GADA,IAEHwnC,SAAU,SACVpuC,SAAU,aAEZsuC,YAAcpgC,I7D6bE,EAAC/H,EAA+B0xC,EAAeC,KACrE,MAAM97B,GAAQ,IAAI0d,MAAQC,UACpBnwB,EAAE,OAAGsuC,QAAH,IAAGA,IAAO5wC,QACL+F,GAAkBzD,GAAOwS,EAAO/O,GAAkBzD,GAAOwS,GAE3D67B,IACT5qC,GAAkBzD,GAAMwS,EACxB7V,EAASqD,K6DncHuuC,CACE,KACE,MAAM,MACJC,GACE9pC,EAAEmkB,aACA,aACJ4lB,EADI,UAEJC,GACEhqC,EAAEiiB,cACN,GAAItqB,EAAMuwC,WAAavwC,EAAMuwC,UAAUvO,SAAU,CAAC,IAAD,IAC/C,GAAImQ,EAAQ,IAAME,EAAYD,IAC3B,UAACpyC,EAAMuwC,iBAAP,QAAC,EAAiB1R,QACnB,OAAOK,EAAQ,CACbt6B,KAAMnG,GACNklC,uBAAuB,IAG3B,GAAIwO,EAAQ,IAAME,EAAYD,GAA1B,UAA0CpyC,EAAMuwC,iBAAhD,OAA0C,EAAiB1R,OAC7D,OAAOK,EAAQ,CACbt6B,KAAMnG,GACNklC,uBAAuB,MAK/B,IACA,4BAIJ,kBAAC,GAAD,IAEE94B,IAAKmnB,EACLjxB,MAAO,CACLlG,MAAK,OAAEkG,QAAF,IAAEA,OAAF,EAAEA,EAAOlG,MACdD,OAAM,OAAEmG,QAAF,IAAEA,OAAF,EAAEA,EAAOnG,QAEjBI,MAAOA,EACP+R,MAAOA,GACHhL,EATN,CAUE2sB,UAAW,CACT4D,QACA5D,UAAW3sB,EAAK2sB,WAElB9tB,OAAM,SACD0hC,GADC,IAEJzT,YAEFvqB,mBAAoBA,EACpB/E,QAAS,EAAGpF,eACNq3B,EAAMyf,YAAYxvC,SACpB+qC,EAAaG,IACXA,EAAMsE,YAAYxvC,SAAU,IAGhC,MAAM,KAAElN,GAASy1B,EAAa7H,QAAQniB,MAGpC,CAACrB,GAAYC,IAAKD,GAAYG,eAAe8H,SAASrS,GAEtD2qC,EAAQ,CACNt6B,KAAMnG,EACN2gC,QAAS,CACPrN,MAAO,CAAC,CACNpuB,GAAItC,OACJlH,WACAwO,KAAM,QAMdu2B,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CAAEjlC,YACXwpC,uBAAuB,KAG3B7a,eAAiBhhB,IACf,MAAM,KAAEvT,GAASy1B,EAAa7H,QAAQniB,OAChC,WACJwwB,GACE1oB,EACAnJ,GAAYM,sBAAwB1K,GAWxCy1B,EAAa7H,QAAQ6uB,uBAAuBxgB,WAAaA,EACrDA,EAAWxqB,OAAS,IACtBgkB,EAAa7H,QAAQ8uB,YAAY5sC,QAAUmsB,EAC3Cgc,EAAaG,IACX,MAAMtkC,EAAIP,EAAMA,MAAMa,KAAKgc,cAC3BgoB,EAAMsE,YAAYxvC,SAAU,EAC5BkrC,EAAMsE,YAAY92C,SAAW4N,GAAuBM,KAQtD62B,EAAQ,CACNt6B,KAAMnG,EACN2gC,QAAS,CACP5O,kBA3BJ0O,EAAQ,CACNt6B,KAAMnG,EACN2gC,QAAS,CACP5P,UAAWxF,EAAa7H,QAAQqsB,gBAChCnqC,oBA4BRmqB,WAAY,8BAAC,KAAEvqB,EAAF,QAAQP,GAAT,EAAqB3B,EAArB,gBACV,kBAAC,GAAM4J,KAAP,CACEO,aAAW,EAIXomC,WAAaxqC,IACXkiB,EAAa7H,QAAQ8uB,YAAY5sC,QAAU,CAACX,EAAQC,MACpD6oC,EAAaG,IACXA,EAAMsE,YAAYxvC,SAAU,EAC5BkrC,EAAMsE,YAAY92C,SAAW4N,GAAuBD,EAAMa,KAAKgc,iBAEjE7c,EAAMq8B,mBAER/3B,WAAatE,IACX,MAAM,KAAEvT,GAASy1B,EAAa7H,QAAQniB,MAChCkuC,EAAYxqC,EAAQC,KAExB,CACEhF,GAAYE,OAEZF,GAAYI,kBAAkB6H,SAASrS,GAEzC2qC,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP/6B,QAAS,CAACJ,EAAKN,KAEjBmE,UAMF,CAACnJ,GAAYC,IAAKD,GAAYG,eAAe8H,SAASrS,GAElDy1B,EAAa7H,QAAQ4uB,YACvB7R,EAAQ,CACNt6B,KAAMnG,EACN2gC,QAAS,CACPrN,MAAO,CAAC,CACNpuB,GAAItC,OACJS,OAAQkoB,EAAa7H,QAAQ4uB,WAAWptC,KACxC4T,OAAQ22B,KAGZpmC,UAEFkiB,EAAa7H,QAAQ4uB,WAAa,MAElC/mB,EAAa7H,QAAQ4uB,WAAartC,EAIlC/E,GAAYM,sBAAwB1K,EAYxC2qC,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP/6B,QAAS,CAACX,EAAQC,OAEpBmE,QACA67B,uBAAuB,IAjBvBzE,EAAQ,CACNt6B,KAAMnG,EACN2gC,QAAS,CACP5P,UAAWxF,EAAa7H,QAAQqsB,gBAChCnqC,QAAS,CAAC6pC,SAiBjB,OAAC1f,QAAD,IAACA,IAAcpG,IAAf,IACCnkB,OACAP,UAEA4uB,MAAOztB,GACA,OAALytB,QAAK,IAALA,KAAOuU,cAAP,iBACKvU,QADL,IACKA,OADL,EACKA,EAAO/F,OAAOvxB,aADnB,eAC4Bs3B,QAD5B,IAC4BA,GAD5B,UAC4BA,EAAOt3B,aADnC,aAC4B,EAAeiJ,EAAKN,IADhD,iBAEK2uB,QAFL,IAEKA,GAFL,UAEKA,EAAOt3B,aAFZ,aAEK,EAAeiJ,EAAKN,WAFzB,eAEgC2uB,QAFhC,IAEgCA,OAFhC,EAEgCA,EAAO/F,OAAOvxB,MAC9CiJ,GAEFsuC,UAAS,UAAQ,OAALjgB,QAAK,IAALA,KAAOuU,cAAP,iBACPvU,QADO,IACPA,OADO,EACPA,EAAO/F,OAAOvxB,aADP,eACgBs3B,QADhB,IACgBA,GADhB,UACgBA,EAAOt3B,aADvB,aACgB,EAAeiJ,EAAKN,IADpC,iBAEP2uB,QAFO,IAEPA,GAFO,UAEPA,EAAOt3B,aAFA,aAEP,EAAeiJ,EAAKN,WAFb,eAEoB2uB,QAFpB,IAEoBA,OAFpB,EAEoBA,EAAO/F,OAAOvxB,aAFrC,QAEgD,IACtD+G,MAIT0sB,WAAY,8BAAC,KAAExqB,EAAF,QAAQP,GAAT,EAAqB3B,EAArB,gBACV,kBAAC,GAAM4J,KAAP,CACEO,aAAW,EACXomC,WAAaxqC,IACXo3B,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP/6B,QAAS,CAACX,EAAQC,OAEpBmE,QACA67B,uBAAuB,IAEzB6I,EAAaG,IACXA,EAAMsE,YAAYxvC,SAAU,IAE9BqG,EAAMq8B,mBAER/3B,WAAatE,IACX,MAAM,KAAEvT,GAASy1B,EAAa7H,QAAQniB,MAEpC,CACErB,GAAYE,OAEZF,GAAYI,kBAAkB6H,SAASrS,GAEzC2qC,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP/6B,QAAS,CAACJ,EAAKN,KAEjBmE,UAMJo3B,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP/6B,QAAS,CAACX,EAAQC,OAEpBggC,uBAAuB,OAM7B,OAAClV,QAAD,IAACA,IAAcpG,IAAf,IACEpkB,OAEAquB,MAAOztB,GACA,OAALytB,QAAK,IAALA,KAAOuU,cAAP,iBACKvU,QADL,IACKA,OADL,EACKA,EAAO/F,OAAOxf,aADnB,eAC4BulB,QAD5B,IAC4BA,GAD5B,UAC4BA,EAAOvlB,aADnC,aAC4B,EAAe9I,EAAKN,IADhD,iBAEK2uB,QAFL,IAEKA,GAFL,UAEKA,EAAOvlB,aAFZ,aAEK,EAAe9I,EAAKN,WAFzB,eAEgC2uB,QAFhC,IAEgCA,OAFhC,EAEgCA,EAAO/F,OAAOxf,MAC9C9I,GAEFsuC,UAAS,UAAQ,OAALjgB,QAAK,IAALA,KAAOuU,cAAP,iBACPvU,QADO,IACPA,OADO,EACPA,EAAO/F,OAAOxf,aADP,eACgBulB,QADhB,IACgBA,GADhB,UACgBA,EAAOvlB,aADvB,aACgB,EAAe9I,EAAKN,IADpC,iBAEP2uB,QAFO,IAEPA,GAFO,UAEPA,EAAOvlB,aAFA,aAEP,EAAe9I,EAAKN,WAFb,eAEoB2uB,QAFpB,IAEoBA,OAFpB,EAEoBA,EAAO/F,OAAOxf,aAFrC,QAEgD,GACzDrJ,WACG3B,SAOT2uC,GACE,kBAACpB,GACKoB,GAIR,kBAACxK,GACKoK,GAINC,GACA,kBAACxO,GAAD,IACEhB,SAAU,EAAGn8B,OAAMlN,YACjB,OAAQkN,GACN,KAAKnG,GACHygC,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP1nC,MAAOw4C,GAAuBlwC,MAGlC,MACF,KAAKvB,EACHygC,EAAQ,CACNt6B,KAAMnG,EACN2gC,QAAS,CACP1nC,WAGJ,MAEF,QACEwnC,EAAQ,CACNt6B,KAAMA,EACNw6B,QAAS1nC,OAKb64C,IAIN,kBAAC/H,GAAD,CAEEpwC,KAAM03C,GAAqBv7C,GAC3BowC,QAAM,IAER,kBAACwF,GAAD,CACEC,eAAgBoH,EAChBrf,QAAS,KACPqa,EAAY,QACZgF,EAAqBnmC,WAGzB,kBAACwmB,GAAD,CACEG,eAAgBA,EAChBD,MAAO,CACL,CAAEr6B,MAAO,gBAAiB46B,MAAO,kBACjC,CAAE56B,MAAO,SAAU46B,MAAO,UAC1B,CAAE56B,MAAO,WAAY46B,MAAO,aAE9BR,SAAWp6B,IAAW,IAAD,IACnB,MACEyqB,SACE8uB,aAAa,QACX5sC,KAGF2lB,EACJ,OAAQtyB,GACN,IAAK,gBACHwnC,EAAQ,CACNt6B,KAAMnG,EACN2gC,QAAS,CACPrN,MAAO,CAAC,CACNpuB,GAAItC,OACJjJ,KAAO,YAAD,iBAAWkqC,QAAX,IAAWA,GAAX,UAAWA,EAAa77B,gBAAxB,aAAW,EAAuBT,cAAlC,QAA4C,GAClDW,IAAKtC,EACLkrB,gBAAiB,QAIvB,MACF,IAAK,SACH2P,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP/6B,aAGJ,MACF,IAAK,WACH66B,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACP/6B,aAOR2lB,EAAa7H,QAAQ6uB,uBAAuBxgB,WAAa,GACzDxG,EAAa7H,QAAQ8uB,YAAY5sC,QAAU,GAC3CmoC,EAAaG,IACXA,EAAMsE,YAAYxvC,SAAU,KAGhCtH,SAAUq3B,EAAMyf,YAAY92C,SAC5BkS,KAAMmlB,EAAMyf,YAAYxvC,WAG5B,kBAACinC,GACKiI,GAGJxxC,OAAOC,KAAKyxC,GAAQ1wC,IAAKqyC,IAAD,aACtB,kBAACvK,GAAD,IACEv+B,IAAK8oC,GADP,UAEO3B,EAAO2B,UAFd,QAE4B,GAF5B,CAGEp6C,KAAMo6C,OAIZ,kBAACzS,EAAA,EAAD,CACEN,GAAI,CAAE31B,MAAO,OAAQsI,OAASrI,GAAUA,EAAMqI,OAAO4tB,OAAS,GAC9D3zB,KAAMukC,GAAapf,EAAMof,WAEzB,kBAACnG,EAAA,EAAD,CAAkB3gC,MAAM,eAoC9B,CACEmnB,QAAS,CAAChtB,EAAMwuC,MACVpxC,IAAK6vB,SAAUjtB,IAGZA,IAASwuC,EAElB1nC,cAAc,I,eEzxBlB,MAAM2nC,GAAgB,EAAGpT,WAAUlC,SAAQM,WAAUtlC,WAAY,IAAD,EAE9D,OACE,oCACE,kBAAC0mC,GAAA,EAAD,CAAYn7B,GAAOy5B,EAAO9wB,MAAT,qBAAoCqmC,cAAY,GAAjE,UACGvV,EAAO9wB,aADV,QACmBlU,GAEnB,kBAACw6C,GAAA,EAAD,CACEl7C,MAAK,OAAE4nC,QAAF,IAAEA,IAAY,CAAClC,EAAOnuB,QAASmuB,EAAOpuB,SAC3C0uB,SAAWr1B,IACTq1B,EAASr1B,EAAEkP,OAAO7f,QAEpBm7C,kBAAkB,OAClBxG,kBAAoBjP,EAAO9wB,MAAT,qBAClB+C,IAAK+tB,EAAOnuB,QACZG,IAAKguB,EAAOpuB,YA2PP8jC,GAAqB,CAChC1V,OAAQ,CACN9wB,MAAO,gBACP1H,KAAM,SACN4I,SAAU,GACVulC,sBAAsB,EACtBtlC,WAAY,CACVulC,SAAU,CACR,KAAQ,SACR,MAAS,YACT,KAAQ,CACN,SACA,aACA,YACA,SAGJC,UAAW,CACT,KAAQ,SACR,MAAS,aACT,KAAQ,CACN,YACA,SACA,aACA,YACA,Y,wVCrRV,MACMC,GAA2C,CAC/CnhB,MAAO,GACPyE,aAHoB,GAMhB2c,GACE,OADFA,GAEE,OAFFA,GAGM,WAHNA,GAIM,WAkCCC,GAAiBprC,IAC5B,MAAM,QACJk3B,EAAU,UACRl3B,EACE6C,EAAM,CACVsX,QAAS,MAELkxB,EAAwBhyC,IAAQ6xC,IAEhCI,EAAU,CACdD,SACAz8B,IAAM3S,IACJ,MAAM,aAAEuyB,EAAF,MAAgBzE,GAAUshB,EAChCA,EAAOthB,MAAQ1wB,KACb,EACAm1B,EAFan1B,CAGb0wB,GACFshB,EAAOthB,MAAM3b,K,kWAAb,EACEzS,GAAItC,QACD4C,IAELovC,EAAO7c,aAAe6c,EAAOthB,MAAM/rB,QAErCqF,MAAO,KACL,MACE8W,QAASmxB,GACPzoC,EACJyoC,EAAQ/0B,IAAIld,IAAQ6xC,MAEtB30B,IAAMg1B,IACJp0C,OAAOC,KAAKm0C,GAAkBntC,QAASsD,IAErC2pC,EAAO3pC,GAAO6pC,EAAiB7pC,MAGnC8pC,KAAM,KAAO,IAAD,EACV,MAAMvvC,EAAI,OAAGovC,QAAH,IAAGA,GAAH,UAAGA,EAAQthB,aAAX,aAAG,EAAgBshB,EAAO7c,aAAe,GACnD,GAAIvyB,EAAM,CAAC,IAAD,GACI,UAAGi7B,EAAQ,CACrBj7B,OACAW,KAAMuuC,GACN7S,QAASr8B,EAAKuvC,cAHJ,YAMVH,EAAO7c,cAAgB,KAI7BkD,KAAM,KAAO,IAAD,EACV,MAAM,aAAElD,GAAiB6c,EACnBpvC,EAAI,OAAGovC,QAAH,IAAGA,GAAH,UAAGA,EAAQthB,aAAX,aAAG,EAAgByE,GAC7B,GAAIvyB,EAAM,CAAC,IAAD,GACI,UAAGi7B,EAAQ,CACrBj7B,OACAW,KAAMuuC,GACN7S,QAASr8B,EAAKwvC,YAHJ,YAMVJ,EAAO7c,aAAeA,EAAe,KAI3Ckd,QAAS,IAAMryC,KACbA,IAAU,CACRA,IACA,IAAMgyC,EAAOthB,MAAM/rB,OAASqtC,EAAO7c,eAErC,KACE,MAAM,MACJzE,GACEshB,EACEM,EAAetyC,KAAQ,EAAGgyC,EAAO7c,aAAe,EAAjCn1B,CAAoC0wB,GACnD6hB,EAAWvyC,KACfA,IACG4C,GAASA,EAAKuvC,KACfG,IAGEE,EAASxyC,KACbA,IACG4C,GAASA,EAAKwvC,GACfE,IAGJzU,EAAQ,CACNj7B,KAAM,CACJN,GAAItC,KACJoyC,GAAII,EACJL,KAAMI,GAERtT,QAASsT,EACT7hB,MAAO4hB,EACP/uC,KAAMuuC,KAERE,EAAO7c,aA1IO,GA0GHn1B,CAkCbgyC,GACFS,QAAS,IAAMzyC,KACbA,IAAU,CACRA,IACA,IAAMgyC,EAAOthB,MAAM/rB,OAASqtC,EAAO7c,eAErC,KACE,MAAM,MACJzE,GACEshB,EACEM,EAAetyC,KAAQ,EAAGgyC,EAAO7c,aAAe,EAAjCn1B,CAAoC0wB,GACnD6hB,EAAWvyC,KACfA,IACG4C,GAASA,EAAKuvC,KACfG,IAGEE,EAASxyC,KACbA,IACG4C,GAASA,EAAKwvC,GACfE,IAGJzU,EAAQ,CACNj7B,KAAM,CACJN,GAAItC,KACJoyC,GAAII,EACJL,KAAMI,GAERtT,QAASuT,EACT9hB,MAAO4hB,EACP/uC,KAAMuuC,KAERE,EAAO7c,aA7KO,GA6IHn1B,CAkCbgyC,GACFjT,OAASz5B,IACP0sC,EAAOthB,MAAQshB,EAAOthB,MAAM3Y,OAAO,CAACnV,EAAMH,KACxC,MAAMiwC,EAAUptC,EAAIC,SAAS3C,EAAKN,IAIlC,OAHIowC,GAAWjwC,EAAQuvC,EAAO7c,eAC5B6c,EAAO7c,cAAgB,IAEjBud,KAGZC,uBAAyBrtC,GACR0sC,EAAOthB,MAAM3Y,OAAQnV,IAClC,MAAMgwC,EAAUhwC,EAAKwvC,GAAGtzC,IAAK+zC,GAAWA,EAAOvwC,IAE/C,OADqBtC,IAAe4yC,EAASttC,GACzBX,OAAS,IAEjB7F,IAAK2H,GAAUA,EAAMnE,IAErCwwC,QAAS,CAACzG,EAAmBC,KAC3B0F,EAAOthB,MAAQ1wB,IAAUqsC,EAAWC,EAArBtsC,CAA8BgyC,EAAOthB,SAIxD,OADAlnB,EAAIsX,QAAUmxB,EACPA,G,25BC9KT,MAAMc,GAASC,IAAD,8BAAkCA,QAAlC,IAAkCA,OAAlC,EAAkCA,EAAa1wC,UAA/C,QAAqD0wC,GA8L7DvL,GAAgBj8B,IACpB,MAAM,QACJ87B,EADI,SAEJ7W,EAFI,aAGJwiB,GACEznC,EACJ,OACE,kBAAC,IAAD,KAEE,kBAACg7B,GAAA,EAAD,MACA,kBAAChC,GAAA,EAAD,KACE,kBAAC,IAAD,CAEEl9B,KAAMggC,EACNja,UAAW,CAAC4lB,EAAcxiB,GAC1BhB,SAAU,CAAC,YACXE,WAAankB,IACX,MAAM,SACJ9G,GACE8G,EACE5I,EAAO4I,EAAO5I,KACpB,OACE,kBAAC,GAAD,CACEA,KAAMA,EACN6tB,SAAUA,EACVhtB,KAAM+H,EAAO/H,KACbwvC,aAAcA,GAEbvuC,SAeX0jC,GAAezpC,IACnB,MAAM,SACJ+F,EACA9B,KAAMylC,EAFF,SAGJ5X,EAHI,KAIJhtB,EAJI,aAKJwvC,GACEt0C,GACGqM,EAAMs9B,GAAWh/B,IAAMC,UAAS,GACjC3G,EAAQ5C,IAAKuoC,OAALvoC,CAAaqoC,GAAY,CACrCpX,MAAOoX,EACP/lC,GAAI+lC,GACFA,EAKEG,IAAgB5lC,EAAK8B,SACrBlP,EAAWy9C,EAAaC,KAAK,IAAI3tC,SAAS9B,EAAKyvC,KAAK,KAC1D,OACE,oCACE,kBAACxO,GAAA,EAAD,CACE/C,QAAM,EACNj3B,QAVc,KAClB+lB,EAAShtB,GACT6kC,GAASt9B,IASLxV,SAAUA,GAEV,kBAACmvC,GAAA,EAAD,KACG/hC,EAAK5M,MAER,kBAAC4uC,GAAA,EAAD,CAAczxC,QAASyP,EAAKquB,QAC3BuX,EAAex9B,EAAO,kBAAC,KAAD,MAAiB,kBAAC,KAAD,MAAkB,MAE5D,kBAACy9B,GAAA,EAAD,CACEd,GAAI38B,EACJ09B,QAAQ,OACRC,eAAa,GAEb,kBAACnE,GAAA,EAAD,CACE6B,UAAU,MACVuC,gBAAc,EACdxK,GAAI,CAAEyK,GAAI,IAETnkC,MAOLyuC,GAAkB,CACtBC,QAAS,IAAM,wCACfC,cAAe,CACbtX,OAAQ,CACNx4B,KAAM,SACN6I,WAAY,CACVivB,KAAM,CACJpwB,MAAO,OACP1H,KAAM,UACNqK,QAAS,GACTD,QAAS,IAEXvC,SAAU,CACRH,MAAO,YACP1H,KAAM,UACNqK,QAAS,GACTD,QAAS,IAEX/D,gBAAiB,CACfrG,KAAM,SACN0H,MAAO,eACP9V,QAAS,WAEXm+C,UAAW,CACT/vC,KAAM,SACN0H,MAAO,eACP9V,QAAS,aAIfypC,SAAU,CACRvD,KAAM,CACJ,YAAa,SAEfjwB,SAAU,CACR,YAAa,SAEfxB,gBAAiB,CACf,YAAa,SAEf0pC,UAAW,CACT,YAAa,WAKnBnc,OAAQ,IAAM,uCACdoc,QAAS,IAAM,wCACfnb,SAAU,IAAM,0CAGZmP,GAAoB,CACxB,CACEvxC,KAAM,kBAACqkC,GAAD,CAAMtjC,KAAK,aACjBuL,GAAI,UACJoC,SAAU,CACR,mB,6rBC3UN,MAAM8uC,GAAgBlI,IACpBA,EAAM4D,UAAW1R,QAAS,EAC1B8N,EAAM2D,QAASzR,QAAS,EACxB8N,EAAM+D,YAAa7R,QAAS,GAGjBiW,GAAgB,CAC3BC,EACAC,KAGA,MAAMC,EAAsCtqC,IAAM+X,QAChD,IAAMrhB,IAAe,CACnB6zC,GACAH,IACuB,IAErBnG,EAAejkC,IAAM+X,QAAQ,IAAM0wB,GAAc,CACrDlU,QAAUp3B,IACR,MAAM,QACJw4B,GACEx4B,EACJw4B,EAAQngC,IAAI++B,MAEZ,IACEiW,EAAsBxqC,IAAMyY,OAAO,MACnC4O,EAAc,OAAGgjB,QAAH,IAAGA,IAAmBG,EACpCnrB,EAAerf,IAAMyY,OAAO,CAChCgyB,eAAgB,MAGX5jB,EAAOgb,GAAeC,YAASwI,GAIhCvsC,EAASiC,IAAMya,YAAYpgB,gBACzBwnC,EAAYxnC,gBAEVqwC,EAAQ1I,EAAO,CAAE3a,sBAExB,CAACwa,EAAaxa,IACXkN,EAAUv0B,IAAMya,YAAagsB,IACjC,MAAM,KACJxsC,EADI,QAEJw6B,EAAU,GAFN,MAGJt7B,EAAQ,EAHJ,SAIJwxC,EAAW,GAJP,MAKJxtC,EALI,UAMJomC,EANI,oBAOJW,EAPI,sBAQJlL,GACEyN,EACEhtC,EAAc4tB,EAAe7P,QAC7Bze,EAAUwqC,EACZ9pC,EAAYK,GAAGC,IAAK,GAAEwpC,GACtB,KAGJxlC,EAAO1D,UAAkB,IAAD,kBACtB,IAAK,IAAD,MACF,IAAK2+B,EAAuB,CAC1B,MAAM,WACJ4R,EACAzG,OAAQC,GlE8WS,EAACD,EAAqB5nC,KACjD,MAAM,gBACJ/C,EADI,YAEJC,GACE8C,EAEE6nC,EAA+B1tC,KACnCytC,EAAO3uC,IAAK2H,IAA6B,IAAD,YACtC,MAAM,KAEJlD,EAFI,QAGJw6B,GACEt3B,EACE0tC,EAAwBrxC,EAAgBG,oBACxC,gBACJE,EADI,aAEJG,GACET,GAAuBC,EAAiBC,GAC5C,OAAQQ,GACN,KAAKnG,EACH,MAAO,CACL,CACEmG,KAAMnG,GACN2gC,YAGN,KAAK3gC,EACH,MAAO,CACL,CACEmG,KAAMnG,GACN2gC,YAGN,KAAK3gC,EACH,MAAO,CACL,CACEmG,KAAMnG,GACN2gC,YAGN,KAAK3gC,EACH,MAAO,CACL,CACEmG,KAAMnG,EACN2gC,QAAS,CACP1nC,MAAK,UAAEyM,EAAgBosC,iBAAlB,iBAAE,EAA2BvP,eAA7B,aAAE,EAAoCtpC,SAInD,KAAK+G,EACH,MAAO,CACL,CACEmG,KAAMnG,EACN2gC,QAAQ,SACHA,GADE,IAEL1nC,OAAQ0nC,EAAQ1nC,UAIxB,KAAK+G,EACH,MAAO,CACL,CACEmG,KAAMnG,GACN2gC,QAAS,CACP1nC,MAAOyM,EAAgBmuB,MAAO/F,OAAQvxB,SAI9C,KAAKyD,EACH,MAAO,CACL,CACEmG,KAAMnG,GACN2gC,QAAS,CACP1nC,MAAOyM,EAAgBmuB,MAAOt3B,MAAM2J,EAAchB,OAI1D,KAAKlF,GACH,MAAO,CACL,CACEmG,KAAMnG,GACN2gC,QAAS,CACP/6B,QAAO,UAAE+6B,EAAQrN,aAAV,aAAE,EAAe5xB,IAAK8D,GAASA,EAAKN,OAInD,KAAKlF,EACH,MAAO,CACL,CACEmG,KAAMnG,GACN2gC,QAAS,CACP/6B,QAAO,UAAE+6B,EAAQrN,aAAV,aAAE,EAAe5xB,IAAK8D,GAASA,EAAKN,OAInD,KAAKlF,GAAsB,CAAC,IAAD,IACzB,MAAM,QACJ4F,EAAU,IACR+6B,EACErN,EAAK,UAAG5tB,EAAgBm+B,mBAAnB,iBAAG,EAA6B77B,gBAAhC,aAAG,EAAuC2S,OAClD1S,GAAYrC,EAAQuC,SAASF,EAAQ/C,KAExC,MAAO,CACL,CACEiB,KAAMnG,EACN2gC,QAAS,CACPrN,WAKR,KAAKtzB,GACH,MAAO,CACL,CACEmG,KAAMnG,EACN2gC,YAKN,KAAK3gC,GACH,MAAO,CACL,CACEmG,KAAMnG,EACN2gC,QAAS,CACPrN,MAAO5tB,EAAgB4I,MAAOqM,OAC3BnV,GAASm7B,EAAQ/6B,QAAQuC,SAAS3C,EAAKN,QAKlD,KAAKlF,GAAmB,CACtB,MAAM,QACJ4F,GACE+6B,EACEqW,EAAetxC,EAAgB4I,MAAMqM,OACxCs8B,GAAarxC,EAAQuC,SAAS8uC,EAAS5zC,SACrCuC,EAAQuC,SAAS8uC,EAASn+B,SAE/B,MAAO,CACL,CACE3S,KAAMnG,EACN2gC,QAAS,CACPrN,MAAO5tB,EAAgBnJ,MAAOoe,OAC3BnV,GAASI,EAAQuC,SAAS3C,EAAKN,KAChCxD,IAAK8D,IACL,MAAM9J,EAAWiK,EAAYK,GAAGC,IAAIT,EAAKN,IAAIxJ,WAC7C,OAAO,SACF8J,GADL,IAEE9J,eAGJw7C,UAAWF,KAInB,KAAKh3C,GACH,MAAO,CACL,CACEmG,KAAMnG,GACN2gC,QAAS,CACPrN,MAAO5tB,EAAgBgrC,UAAW/1B,OAC/Bi2B,GAAajQ,EAAQ/6B,QAAQuC,SAASyoC,EAAS1rC,QAK1D,KAAKlF,GAoBL,KAAKA,GACH,OAAQ+2C,GAAyBA,EAAsBxvC,OAAS,EAC5D,CAAC,SAEI8B,GAFL,IAGElD,KAAMnG,GACN2gC,QAAS,CACP/6B,QAASmxC,MAIb,CACA,CACE5wC,KAAMnG,GACN2gC,QAAS,CACPx5B,EAAGxB,EAAYyD,SAASqL,OAAOtN,EAC/BE,EAAG1B,EAAYyD,SAASqL,OAAOpN,KAIzC,KAAKrH,GACH,MAAO,CACL,CACEmG,KAAMnG,GACN2gC,QAAS,CACPwW,UAAS,UAAEzxC,EAAgBm+B,mBAAlB,aAAE,EAA6BhqB,OACxCu9B,UAAWzxC,EAAYK,GAAGzJ,QAAQmF,IAAKuD,IAAD,CACpCvJ,SAAU,CACRyL,EAAGlC,EAAQvJ,WAAWyL,EACtBE,EAAGpC,EAAQvJ,WAAW2L,GAExBooC,UAAWxqC,EAAQC,WAM7B,KAAKlF,GACH,MAAO,CACL,CACEmG,KAAMnG,GACN2gC,QAAS,CACP1nC,MAAOyM,EAAgB5P,QAK/B,KAAKkK,GAEH,OAAO+2C,EACH,CAAC,SAEI1tC,GAFL,IAGEs3B,QAAS,CACP/6B,QAASmxC,GAEX5wC,KAAMnG,GACNqJ,MAAO,CACLa,KAAM,CACJgc,cAAe,CACbmxB,SAAS,QAMjB,GACN,KAAKr3C,GACH,MAAO,CACL,CACEmG,KAAMnG,GACN2gC,QAAS,CACP1nC,MAAOyM,EAAgBmuB,MAAO/F,OAAQvxB,SAI9C,KAAKyD,GACH,MAAO,CACL,CACEmG,KAAMnG,GACN2gC,QAAS,CACP1nC,MAAOyM,EAAgBmuB,MAAOt3B,MAAM2J,EAAchB,OAI1D,KAAKlF,GACH,MAAO,CACL,CACEmG,KAAMnG,GACN2gC,QAAS,CACP1nC,MAAOiN,EAAcgE,QAI7B,KAAKlK,GACH,MAAO,CACL,CACEmG,KAAMnG,GACN2gC,QAAS,CACPwW,UAAS,UAAEzxC,EAAgBm+B,mBAAlB,aAAE,EAA6BhqB,OACxCu9B,UAAWzW,EAAQyW,UAAU11C,IAAI,EAAG+tC,gBAClC,MAAMxqC,EAAUU,EAAYK,GAAGC,IAAK,GAAEwpC,GACtC,MAAO,CACL/zC,SAAU,CACRyL,EAAGlC,EAAQvJ,WAAWyL,EACtBE,EAAGpC,EAAQvJ,WAAW2L,GAExBooC,kBAUd,MAAO,MAGX,MAAO,CACLqH,YAAal0C,IAAU0tC,GACvBD,OAAQC,IkEjqBEgH,CACF,CAAC3E,GAAY,CAAEhtC,cAAaD,gBAAiBqtB,IAE3C+jB,GACF3G,EAAah4B,IAAI,CACf68B,GAAI,CAAC,SAEErC,GAFH,IAGAtpC,QACA+mC,qBAAqB,EACrBlL,uBAAuB,KAG3B6P,KAAMzE,EAAW5uC,IAAKkI,GAAD,GAAC,MACjBA,GADgB,IAEnBwmC,qBAAqB,EACrBlL,uBAAuB,OAM7B,UAAAgJ,EAAM4D,iBAAN,SAAiBrO,gBACdt9B,IAASnG,KACRowC,GAEJ7kB,EAAa7H,QAAQizB,eAAeh/B,KAApC,SACKg7B,GADL,IAEEtpC,WAUJ,IAA2B,UAPA,UAAMmtC,EAAiB/V,eAAvB,aAAM,OAAA+V,EAAgB,SAC5C7D,GAD4C,IAE/ChtC,cAEAsE,SACA8oB,UACCmb,IAED,OAEF,MACE1oC,KAAM+xC,IADF,UAEDtyC,GAAWD,GAAyBC,EAASipC,UAF5C,QAEuD,GACvDsJ,GAAc,OAAGD,SAAH,IAAGA,QAAH,EAAGA,GAAkBrtC,KACzC,OAAQ/D,GACN,KAAKnG,GACHmwC,EAAalV,OACb,MACF,KAAKj7B,GACHmwC,EAAa4E,OACb,MACF,KAAK/0C,GAAmB,CACtB,MAAM,aACJkG,GACET,GAAuByoC,EAAOvoC,GAClCO,EAAcgE,KAAOy2B,EAAQ1nC,MAC7B,MAEF,KAAK+G,EACHw3C,GAAe7/B,KAAf,SACKgpB,GADL,IAEE1nC,MAAO,CAAC0nC,EAAQ1nC,UAElB,MACF,KAAK+G,EAAgB,CACnB,MAAM,MACJszB,EADI,UAEJ4jB,GACEvW,EACJuN,EAAM3xC,MAAQ2xC,EAAM3xC,MAAMk7C,OAAOnkB,GACjC4a,EAAM5/B,MAAQ4/B,EAAM5/B,MAAMmpC,OAAZ,OAAmBP,QAAnB,IAAmBA,IAAa,IAO1ChJ,EAAMp4C,OAASoK,GAAYC,MAC7B+tC,EAAMp4C,KAAOoK,GAAYK,SAE3B,MAEF,KAAKP,GAAmB,CACtB,MAAM,QACJ4F,EAAU,IACR+6B,EAMJuN,EAAM3xC,MAAQ2xC,EAAM3xC,MAAMoe,OAAQ+8B,IAAc9xC,EAAQuC,SAASuvC,EAASxyC,KAC1EgpC,EAAM5/B,MAAQ4/B,EAAM5/B,MAAMqM,OACvBs8B,IAAcrxC,EAAQuC,SAAS8uC,EAAS5zC,UACrCuC,EAAQuC,SAAS8uC,EAASn+B,SAE5Bo1B,EAAMp4C,OAASoK,GAAYE,SAC7B8tC,EAAMp4C,KAAOoK,GAAYK,SAE3B,MAEF,KAAKP,EACHkuC,EAAM5/B,MAAQ4/B,EAAM5/B,MAAMmpC,OAAO9W,EAAQrN,OAYrC4a,EAAMp4C,OAASoK,GAAYC,MAC7B+tC,EAAMp4C,KAAOoK,GAAYK,SAE3B,MAEF,KAAKP,GAAmB,CACtB,MAAM,QACJ4F,EAAU,IACR+6B,EAIJuN,EAAM5/B,MAAQ4/B,EAAM5/B,MAAMqM,OAAQs8B,IAAcrxC,EAAQuC,SAAS8uC,EAAS/xC,KACtEgpC,EAAMp4C,OAASoK,GAAYE,SAC7B8tC,EAAMp4C,KAAOoK,GAAYK,SAE3B,MAEF,KAAKP,GACHkuC,EAAMroC,mBAAqB,GAC3B,MAEF,KAAK7F,GAAkC,CACrC,MAAM,QACJ4F,GACE+6B,EACJuN,EAAMroC,mBAAqBD,EAC3B,MAAM,gBACJG,GACEN,GAAuB,SACtBstB,GADqB,IAExBltB,mBAAoBD,IACnBD,GACH,GAAII,EAAiB,CACnB,MAAM,SACJqD,GACEzD,EACEgyC,EAAc,IAepB,IAAIj8C,EAEFA,EADEqK,EAAgBX,SACPW,EAAgBrK,WAEhBwV,KACTnL,EAAgB1C,SAAS3H,WADhBwV,CAETnL,EAAgB+S,SAASpd,YAE7B,MAAM+Y,EAAS,CACbtN,EAAGzL,EAASyL,EAAIwwC,EAAc,EAC9BtwC,EAAG3L,EAAS2L,GAERuwC,EAAc,IAAInzC,IAAWgQ,EAAOtN,EAAGsN,EAAOpN,GACpD+B,EAASqL,OAASmjC,EAYpB,MAEF,KAAK53C,GAAwB,CAC3B,MAAM,QACJ4F,GACE+6B,EACJuN,EAAMroC,mBAAqBD,EAC3B,MAAM,gBACJG,GACEN,GAAuB,SACtBstB,GADqB,IAExBltB,mBAAoBD,IACnBD,GACH,GAAI0D,GAASA,EAAMa,KAAMgc,cAAcmxB,SAAnC,OAA8CtxC,QAA9C,IAA8CA,KAAiBX,SAAU,CAC3E8oC,EAAM2D,QAASzR,QAAS,EACxB,MAAM,SACJh3B,GACEzD,EACEgyC,EAAc,IAEdj8C,EAAWqK,EAAgBrK,WAC3B+Y,EAAS,CACbtN,EAAGzL,EAASyL,EAAIwwC,EAAc,EAC9BtwC,EAAG3L,EAAS2L,GAEdtB,EAAgB8xC,eAAeh+B,OAA/B,SACKiW,GAAMlvB,QAAQ1F,QADnB,IAEE2pB,YAAa,CACXsM,GAAI1c,EAAOtN,EAAIwwC,EAAc,EAC7BvmB,GAAI3c,EAAOpN,EAAIswC,EAAc,EAC7B72B,EAAG62B,EAAc,EACjB12B,EAAG02B,EAAc,MAElBlmC,QACHrI,EAAS0uC,SAAS,CAChBrjC,OAAQ,IAAIhQ,IAAWgQ,EAAOtN,EAAGsN,EAAOpN,GACxCjL,MAAOu7C,EACPI,YAAY,EACZrgC,KAAMoY,GAAMlvB,QAAQzF,KAAK5B,kBAAoB,IAC7Cy+C,kBAAkB,EAClBC,mBAAmB,IAIvB,MAEF,KAAKj4C,GACHkuC,EAAMp4C,KAAO6qC,EAAQ1nC,MAErB,MAEF,KAAK+G,EACHw3C,GAAenyC,GAAO1L,KAAOgnC,EAAQ1nC,MACrC,MACF,KAAK+G,EACHw3C,GAAenyC,GAAOpM,MAAM0nC,EAAQuX,YAAcC,GAChDtB,EAAS1wC,KACTw6B,EAAQ1nC,OAEV,MACF,KAAK+G,EACHw3C,GAAenyC,GAAOpM,MAAM0e,KAAKgpB,EAAQ1nC,OACzC,MACF,KAAK+G,GACHw3C,GAAenyC,GAAOpM,MAAMmf,OAAOuoB,EAAQuX,WAAY,GACvD,MACF,KAAKl4C,GAAqB,CACxB,MAAM,MAAE/G,GAAUu+C,GAAenyC,IAC3B,OAAEkC,GAAWtO,EACbm/C,EAAYn/C,EAAM0nC,EAAQuX,YAC1BG,GAAsC,IAAvB1X,EAAQuX,WACxB3wC,EAAS,EACTo5B,EAAQuX,WAAa,GAAM3wC,EAChCtO,EAAM0nC,EAAQuX,YAAcj/C,EAAMo/C,GAClCp/C,EAAMo/C,GAAeD,EACrB,MAEF,KAAKp4C,GAAuB,CAC1B,MAAM,MAAE/G,GAAUu+C,GAAenyC,IAC3B,OAAEkC,GAAWtO,EACbm/C,EAAYn/C,EAAM0nC,EAAQuX,YAC1BG,GAAe1X,EAAQuX,WAAa,GAAK3wC,EAC/CtO,EAAM0nC,EAAQuX,YAAcj/C,EAAMo/C,GAClCp/C,EAAMo/C,GAAeD,EACrB,MAEF,KAAKp4C,GACHw3C,GAAep/B,OAAO/S,EAAO,GAC7B,MAEF,KAAKrF,EACoBw3C,GAAenyC,GAAQizC,WAAY3X,EAAQt7B,OACnD1L,KAAOgnC,EAAQ1nC,MAC9B,MAEF,KAAK+G,EAAoC,CACvC,MAAMu4C,EAAiBf,GAAenyC,GAAQizC,WAAY3X,EAAQt7B,OAClEmyC,GAAenyC,GAAQizC,WACrB3X,EAAQt7B,OACRpM,MAAM0nC,EAAQuX,YAAcC,GAC5BI,EAAepyC,KAAMw6B,EAAQ1nC,OAE/B,MAEF,KAAK+G,EACHw3C,GAAenyC,GAAQizC,WAAY3gC,KAAKgpB,GACxC,MACF,KAAK3gC,EACHw3C,GAAenyC,GAAQizC,WAAY3X,EAAQt7B,OAAOpM,MAAM0e,KAAKgpB,EAAQ1nC,OACrE,MAEF,KAAK+G,GACHw3C,GAAenyC,GAAQizC,WAAY3X,EAAQt7B,OAAOpM,MAAMmf,OAAOuoB,EAAQuX,WAAY,GACnF,MACF,KAAKl4C,GACHw3C,GAAenyC,GAAQizC,WAAYlgC,OAAOuoB,EAAQt7B,MAAO,GACzD,MACF,KAAKrF,GACHkuC,EAAM+D,YAAa7R,SAAS,UAAC8N,EAAM+D,mBAAP,OAAC,EAAmB7R,QAChD,MACF,KAAKpgC,GACHkuC,EAAM2D,QAASzR,SAAS,UAAC8N,EAAM2D,eAAP,OAAC,EAAezR,QACxC,MACF,KAAKpgC,GACHkuC,EAAM4D,UAAW1R,SAAS,UAAC8N,EAAM4D,iBAAP,OAAC,EAAiB1R,QAC5C,MACF,KAAKpgC,GAEH4C,IAAgB,CAAC3J,EAAOgS,KAEtBijC,EAAMjjC,GAAOhS,GAFf2J,CAGG+9B,EAAQ1nC,OACX,MACEk3C,aAAcqI,GADV,UAEF7X,EAAQ1nC,aAFN,QAEe,GACrBk3C,EAAarwB,IAAI,CACfiY,aAAcygB,EAAiBnI,OAAO9oC,OACtC+rB,MAAOklB,EAAiBnI,OAAO3uC,IAAI,CAAC2H,EAAO7J,KAAR,CACjC0F,GAAItC,OACJoyC,GAAI,CAAC3rC,GACL0rC,KAAM,CAACyD,EAAiBlI,WAAW9wC,SAGvC,MACF,KAAKQ,GACHo2C,GAAalI,GACbA,EAAMmC,OAAS,IAAC,UAAI1P,EAAQ1nC,aAAZ,QAAqB,IACrC,MACF,KAAK+G,GACHo2C,GAAalI,GACbA,EAAMmC,OAAS,IAAC,UAAI1P,EAAQ0P,cAAZ,QAAsB,IACtC,MACF,KAAKrwC,EACH2gC,EAAQ0P,OAAO3uC,IAAK2H,GAAqBo3B,EAAQp3B,IACjD,MACF,KAAKrJ,GACHy4C,aAAS9X,EAAQ1nC,MAAO,sBACxB,MACF,KAAK+G,GACHkuC,EAAM4D,UAAWtO,YAAY,UAAC0K,EAAM4D,iBAAP,OAAC,EAAiBtO,WAC/C,MACF,KAAKxjC,GACH,UAAIkuC,EAAM4D,iBAAV,OAAI,EAAiBrO,iBACnBgV,aAAS5V,KAAK8O,UAAUpmB,EAAa7H,QAAQizB,gBAAiB,wBAC9DprB,EAAa7H,QAAQizB,eAAiB,IAExCzI,EAAM4D,UAAWrO,iBAAiB,UAACyK,EAAM4D,iBAAP,OAAC,EAAiBrO,gBACpD,MACF,KAAKzjC,GACHy4C,aAAS9F,EAAUhS,QAAQ1nC,MAAO,qBAClC,MACF,KAAK+G,GAAsB,CACzB,IAAI6Z,EACA8mB,EAAQ1nC,MAAMU,OAChBkgB,EAASjX,IAAU6W,GAAQ7W,IAAW6W,GAA7B7W,CAAA,SAEJ81C,EAAa/X,EAAQ1nC,MAAMU,OAC3BgnC,EAAQ1nC,SAGfi1C,EAAMrK,YAAahqB,OAASA,EAC5B,MAEF,KAAK7Z,GAAkC,CACrC,MAAM,UACJo3C,EADI,UAEJD,GACExW,EAKJyW,EAAUzvC,QAASgxC,IACN,OAAXhzC,QAAW,IAAXA,KAAaK,GAAGC,IAAI0yC,EAAalJ,WAAW/zC,SAASi9C,EAAaj9C,YAEpEwyC,EAAMrK,YAAahqB,OAASs9B,EAC5B,MAGF,KAAKn3C,GAA4B,CAC/B,MAAM,MACJ/G,GACE0nC,EACJuN,EAAMra,MAAOt3B,MAAMg7C,GAAkBryC,IAAMjM,EAC3C,MAEF,KAAK+G,SACIkuC,EAAMra,MAAOt3B,MAAMg7C,GAAkBryC,IAC5C,MAEF,KAAKlF,GAAuC,IAAD,EACzCkuC,EAAMra,MAAOuU,cAAe7rC,QAAQ,UAAC2xC,EAAMra,aAAP,OAAC,EAAauU,cAAe7rC,OACjE,MAEF,KAAKyD,GAA6B,CAChC,MAAM,MACJ/G,GACE0nC,EACJuN,EAAMra,MAAO/F,OAAOvxB,MAAQtD,EAC5B,MAEF,KAAK+G,EACHkuC,EAAMra,MAAO/F,OAAQvxB,MAAS,GAC9B,MAEF,KAAKyD,GAAsB,CAAC,IAAD,IACzB,MAAM,QACJ4F,EAAU,IACR+6B,EACEiY,EAAgB,UAAG1K,EAAMrK,mBAAT,iBAAG,EAAmB77B,gBAAtB,aAAG,EAA6B2S,OACnD1S,GAAYrC,EAAQuC,SAASF,EAAQ/C,KAExCgpC,EAAMroC,mBAAqBjD,IACzBg2C,EAAkBl3C,IAAKuG,GAAYA,EAAQC,MAE7C,MAEF,KAAKlI,GAAsB,CAAC,IAAD,KACzB,MAAM,QACJ4F,EAAU,IACR+6B,EACJuN,EAAMrK,YAAa77B,SAAnB,UAA8BkmC,EAAMrK,mBAApC,kBAA8B,EAAmB77B,gBAAjD,cAA8B,GAA6B2S,OACxD1S,IAAarC,EAAQuC,SAASF,EAAQ/C,KAEzC,MAEF,KAAKlF,GAA8B,CAAC,IAAD,MACjC,MAAM,UACJ+wB,EADI,QAEJnrB,EAAU,IACR+6B,EACEkY,EAAe,WAAG3K,EAAMrK,mBAAT,mBAAG,GAAmB77B,gBAAtB,cAAG,GAA6BuG,KAClDtG,GAAYA,EAAQ/C,KAAO6rB,GAE9B8nB,EAAiB3wC,IAAM2wC,EAAiB3wC,IAAIyS,OACzCzV,IAAQU,EAAQuC,SAASjD,IAE5B,MAEF,KAAKlF,EAAsB,CAAC,IAAD,MACzB,MAAM,MACJszB,EAAQ,IACNqN,EACJuN,EAAMrK,YAAa77B,SAAnB,WAA8BkmC,EAAMrK,mBAApC,mBAA8B,GAAmB77B,gBAAjD,cAA8B,GAA6ByvC,OAAOnkB,GAClE,MAEF,KAAKtzB,GACH,GAAIkuC,EAAMp4C,OAASoK,GAAYM,oBAE7B,YADA0tC,EAAMp4C,KAAOoK,GAAYK,SAG3B2tC,EAAMp4C,KAAOoK,GAAYM,oBACzB,MAEF,KAAKR,EAA2B,CAAC,IAAD,SAC9B,MAAM,UACJ+wB,EADI,QAEJnrB,GACE+6B,EACEkY,EAAe,WAAG3K,EAAMrK,mBAAT,mBAAG,GAAmB77B,gBAAtB,cAAG,GAA6BuG,KAClDtG,GAAYA,EAAQ/C,KAAO6rB,GAE9B8nB,EAAiB3wC,IAAMtF,KAAA,kBAASi2C,QAAT,IAASA,OAAT,EAASA,EAAiB3wC,WAA1B,UAAiC,GAAKtC,GAC7D,MAEF,KAAK5F,EAAiC,CAAC,IAAD,MACpC,MAAM,UACJ+wB,EADI,MAEJ93B,GACE0nC,GACiB,WAAGuN,EAAMrK,mBAAT,mBAAG,GAAmB77B,gBAAtB,cAAG,GAA6BuG,KAClDtG,GAAYA,EAAQ/C,KAAO6rB,IAEb/tB,QAAU/J,EAC3B,MAEF,KAAK+G,GAA2B,CAC9B,MAAM,QACJ4F,EAAU,IACR+6B,EACJwP,EAAaxO,OAAOwO,EAAaoF,uBAAuB3vC,IACxD,MAEF,KAAK5F,GAA4B,CAC/B,MAAM,UACJivC,EADI,QAEJC,GACEvO,EACJwP,EAAauF,QACXzG,EACAC,GAEF,MAgBF,KAAKlvC,GAAuB,CAC1B,MAAM,UACJivC,EADI,QAEJC,GACEvO,EACJuN,EAAMrK,YAAa77B,SAAWpF,IAC5BqsC,EACAC,EACAhB,EAAMrK,YAAa77B,UAErB,MAEF,KAAKhI,GAAuB,CAC1B,MAAM,MACJszB,EAAQ,IACNqN,EACJuN,EAAMwC,UAAYxC,EAAMwC,UAAW+G,OAAOnkB,GAC1C,MAEF,KAAKtzB,GAAwB,CAC3B,MAAM,UACJivC,EADI,QAEJC,GACEvO,EACJuN,EAAMwC,UAAY9tC,IAChBqsC,EACAC,EACAhB,EAAMwC,WAER,MAEF,KAAK1wC,GAAuB,CAC1B,MAAM,QACJ4F,EAAU,IACR+6B,EACJuN,EAAMwC,UAAYxC,EAAMwC,UAAW/1B,OAAQi2B,IAAchrC,EAAQuC,SAASyoC,EAAS1rC,KACnF,MAEF,KAAKlF,GAAyB,IAAD,GAC3B,WAAIkuC,EAAMkE,cAAV,QAAI,GAAc0G,kBAChB5K,EAAMkE,OAAO0G,gBAAgB1Y,QAAS,GAExC,MAEF,KAAKpgC,GAAoC,CACvC,MAAM,KACJrG,EADI,MAEJV,GACE0nC,EACJnhB,QAAQC,IAAI,IAAK9lB,EAAMV,GAUvB,MAEF,KAAK+G,EAAmB,CACtB,MAAM,KACJrG,GACEgnC,EACJuN,EAAMkE,OAAOz4C,GAAMymC,QAAS,EAC5B,QAKJ,MAAO/pC,IACPmpB,QAAQC,IAAI,QAASppB,QAGxB,CAAC08B,IACJ,MAAO,aAGAA,GAEAwjB,EAEG,GADA,CAAEnqC,IAAKsqC,IANV,IASHvG,aAAc,CACZpY,aAAcoY,EAAayE,OAAO7c,aAAe,EACjDsY,OAAQztC,KACNA,IAAO4C,GAASA,EAAKwvC,GAAI7E,EAAayE,OAAOthB,QAE/Cgd,WAAY1tC,KACVA,IAAO4C,GAASA,EAAKuvC,KAAM5E,EAAayE,OAAOthB,SAGnDmN,YAEF,CACEx2B,SACAw2B,aAKA0X,GAAiB,CAAChyC,EAAelN,IAAkBA,EAEnDw9C,GAA+C,CACnDl6C,MAAO,GACP+R,MAAO,GACP6jC,WAAW,EACXte,MAAO,CACL/F,OAAQ,CAAEvxB,MAAO,CAAC,MAAO+R,MAAO,CAAC,OACjC/R,MAAO,GACP+R,MAAO,GACP85B,cAAe,CACb95B,OAAO,EACP/R,OAAO,IAGXu1C,UAAW,CACT1R,QAAQ,GAEVyR,QAAS,CACPzR,QAAQ,GAEV6R,YAAa,CACX7R,QAAQ,GAEVtqC,KAAMoK,GAAYK,QAClBsF,mBAAoB,GACpBg+B,YAAa,CACX77B,SAAU,IAEZ0oC,UAAW,GAYX0B,OAAQ,CACN0G,gBAAiB,CACf1Y,QAAQ,EACRzc,ODjuB+BpiB,IAAkC,IAAD,IACpE,MACE2oC,QAAS6O,EAAW5O,GADhB,WAEJC,EAAa2L,IACXx0C,IAGF,QACEk/B,EADF,wBAEE8N,IAEAhpB,GACDue,IAAD,CACErD,QAASqD,EAAOrD,QAChB8N,wBAAyBzK,EAAOvY,gBAG9B2e,EAAUh+B,IAAM+X,QAAQ,KAAO,IAAD,EAClC,MAAM+0B,EAAa9O,IAA8B,IAAD,IAC9C,MAAuB,kBAAZA,EACF,CACLhlC,GAAIglC,EACJrW,MAAOqW,GAGJ,OACLrW,MAAOqW,EAAQhlC,IACZglC,GAFL,IAGE5iC,SAAQ,oBAAE4iC,EAAQ5iC,gBAAV,aAAE,EAAkB5F,IAAK8D,GAASwzC,EAAUxzC,WAA5C,QAAsD,MAGlE,wBAAOuzC,QAAP,IAAOA,OAAP,EAAOA,EAAUr3C,IAAK8D,GAASwzC,EAAUxzC,WAAzC,QAAmD,IAClD,CAACuzC,KACGhmB,EAAO9oB,GAAU+jC,YAAS,CAC/BiL,YAAatD,GAAMzL,EAAQ,IAC3B2L,aAAc,CAACF,GAAMzL,EAAQ,OAGzB7W,EAAWnnB,IAAMya,YAAatgB,IAClC,MAAMb,EAAO0zC,YAAe,CAAC,YAAa7yC,EAAM6jC,GAChDjgC,EAAQikC,IACNA,EAAM2H,aAAexvC,EACrB6nC,EAAM+K,YAActD,GAAMnwC,MAE3B,IAGG+7B,EAASr1B,IAAM+X,QAAQ,IAAMomB,GAAa,CAC9CH,UACA7W,WACAwiB,aAAc9iB,EAAM8iB,eAClB,CAAC3L,EAASE,EAAYrX,EAAM8iB,eAC1BsD,EAAS,UAAG/O,EAAWrX,EAAMkmB,oBAApB,QAAoC/sC,IAAM6kC,SACnDnQ,EAAOwJ,EAAWrX,EAAMkmB,aAC9B,OACE,kBAACvQ,GAAA,EAAD,CACEpmC,MAAO,CACL0d,QAAS,OACTtd,cAAe,SACftG,MAAO,OACPD,OAAQ,SAGV,kBAAC,IAAD,KACE,kBAACkkC,GAAA,EAAD,CAAYoE,QAAQ,MAApB,gBAEF,kBAAC,IAAD,CACEniC,MAAO,CACLI,cAAe,QAGjB,kBAAC,IAAD,CACEJ,MAAO,CAEL6iC,YAAa,EACbziC,cAAe,QAGjB,kBAAC4nC,EAAA,EAAD,CACEC,IAAE,GAEDhJ,GAEH,kBAAC6H,GAAA,EAAD,CACEoB,YAAY,WACZC,UAAQ,KAGZ,kBAAC,IAAD,KAeD2O,IAAQC,WAAWF,GA2ChB,kBAACA,EAAD,MAzCA,kBAACzQ,GAAA,EAAD,CACEpmC,MAAO,CACLsnC,SAAU,MACVC,UAAW,MACXC,SAAU,SACV9vC,QAAS,IAGX,kBAAC,KAAD,MACM4mC,EADN,CAEEt+B,MAAO,CACLlG,MAAO,OACPD,OAAQ,QAEVwiC,OAAQ/7B,IAAO,CAAC,SAARA,CAAkBg+B,EAAKjC,QAC/B8C,SAAU,EAAGZ,eACXJ,EAAQ,CACNt6B,KAAMnG,GACN2gC,QAAS,CACPhnC,KAAMo5B,EAAMkmB,YACZhgD,MAAO4nC,EACPj7B,QAAS2oC,EAAwB7qB,QAAQ8uB,YAAY5sC,WAGzD2oC,EAAwB7qB,QAAQ8uB,YAAY5sC,QAAU,MAhB1D,UAoBEg7B,EAAKt5B,gBApBP,QAqBE,kBAACy5B,EAAA,EAAD,CACE56B,KAAK,SACL88B,WAAS,EACTwB,QAAQ,aAHV,iB,stBE5KP,MCMM6U,GAAc/3C,IACzB,MAAM,KACJiE,EADI,QACEP,EADF,GACWe,EADX,MACesF,EADf,cAEJiuC,EAFI,UAGJC,EAHI,UAIJ1F,EAJI,MAKJjgB,EALI,SAMLxN,GACE9kB,EACG7J,EAAOkL,KAAW,EAAI,GAAEixB,GACxBoK,EAAOwb,GAAkBj0C,EAAK0E,KAAMqvC,EAAchF,UAClDlpC,EAAQkuC,EAAc/E,UAAYkF,GACtCl0C,EAAK0E,KACLqvC,EAAc/E,WACZlpC,EAAM5V,QAAQmC,WAAWC,MACvBwxB,EAAkBrkB,EAAQ2e,eAAe,aAAarc,OAAS,EAC/DoyC,EAAUztC,IAAMyY,OAAO,MACvB4G,EAAerf,IAAMyY,OAAO,CAChCvd,MAAO,CACLD,EAAG,EACHE,EAAG,GAEL3P,KAAM,CACJiS,KAAK,GACLD,MAAK,MA6BT,OA1BAwC,IAAMuX,UAAU,KACd,MAAMm2B,EAAS,KACX,MAAMC,EAAS,EAAExzB,EAAS3C,QAAQta,SAAShC,MAAMD,EAC3C2yC,EAAS,EAAEzzB,EAAS3C,QAAQta,SAAShC,MAAMC,EAGjD,GAFAkkB,EAAa7H,QAAQtc,MAAMD,EAAI0yC,EAC/BtuB,EAAa7H,QAAQtc,MAAMC,EAAIyyC,EAC3BD,GAAU,GAAKA,GAAU,EAAG,CAC9BF,EAAQj2B,QAAQtc,MAAMD,EAAI0yC,EAC1BF,EAAQj2B,QAAQtc,MAAMC,EAAIyyC,EAC1B,MAAMnwC,GAtCU,GAsCmBmwC,EAC7BpwC,GAAS,GAA2BmwC,EAG1C,OAFAF,EAAQj2B,QAAQvc,EAAIuC,OACpBiwC,EAAQj2B,QAAQrc,EAAIsC,KAQ1B,OAJI0c,EAAS3C,QAAQta,WACnBwwC,IACAvzB,EAAS3C,QAAQta,SAAS4P,GAAG,SAAS4gC,IAEjC,KACDvzB,EAAS3C,QAAQta,UACnBid,EAAS3C,QAAQta,SAASya,IAAI,SAAS+1B,KAG1C,CAACvzB,EAAS3C,QAAQta,WAEnB,kBAAC,GAAM8D,KAAP,CACE5K,MAAO,CACLlG,MAAO6hC,EACP9hC,OAAQ8hC,EACR1U,eAAgB,SAChBC,WAAY,SACZxJ,QAAS,OACTxT,gBAAiB8c,EACfhe,EAAM5V,QAAQU,UAAUH,KAExBgP,EAAQ7M,WACNkT,EAAM5V,QAAQK,QAAQE,KAEtBgP,EAAQif,UACN5Y,EAAM5V,QAAQU,UAAUH,KACxBoV,EAGNoB,aAAcwxB,GAEhBtwB,WAAa/D,IACX5D,EAAG+zC,EAAE,aAAa7wC,WAClBjE,EAAQwkB,WAGV,kBAAC,GAAM3d,KAAP,CACEM,IAAKutC,EACLr3C,MAAO,CACL5G,SAAU,WACVgO,KAAM6hB,EAAa7H,QAAQhsB,KAAKgS,KAChCC,IAAK4hB,EAAa7H,QAAQhsB,KAAKiS,IAAOs0B,EAAK,EAC3CjwB,SAvFgB,IAyFlB5C,UAAQ,GAEP1T,KAWHsiD,GAAsB,CAC1B/b,KAAM,CAAC,GAAI,KACXgc,UAAW,CAAC,EAAG,IACfC,UAAW,CAAC,EAAG,IACfC,WAAY,CAAC,EAAG,IAChB99C,OAAQ,CAAC,EAAG,IACZ+9C,KAAM,CACJ,KACA,OAGEX,GAAoB,CAACvvC,EAAcmwC,KAAkD,IAAD,EACxF,IAAKA,EACH,OAAOL,GAAoB/b,KAAK,GAElC,MAAMqc,EAAaN,GAAoBK,GACjCE,EAAeP,GAAoB/b,KAAK,GAAK+b,GAAoB/b,KAAK,GACtEuc,EAAgBF,EAAW,GAAKA,EAAW,GAEjD,QADwB,UAACpwC,EAAKmwC,UAAN,QAAoBC,EAAW,IAAMA,EAAW,IAC5CE,EAAiBD,EAAgBP,GAAoB/b,KAAK,IAElFyb,GAAiB,CAACxvC,EAAcmwC,KAAkD,IAAD,EACrF,IAAKA,EACH,OAAOI,GAAW,GAEpB,MAAMH,EAAaN,GAAoBK,GAEjCG,GADeR,GAAoB/b,KAAK,GAAK+b,GAAoB/b,KAAK,GACtDqc,EAAW,GAAKA,EAAW,IAC3CI,GAAkB,UAACxwC,EAAKmwC,UAAN,QAAoBC,EAAW,IAAMA,EAAW,GACxE,OAAQG,GAAYC,EAAkBF,EAAiB,MAEnDC,GAAa,CACjBE,EACA/pC,EAAM,GACND,EAAM,MAEN,IAMIiqC,EAAGC,EANHC,EAAQnqC,EAAMC,EAgBlB,OAdkB+pC,EAAL,IAATG,EAAqB,KAEbH,EAAO/pC,GAAOkqC,EAAO,KAGtB,IACPF,EAAI,IACJC,EAAIh/C,KAAK0f,MAAM,IAAMo/B,KAGrBE,EAAI,IACJD,EAAI/+C,KAAK0f,MAAM,IAAM,IAAOo/B,IAGzB,KAAO,UADF,MAAJC,EAAkB,IAAJC,EAAYE,GACP37B,SAAS,KAAKgD,OAAO,ICxJrC44B,GAAa,EACvBx1C,OAAMP,UAASe,KAAIsF,QACnBiuC,gBACAC,YACDnzB,eAEA,MAAM3uB,EAAOkL,KAAW,EAAG4C,EAAKN,IAC1By0C,EAAUztC,IAAMyY,OAAO,MACXzY,IAAMyY,OAAO,CAC7B3W,SAXsB,KAkCxB,OArBA9B,IAAMuX,UAAU,KACd,MAAMm2B,EAAS,KACb,MAAMC,EAAS,EAAExzB,EAAS3C,QAAQta,SAAShC,MAAMD,EACzC2yC,EAAS,EAAEzzB,EAAS3C,QAAQta,SAAShC,MAAMC,EAC7CwyC,GAAU,GAAKA,GAAU,IAC3BF,EAAQj2B,QAAQtc,MAAMD,EAAI0yC,EAC1BF,EAAQj2B,QAAQtc,MAAMC,EAAIyyC,IAOhC,OAJIzzB,EAAS3C,QAAQta,WACnBwwC,IACAvzB,EAAS3C,QAAQta,SAAS4P,GAAG,SAAU4gC,IAElC,KACDvzB,EAAS3C,QAAQta,UACnBid,EAAS3C,QAAQta,SAASya,IAAI,SAAU+1B,KAI3C,CAACvzB,EAAS3C,QAAQta,WAGnB,kBAAC,GAAM8D,KAAP,CACUO,aAAW,EACXnL,MAAO,CACL5G,SAAU,WACV6tB,eAAgB,SAChBC,WAAY,SACZxJ,QAAS,QAEXrS,WAAY,KACV3H,EAAG+zC,EAAE,aAAa7wC,WAClBjE,EAAQwkB,WAGV,kBAAC,GAAM3d,KAAP,CACEM,IAAKutC,EACLr3C,MAAO,CAIL0L,SAtDQ,IAwDV5C,UAAQ,GAEP1T,K,4sBChEjB,MAIMujD,GAA2Bz1C,GACxB,YACFA,GACCA,EAAK9J,SAAW,CAAEA,SAAUmnC,KAAKC,MAAMt9B,EAAK9J,WAAc,IAFhE,IAGEwO,KAAM24B,KAAKC,MAAMt9B,EAAK0E,Q,yBCR1B,MAAM+pC,GAAgB,EAAGpT,WAAUlC,SAAQM,WAAUtlC,WAAY,IAAD,EAE9D,OACE,oCACE,kBAAC0mC,GAAA,EAAD,CAAYn7B,GAAOy5B,EAAO9wB,MAAT,qBAAoCqmC,cAAY,GAAjE,UACGvV,EAAO9wB,aADV,QACmBlU,GAEnB,kBAACw6C,GAAA,EAAD,CACEl7C,MAAK,OAAE4nC,QAAF,IAAEA,IAAY,CAAClC,EAAOnuB,QAASmuB,EAAOpuB,SAC3C0uB,SAAWr1B,IACTq1B,EAASr1B,EAAEkP,OAAO7f,QAEpBm7C,kBAAkB,OAClBxG,kBAAoBjP,EAAO9wB,MAAT,qBAClB+C,IAAK+tB,EAAOnuB,QACZG,IAAKguB,EAAOpuB,YAKP2qC,GAAwB,KAC5B,CAELvc,OAAQ,CACN9wB,MAAO,aACP1H,KAAM,SACN4I,SAAU,GAMVulC,sBAAsB,EACtBtlC,WAAY,CACVmsC,YAAa,CACXh1C,KAAM,QACN0H,MAAO,eACPutC,aAAa,EACb9nB,MAAO,CACL7jB,KAAM,CACJ,KACA,OACA,UAEF4rC,UAAW,CACT,cACA,iCACA,UAEFl1C,KAAM,WAGVm1C,MAAO,CACLn1C,KAAM,SACN0H,MAAO,SAET0tC,SAAU,CACRp1C,KAAM,SACN0H,MAAO,YAET2tC,SAAU,CACRr1C,KAAM,SACN0H,MAAO,YAETunB,KAAM,CACJjvB,KAAM,QACN0H,MAAO,OACPylB,MAAO,CACLntB,KAAM,UAERqK,QAAS,KACTD,QAAS,MAEXkrC,UAAW,CACTt1C,KAAM,QACN0H,MAAO,YACPutC,aAAa,EACb9nB,MAAO,CACL7jB,KAAM,CACJ,GACA,YACA,iBACA,2BACA,4CACA,gCACA,yBAEFtJ,KAAM,WAGVu1C,QAAS,CACPv1C,KAAM,QACN0H,MAAO,UACPutC,aAAa,EACb9nB,MAAO,CACL7jB,KAAM,CACJ,GACA,MACA,OACA,QAEFtJ,KAAM,WAGVw1C,SAAU,CACRx1C,KAAM,QACN0H,MAAO,iBACPutC,aAAa,EACb9nB,MAAO,CACL7jB,KAAM,CACJ,GACA,MACA,OAEF4rC,UAAW,CACT,GACA,WACA,WAEFl1C,KAAM,WAGVy1C,eAAgB,CACdz1C,KAAM,UACN0H,MAAO,kBACP2C,QAAS,EACTD,QAAS,GAEXsrC,eAAgB,CACd11C,KAAM,UACN0H,MAAO,kBACP2C,QAAS,EACTD,QAAS,KAIfixB,SAAU,CACR,KAAQ,CACN,WAAYyS,O,wVC5HpB,MAAM6H,GAAiB5xC,IACrB,MAAMknC,EAAOlnC,EAAKkrB,KAElB,OADA5V,QAAQC,IAAI2xB,G,kWACL,EACL,UAAgBA,EAAK,GAAP,SACd,QAAcA,EAAK,GAAP,UACTlnC,IAIM6xC,GAAgBx6C,IAC3B,MAAM,OACJ6+B,EADI,QAEJ4b,EAFI,QAGJC,EAHI,SAIJjlB,EAJI,MAKJklB,EALI,QAMJxoB,GACEnyB,GAEGwxB,EAAOtO,GAAYvY,IAAMC,SAAS+vC,GACzC,OACE,kBAACxS,GAAA,EAAD,CACE97B,KAAMwyB,EAEN99B,MAAO,CACL0d,QAAS,OAETuJ,eAAgB,SAChBC,WAAY,UAEdsiB,cAAe,IAQf,kBAACpD,GAAA,EAAD,CAAOpmC,MAAO,CACZ0d,QAAS,OACTtd,cAAe,SACftG,MAAO,MACPD,OAAQ,MACRnC,QAAS,GACT8vC,SAAU,WAIV,kBAAChJ,GAAA,EAAD,CACEx+B,MAAO,CACL0d,QAAS,OACTtd,cAAe,MACf6mB,eAAgB,gBAChBumB,aAAc,KAGhB,kBAACzP,GAAA,EAAD,CAAYoE,QAAQ,MAApB,iBACA,kBAACjC,GAAA,EAAD,CACEmI,aAAW,UACXr9B,QAASomB,GAOT,kBAAC,KAAD,QAGJ,kBAACoN,GAAA,EAAD,CACEx+B,MAAO,CACL0d,QAAS,OACTtd,cAAe,WAGjB,kBAAC,KAAD,CACEi8B,OAAQuc,KAAwBvc,OAChC6C,SAAU0Z,KAAwB1Z,SAClCvC,SAAUr1B,GAAK6a,EAAS7a,EAAEi3B,UAC1BA,SAAU9N,EACV0O,SAAUl7B,UACRy1C,IAEA,IACE,IAAIG,QF5Bb51C,eAAyB61C,GAC9B,IACE58B,QAAQC,IAAI28B,GACZ,MAMMC,SANwBC,KAAIC,QAAQ,CACxCL,MA/Dc,gwBAiEdE,eAGkClyC,KAAKsyC,wBAGzC,OAFAh9B,QAAQC,IAAI48B,GAEL,CACL9/C,MAAO8/C,EAAY9/C,MAAMmF,IAAIu5C,IAC7B3sC,MAAO+tC,EAAY/tC,MAAM5M,IAAIu5C,IAC7BlT,kBAAmBlF,KAAKC,MAAMuZ,EAAYI,YAC1CC,QAASL,EAAYK,SASvB,MAAOC,GACPn9B,QAAQC,IAAI,uBAAwBk9B,IEEFL,CAAcR,GAAclyC,EAAEi3B,WAGpD,GAA8B,GAA1Bsb,EAAU5/C,MAAMgL,OAClB,MAAM,IAAIsuB,MAAM,qBAGhBmB,EAAS,CACPz6B,MAAO4/C,EAAU5/C,MACjB+R,MAAO6tC,EAAU7tC,MACjBy5B,kBAAmBoU,EAAUpU,kBAC7B2U,QAASP,EAAUO,UAGvB,MAAO9yC,GACP4V,QAAQC,IAAI7V,GACZqyC,EAAQryC,WC1GXgzC,GAAar7C,IACxB,MAAM,OACJ6+B,EADI,QAEJyc,EAFI,QAGJnpB,GACEnyB,EACJ,OACE,kBAACmoC,GAAA,EAAD,CACE97B,KAAMwyB,EACN1M,QAASA,EACTpxB,MAAO,CACL0d,QAAS,OACTuJ,eAAgB,SAChBC,WAAY,WAGd,4BACEptB,MAAM,MACND,OAAO,MACPmkC,IAAM,iCAAgCuc,EACtCC,YAAY,IACZC,MAAM,2FACNC,iBAAe,EACfnvC,MAAM,uB,qzCCeP,MAAMovC,GACD,WAKNC,GAAeC,YAAe,CAClCznD,QAAS,CACPI,KAAM,UAGJsnD,GAAgBD,YAAe,CACnCznD,QAAS,CACPI,KAAM,WAmDJoU,IAbyBqqC,GAYjB,IAZmC8I,GAYnC,IALL,CACL9gD,MAPYqG,IAAQ,EAAG2xC,IAAU7yC,IAAK2D,IAAD,CAAcH,GAAK,QAAOG,KAQ/DiJ,MAPY1L,IAAQ,EAAGy6C,IAAU37C,IAAK2D,IAAD,CACrCH,GAAK,QAAOG,EACZhC,OAAS,QAAOxH,KAAKwrB,MAAMxrB,KAAKkB,SAAWw3C,IAC3Cz7B,OAAS,QAAOjd,KAAKwrB,MAAMxrB,KAAKkB,SAAWw3C,SALjB,IAACA,GAAkB8I,GAkBjD79B,QAAQC,IAAI,SAAUvV,GAAK3N,MAAMgL,QACjCiY,QAAQC,IAAI,SAAUvV,GAAKoE,MAAM/G,QPnHJ2/B,GOmLNh9B,GAAK3N,MP9KnB,SACF+gD,KAAa16C,IAAWskC,IALb,CACdqW,QAAS,CAAEjJ,sBAAsB,GACjCkJ,OAAQ,CAAE1nD,KAAM,YAElB,IAEE+X,MAAO,WAPkBq5B,OOwL7B,MAAMuW,GAAgB,IAGlB,kBAAC,IAAD,CACEn7C,MAAO,CAAEI,cAAe,MAAO6mB,eAAgB,kBAG/C,kBAACwX,EAAA,EAAD,CACE11B,MAAM,aADR,YAUAqyC,GAAe,IAMd,IANe,eACpBC,EADoB,SAEpBC,EAFoB,MAGpBxhD,EAHoB,OAIpBD,GAEI,EADDmH,EACC,SACJ,MAAMu6C,EAAU3xC,IAAMyY,OAAO,MACvBm5B,EAAY5xC,IAAMyY,OAAO,CAC7B40B,cAAe,CACbhF,SAAU,KACVC,UAAW,MAEbuJ,SAAU,CACR16C,OAAQ,CACN,eAEF+2C,KAAM,CACJ,KACA,MAEF4D,UAAW,CACT,YACA,iBACA,2BACA,4CACA,iCAEFC,QAAS,CACP,OAEFC,SAAU,CACR,MACA,OAEFC,eAAgB,EAChBC,OAAO,EACPC,cAAc,EACdC,SAAU,OACVC,eAAgB,EAChBC,MAAO,GACPC,SAAU,IAEZjF,UAAW,CACTY,KAAM,CAAC,KAAM,MACb/9C,OAAQ,CAAC,EAAG,KACZ43B,SAAU,CAAC,EAAG,KACdE,UAAW,CAAC,EAAG,QAIbuqB,EAAgBxyC,IAAM+X,QAAQ,IX1OP,EAAC1iB,EAAY,MAC1C,QACIA,EACJ,MAAO,CACLo9B,OAAQ,CACN9wB,MAAO,SACP1H,KAAM,SACN4I,SAAU,GAMVulC,sBAAsB,EACtBtlC,WAAY,CAIVorC,KAAM,CACJj0C,KAAM,QACNmtB,MAAO,CACLntB,KAAM,UAERqK,QAAS,KACTD,QAAS,MAEXlU,OAAQ,CACN8J,KAAM,QACNmtB,MAAO,CACLntB,KAAM,UAERqK,QAAS,EACTD,QAAS,KAEX0jB,SAAU,CACR9tB,KAAM,QACNmtB,MAAO,CACLntB,KAAM,UAERqK,QAAS,EACTD,QAAS,KAEX4jB,UAAW,CACThuB,KAAM,QACNmtB,MAAO,CACLntB,KAAM,UAERqK,QAAS,EACTD,QAAS,OAIfixB,SAAU,CACR,KAAQ,CACN,WAAYyS,IAEd,OAAU,CACR,WAAYA,IAEd,SAAY,CACV,WAAYA,IAEd,UAAa,CACX,WAAYA,OW2KwB0K,GAAmB,IACvDC,EAAe1yC,IAAM+X,QAAQ,IXhCN1iB,KAC7B,MAAM,aACJs9C,GACEt9C,EACJ,MAAO,CACL+F,SAAU,8BACVq3B,OAAQ,CACN9wB,MAAO,aACP1H,KAAM,SACNmuC,sBAAsB,EACtBtlC,WAAY,CACVovC,MAAO,CACLvwC,MAAO,cACP1H,KAAM,aAIZq7B,SAAU,CACR,KAAQ,CACN,WAAYyS,IAcd,MAAS,CACP,WAAY,EAAGpT,WAAUlC,SAAQM,cAE7B,kBAAC8B,EAAA,EAAD,CAAQzzB,QAASuxC,GAAjB,0BWJ+BC,CAAe,CACtDD,aAAct4C,UACZwnC,EAAaG,IACXA,EAAM6Q,aAAa/7C,SAAU,OAG/B,IACEg8C,EAAS,CACbC,KAAMtmD,EACNumD,QAASzpD,IAIJs9B,EAAOgb,IADU7hC,IAAMyY,OAAO,IACRqpB,YAAS,CACpC+Q,aAAc,CACZ/7C,SAAS,EACTk5C,MAAO,CACLf,YAAa,CACX,MAEF/lB,KAAM,CACJ,KACA,MAEFqmB,UAAW,CACT,YAAa,kBAEfC,QAAS,CACP,IAEFC,SAAU,CACR,MACA,OAEFC,eAAgB,EAChBL,SAAU,GACVM,eAAgB,EAChBP,MAAO,4BACPE,SAAU,KAGd2D,UAAW,CACT/e,QAAQ,MAGNgf,EAAiBlzC,IAAM+X,QAAQ,IAAM,IACzC,kBAAC,IAAD,CACE3hB,MAAO,CAAEI,cAAe,QAExB,kBAACq+B,EAAA,EAAD,CACEzzB,QAAS,IAAMygC,EAAaG,IAC1BA,EAAMiR,UAAU/e,QAAS,KAF7B,QAOA,kBAACW,EAAA,EAAD,CACEzzB,QAAS,IAAMswC,EAAS,CACtBz3C,KAAM82C,MAFV,iBAQD,CAACW,KACGyB,EAAiB5nB,GAAc4e,GAAc,SAC/CnsC,IAD8C,IAKjD25B,YAAa,CACXhqB,OAAQiW,GAAMlvB,QAAQ1F,OACtBuyB,KAAM,GACNlxB,MAAO,GACPyL,SAAU,IAgCZkqC,iBAAkB,GAGlBD,YAAa,CACXqN,QAAQ,EAERxO,MAAO,CAAC,SAAK8N,GAAN,IAAoB/d,SAAUid,EAAUp6B,QAAQq6B,WAAY1J,GAA5D,SAAqFqK,GAArF,IAAoG7d,SAAUid,EAAUp6B,QAAQ81B,aACvInL,kBAAkB,SACbqQ,GADY,IAEf/f,OAAO,SAAM+f,EAAc/f,QAArB,IAA6B9wB,MAAO,mBAC1CgzB,SAAUid,EAAUp6B,QAAQ81B,aAGhC3H,QAAS,CAEPnK,UAAU,EACVC,OAAQ8V,IAEV3L,UAAW,CAETnO,MAAOyb,EAEP3b,gBAAgB,EAChB5B,QAAS,GAITU,QAAS,CACPh5B,QAAS,CACP,CACE5P,KAAM,OACNV,MAAO,QAET,CACEU,KAAM,UACNV,MAAO,YAGXA,MAAO,YAGXwnC,QAASl6B,OACPJ,OACAw6B,UACA8O,YACAppB,WACA1gB,cACAsE,SACA8oB,SACCmb,KACD,MAAM,GACJloC,GACEL,EACYK,EAAGC,IAAIwpC,GAIvB,OAAQtpC,GACN,KAAKnG,GAAwB,CAE3B,MAAM,QACJ4F,GACE+6B,EACJuN,EAAMroC,mBAAqBD,EAC3B,MAAM,aACJM,GACET,GAAuByoC,EAAOvoC,GAClC,IAAI45C,EAAc,KAUdA,IAAgB38C,IAAU28C,KAC5Br5C,EAAagE,KAAOq1C,GAOtB,MAEF,KAAKv/C,EAAkC,CACrC,MAAM,KACJrG,EADI,SAEJknC,GACEF,GACE,KACJyZ,EADI,OAEJ/9C,EAFI,SAGJ43B,EAHI,UAIJE,GACE0M,EACE2e,EAAiBtR,EAAM3xC,MAAMoe,OAAQnV,IACzC,MAAMP,EAAUe,EAAGC,IAAIT,EAAKN,IAC5B,OACEtC,IAAYw3C,EAAK,GAAIA,EAAK,GAA1Bx3C,CAA8B4C,EAAK0E,KAAKkwC,OACrCx3C,IAAYvG,EAAO,GAAIA,EAAO,GAA9BuG,CAAkCqC,EAAQ5I,WAC1CuG,IAAYqxB,EAAS,GAAIA,EAAS,GAAlCrxB,CAAsCqC,EAAQgvB,aAC9CrxB,IAAYuxB,EAAU,GAAIA,EAAU,GAApCvxB,CAAwCqC,EAAQkvB,eAGpDzyB,IAAK8D,GAASA,EAAKN,IAOtB,OANAgpC,EAAMrK,YAAY77B,SAAS2P,KAAK,CAC9BzS,GAAItC,OACJjJ,OACAuO,IAAKs3C,EACL1uB,gBAAiB,MAEZ,EAET,KAAK9wB,GAkCH,OAjCAkuC,EAAM+D,YAAYnB,MAAMnQ,EAAQt7B,OAAOw7B,SAAWF,EAAQ1nC,MACtD0nC,EAAQC,KAAKjC,OAAO9wB,QAAU6wC,EAAc/f,OAAO9wB,OACrDiwC,EAAUp6B,QAAV,SACKo6B,EAAUp6B,SADf,IAEE81B,UAAW7Y,EAAQ1nC,QAErBi1C,EAAMrK,YAAYtnC,MAAMoe,OAAS,CAC/BqJ,KAAM,EAAG/e,UAASO,WAChB,MAAM,KACJ40C,EADI,OAEJ/9C,EAFI,SAGJ43B,EAHI,UAIJE,GACEwM,EAAQ1nC,MACZ,OACE2J,IAAYw3C,EAAK,GAAIA,EAAK,GAA1Bx3C,CAA8B4C,EAAK0E,KAAKkwC,OACrCx3C,IAAYvG,EAAO,GAAIA,EAAO,GAA9BuG,CAAkCqC,EAAQ5I,WAC1CuG,IAAYqxB,EAAS,GAAIA,EAAS,GAAlCrxB,CAAsCqC,EAAQgvB,aAC9CrxB,IAAYuxB,EAAU,GAAIA,EAAU,GAApCvxB,CAAwCqC,EAAQkvB,cAIvD1rB,SAAU,CACRme,QAAS,MAKbk3B,EAAUp6B,QAAV,SACKo6B,EAAUp6B,SADf,IAEE61B,cAAe5Y,EAAQ1nC,SAGpB,EAIT,KAAK+G,EAAoB,CACvB,MAAM,MACJ/G,GACE0nC,EAIJ,OAHAuN,EAAMrK,YAAYv4B,MAAQ0zC,EAAO/lD,GACjC0kD,EAAe1kD,GACfi1C,EAAM4D,UAAUvP,QAAQtpC,MAAQA,GACzB,GAqEX,OAAO,SAyDX,OAzBAiT,IAAMuX,UAAU,OAuBf,IAGC,kBAAC,IAAD,CACEnhB,MAAO,CAAE0d,QAAS,OAAQtd,cAAe,SAAUtG,MAAO,OAAQD,OAAQ,SAE1E,kBAAC41C,GAAD,MACMsN,EADN,CAGE1e,QAAS,CAACmd,EAAUp6B,SACpBphB,MAAO,CAAElG,QAAOD,UAChB4zB,WAAaxuB,GACX,kBAAC+3C,GAAD,MACM/3C,EACAu8C,EAAUp6B,UAGlBsM,WAAYgrB,IACR13C,IAEN,kBAACy4C,GAAD,CACE3b,OAAQrN,EAAMgsB,aAAa/7C,QAC3Bk5C,MAAOnpB,EAAMgsB,aAAa7C,MAC1BxoB,QAAS,IAAMqa,EAAaG,IAC1BA,EAAM6Q,aAAa/7C,SAAU,IAE/Bg5C,QAAS,KACPvkB,EAAWxtB,OAAQikC,IACjBA,EAAMiE,WAAY,IAEpBpE,EAAaG,IACXA,EAAM6Q,aAAa/7C,SAAU,KAGjCi5C,QAAU5lD,IACRohC,EAAWxtB,OAAQikC,IACjBA,EAAMiE,WAAY,IAEpBpE,EAAaG,IACXA,EAAM6Q,aAAa/7C,SAAU,IAE/B66C,EAASn6B,QAAQkoB,MAAM,CACrBzlC,KAAM,UACNzO,KAAMrB,EAAMqmD,WAGhB1lB,SAAU,EACRz6B,QAAQ,GACR+R,QAAO,GACPy5B,oBACA2U,WACE,MACFjlB,EAAWxtB,OAAQikC,IACjBA,EAAM3xC,MAAQA,EACd2xC,EAAM5/B,MAAQA,EACd4/B,EAAMnG,kBAAoB,CACxBM,MAAON,GAETmG,EAAMiE,WAAY,EAClBjE,EAAMrK,YAAahqB,OAASiW,GAAMlvB,QAAQ1F,SAExCwhD,GACFmB,EAASn6B,QAAQkoB,MAAM,CACrBzlC,KAAM,UACNzO,KAAMglD,OAKd,kBAACE,GAAD,CACExc,OAAQrN,EAAMosB,UAAU/e,OACxB1M,QAAS,IAAMqa,EAAaG,IAC1BA,EAAMiR,UAAU/e,QAAS,IAE3Byc,QA7pBc,gBA6qBd,kBAAC4C,GAAD,CACErzC,IAAKyxC,IAET,kBAACvc,EAAA,EAAD,CACEN,GAAI,CAAE31B,MAAO,OAAQsI,OAASrI,GAAUA,EAAMqI,OAAO4tB,OAAS,GAC9D3zB,KAAMyxC,EAAgBlN,WAEtB,kBAACnG,EAAA,EAAD,CAAkB3gC,MAAM,eAM1Bo0C,GAAevzC,IAAM4H,WAAW,CAACvS,EAAMwK,KAAkB,IAAD,EAC1D,MAAO6B,EAAMs9B,GAAWh/B,IAAMC,UAAS,IAChCuzC,EAAaC,GAAkBzzC,IAAMC,cAAS5Q,GAc/CqkD,GAbM9wB,YACV/iB,EACA,GACA,KAAI,CACF6/B,MAAQ8Q,IACNiD,EAAe,IACb10C,IAAKrI,QACF85C,IAELxR,GAAQ,OAIM,CAAC7hC,EAAOw2C,KAI1B3U,GAAQ,KAEJ4U,EAAe5zC,IAAMya,YAAaplB,GACtC,kBAAC+oC,EAAA,EAAD,MACM/oC,EADN,CAEE4a,UAAU,OACR4jC,aAAc,KACdJ,OAAepkD,OAGlB,IACH,OACE,kBAACykD,EAAA,EAAD,CACE/0C,IAAG,OAAEy0C,QAAF,IAAEA,OAAF,EAAEA,EAAaz0C,IAClBi2B,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdxzB,KAAMA,EACNqyC,iBAAkB,IAClBC,oBAAqBJ,EACrBpsB,QAASksB,GAET,kBAACO,EAAA,EAAD,CACEzsB,QAASksB,EACTQ,SAAQ,iBAAEV,QAAF,IAAEA,OAAF,EAAEA,EAAav5C,YAAf,QAAuB,SAE/B,kBAACk6C,EAAA,EAAD,KAAaX,EAAc98C,KAAa88C,EAAYv5C,MAAO,IAJ7D,OAMIu5C,QANJ,IAMIA,OANJ,EAMIA,EAAahoD,SAOnB4oD,GAAa,CACjBrB,KAAM/B,GACNqD,MAAOnD,IAGO77C,WACd,MAAO+J,EAAOk1C,GAAYt0C,IAAMC,SAASm0C,GAAWC,OACpD,OACE,kBAAC,IAAD,CAAkBj1C,MAAOA,GACvB,kBAACoyC,GAAD,IACEC,eAAiBhkD,GAAS6mD,EAASF,GAAW3mD,KAC1C4H,MC7yBZ,MAAM+J,GAAQm1C,cAGC,SACb,MAAOn6B,GAAc,MAAElqB,EAAF,OAASD,EAAT,YAAiBk2C,IAAiBqO,cACvD,OACE,kBAACxnD,EAAA,EAAD,CAAeoS,MAAOA,IAChB,kBAAC,IAAD,CACJc,IAAKka,EACLhkB,MAAO,CACLlG,MAAO,OAAQD,OAAQ,SAIvBk2C,GACE,kBAAC,GAAD,CACEuL,SAAU,OACLxhD,QAAOD,e","file":"static/js/app.2b521907.chunk.js","sourcesContent":["import { createProvider } from 'colay-ui'\n\nexport const DefaultTheme = {\n  palette: {\n    common: {\n      black: '#000',\n      white: '#fff',\n    },\n    mode: 'light',\n    primary: {\n      light: '#7986cb',\n      main: '#3f51b5',\n      dark: '#303f9f',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff4081',\n      main: '#f50057',\n      dark: '#c51162',\n      contrastText: '#fff',\n    },\n    error: {\n      light: '#e57373',\n      main: '#f44336',\n      dark: '#d32f2f',\n      contrastText: '#fff',\n    },\n    warning: {\n      light: '#ffb74d',\n      main: '#ff9800',\n      dark: '#f57c00',\n      contrastText: 'rgba(0, 0, 0, 0.87)',\n    },\n    info: {\n      light: '#64b5f6',\n      main: '#2196f3',\n      dark: '#1976d2',\n      contrastText: '#fff',\n    },\n    success: {\n      light: '#81c784',\n      main: '#4caf50',\n      dark: '#388e3c',\n      contrastText: 'rgba(0, 0, 0, 0.87)',\n    },\n    grey: {\n      50: '#fafafa',\n      100: '#f5f5f5',\n      200: '#eeeeee',\n      300: '#e0e0e0',\n      400: '#bdbdbd',\n      500: '#9e9e9e',\n      600: '#757575',\n      700: '#616161',\n      800: '#424242',\n      900: '#212121',\n      A100: '#d5d5d5',\n      A200: '#aaaaaa',\n      A400: '#303030',\n      A700: '#616161',\n    },\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n    text: {\n      primary: 'rgba(0, 0, 0, 0.87)',\n      secondary: 'rgba(0, 0, 0, 0.54)',\n      disabled: 'rgba(0, 0, 0, 0.38)',\n    },\n    divider: 'rgba(0, 0, 0, 0.12)',\n    background: {\n      paper: 'rgb(153, 153, 153)',\n      default: '#fafafa',\n    },\n    action: {\n      active: 'rgba(0, 0, 0, 0.54)',\n      hover: 'rgba(0, 0, 0, 0.04)',\n      hoverOpacity: 0.04,\n      selected: 'rgba(0, 0, 0, 0.08)',\n      selectedOpacity: 0.08,\n      disabled: 'rgba(0, 0, 0, 0.26)',\n      disabledBackground: 'rgba(0, 0, 0, 0.12)',\n      disabledOpacity: 0.38,\n      focus: 'rgba(0, 0, 0, 0.12)',\n      focusOpacity: 0.12,\n      activatedOpacity: 0.12,\n    },\n  },\n}\n\nexport const DarkTheme = {\n  palette: {\n    common: {\n      black: '#000',\n      white: '#fff',\n    },\n    mode: 'dark',\n    primary: {\n      light: '#7986cb',\n      main: '#3f51b5',\n      dark: '#303f9f',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff4081',\n      main: '#f50057',\n      dark: '#c51162',\n      contrastText: '#fff',\n    },\n    error: {\n      light: '#e57373',\n      main: '#f44336',\n      dark: '#d32f2f',\n      contrastText: '#fff',\n    },\n    warning: {\n      light: '#ffb74d',\n      main: '#ff9800',\n      dark: '#f57c00',\n      contrastText: 'rgba(0, 0, 0, 0.87)',\n    },\n    info: {\n      light: '#64b5f6',\n      main: '#2196f3',\n      dark: '#1976d2',\n      contrastText: '#fff',\n    },\n    success: {\n      light: '#81c784',\n      main: '#4caf50',\n      dark: '#388e3c',\n      contrastText: 'rgba(0, 0, 0, 0.87)',\n    },\n    grey: {\n      50: '#fafafa',\n      100: '#f5f5f5',\n      200: '#eeeeee',\n      300: '#e0e0e0',\n      400: '#bdbdbd',\n      500: '#9e9e9e',\n      600: '#757575',\n      700: '#616161',\n      800: '#424242',\n      900: '#212121',\n      A100: '#d5d5d5',\n      A200: '#aaaaaa',\n      A400: '#303030',\n      A700: '#616161',\n    },\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n    text: {\n      primary: '#fff',\n      secondary: 'rgba(255, 255, 255, 0.7)',\n      disabled: 'rgba(255, 255, 255, 0.5)',\n      icon: 'rgba(255, 255, 255, 0.5)',\n    },\n    divider: 'rgba(255, 255, 255, 0.12)',\n    background: {\n      paper: '#808080', // #424242\n      default: '#303030',\n    },\n    action: {\n      active: '#fff',\n      hover: 'rgba(255, 255, 255, 0.08)',\n      hoverOpacity: 0.08,\n      selected: 'rgba(255, 255, 255, 0.16)',\n      selectedOpacity: 0.16,\n      disabled: 'rgba(255, 255, 255, 0.3)',\n      disabledBackground: 'rgba(255, 255, 255, 0.12)',\n      disabledOpacity: 0.38,\n      focus: 'rgba(255, 255, 255, 0.12)',\n      focusOpacity: 0.12,\n      activatedOpacity: 0.24,\n    },\n  },\n}\n\nconst {\n  Context,\n  Provider,\n  useProvider,\n} = createProvider({\n  value: DefaultTheme,\n})\n\nexport const ThemeContext = Context\nexport const ThemeProvider = Provider\nexport const useTheme = () => {\n  const [value] = useProvider()\n  return value\n}\n\nexport type Theme = typeof DefaultTheme\n\nexport type ThemeProps = {\n  theme: Theme\n}\n// {\n//   \"breakpoints\": {\n//     \"keys\": [\n//       \"xs\",\n//       \"sm\",\n//       \"md\",\n//       \"lg\",\n//       \"xl\"\n//     ],\n//     \"values\": {\n//       \"xs\": 0,\n//       \"sm\": 600,\n//       \"md\": 960,\n//       \"lg\": 1280,\n//       \"xl\": 1920\n//     },\n//     \"unit\": \"px\"\n//   },\n//   \"direction\": \"ltr\",\n//   \"mixins\": {\n//     \"toolbar\": {\n//       \"minHeight\": 56,\n//       \"@media (min-width:0px) and (orientation: landscape)\": {\n//         \"minHeight\": 48\n//       },\n//       \"@media (min-width:600px)\": {\n//         \"minHeight\": 64\n//       }\n//     }\n//   },\n//   \"components\": {},\n//   \"palette\": {\n//     \"common\": {\n//       \"black\": \"#000\",\n//       \"white\": \"#fff\"\n//     },\n//     \"mode\": \"light\",\n//     \"primary\": {\n//       \"light\": \"#7986cb\",\n//       \"main\": \"#3f51b5\",\n//       \"dark\": \"#303f9f\",\n//       \"contrastText\": \"#fff\"\n//     },\n//     \"secondary\": {\n//       \"light\": \"#ff4081\",\n//       \"main\": \"#f50057\",\n//       \"dark\": \"#c51162\",\n//       \"contrastText\": \"#fff\"\n//     },\n//     \"error\": {\n//       \"light\": \"#e57373\",\n//       \"main\": \"#f44336\",\n//       \"dark\": \"#d32f2f\",\n//       \"contrastText\": \"#fff\"\n//     },\n//     \"warning\": {\n//       \"light\": \"#ffb74d\",\n//       \"main\": \"#ff9800\",\n//       \"dark\": \"#f57c00\",\n//       \"contrastText\": \"rgba(0, 0, 0, 0.87)\"\n//     },\n//     \"info\": {\n//       \"light\": \"#64b5f6\",\n//       \"main\": \"#2196f3\",\n//       \"dark\": \"#1976d2\",\n//       \"contrastText\": \"#fff\"\n//     },\n//     \"success\": {\n//       \"light\": \"#81c784\",\n//       \"main\": \"#4caf50\",\n//       \"dark\": \"#388e3c\",\n//       \"contrastText\": \"rgba(0, 0, 0, 0.87)\"\n//     },\n//     \"grey\": {\n//       \"50\": \"#fafafa\",\n//       \"100\": \"#f5f5f5\",\n//       \"200\": \"#eeeeee\",\n//       \"300\": \"#e0e0e0\",\n//       \"400\": \"#bdbdbd\",\n//       \"500\": \"#9e9e9e\",\n//       \"600\": \"#757575\",\n//       \"700\": \"#616161\",\n//       \"800\": \"#424242\",\n//       \"900\": \"#212121\",\n//       \"A100\": \"#d5d5d5\",\n//       \"A200\": \"#aaaaaa\",\n//       \"A400\": \"#303030\",\n//       \"A700\": \"#616161\"\n//     },\n//     \"contrastThreshold\": 3,\n//     \"tonalOffset\": 0.2,\n//     \"text\": {\n//       \"primary\": \"rgba(0, 0, 0, 0.87)\",\n//       \"secondary\": \"rgba(0, 0, 0, 0.54)\",\n//       \"disabled\": \"rgba(0, 0, 0, 0.38)\"\n//     },\n//     \"divider\": \"rgba(0, 0, 0, 0.12)\",\n//     \"background\": {\n//       \"paper\": \"#fff\",\n//       \"default\": \"#fafafa\"\n//     },\n//     \"action\": {\n//       \"active\": \"rgba(0, 0, 0, 0.54)\",\n//       \"hover\": \"rgba(0, 0, 0, 0.04)\",\n//       \"hoverOpacity\": 0.04,\n//       \"selected\": \"rgba(0, 0, 0, 0.08)\",\n//       \"selectedOpacity\": 0.08,\n//       \"disabled\": \"rgba(0, 0, 0, 0.26)\",\n//       \"disabledBackground\": \"rgba(0, 0, 0, 0.12)\",\n//       \"disabledOpacity\": 0.38,\n//       \"focus\": \"rgba(0, 0, 0, 0.12)\",\n//       \"focusOpacity\": 0.12,\n//       \"activatedOpacity\": 0.12\n//     }\n//   },\n//   \"shadows\": [\n//     \"none\",\n//     \"0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)\",\n//     \"0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)\",\n//     \"0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)\",\n//     \"0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)\",\n//     \"0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)\",\n//     \"0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)\",\n//     \"0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)\",\n//     \"0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)\",\n//     \"0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)\",\n//     \"0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)\",\n//     \"0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)\",\n//     \"0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)\",\n//     \"0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)\",\n//     \"0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)\",\n//     \"0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)\",\n//     \"0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)\",\n//     \"0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)\",\n//     \"0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)\",\n//     \"0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)\",\n//     \"0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)\",\n//     \"0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)\",\n//     \"0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)\",\n//     \"0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)\",\n//     \"0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)\"\n//   ],\n//   \"typography\": {\n//     \"htmlFontSize\": 16,\n//     \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//     \"fontSize\": 14,\n//     \"fontWeightLight\": 300,\n//     \"fontWeightRegular\": 400,\n//     \"fontWeightMedium\": 500,\n//     \"fontWeightBold\": 700,\n//     \"h1\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 300,\n//       \"fontSize\": \"6rem\",\n//       \"lineHeight\": 1.167,\n//       \"letterSpacing\": \"-0.01562em\"\n//     },\n//     \"h2\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 300,\n//       \"fontSize\": \"3.75rem\",\n//       \"lineHeight\": 1.2,\n//       \"letterSpacing\": \"-0.00833em\"\n//     },\n//     \"h3\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 400,\n//       \"fontSize\": \"3rem\",\n//       \"lineHeight\": 1.167,\n//       \"letterSpacing\": \"0em\"\n//     },\n//     \"h4\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 400,\n//       \"fontSize\": \"2.125rem\",\n//       \"lineHeight\": 1.235,\n//       \"letterSpacing\": \"0.00735em\"\n//     },\n//     \"h5\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 400,\n//       \"fontSize\": \"1.5rem\",\n//       \"lineHeight\": 1.334,\n//       \"letterSpacing\": \"0em\"\n//     },\n//     \"h6\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 500,\n//       \"fontSize\": \"1.25rem\",\n//       \"lineHeight\": 1.6,\n//       \"letterSpacing\": \"0.0075em\"\n//     },\n//     \"subtitle1\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 400,\n//       \"fontSize\": \"1rem\",\n//       \"lineHeight\": 1.75,\n//       \"letterSpacing\": \"0.00938em\"\n//     },\n//     \"subtitle2\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 500,\n//       \"fontSize\": \"0.875rem\",\n//       \"lineHeight\": 1.57,\n//       \"letterSpacing\": \"0.00714em\"\n//     },\n//     \"body1\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 400,\n//       \"fontSize\": \"1rem\",\n//       \"lineHeight\": 1.5,\n//       \"letterSpacing\": \"0.00938em\"\n//     },\n//     \"body2\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 400,\n//       \"fontSize\": \"0.875rem\",\n//       \"lineHeight\": 1.43,\n//       \"letterSpacing\": \"0.01071em\"\n//     },\n//     \"button\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 500,\n//       \"fontSize\": \"0.875rem\",\n//       \"lineHeight\": 1.75,\n//       \"letterSpacing\": \"0.02857em\",\n//       \"textTransform\": \"uppercase\"\n//     },\n//     \"caption\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 400,\n//       \"fontSize\": \"0.75rem\",\n//       \"lineHeight\": 1.66,\n//       \"letterSpacing\": \"0.03333em\"\n//     },\n//     \"overline\": {\n//       \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\n//       \"fontWeight\": 400,\n//       \"fontSize\": \"0.75rem\",\n//       \"lineHeight\": 2.66,\n//       \"letterSpacing\": \"0.08333em\",\n//       \"textTransform\": \"uppercase\"\n//     }\n//   },\n//   \"shape\": {\n//     \"borderRadius\": 4\n//   },\n//   \"transitions\": {\n//     \"duration\": {\n//       \"shortest\": 150,\n//       \"shorter\": 200,\n//       \"short\": 250,\n//       \"standard\": 300,\n//       \"complex\": 375,\n//       \"enteringScreen\": 225,\n//       \"leavingScreen\": 195\n//     },\n//     \"easing\": {\n//       \"easeInOut\": \"cubic-bezier(0.4, 0, 0.2, 1)\",\n//       \"easeOut\": \"cubic-bezier(0.0, 0, 0.2, 1)\",\n//       \"easeIn\": \"cubic-bezier(0.4, 0, 1, 1)\",\n//       \"sharp\": \"cubic-bezier(0.4, 0, 0.6, 1)\"\n//     }\n//   },\n//   \"zIndex\": {\n//     \"mobileStepper\": 1000,\n//     \"speedDial\": 1050,\n//     \"appBar\": 1100,\n//     \"drawer\": 1200,\n//     \"modal\": 1300,\n//     \"snackbar\": 1400,\n//     \"tooltip\": 1500\n//   }\n// }\n","export const animationOptions = {\n  // // Whether to animate while running the layout\n  // // true : Animate continuously as the layout is running\n  // // false : Just show the end result\n  // // 'end' : Animate with the end result, from the initial positions to the end positions\n  animate: 'end',\n\n  // // Easing of the animation for animate:'end'\n  animationEasing: 'linear',\n\n  // // The duration of the animation for animate:'end'\n  animationDuration: 1000,\n\n  // // A function that determines whether the node should be animated\n  // // All nodes animated by default on animate enabled\n  // // Non-animated nodes are positioned immediately when the layout starts\n  // animateFilter: (node, i) => true,\n  animateFilter: () => true,\n\n  // // The layout animates only after this many milliseconds for animate:true\n  // // (prevents flashing on fast runs)\n  animationThreshold: 250,\n\n} as const\n","// @ts-nocheck\nimport { animationOptions } from '../animation'\n\nexport default {\n  cose: {\n    name: 'cose',\n\n    // // Called on `layoutready`\n    ready() {},\n\n    // // Called on `layoutstop`\n    stop() {},\n\n    // // Number of iterations between consecutive screen positions update\n    refresh: 20,\n\n    // // Whether to fit the network view after when done\n    fit: true,\n\n    // // Padding on fit\n    padding: 30,\n\n    // // Constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    // boundingBox: undefined,\n\n    // // Excludes the label when calculating node bounding boxes for the layout algorithm\n    nodeDimensionsIncludeLabels: false,\n\n    // // Randomize the initial positions of the nodes (true) or use existing positions (false)\n    randomize: false,\n\n    // // Extra spacing between components in non-compound graphs\n    componentSpacing: 40,\n\n    // // Node repulsion (non overlapping) multiplier\n    nodeRepulsion: (node) => 2048,\n\n    // // Node repulsion (overlapping) multiplier\n    nodeOverlap: 4,\n\n    // // Ideal edge (non nested) length\n    idealEdgeLength: (edge) => 32,\n\n    // Divisor to compute edge forces\n    edgeElasticity: (edge) => 32,\n\n    // Nesting factor (multiplier) to compute ideal edge length for nested edges\n    nestingFactor: 1.2,\n\n    // Gravity force (constant)\n    gravity: 1,\n\n    // Maximum number of iterations to perform\n    numIter: 1000,\n\n    // Initial temperature (maximum node displacement)\n    initialTemp: 1000,\n\n    // Cooling factor (how the temperature is reduced between consecutive iterations\n    coolingFactor: 0.99,\n\n    // Lower temperature threshold (below this point the layout will end)\n    minTemp: 1.0,\n    ...animationOptions,\n  },\n  breadthfirst: {\n    name: 'breadthfirst',\n\n    fit: true, // whether to fit the viewport to the graph\n    directed: false, // whether the tree is directed downwards (or edges can point in any direction if false)\n    padding: 30, // padding on fit\n    circle: false, // put depths in concentric circles if true, put depths top down if false\n    grid: false, // whether to create an even grid into which the DAG is placed (circle:false only)\n    spacingFactor: 1.75, // positive spacing factor, larger => more space between nodes (N.B. n/a if causes overlap)\n    // boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    avoidOverlap: true, // prevents node overlap, may overflow boundingBox if not enough space\n    nodeDimensionsIncludeLabels: false, // Excludes the label when calculating node bounding boxes for the layout algorithm\n    roots: undefined, // the roots of the trees\n    maximal: false, // whether to shift nodes down their natural BFS depths in order to avoid upwards edges (DAGS only)\n    ready: undefined, // callback on layoutready\n    stop: undefined, // callback on layoutstop\n    transform: (node, position) => position, // transform a given node position. Useful for changing flow direction in discrete layouts,\n    ...animationOptions,\n\n  },\n  concentric: {\n    name: 'concentric',\n\n    fit: true, // whether to fit the viewport to the graph\n    padding: 30, // the padding on fit\n    startAngle: 3 / 2 * Math.PI, // where nodes start in radians\n    sweep: undefined, // how many radians should be between the first and last node (defaults to full circle)\n    clockwise: true, // whether the layout should go clockwise (true) or counterclockwise/anticlockwise (false)\n    equidistant: false, // whether levels have an equal radial distance betwen them, may cause bounding box overflow\n    minNodeSpacing: 10, // min spacing between outside of nodes (used for radius adjustment)\n    // boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    avoidOverlap: true, // prevents node overlap, may overflow boundingBox if not enough space\n    nodeDimensionsIncludeLabels: false, // Excludes the label when calculating node bounding boxes for the layout algorithm\n    height: undefined, // height of layout area (overrides container height)\n    width: undefined, // width of layout area (overrides container width)\n    spacingFactor: undefined, // Applies a multiplicative factor (>0) to expand or compress the overall area that the nodes take up\n    concentric: (node) => // returns numeric value for each node, placing higher nodes in levels towards the centre\n      node.degree(),\n    levelWidth: (nodes) => // the letiation of concentric values in each level\n      nodes.maxDegree() / 4,\n    ready: undefined, // callback on layoutready\n    stop: undefined, // callback on layoutstop\n    transform: (node, position) => position, // transform a given node position. Useful for changing flow direction in discrete layouts\n    ...animationOptions,\n  },\n  circle: {\n    name: 'circle',\n\n    fit: true, // whether to fit the viewport to the graph\n    padding: 30, // the padding on fit\n    // boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    avoidOverlap: true, // prevents node overlap, may overflow boundingBox and radius if not enough space\n    nodeDimensionsIncludeLabels: false, // Excludes the label when calculating node bounding boxes for the layout algorithm\n    spacingFactor: undefined, // Applies a multiplicative factor (>0) to expand or compress the overall area that the nodes take up\n    radius: undefined, // the radius of the circle\n    startAngle: 3 / 2 * Math.PI, // where nodes start in radians\n    sweep: undefined, // how many radians should be between the first and last node (defaults to full circle)\n    clockwise: true, // whether the layout should go clockwise (true) or counterclockwise/anticlockwise (false)\n    sort: undefined, // a sorting function to order the nodes; e.g. function(a, b){ return a.data('weight') - b.data('weight') }\n    ready: undefined, // callback on layoutready\n    stop: undefined, // callback on layoutstop\n    transform: (node, position) => position, // transform a given node position. Useful for changing flow direction in discrete layouts,\n    ...animationOptions,\n  },\n  grid: {\n    name: 'grid',\n\n    fit: true, // whether to fit the viewport to the graph\n    padding: 30, // padding used on fit\n    // boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    avoidOverlap: true, // prevents node overlap, may overflow boundingBox if not enough space\n    avoidOverlapPadding: 10, // extra spacing around nodes when avoidOverlap: true\n    nodeDimensionsIncludeLabels: false, // Excludes the label when calculating node bounding boxes for the layout algorithm\n    spacingFactor: undefined, // Applies a multiplicative factor (>0) to expand or compress the overall area that the nodes take up\n    condense: false, // uses all available space on false, uses minimal space on true\n    rows: undefined, // force num of rows in the grid\n    cols: undefined, // force num of columns in the grid\n    position: (node) => {}, // returns { row, col } for element\n    sort: undefined, // a sorting function to order the nodes; e.g. function(a, b){ return a.data('weight') - b.data('weight') }\n    ready: undefined, // callback on layoutready\n    stop: undefined, // callback on layoutstop\n    transform: (node, position) => position, // transform a given node position. Useful for changing flow direction in discrete layouts\n    ...animationOptions,\n  },\n  // preset: {\n  //   name: 'preset',\n\n  //   positions: undefined, // map of (node id) => (position obj); or function(node){ return somPos; }\n  //   zoom: undefined, // the zoom level to set (prob want fit = false if set)\n  //   pan: undefined, // the pan level to set (prob want fit = false if set)\n  //   fit: true, // whether to fit to viewport\n  //   padding: 30, // padding on fit\n  //   animate: false, // whether to transition the node positions\n  //   animationDuration: 500, // duration of animation in ms if enabled\n  //   animationEasing: undefined, // easing of animation if enabled\n  //   animateFilter: (node, i) => true, // a function that determines whether the node should be animated.  All nodes animated by default on animate enabled.  Non-animated nodes are positioned immediately when the layout starts\n  //   ready: undefined, // callback on layoutready\n  //   stop: undefined, // callback on layoutstop\n  //   transform: (node, position) => position, // transform a given node position. Useful for changing flow direction in discrete layouts\n  // },\n  random: {\n    name: 'random',\n\n    fit: true, // whether to fit to viewport\n    padding: 30, // fit padding\n    // boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    ready: undefined, // callback on layoutready\n    stop: undefined, // callback on layoutstop\n    transform: (node, position) => position, // transform a given node position. Useful for changing flow direction in discrete layouts\n    ...animationOptions,\n  },\n  euler: {\n    name: 'euler',\n\n    // The ideal length of a spring\n    // - This acts as a hint for the edge length\n    // - The edge length can be longer or shorter if the forces are set to extreme values\n    // springLength: (edge) => 80,\n    springLength: (edge) => 400,\n\n    // Hooke's law coefficient\n    // - The value ranges on [0, 1]\n    // - Lower values give looser springs\n    // - Higher values give tighter springs\n    springCoeff: (edge) => 0.0008,\n\n    // The mass of the node in the physics simulation\n    // - The mass affects the gravity node repulsion/attraction\n    // mass: (node) => 4,\n    mass: (node) => 40,\n\n    // Coulomb's law coefficient\n    // - Makes the nodes repel each other for negative values\n    // - Makes the nodes attract each other for positive values\n    gravity: -1.2,\n\n    // A force that pulls nodes towards the origin (0, 0)\n    // Higher values keep the components less spread out\n    pull: 0.001,\n\n    // Theta coefficient from Barnes-Hut simulation\n    // - Value ranges on [0, 1]\n    // - Performance is better with smaller values\n    // - Very small values may not create enough force to give a good result\n    theta: 0.666,\n\n    // Friction / drag coefficient to make the system stabilise over time\n    dragCoeff: 0.02,\n\n    // When the total of the squared position deltas is less than this value, the simulation ends\n    movementThreshold: 1,\n\n    // The amount of time passed per tick\n    // - Larger values result in faster runtimes but might spread things out too far\n    // - Smaller values produce more accurate results\n    timeStep: 20,\n\n    // The number of ticks per frame for animate:true\n    // - A larger value reduces rendering cost but can be jerky\n    // - A smaller value increases rendering cost but is smoother\n    refresh: 10,\n\n    // Maximum iterations and time (in ms) before the layout will bail out\n    // - A large value may allow for a better result\n    // - A small value may make the layout end prematurely\n    // - The layout may stop before this if it has settled\n    maxIterations: 1000,\n    // maxSimulationTime: 4000,\n\n    // Prevent the user grabbing nodes during the layout (usually with animate:true)\n    ungrabifyWhileSimulating: false,\n\n    // Whether to fit the viewport to the repositioned graph\n    // true : Fits at end of layout for animate:false or animate:'end'; fits on each frame for animate:true\n    // fit: true,\n\n    // Padding in rendered co-ordinates around the layout\n    padding: 30,\n\n    // Constrain layout bounds with one of\n    // - { x1, y1, x2, y2 }\n    // - { x1, y1, w, h }\n    // - undefined / null : Unconstrained\n    // boundingBox: undefined,\n    avoidOverlap: true,\n\n    // Layout event callbacks; equivalent to `layout.one('layoutready', callback)` for example\n    ready() {}, // on layoutready\n    stop() {}, // on layoutstop\n\n    // Whether to randomize the initial positions of the nodes\n    // true : Use random positions within the bounding box\n    // false : Use the current node positions as the initial positions\n    randomize: false,\n    ...animationOptions,\n  },\n  cise: {\n    name: 'cise',\n\n    // ClusterInfo can be a 2D array contaning node id's or a function that returns cluster ids.\n    // For the 2D array option, the index of the array indicates the cluster ID for all elements in\n    // the collection at that index. Unclustered nodes must NOT be present in this array of clusters.\n    //\n    // For the function, it would be given a Cytoscape node and it is expected to return a cluster id\n    // corresponding to that node. Returning negative numbers, null or undefined is fine for unclustered\n    // nodes.\n    // e.g\n    // Array:                                     OR          function(node){\n    //  [ ['n1','n2','n3'],                                       ...\n    //    ['n5','n6']                                         }\n    //    ['n7', 'n8', 'n9', 'n10'] ]\n    // clusters: clusterInfo,\n\n    // -------- Optional parameters --------\n    // Whether to animate the layout\n    // - true : Animate while the layout is running\n    // - false : Just show the end result\n    // - 'end' : Animate directly to the end result\n    animate: false,\n\n    // number of ticks per frame; higher is faster but more jerky\n    refresh: 10,\n\n    // Animation duration used for animate:'end'\n    animationDuration: undefined,\n\n    // Easing for animate:'end'\n    animationEasing: undefined,\n\n    // Whether to fit the viewport to the repositioned graph\n    // true : Fits at end of layout for animate:false or animate:'end'\n    fit: true,\n\n    // Padding in rendered co-ordinates around the layout\n    padding: 30,\n\n    // separation amount between nodes in a cluster\n    // note: increasing this amount will also increase the simulation time\n    nodeSeparation: 12.5,\n\n    // Inter-cluster edge length factor\n    // (2.0 means inter-cluster edges should be twice as long as intra-cluster edges)\n    idealInterClusterEdgeLengthCoefficient: 1.4,\n\n    // Whether to pull on-circle nodes inside of the circle\n    allowNodesInsideCircle: false,\n\n    // Max percentage of the nodes in a circle that can move inside the circle\n    maxRatioOfNodesInsideCircle: 0.1,\n\n    // - Lower values give looser springs\n    // - Higher values give tighter springs\n    springCoeff: 0.45,\n\n    // Node repulsion (non overlapping) multiplier\n    nodeRepulsion: 4500,\n\n    // Gravity force (constant)\n    gravity: 0.25,\n\n    // Gravity range (constant)\n    gravityRange: 3.8,\n\n    // Layout event callbacks; equivalent to `layout.one('layoutready', callback)` for example\n    ready() {}, // on layoutready\n    stop() {}, // on layoutstop\n    ...animationOptions,\n  },\n  cola: {\n    name: 'cola',\n    animate: true, // whether to show the layout as it's running\n    refresh: 1, // number of ticks per frame; higher is faster but more jerky\n    maxSimulationTime: 4000, // max length in ms to run the layout\n    ungrabifyWhileSimulating: false, // so you can't drag nodes during layout\n    fit: true, // on every layout reposition of nodes, fit the viewport\n    padding: 30, // padding around the simulation\n    // boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    nodeDimensionsIncludeLabels: false, // whether labels should be included in determining the space used by a node\n\n    // layout event callbacks\n    ready() {}, // on layoutready\n    stop() {}, // on layoutstop\n\n    // positioning options\n    randomize: false, // use random node positions at beginning of layout\n    avoidOverlap: true, // if true, prevents overlap of node bounding boxes\n    handleDisconnected: true, // if true, avoids disconnected components from overlapping\n    convergenceThreshold: 0.01, // when the alpha value (system energy) falls below this value, the layout stops\n    nodeSpacing(node) { return 10 }, // extra spacing around nodes\n    flow: undefined, // use DAG/tree flow layout if specified, e.g. { axis: 'y', minSeparation: 30 }\n    alignment: undefined, // relative alignment constraints on nodes, e.g. {vertical: [[{node: node1, offset: 0}, {node: node2, offset: 5}]], horizontal: [[{node: node3}, {node: node4}], [{node: node5}, {node: node6}]]}\n    gapInequalities: undefined, // list of inequality constraints for the gap between the nodes, e.g. [{\"axis\":\"y\", \"left\":node1, \"right\":node2, \"gap\":25}]\n\n    // different methods of specifying edge length\n    // each can be a constant numerical value or a function like `function( edge ){ return 2; }`\n    edgeLength: undefined, // sets edge length directly in simulation\n    edgeSymDiffLength: undefined, // symmetric diff edge length in simulation\n    edgeJaccardLength: undefined, // jaccard edge length in simulation\n\n    // iterations of cola algorithm; uses default values on undefined\n    unconstrIter: undefined, // unconstrained initial layout iterations\n    userConstIter: undefined, // initial layout iterations with user-specified constraints\n    allConstIter: undefined, // initial layout iterations with all constraints including non-overlap\n    ...animationOptions,\n  },\n  avsdf: {\n    name: 'avsdf',\n    ready() {\n    },\n    // Called on `layoutstop`\n    stop() {\n    },\n    // number of ticks per frame; higher is faster but more jerky\n    refresh: 30,\n    // Whether to fit the network view after when done\n    fit: true,\n    // Padding on fit\n    padding: 10,\n    // Prevent the user grabbing nodes during the layout (usually with animate:true)\n    ungrabifyWhileSimulating: false,\n    // Type of layout animation. The option set is {'during', 'end', false}\n    animate: 'end',\n    // Duration for animate:end\n    animationDuration: 500,\n    // How apart the nodes are\n    nodeSeparation: 60,\n    ...animationOptions,\n  },\n  dagre: {\n    name: 'dagre',\n    nodeSep: undefined, // the separation between adjacent nodes in the same rank\n    edgeSep: undefined, // the separation between adjacent edges in the same rank\n    rankSep: undefined, // the separation between each rank in the layout\n    rankDir: undefined, // 'TB' for top to bottom flow, 'LR' for left to right,\n    ranker: undefined, // Type of algorithm to assign a rank to each node in the input graph. Possible values: 'network-simplex', 'tight-tree' or 'longest-path'\n    minLen(edge) { return 1 }, // number of ranks to keep between the source and target of the edge\n    edgeWeight(edge) { return 1 }, // higher weight edges are generally made shorter and straighter than lower weight edges\n\n    // general layout options\n    fit: true, // whether to fit to viewport\n    padding: 30, // fit padding\n    spacingFactor: undefined, // Applies a multiplicative factor (>0) to expand or compress the overall area that the nodes take up\n    nodeDimensionsIncludeLabels: false, // whether labels should be included in determining the space used by a node\n    animate: false, // whether to transition the node positions\n    animateFilter(node, i) { return true }, // whether to animate specific nodes when animation is on; non-animated nodes immediately go to their final positions\n    animationDuration: 500, // duration of animation in ms if enabled\n    animationEasing: undefined, // easing of animation if enabled\n    // boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    transform(node, pos) { return pos }, // a function that applies a transform to the final node position\n    ready() {}, // on layoutready\n    stop() {}, // on layoutstop\n    ...animationOptions,\n  },\n  spread: {\n    name: 'spread',\n    animate: true, // Whether to show the layout as it's running\n    ready: undefined, // Callback on layoutready\n    stop: undefined, // Callback on layoutstop\n    fit: true, // Reset viewport to fit default simulationBounds\n    minDist: 20, // Minimum distance between nodes\n    padding: 20, // Padding\n    expandingFactor: -1.0, // If the network does not satisfy the minDist\n    // criterium then it expands the network of this amount\n    // If it is set to -1.0 the amount of expansion is automatically\n    // calculated based on the minDist, the aspect ratio and the\n    // number of nodes\n    prelayout: { name: 'cose' }, // Layout options for the first phase\n    maxExpandIterations: 4, // Maximum number of expanding iterations\n    // boundingBox: undefined, // Constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n    randomize: false, // Uses random initial node positions on true\n    ...animationOptions,\n  },\n  klay: {\n    // nodeDimensionsIncludeLabels: false, // Boolean which changes whether label dimensions are included when calculating node dimensions\n    // fit: true, // Whether to fit\n    // padding: 20, // Padding on fit\n    // animate: false, // Whether to transition the node positions\n    // animateFilter(node, i) { return true }, // Whether to animate specific nodes when animation is on; non-animated nodes immediately go to their final positions\n    // animationDuration: 500, // Duration of animation in ms if enabled\n    // animationEasing: undefined, // Easing of animation if enabled\n    // transform(node, pos) { return pos }, // A function that applies a transform to the final node position\n    // ready: undefined, // Callback on layoutready\n    // stop: undefined, // Callback on layoutstop\n    // klay: {\n    // // Following descriptions taken from http://layout.rtsys.informatik.uni-kiel.de:9444/Providedlayout.html?algorithm=de.cau.cs.kieler.klay.layered\n    //   addUnnecessaryBendpoints: false, // Adds bend points even if an edge does not change direction.\n    //   aspectRatio: 1.6, // The aimed aspect ratio of the drawing, that is the quotient of width by height\n    //   borderSpacing: 20, // Minimal amount of space to be left to the border\n    //   compactComponents: false, // Tries to further compact components (disconnected sub-graphs).\n    //   crossingMinimization: 'LAYER_SWEEP', // Strategy for crossing minimization.\n    //   /* LAYER_SWEEP The layer sweep algorithm iterates multiple times over the layers, trying to find node orderings that minimize the number of crossings. The algorithm uses randomization to increase the odds of finding a good result. To improve its results, consider increasing the Thoroughness option, which influences the number of iterations done. The Randomization seed also influences results.\n    // INTERACTIVE Orders the nodes of each layer by comparing their positions before the layout algorithm was started. The idea is that the relative order of nodes as it was before layout was applied is not changed. This of course requires valid positions for all nodes to have been set on the input graph before calling the layout algorithm. The interactive layer sweep algorithm uses the Interactive Reference Point option to determine which reference point of nodes are used to compare positions. */\n    //   cycleBreaking: 'GREEDY', // Strategy for cycle breaking. Cycle breaking looks for cycles in the graph and determines which edges to reverse to break the cycles. Reversed edges will end up pointing to the opposite direction of regular edges (that is, reversed edges will point left if edges usually point right).\n    //   /* GREEDY This algorithm reverses edges greedily. The algorithm tries to avoid edges that have the Priority property set.\n    // INTERACTIVE The interactive algorithm tries to reverse edges that already pointed leftwards in the input graph. This requires node and port coordinates to have been set to sensible values. */\n    //   direction: 'UNDEFINED', // Overall direction of edges: horizontal (right / left) or vertical (down / up)\n    //   /* UNDEFINED, RIGHT, LEFT, DOWN, UP */\n    //   edgeRouting: 'ORTHOGONAL', // Defines how edges are routed (POLYLINE, ORTHOGONAL, SPLINES)\n    //   edgeSpacingFactor: 0.5, // Factor by which the object spacing is multiplied to arrive at the minimal spacing between edges.\n    //   feedbackEdges: false, // Whether feedback edges should be highlighted by routing around the nodes.\n    //   fixedAlignment: 'NONE', // Tells the BK node placer to use a certain alignment instead of taking the optimal result.  This option should usually be left alone.\n    //   /* NONE Chooses the smallest layout from the four possible candidates.\n    // LEFTUP Chooses the left-up candidate from the four possible candidates.\n    // RIGHTUP Chooses the right-up candidate from the four possible candidates.\n    // LEFTDOWN Chooses the left-down candidate from the four possible candidates.\n    // RIGHTDOWN Chooses the right-down candidate from the four possible candidates.\n    // BALANCED Creates a balanced layout from the four possible candidates. */\n    //   inLayerSpacingFactor: 1.0, // Factor by which the usual spacing is multiplied to determine the in-layer spacing between objects.\n    //   layoutHierarchy: false, // Whether the selected layouter should consider the full hierarchy\n    //   linearSegmentsDeflectionDampening: 0.3, // Dampens the movement of nodes to keep the diagram from getting too large.\n    //   mergeEdges: false, // Edges that have no ports are merged so they touch the connected nodes at the same points.\n    //   mergeHierarchyCrossingEdges: true, // If hierarchical layout is active, hierarchy-crossing edges use as few hierarchical ports as possible.\n    //   nodeLayering: 'NETWORK_SIMPLEX', // Strategy for node layering.\n    //   /* NETWORK_SIMPLEX This algorithm tries to minimize the length of edges. This is the most computationally intensive algorithm. The number of iterations after which it aborts if it hasn't found a result yet can be set with the Maximal Iterations option.\n    // LONGEST_PATH A very simple algorithm that distributes nodes along their longest path to a sink node.\n    // INTERACTIVE Distributes the nodes into layers by comparing their positions before the layout algorithm was started. The idea is that the relative horizontal order of nodes as it was before layout was applied is not changed. This of course requires valid positions for all nodes to have been set on the input graph before calling the layout algorithm. The interactive node layering algorithm uses the Interactive Reference Point option to determine which reference point of nodes are used to compare positions. */\n    //   nodePlacement: 'BRANDES_KOEPF', // Strategy for Node Placement\n    //   /* BRANDES_KOEPF Minimizes the number of edge bends at the expense of diagram size: diagrams drawn with this algorithm are usually higher than diagrams drawn with other algorithms.\n    // LINEAR_SEGMENTS Computes a balanced placement.\n    // INTERACTIVE Tries to keep the preset y coordinates of nodes from the original layout. For dummy nodes, a guess is made to infer their coordinates. Requires the other interactive phase implementations to have run as well.\n    // SIMPLE Minimizes the area at the expense of... well, pretty much everything else. */\n    //   randomizationSeed: 1, // Seed used for pseudo-random number generators to control the layout algorithm; 0 means a new seed is generated\n    //   routeSelfLoopInside: false, // Whether a self-loop is routed around or inside its node.\n    //   separateConnectedComponents: true, // Whether each connected component should be processed separately\n    //   spacing: 20, // Overall setting for the minimal amount of space to be left between objects\n    //   thoroughness: 7, // How much effort should be spent to produce a nice layout..\n    // },\n    // priority(edge) { return null }, // Edges with a non-nil value are skipped when greedy edge cycle breaking is enabled\n    // ...animationOptions,\n  },\n  // 'd3-force': {\n  //   animate: true, // whether to show the layout as it's running; special 'end' value makes the layout animate like a discrete layout\n  //   maxIterations: 0, // max iterations before the layout will bail out\n  //   maxSimulationTime: 0, // max length in ms to run the layout\n  //   ungrabifyWhileSimulating: false, // so you can't drag nodes during layout\n  //   fixedAfterDragging: false, // fixed node after dragging\n  //   fit: false, // on every layout reposition of nodes, fit the viewport\n  //   padding: 30, // padding around the simulation\n  //   // boundingBox: undefined, // constrain layout bounds; { x1, y1, x2, y2 } or { x1, y1, w, h }\n  //   /** d3-force API* */\n  //   alpha: 1, // sets the current alpha to the specified number in the range [0,1]\n  //   alphaMin: 0.001, // sets the minimum alpha to the specified number in the range [0,1]\n  //   alphaDecay: 1 - Math.pow(0.001, 1 / 300), // sets the alpha decay rate to the specified number in the range [0,1]\n  //   alphaTarget: 0, // sets the current target alpha to the specified number in the range [0,1]\n  //   velocityDecay: 0.4, // sets the velocity decay factor to the specified number in the range [0,1]\n  //   collideRadius: 1, // sets the radius accessor to the specified number or function\n  //   collideStrength: 0.7, // sets the force strength to the specified number in the range [0,1]\n  //   collideIterations: 1, // sets the number of iterations per application to the specified number\n  //   linkId: function id(d) {\n  //     return d.index\n  //   }, // sets the node id accessor to the specified function\n  //   linkDistance: 30, // sets the distance accessor to the specified number or function\n  //   linkStrength: function strength(link) {\n  //     return 1 / Math.min(count(link.source), count(link.target))\n  //   }, // sets the strength accessor to the specified number or function\n  //   linkIterations: 1, // sets the number of iterations per application to the specified number\n  //   manyBodyStrength: -30, // sets the strength accessor to the specified number or function\n  //   manyBodyTheta: 0.9, // sets the Barnes–Hut approximation criterion to the specified number\n  //   manyBodyDistanceMin: 1, // sets the minimum distance between nodes over which this force is considered\n  //   manyBodyDistanceMax: Infinity, // sets the maximum distance between nodes over which this force is considered\n  //   xStrength: 0.1, // sets the strength accessor to the specified number or function\n  //   xX: 0, // sets the x-coordinate accessor to the specified number or function\n  //   yStrength: 0.1, // sets the strength accessor to the specified number or function\n  //   yY: 0, // sets the y-coordinate accessor to the specified number or function\n  //   radialStrength: 0.1, // sets the strength accessor to the specified number or function\n  //   radialRadius: [20], // sets the circle radius to the specified number or function\n  //   radialX: 0, // sets the x-coordinate of the circle center to the specified number\n  //   radialY: 0, // sets the y-coordinate of the circle center to the specified number\n  //   // layout event callbacks\n  //   ready() {}, // on layoutready\n  //   stop() {}, // on layoutstop\n  //   tick(progress) {}, // on every iteration\n  //   // positioning options\n  //   randomize: false, // use random node positions at beginning of layout\n  //   // infinite layout options\n  //   infinite: false, // overrides all other options for a forces-all-the-time mode\n  // },\n} as const\n","// import { Icon, Text, TouchableOpacity } from 'unitx-ui'\nimport Layouts from '@core/layouts'\nimport { EventInfo } from '@type'\n\nexport const THEME = {\n  backgroundColor: '#3287a8',\n  fillColor: 'rgb(153, 153, 153)'\n  ,\n}\nexport const ELEMENT_TYPE = {\n  EDGE: 'EDGE',\n  NODE: 'NODE',\n} as const\n\nexport const EVENT = {\n  ADD_CLUSTER_ELEMENT: 'ADD_CLUSTER_ELEMENT',\n  ADD_DATA_ADDITIONAL: 'ADD_DATA_ADDITIONAL',\n  ADD_DATA_VALUE_ADDITIONAL: 'ADD_DATA_VALUE_ADDITIONAL',\n  ADD_DATA_VALUE: 'ADD_DATA_VALUE',\n  ADD_DATA: 'ADD_DATA',\n  ADD_EDGE: 'ADD_EDGE',\n  ADD_NODE: 'ADD_NODE',\n  APPLY_EVENTS: 'APPLY_EVENTS',\n  APPLY_RECORDED_EVENTS: 'APPLY_RECORDED_EVENTS',\n  BOX_SELECTION: 'BOX_SELECTION',\n  CALCULATE_GLOBAL_NETWORK_STATISTICS: 'CALCULATE_GLOBAL_NETWORK_STATISTICS',\n  CALCULATE_LOCAL_NETWORK_STATISTICS: 'CALCULATE_LOCAL_NETWORK_STATISTICS',\n  CHANGE_CLUSTER_VISIBILITY: 'CHANGE_CLUSTER_VISIBILITY',\n  CHANGE_DATA_NAME_ADDITIONAL: 'CHANGE_DATA_NAME_ADDITIONAL',\n  CHANGE_DATA_NAME: 'CHANGE_DATA_NAME',\n  CHANGE_DATA_TYPE: 'CHANGE_DATA_TYPE',\n  CHANGE_DATA_VALUE_ADDITIONAL: 'CHANGE_DATA_VALUE_ADDITIONAL',\n  CHANGE_DATA_VALUE: 'CHANGE_DATA_VALUE',\n  CHANGE_THEME: 'CHANGE_THEME',\n  CLEAR_NODE_GLOBAL_LABEL: 'CLEAR_NODE_GLOBAL_LABEL',\n  CLEAR_NODE_LOCAL_LABEL: 'CLEAR_NODE_LOCAL_LABEL',\n  CLOSE_MODAL: 'CLOSE_MODAL',\n  CREATE_CLUSTER_BY_ALGORITHM_FORM_SUBMIT: 'CREATE_CLUSTER_BY_ALGORITHM_FORM_SUBMIT',\n  CREATE_CLUSTER_BY_ALGORITHM: 'CREATE_CLUSTER_BY_ALGORITHM',\n  CREATE_CLUSTER_FORM_SUBMIT: 'CREATE_CLUSTER_FORM_SUBMIT',\n  CREATE_CLUSTER: 'CREATE_CLUSTER',\n  CREATE_PLAYLIST: 'CREATE_PLAYLIST',\n  DATA_VALUE_DOWN: 'DATA_VALUE_DOWN',\n  DATA_VALUE_UP: 'DATA_VALUE_UP',\n  DELETE_CLUSTER_ELEMENT: 'DELETE_CLUSTER_ELEMENT',\n  DELETE_CLUSTER: 'DELETE_CLUSTER',\n  DELETE_DATA_ADDITIONAL: 'DELETE_DATA_ADDITIONAL',\n  DELETE_DATA_VALUE_ADDITIONAL: 'DELETE_DATA_VALUE_ADDITIONAL',\n  DELETE_DATA_VALUE: 'DELETE_DATA_VALUE',\n  DELETE_DATA: 'DELETE_DATA',\n  DELETE_EDGE: 'DELETE_EDGE',\n  DELETE_HISTORY_ITEM: 'DELETE_HISTORY_ITEM',\n  DELETE_NODE: 'DELETE_NODE',\n  DELETE_PLAYLIST: 'DELETE_PLAYLIST',\n  ELEMENT_SELECTED_WITH_ZOOM: 'ELEMENT_SELECTED_WITH_ZOOM',\n  ELEMENT_SELECTED: 'ELEMENT_SELECTED',\n  ELEMENT_SETTINGS: 'ELEMENT_SETTINGS',\n  ELEMENT_SETTINGS_FORM_SUBMIT: 'ELEMENT_SETTINGS_FORM_SUBMIT',\n  EXPORT_DATA: 'EXPORT_DATA',\n  IMPORT_DATA: 'IMPORT_DATA',\n  IMPORT_EVENTS: 'IMPORT_EVENTS',\n  LAYOUT_ANIMATION_DURATION_CHANGED: 'LAYOUT_ANIMATION_DURATION_CHANGED',\n  LAYOUT_CHANGED: 'LAYOUT_CHANGED',\n  MAKE_DATA_LABEL_FIRST: 'MAKE_DATA_LABEL_FIRST',\n  MAKE_DATA_LABEL: 'MAKE_DATA_LABEL',\n  MAKE_GLOBAL_DATA_LABEL_FIRST: 'MAKE_GLOBAL_DATA_LABEL_FIRST',\n  MAKE_GLOBAL_DATA_LABEL: 'MAKE_GLOBAL_DATA_LABEL',\n  MODE_CHANGED: 'MODE_CHANGED',\n  PLAY_EVENTS: 'PLAY_EVENTS',\n  PRESS_ADD_CLUSTER_ELEMENT: 'PRESS_ADD_CLUSTER_ELEMENT',\n  PRESS_BACKGROUND: 'PRESS_BACKGROUND',\n  RECORD_FINISHED: 'RECORD_FINISHED',\n  REDO_EVENT: 'REDO_EVENT',\n  REORDER_CLUSTER: 'REORDER_CLUSTER',\n  REORDER_HISTORY_ITEM: 'REORDER_HISTORY_ITEM',\n  REORDER_PLAYLIST: 'REORDER_PLAYLIST',\n  SELECT_CLUSTER: 'SELECT_CLUSTER',\n  SET_NODE_GLOBAL_LABEL: 'SET_NODE_GLOBAL_LABEL',\n  SET_NODE_LOCAL_LABEL: 'SET_NODE_LOCAL_LABEL',\n  SET_POSITIONS_IMPERATIVELY: 'SET_POSITIONS_IMPERATIVELY',\n  SETTINGS_FORM_CHANGED: 'SETTINGS_FORM_CHANGED',\n  TOGGLE_ACTION_BAR: 'TOGGLE_ACTION_BAR',\n  TOGGLE_DATA_BAR: 'TOGGLE_DATA_BAR',\n  TOGGLE_FILTER_BAR: 'TOGGLE_FILTER_BAR',\n  TOGGLE_NODE_GLOBAL_LABEL_FIRST: 'TOGGLE_NODE_GLOBAL_LABEL_FIRST',\n  TOGGLE_PREFERENCES_MODAL: 'TOGGLE_PREFERENCES_MODAL',\n  TOGGLE_RECORD_ACTIONS: 'TOGGLE_RECORD_ACTIONS',\n  TOGGLE_RECORD_EVENTS: 'TOGGLE_RECORD_EVENTS',\n  TOGGLE_RECORD: 'TOGGLE_RECORD',\n  UNDO_EVENT: 'UNDO_EVENT',\n  UPDATE_DATA: 'UPDATE_DATA',\n} as const\n\nexport const ELEMENT_DATA_FIELDS = {\n  POSITION: 'position',\n  ID: 'id',\n  DATA: 'data',\n  CONTEXT: '__context',\n} as const\n\nexport const EDITOR_MODE = {\n  ADD: 'ADD',\n  DELETE: 'DELETE',\n  CONTINUES_ADD: 'CONTINUES_ADD',\n  CONTINUES_DELETE: 'CONTINUES_DELETE',\n  DEFAULT: 'DEFAULT',\n  ADD_CLUSTER_ELEMENT: 'ADD_CLUSTER_ELEMENT',\n} as const\n\nexport const DATA_TYPE = {\n  number: 'number',\n  string: 'string',\n  id: 'id',\n  unknown: 'unknown',\n} as const\n\nexport const DATA_TYPE_BY_INDEX = [\n  'string',\n  'number',\n  'id',\n  'unknown',\n] as const\n\nexport const LAYOUT_NAMES = Object.keys(Layouts)\n\nexport const PIXI_EVENT_NAMES = {\n  onPress: 'pointertap',\n  onHoverEnd: 'mouseout',\n  onHoverStart: 'mouseover',\n  onPressEnd: 'pointerup',\n  onPressMove: 'pointermove',\n  onPressStart: 'pointerdown',\n  onRightPress: 'rightclick',\n}\n\nexport const SIDE_PANEL_DEFAULT_WIDTH = 330\n// export const eventHandlers = [\n//   'click',\n//   'mousedown',\n//   'mousemove',\n//   'mouseout',\n//   'mouseover',\n//   'mouseup',\n//   'mouseupoutside',\n//   'tap',\n//   'touchstart',\n//   'touchmove',\n//   'touchend',\n//   'touchendoutside',\n//   'pointercancel',\n//   'pointerout',\n//   'pointerover',\n//   'pointertap',\n//   'pointerdown',\n//   'pointerup',\n//   'pointerupoutside',\n//   'pointermove',\n//   'rightclick',\n//   'rightdown',\n//   'rightup',\n//   'rightupoutside',\n//   'touchcancel',\n//   'touchendoutside',\n//   'touchmove',\n//   'touchstart',\n// ]\n\nexport const CYTOSCAPE_EVENT = {\n  select: 'select',\n  unselect: 'unselect',\n  position: 'position',\n  selectEdge: 'selectEdge',\n  unselectEdge: 'unselectEdge',\n  selectNode: 'selectNode',\n  unselectNode: 'unselectNode',\n  data: 'data',\n  mouseover: 'mouseover',\n  mouseout: 'mouseout',\n} as const\nexport const EDGE_LINE_Z_INDEX = -100\nexport const EDGE_CONTAINER_Z_INDEX = -99\n\nexport const MOCK_DATA = {\n  events: [{\n    type: 'ELEMENT_SELECTED', elementId: 'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2007:BB5172', event: { data: { originalEvent: { metaKey: false } } }, id: '97a3057d-8e8a-437a-8180-13382e4d05a0', date: '2021-03-05T12:24:25.666Z',\n  }, {\n    type: 'PRESS_BACKGROUND', payload: { x: 2447.24609375, y: 1719.8828125 }, id: '7160a81a-85cc-493a-9ba5-5b515c4e260d', date: '2021-03-05T12:24:26.238Z', event: {},\n  }, {\n    type: 'ELEMENT_SELECTED', elementId: 'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2013:BZ1717', event: { data: { originalEvent: { metaKey: false } } }, id: '78e7c6c2-11a4-431d-9662-99713fc8df41', date: '2021-03-05T12:24:27.128Z',\n  }, {\n    type: 'PRESS_BACKGROUND', payload: { x: 2928.828125, y: 1769.6484375 }, id: '83ea6691-70c5-4f6a-b389-bbdc46181c6c', date: '2021-03-05T12:24:27.643Z', event: {},\n  }, {\n    type: 'ELEMENT_SELECTED', elementId: 'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2011:BR5215', event: { data: { originalEvent: { metaKey: false } } }, id: 'f522d845-000a-4583-9355-16c56cbd0d66', date: '2021-03-05T12:24:28.695Z',\n  }] as EventInfo[],\n}\n","import * as R from 'colay/ramda'\nimport * as C from 'colay/color'\nimport * as PIXI from 'pixi.js'\nimport { applyDefaultProps as nativeApplyDefaultProps } from '@inlet/react-pixi'\nimport { EventMap } from 'colay-ui/type'\nimport { BoundingBox, Position } from 'colay/type'\n// import { Properties } from 'csstype'\n// import * as C from 'colay/color'\nimport {\n  Element, NodeData, EdgeData, ElementData,\n  DisplayObjectWithYoga, NodeContext, EdgeContext,\n  Cluster, EventInfo, GraphEditorRef, ControllerState,\n  ViewportRef, LightEventInfo,\n  EdgeElement, NodeElement,\n} from '@type'\nimport {\n  ELEMENT_DATA_FIELDS, PIXI_EVENT_NAMES, EVENT,\n} from '@constants'\n\n// type Result = {\n//   x: number;\n//   y: number;\n//   width: number;\n//   height: number;\n//   fill: number;\n// }\n// export const processStyle = (style: Properties): Result => {\n//   const newStyle: Result = {} as Result\n//   const _ = R.forEachObjIndexed((val: any, key: string) => {\n//     let isNumber = true\n//     if (R.isString(val) && R.includes(val, '%')) {\n//       isNumber = false\n//       val = (parseFloat(R.replace(val, '%', '')) / 100)\n//     }\n//     switch (key) {\n//       case 'width':\n//         newStyle.width = isNumber ? val : val * parent.width\n//         break\n//       case 'height':\n//         newStyle.height = isNumber ? val : val * parent.height\n//         break\n//       case 'top':\n//         newStyle.y = isNumber ? val : val * parent.height\n//         break\n//       case 'left':\n//         newStyle.x = isNumber ? val : val * parent.width\n//         break\n//       case 'backgroundColor':\n//         newStyle.fill = C.rgbNumber(val)\n//         break\n//       case 'borderRadius':\n//         newStyle.radius = val\n//         break\n//       default:\n//         break\n//     }\n//   }, style)\n//   return newStyle\n// }\n\nexport const processStyle = (props: any = {}, mutableInstance): any => {\n  const { parent } = mutableInstance\n  const {\n    style = {},\n  } = props\n  const newProps: any = {}\n  R.forEachObjIndexed((val: any, key: string) => {\n    let isNumber = true\n    if (R.is(String)(val) && R.includes(val, '%')) {\n      isNumber = false\n      val = (parseFloat(R.replace(val, '%', '')) / 100)\n    }\n    switch (key) {\n      case 'width':\n        newProps.width = isNumber ? val : val * parent.width\n        break\n      case 'height':\n        newProps.height = isNumber ? val : val * parent.height\n        break\n      case 'top':\n        newProps.y = isNumber ? val : val * parent.height\n        break\n      case 'left':\n        newProps.x = isNumber ? val : val * parent.width\n        break\n      case 'backgroundColor':\n        newProps.fill = C.rgbNumber(val)\n        break\n      case 'borderRadius':\n        newProps.radius = val\n        break\n      default:\n        break\n    }\n  }, style)\n  return newProps\n}\n\nconst JUSTIFY_CONTENT = {\n  'flex-start': 'left',\n  center: 'center',\n  'flex-end': 'right',\n}\nexport const processTextStyle = (style: {\n  fontFamily?: string;\n  fontWeight?: string;\n  fontSize?: number;\n  justifyContent?: keyof typeof JUSTIFY_CONTENT;\n  color?: string;\n  width?: number;\n}) => {\n  const {\n    fontFamily,\n    fontWeight,\n    fontSize,\n    justifyContent,\n    color,\n    width,\n    // fontStyle,\n    // letterSpacing,\n    // textDecorationLine,\n    // textTransform,\n  } = style\n\n  return new PIXI.TextStyle({\n    // @ts-ignore\n    align: JUSTIFY_CONTENT[justifyContent ?? 'flex-start'],\n    ...(fontFamily ? { fontFamily } : {}),\n    ...(fontSize ? { fontSize: parseFloat(R.replace(`${fontSize}`, '%', '')) * width! } : {}),\n    ...(fontWeight ? { fontWeight: `${parseFloat(fontWeight)}` } : {}),\n    fill: color, // gradient\n    stroke: color,\n    strokeThickness: 20,\n    letterSpacing: 20,\n    // dropShadow: true,\n    // dropShadowColor: '#ccced2',\n    // dropShadowBlur: 4,\n    // dropShadowAngle: Math.PI / 6,\n    // dropShadowDistance: 6,\n    // wordWrap: true,\n    // wordWrapWidth: 440,\n  })\n}\n// export const PIXI_EVENT_NAMES = {\n//   onAdded: 'added',\n//   onClick: 'pointertap',\n//   onMouseDown: 'mousedown',\n//   onMouseMove: 'mousemove',\n//   onMouseOut: 'mouseout',\n//   onMouseOver: 'mouseover',\n//   onMouseUp: 'mouseup',\n//   onMouseUpOutside: 'mouseupoutside',\n//   onPointerCancel: 'pointercancel',\n//   onPointerDown: 'pointerdown',\n//   onPointerMove: 'pointermove',\n//   onPointerOut: 'pointerout',\n//   onPointerOver: 'pointerover',\n//   onPointerTap: 'pointertap',\n//   onPointerUp: 'pointerup',\n//   onPointerUpOutside: 'pointerupoutside',\n//   onRemoved: 'removed',\n//   onRightClick: 'rightclick',\n//   onRightDown: 'rightdown',\n//   onRightUp: 'rightup',\n//   onRightUpOutside: 'rightupoutside',\n//   onTap: 'tap',\n//   onTouchCancel: 'touchcancel',\n//   onTouchEnd: 'touchend',\n//   onTouchEndoutside: 'touchendoutside',\n//   onTouchMove: 'touchmove',\n//   onTouchStart: 'touchstart',\n// }\n\nexport type EventType = (e: PIXI.InteractionEvent) => void\nexport type Events = EventMap\n\nexport const applyEvents = (\n  instance: PIXI.DisplayObject,\n  props: Record<string, any>,\n) => {\n  Object\n    .keys(PIXI_EVENT_NAMES)\n    .map((eventName) => {\n      // @ts-ignore\n      const domEventName = PIXI_EVENT_NAMES[eventName]\n      const callback = props[eventName]\n      if (callback) {\n        // @ts-ignore\n        instance.on(domEventName, callback)\n      }\n    })\n}\n\nconst processProps = (props: Record<string, any>, mutableInstance) => {\n  const newProps = {\n    ...props,\n    // ...processStyle(props, mutableInstance),\n  }\n  Object\n    .keys(PIXI_EVENT_NAMES)\n    .map((eventName) => {\n      // @ts-ignore\n      const domEventName = PIXI_EVENT_NAMES[eventName]\n      const callback = props[eventName]\n      if (callback) {\n        newProps[domEventName] = callback\n      }\n    })\n  return newProps\n}\n\ntype ApplyDefaultPropsConfig = {\n  isFlex?: boolean;\n  rescaleToYoga?: boolean;\n}\n\nexport const preprocessProps = <T extends Record<string, any>>(props: T): T => ({\n  ...props,\n})\n\nexport const IS_FLEX_DEFAULT = false\n\nexport const applyDefaultProps = <P extends Record<string, any> >(\n  instance: PIXI.Graphics | PIXI.DisplayObject | PIXI.Container,\n  oldProps: P,\n  // @ts-ignore\n  newProps: P = {},\n  config: ApplyDefaultPropsConfig = {\n    isFlex: IS_FLEX_DEFAULT,\n    rescaleToYoga: false,\n  },\n) => {\n  const mutableInstance = instance as DisplayObjectWithYoga\n  const {\n    isFlex = IS_FLEX_DEFAULT,\n    rescaleToYoga = false,\n  } = config\n  const { style = {}, ...restProps } = newProps\n  if (isFlex) {\n    mutableInstance.flex = true // display === 'flex'\n    mutableInstance.yoga.flexDirection = style?.flexDirection ?? 'column'\n    mutableInstance.yoga.keepAspectRatio = R.equals(\n      newProps.resizeMode,\n      'contain',\n    )\n    // @TODO: was true\n    mutableInstance.yoga.rescaleToYoga = rescaleToYoga\n    mutableInstance.yoga.fromConfig(style)\n    // mutableInstance.yoga.animationConfig = {\n    //   time: 200,\n    //   easing: (t) => t,\n    // }\n  }\n  // FOR CULLING\n  mutableInstance._visible = newProps.visible\n  // FOR CULLING\n  return nativeApplyDefaultProps(\n    mutableInstance,\n    processProps(oldProps, mutableInstance),\n    processProps(restProps, mutableInstance),\n  )\n}\n\n/**\n * Helper util for fetching the texture from props\n * Can be either texture or image\n *\n * @param {string} elementType\n * @param {object} props\n * @returns {PIXI.Texture|null}\n */\nexport const getTextureFromProps = (elementType: string, pureProps: Record<string, any> = {}) => {\n  const {\n    source,\n    ...rest\n  } = pureProps\n  const isUriSource = R.has('uri')(source)\n  const props: Record<string, any> = {\n    ...rest,\n    ...(isUriSource ? ({ image: source.uri }) : ({ texture: source })),\n  }\n  const emitChange = () => requestAnimationFrame(() => {\n    window.dispatchEvent(new CustomEvent('__REACT_PIXI_REQUEST_RENDER__'))\n  })\n\n  const check = (inType: any, validator: any) => {\n    if (props.hasOwnProperty(inType)) {\n      const valid = validator.typeofs.some((t: any) => typeof props[inType] === t)\n        || validator.instanceofs.some((i: any) => props[inType] instanceof i)\n      R.throwWhen([\n        [R.always(!valid), R.always(`${elementType} ${inType} prop is invalid`)],\n      ])('')\n      return props[inType]\n    }\n  }\n\n  if (props.texture) {\n    R.throwWhen([\n      [R.always(R.not(props.texture instanceof PIXI.Texture)), R.always(`${elementType} texture needs to be typeof \\`PIXI.Texture\\``)],\n    ])('')\n    return props.texture\n  }\n  const result = check('image', { typeofs: ['string'], instanceofs: [HTMLImageElement] })\n      || check('video', { typeofs: ['string'], instanceofs: [HTMLVideoElement] })\n      || check('source', {\n        typeofs: ['string', 'number'],\n        instanceofs: [HTMLImageElement, HTMLVideoElement, HTMLCanvasElement, PIXI.Texture],\n      })\n\n  R.throwWhen([\n    [R.always(!result), R.always(`${elementType} could not get texture from props`)],\n  ])('')\n\n  const texture = PIXI.Texture.from(result)\n  texture.once('update', emitChange)\n  texture.once('loaded', emitChange)\n\n  if (texture.valid) {\n    emitChange()\n  }\n\n  return texture\n}\n\nexport const getSelectedItemByElement = (\n  element: Element,\n  info: { nodes: NodeData[]; edges: EdgeData[]},\n) => {\n  const id = element.id()\n  const isNode = element.isNode()\n  const targetPath = isNode ? 'nodes' : 'edges'\n  const index = info[targetPath].findIndex((targetItem: ElementData) => targetItem.id === id)\n  return {\n    item: info[targetPath][index] as NodeData | EdgeData,\n    index: index as number,\n  }\n}\n\nexport const getSelectedElementInfo = (\n  controllerState: ControllerState, graphEditor: GraphEditorRef,\n) => {\n  const itemIds = controllerState.selectedElementIds\n  const selectedItemId = R.last(itemIds ?? [])\n  const selectedElement = selectedItemId\n    ? graphEditor.cy.$id(`${selectedItemId}`)\n    : null\n  if (!selectedElement) {\n    return {}\n  }\n  const isNode = selectedElement.isNode()\n  const targetPath = isNode ? 'nodes' : 'edges'\n  const index = controllerState[targetPath].findIndex(\n    (targetItem: ElementData) => targetItem.id === selectedItemId,\n  )\n  return {\n    selectedItem: controllerState[targetPath][index],\n    selectedElement,\n    index,\n    type: targetPath,\n  }\n}\n\nexport const getLabel = (path: string[] = [], item: ElementData): string => (R.isEmpty(path)\n  ? item.id\n  : (R.path([ELEMENT_DATA_FIELDS.DATA, ...path], item) ?? item.id))\n// const firstKey = path[0]\n// if (firstKey === ELEMENT_DATA_FIELDS.DATA) {\n//   const name = path[1]\n//   const foundDataItem = item.data?.find((dataItem) => dataItem.name === name)\n//   return foundDataItem?.value[0] ?? ''\n// }\n// return R.path(path)(item)\n\nexport const readTextFile = async (blob: Blob, encoding?: string) => new Promise<string>(\n  (res, rej) => {\n    const reader = new FileReader()\n    reader.addEventListener('load', () => {\n      const { result } = reader\n      // @ts-ignore\n      res(result)\n    })\n    reader.addEventListener('error', (error) => {\n      rej(error)\n    })\n    reader.readAsText(blob, encoding)\n  },\n)\n\nexport const calculateObjectBoundsWithoutChildren = (\n  container: PIXI.Container,\n): BoundingBox => {\n  const position = {\n    x: container.x * container.scale.x,\n    y: container.y * container.scale.y,\n  }\n  if (container.children.length === 0) {\n    return {\n      ...position,\n      width: 0,\n      height: 0,\n    }\n  }\n  const object = container.getChildAt(0) as PIXI.Container\n  const children = object.removeChildren()\n  if (object.width === 0) {\n    children.forEach((child) => {\n      object.addChild(child)\n    })\n    return {\n      ...calculateObjectBoundsWithoutChildren(object),\n      ...position,\n    } as BoundingBox\n  }\n  const box: BoundingBox = {\n    ...position,\n    width: object.width * object.scale.x,\n    height: object.height * object.scale.y,\n  }\n  children.forEach((child) => {\n    object.addChild(child)\n  })\n  return box\n}\n\nexport const getClusterVisibility = (id: string, clusters: Cluster[] = []) => {\n  let visible = true\n  clusters.forEach((cluster) => {\n    if (cluster.ids.includes(id)) {\n      visible = visible && !(cluster.visible ?? true)\n    }\n  })\n  return visible\n}\n// export const calculateDisplayObjectBounds = (object: PIXI.Container) => {\n//   const box = object.getLocalBounds()\n//   box.width = 45\n//   box.height = 45\n//   return {\n//     // x: object.x + (box.x - object.pivot.x) * object.scale.x,\n//     // y: object.y + (box.y - object.pivot.y) * object.scale.y,\n//     width: box.width * object.scale.x,\n//     height: box.height * object.scale.y,\n//     x: object.x * object.scale.x,\n//     y: object.y * object.scale.y,}\n//   }\n\nexport const calculateVisibilityByContext = (\n  element: EdgeElement|NodeElement,\n): boolean => {\n  const context = contextUtils.get(element)\n  const visibility = R.all(R.isTrue)(Object.values(context.settings.visibility))\n  // if (element.isEdge()) {\n  //   const target = element.target()\n  //   const source = element.source()\n  //   return visibility && calculateVisibilityByContext(target)\n  //   && calculateVisibilityByContext(source)\n  // }\n  return visibility\n}\n\n// @ts-ignore\nexport const filterEdges = (nodes: NodeData[]) => (\n  edges: EdgeData[],\n) => {\n  const nodeMap = R.groupBy(R.prop('id'), nodes)\n  return R.filter(\n    (\n      edge: EdgeData,\n    ) => !!(nodeMap[edge.source] && nodeMap[edge.target]),\n    edges,\n  )\n}\n\ntype GetUndoActionsSettings = {\n  controllerState: ControllerState,\n  graphEditor: GraphEditorRef\n}\nexport const getUndoEvents = (events: EventInfo[], settings: GetUndoActionsSettings) => {\n  const {\n    controllerState,\n    graphEditor,\n  } = settings\n  // const addHistory = true\n  const undoEvents: LightEventInfo[] = R.unnest(\n    events.map((event): LightEventInfo[] => {\n      const {\n        // elementId,\n        type,\n        payload,\n      } = event\n      const oldSelectedElementIds = controllerState.selectedElementIds\n      const {\n        selectedElement,\n        selectedItem,\n      } = getSelectedElementInfo(controllerState, graphEditor)\n      switch (type) {\n        case EVENT.ADD_CLUSTER_ELEMENT:\n          return [\n            {\n              type: EVENT.DELETE_CLUSTER_ELEMENT,\n              payload,\n            },\n          ]\n        case EVENT.ADD_EDGE:\n          return [\n            {\n              type: EVENT.DELETE_EDGE,\n              payload,\n            },\n          ]\n        case EVENT.ADD_NODE:\n          return [\n            {\n              type: EVENT.DELETE_NODE,\n              payload,\n            },\n          ]\n        case EVENT.CHANGE_THEME:\n          return [\n            {\n              type: EVENT.CHANGE_THEME,\n              payload: {\n                value: controllerState.actionBar?.theming?.value,\n              },\n            },\n          ]\n        case EVENT.CHANGE_CLUSTER_VISIBILITY:\n          return [\n            {\n              type: EVENT.CHANGE_CLUSTER_VISIBILITY,\n              payload: {\n                ...payload,\n                value: !payload.value,\n              },\n            },\n          ]\n        case EVENT.CLEAR_NODE_GLOBAL_LABEL:\n          return [\n            {\n              type: EVENT.SET_NODE_GLOBAL_LABEL,\n              payload: {\n                value: controllerState.label!.global!.nodes!,\n              },\n            },\n          ]\n        case EVENT.CLEAR_NODE_LOCAL_LABEL:\n          return [\n            {\n              type: EVENT.SET_NODE_LOCAL_LABEL,\n              payload: {\n                value: controllerState.label!.nodes[selectedItem!.id],\n              },\n            },\n          ]\n        case EVENT.CREATE_PLAYLIST:\n          return [\n            {\n              type: EVENT.DELETE_PLAYLIST,\n              payload: {\n                itemIds: payload.items?.map((item) => item.id),\n              },\n            },\n          ]\n        case EVENT.CREATE_CLUSTER:\n          return [\n            {\n              type: EVENT.DELETE_CLUSTER,\n              payload: {\n                itemIds: payload.items?.map((item) => item.id),\n              },\n            },\n          ]\n        case EVENT.DELETE_CLUSTER: {\n          const {\n            itemIds = [],\n          } = payload\n          const items = controllerState.graphConfig?.clusters?.filter(\n            (cluster) => itemIds.includes(cluster.id),\n          )\n          return [\n            {\n              type: EVENT.CREATE_CLUSTER,\n              payload: {\n                items,\n              },\n            },\n          ]\n        }\n        case EVENT.DELETE_CLUSTER_ELEMENT: {\n          return [\n            {\n              type: EVENT.ADD_CLUSTER_ELEMENT,\n              payload,\n            },\n          ]\n        }\n\n        case EVENT.DELETE_EDGE:\n          return [\n            {\n              type: EVENT.ADD_EDGE,\n              payload: {\n                items: controllerState.edges!.filter(\n                  (item) => payload.itemIds.includes(item.id),\n                ),\n              },\n            },\n          ]\n        case EVENT.DELETE_NODE: {\n          const {\n            itemIds,\n          } = payload\n          const relatedEdges = controllerState.edges.filter(\n            (edgeItem) => itemIds.includes(edgeItem.source)\n            || itemIds.includes(edgeItem.target),\n          )\n          return [\n            {\n              type: EVENT.ADD_NODE,\n              payload: {\n                items: controllerState.nodes!.filter(\n                  (item) => itemIds.includes(item.id),\n                ).map((item) => {\n                  const position = graphEditor.cy.$id(item.id).position()\n                  return {\n                    ...item,\n                    position,\n                  }\n                }),\n                edgeItems: relatedEdges,\n              },\n            },\n          ] }\n        case EVENT.DELETE_PLAYLIST:\n          return [\n            {\n              type: EVENT.CREATE_PLAYLIST,\n              payload: {\n                items: controllerState.playlists!.filter(\n                  (playlist) => payload.itemIds.includes(playlist.id),\n                ),\n              },\n            },\n          ]\n        case EVENT.ELEMENT_SELECTED:\n          return (oldSelectedElementIds && oldSelectedElementIds.length > 0)\n            ? [\n              {\n                ...event,\n                type: EVENT.ELEMENT_SELECTED,\n                payload: {\n                  itemIds: oldSelectedElementIds,\n                },\n              },\n            ]\n            : [\n              {\n                type: EVENT.PRESS_BACKGROUND,\n                payload: {\n                  x: graphEditor.viewport.center.x,\n                  y: graphEditor.viewport.center.y,\n                },\n              },\n            ]\n        case EVENT.ELEMENT_SELECTED_WITH_ZOOM:\n          return (oldSelectedElementIds && oldSelectedElementIds.length > 0)\n            ? [\n              {\n                ...event,\n                type: EVENT.ELEMENT_SELECTED,\n                payload: {\n                  itemIds: oldSelectedElementIds,\n                },\n              },\n            ]\n            : [\n              {\n                type: EVENT.PRESS_BACKGROUND,\n                payload: {\n                  x: graphEditor.viewport.center.x,\n                  y: graphEditor.viewport.center.y,\n                },\n              },\n            ]\n        case EVENT.LAYOUT_CHANGED:\n          return [\n            {\n              type: EVENT.SET_POSITIONS_IMPERATIVELY,\n              payload: {\n                oldLayout: controllerState.graphConfig?.layout,\n                positions: graphEditor.cy.nodes().map((element) => ({\n                  position: {\n                    x: element.position().x,\n                    y: element.position().y,\n                  },\n                  elementId: element.id(),\n                })),\n              },\n            },\n          ]\n\n        case EVENT.MODE_CHANGED:\n          return [\n            {\n              type: EVENT.MODE_CHANGED,\n              payload: {\n                value: controllerState.mode,\n              },\n            },\n          ]\n\n        case EVENT.PRESS_BACKGROUND:\n          // @ts-ignore\n          return oldSelectedElementIds\n            ? [\n              {\n                ...event,\n                payload: {\n                  itemIds: oldSelectedElementIds,\n                },\n                type: EVENT.ELEMENT_SELECTED,\n                event: {\n                  data: {\n                    originalEvent: {\n                      metaKey: false,\n                    },\n                  },\n                },\n              },\n            ]\n            : []\n        case EVENT.SET_NODE_GLOBAL_LABEL:\n          return [\n            {\n              type: EVENT.SET_NODE_GLOBAL_LABEL,\n              payload: {\n                value: controllerState.label!.global!.nodes!,\n              },\n            },\n          ]\n        case EVENT.SET_NODE_LOCAL_LABEL:\n          return [\n            {\n              type: EVENT.SET_NODE_LOCAL_LABEL,\n              payload: {\n                value: controllerState.label!.nodes[selectedItem!.id],\n              },\n            },\n          ]\n        case EVENT.UPDATE_DATA:\n          return [\n            {\n              type: EVENT.UPDATE_DATA,\n              payload: {\n                value: selectedItem!.data,\n              },\n            },\n          ]\n        case EVENT.SET_POSITIONS_IMPERATIVELY:\n          return [\n            {\n              type: EVENT.SET_POSITIONS_IMPERATIVELY,\n              payload: {\n                oldLayout: controllerState.graphConfig?.layout,\n                positions: payload.positions.map(({ elementId }) => {\n                  const element = graphEditor.cy.$id(`${elementId}`)\n                  return {\n                    position: {\n                      x: element.position().x,\n                      y: element.position().y,\n                    },\n                    elementId,\n                  }\n                }),\n\n              },\n            },\n          ]\n        default:\n          break\n      }\n      return []\n    }),\n  )\n  return {\n    addHistory: !R.isEmpty(undoEvents),\n    events: undoEvents,\n  }\n}\n\nconst throttleTimeTable: Record<string, number> = {}\nexport const throttle = (callback: (id: string)=> void, delay: number, _id?: string) => {\n  const time = (new Date()).getTime()\n  const id = _id ?? R.uuid()\n  const diff = throttleTimeTable[id] ? (time - throttleTimeTable[id]) : time\n\n  if (diff > delay) {\n    throttleTimeTable[id] = time\n    callback(id)\n  }\n}\n\nexport const isPositionInBox = (position: Position, box: BoundingBox) => {\n  const {\n    x,\n    y,\n  } = position\n  const x_ = box.x + box.width\n  const y_ = box.y + box.height\n  const startPos = {\n    x: box.x < x_ ? box.x : x_,\n    y: box.y < y_ ? box.y : y_,\n  }\n  const endPos = {\n    x: box.x < x_ ? x_ : box.x,\n    y: box.y < y_ ? y_ : box.y,\n  }\n  return x >= startPos.x && y >= startPos.y && x <= endPos.x\n  && y <= endPos.y\n}\n\nexport const getBoundingBox = (\n  startPos: Position, endPos: Position, abs = false,\n) => {\n  const width = endPos.x - startPos.x\n  const height = endPos.y - startPos.y\n  // const x = startPos.x < endPos.x ? startPos.x : endPos.x\n  // const y = startPos.y < endPos.y ? startPos.y : endPos.y\n  return {\n    ...startPos,\n    // x,\n    // y,\n    width: abs ? Math.abs(width) : width,\n    height: abs ? Math.abs(height) : height,\n  }\n}\n\nexport const cyUnselectAll = (cy: cytoscape.Core) => {\n  cy.elements(':selected').unselect()\n}\n\nexport const getElementsCollectionByIds = (cy: cytoscape.Core, ids: string[]) => {\n  let collection = cy.collection()\n  ids.forEach((id) => {\n    collection = collection.merge(cy.$id(id))\n  })\n  return collection\n}\n\nexport const getPointerPositionOnViewport = (\n  viewport: ViewportRef,\n  event: MouseEvent,\n) => {\n  const position = getEventClientPosition(event)\n  // @ts-ignore\n  if (viewport.options.interaction) {\n    // @ts-ignore\n    viewport.options.interaction.mapPositionToPoint(position, position.x, position.y)\n  }\n  position.x /= viewport.scale.x\n  position.y /= viewport.scale.y\n  position.x += viewport.left\n  position.y += viewport.top\n  return position\n}\n\nexport const getEventClientPosition = (e) => {\n  const event = e.touches?.[0] ?? e.changedTouches?.[0] ?? e\n  return {\n    x: event.clientX,\n    y: event.clientY,\n  }\n}\n\nexport const isMultipleTouches = (e) => {\n  const touches = e.touches ?? e.changedTouches\n  return touches && touches.length > 0\n}\n\nexport const contextUtils = {\n  update: (element: Element, context: any) => {\n    element.data({\n      [ELEMENT_DATA_FIELDS.CONTEXT]: context,\n    })\n  },\n  get: (element: Element) => element.data(ELEMENT_DATA_FIELDS.CONTEXT),\n  getNodeContext: (element: Element): NodeContext => element.data(\n    ELEMENT_DATA_FIELDS.CONTEXT,\n  ),\n  getEdgeContext: (element: Element): EdgeContext => element.data(\n    ELEMENT_DATA_FIELDS.CONTEXT,\n  ),\n}\n\nexport const getElementData = (element: Element) => element.data(ELEMENT_DATA_FIELDS.DATA)\n\nexport const getItemFromElement = (element: Element) => ({\n  id: element.id(),\n  data: getElementData(element),\n})\n\nexport const pauseEvent = (e) => {\n  if (e.stopPropagation) e.stopPropagation()\n  if (e.preventDefault) e.preventDefault()\n  e.cancelBubble = true\n  e.returnValue = false\n  return false\n}\n","import React from 'react'\nimport { PixiComponent } from '@inlet/react-pixi'\nimport * as R from 'colay/ramda'\nimport { wrapComponent } from 'colay-ui'\nimport * as PIXI from 'pixi.js'\nimport {\n  applyDefaultProps, getTextureFromProps, preprocessProps,\n} from '@utils'\nimport { PIXIBasicStyle, PIXIShapeStyle } from '@type'\n\ntype ImageURISource = { uri: string}\n\nexport type ImageProps = {\n  style: PIXIBasicStyle & PIXIShapeStyle;\n  source: ImageURISource;\n}\n\n// @ts-ignore\nconst ImagePIXI = PixiComponent<ImageProps, PIXI.Sprite>('Image', {\n  create: (props: ImageProps) => {\n    const instance = new PIXI.Sprite(getTextureFromProps('Sprite', props))\n    return instance\n  },\n  applyProps: (mutableInstance: PIXI.Sprite, oldProps, _props) => {\n    const props = preprocessProps(_props)\n    const {\n      // image,\n      // texture,\n      source,\n      ...restProps\n    } = props\n    const isUriSource = R.has('uri')(source)\n    if (\n      (isUriSource && source.uri !== oldProps.source?.uri)\n        || source !== oldProps.source\n    ) {\n      mutableInstance.texture = getTextureFromProps('Sprite', props)\n    }\n    // R.when(\n    //   R.anyPass([\n    //     R.always(isUriSource && source.uri !== oldProps.source?.uri),\n    //     R.always(source !== oldProps.source),\n    //   ]),\n    //   () => {\n    //     mutableInstance.texture = getTextureFromProps('Sprite', props)\n    //   },\n    //   source,\n    // )\n    applyDefaultProps(mutableInstance, oldProps, restProps, { rescaleToYoga: true })\n  },\n})\n\nfunction ImageElement(props: ImageProps) {\n  return (\n    <ImagePIXI\n      {...props}\n    />\n  )\n}\n\nexport const Image = wrapComponent<ImageProps>(ImageElement)\n","import React from 'react'\nimport * as PIXI from 'pixi.js'\nimport * as R from 'colay/ramda'\nimport { wrapComponent } from 'colay-ui'\nimport { PropsWithRef } from 'colay-ui/type'\nimport { PixiComponent } from '@inlet/react-pixi'\nimport { useTheme, ThemeProps } from '@core/theme'\nimport * as C from 'colay/color'\nimport { applyDefaultProps } from '@utils'\n\ntype TextStyle = any\n\ntype TextPIXIProps = {\n  text: string;\n  style?: TextStyle;\n  color?: string;\n  isSprite?: boolean;\n}\n// dropShadow\n// dropShadowAlpha\n// dropShadowAngle\n// dropShadowBlur\n// dropShadowColor\n// dropShadowDistance\nconst PositionStyleKeys = ['left', 'top', 'width', 'height']\nconst processTextProps = (props: TextPIXIProps) => {\n  const { style = {} } = props\n  return {\n    ...props,\n    style: R.pick(PositionStyleKeys)(style),\n    textStyle: R.pipe(\n      // @ts-ignore\n      R.toPairs,\n      R.map(\n        ([key, value]: [string, any]) => R.cond([\n          [R.equals('color'), () => (['fill', C.rgbNumber(value)])],\n          [R.equals('textShadowColor'), () => (['dropShadowColor', C.rgbNumber(value)])],\n          [R.equals('textShadowRadius'), () => (['dropShadowBlur', C.rgbNumber(value)])],\n          [R.equals('textShadowOffset'), () => (['dropShadowDistance', R.values(value)?.[0]])],\n          [R.T, R.always([key, value])],\n          // @ts-ignore\n        ])(key),\n      ),\n      R.fromPairs,\n      R.cond([\n        [\n          R.anyPass([\n            R.has('dropShadowColor'),\n            R.has('dropShadowBlur'),\n            R.has('dropShadowDistance'),\n          ]),\n          R.set(R.lensProp('dropShadow'), true),\n        ],\n        [\n          R.T,\n          R.identity,\n        ],\n      ]),\n      // @ts-ignore\n    )(R.omit([PositionStyleKeys])({ ...style })),\n  }\n}\n\n// @ts-ignore\nconst TextPIXI = PixiComponent<TextPIXIProps & ThemeProps, PIXI.Text>('PIXIText', {\n  create: (props) => {\n    const {\n      style = {},\n    } = props\n    const {\n      text = '', textStyle = {}, isSprite,\n    } = processTextProps({\n      ...props,\n      style: {\n        color: props.theme.palette.text.primary,\n        ...style,\n      },\n    })\n    const pixiText = new PIXI.Text(text, textStyle)\n    if (isSprite) {\n      pixiText.updateText(false)\n      const spriteText = new PIXI.Sprite(pixiText.texture)\n      // spriteText.text = pixiText\n      return spriteText\n    }\n    return pixiText\n  },\n  applyProps: (\n    instance: PIXI.Text,\n    oldProps,\n    props,\n  ) => {\n    const {\n      style = {},\n    } = props\n    instance.forceToRender = props.forceToRender\n    const { text: _, textStyle: __, ...oldPropsRest } = processTextProps(oldProps)\n    const {\n      text = '', textStyle = {}, isSprite, ...propsRest\n    } = processTextProps({\n      ...props,\n      style: {\n        color: props.theme.palette.text.primary,\n        ...style,\n      },\n    })\n    applyDefaultProps(\n      instance,\n      oldPropsRest,\n      propsRest,\n    )\n    if (isSprite) {\n      const pixiText = new PIXI.Text(text, textStyle)\n      pixiText.updateText(false)\n      instance.texture = pixiText.texture\n    } else {\n      instance.text = text\n      instance.style = textStyle\n    }\n  },\n})\n\nexport type TextProps = {\n  children: string;\n  style?: TextStyle;\n  isSprite?: boolean;\n}\n\nconst TextElement = (\n  props: TextProps,\n  forwardedRef: React.ForwardedRef<PIXI.Text>,\n) => {\n  const { children, ...rest } = props\n  const theme = useTheme()\n  const [count, setCount] = React.useState(0)\n  return (\n    <TextPIXI\n      ref={forwardedRef}\n      text={children}\n      theme={theme}\n      forceToRender={() => setCount((c) => c + 1)}\n      {...rest}\n    />\n  )\n}\n\nexport const Text = wrapComponent<\nPropsWithRef<PIXI.Text, TextProps>\n>(TextElement, { isForwardRef: true })\n","import React from 'react'\nimport { PixiComponent } from '@inlet/react-pixi'\nimport { PropsWithRef } from 'colay-ui/type'\nimport { wrapComponent } from 'colay-ui'\nimport { useTheme, ThemeProps } from '@core/theme'\nimport * as PIXI from 'pixi.js'\nimport * as C from 'colay/color'\nimport {\n  applyDefaultProps, preprocessProps,\n} from '@utils'\nimport {\n  PIXIBasicStyle, PIXIShapeStyle, PIXIBasicProps,\n} from '@type'\n\nexport type ViewProps = PIXIBasicProps & {\n  style?: PIXIBasicStyle & PIXIShapeStyle;\n  children?: React.ReactNode;\n}\n\nexport type ViewType = React.FC<ViewProps>\n\nexport type ViewRef = PIXI.Graphics\n\n// @ts-ignore\nconst ViewPIXI = PixiComponent<ViewProps & ThemeProps, PIXI.Graphics>('View', {\n  create: () => {\n    const instance = new PIXI.Graphics()\n    // contextMenu\n    // instance.contextMenu = createContextMenu({ items: contextMenu })\n    // instance.on('rightclick', (e: PIXI.interaction.InteractionEvent) => {\n    //   instance.contextMenu.onContextMenu(e.data.originalEvent)\n    // })\n    return instance\n  },\n  applyProps: (instance: PIXI.Graphics, oldProps, _props) => {\n    const props = preprocessProps(_props)\n    const {\n      style: {\n        width = instance.width,\n        height = instance.height,\n        backgroundColor, //= props.theme!.palette.background.paper,\n        borderRadius = 0,\n        borderWidth = 0,\n        borderColor = 'black',\n      } = {},\n    } = props\n    instance.clear()\n    if (backgroundColor) {\n      instance.beginFill(C.rgbNumber(backgroundColor), C.getAlpha(backgroundColor))\n      instance.lineStyle(borderWidth, C.rgbNumber(borderColor))\n      const radius = width / 2\n      if ((width === height) && (borderRadius >= radius)) {\n        instance.drawCircle(radius, radius, radius)\n      } else {\n        instance.drawRoundedRect(0, 0, width, height, borderRadius)\n      }\n    }\n    instance.endFill()\n    applyDefaultProps(instance, oldProps, props)\n  },\n})\n\nconst ViewElement = (\n  props: ViewProps,\n  forwardedRef: React.ForwardedRef<ViewRef>,\n) => {\n  const theme = useTheme()\n  return (\n    <ViewPIXI\n      ref={forwardedRef}\n      theme={theme}\n      {...props}\n    />\n\n  )\n}\n\nexport const View = wrapComponent<\nPropsWithRef<PIXI.Container, ViewProps>\n>(ViewElement, { isForwardRef: true })\n// >\n//   <FlexContainer style={rest.style}>\n//     {children}\n//   </FlexContainer>\n// </ViewPIXI>\n","import React from 'react'\nimport { wrapComponent } from 'colay-ui'\nimport {\n  NodeData,\n} from '@type'\nimport { Position } from 'colay-ui/type'\nimport { Pressable } from '@components/Pressable'\nimport { Image } from '@components/Image'\nimport { Text } from '@components/Text'\nimport { View, ViewProps } from '@components/View'\n\nexport type ProfileProps = {\n  name: string;\n  story: string;\n  image: string;\n  link?: string;\n  style?: ViewProps['style'];\n  onClick?: () => void;\n}\n// const SWITCH_COLLAPSE = 'SWITCH_COLLAPSE'\n\nexport type ProfileType = React.FC<ProfileProps>\n\nconst ProfileElement = (\n  props: ProfileProps,\n  __: React.ForwardedRef<ProfileType>,\n) => {\n  const {\n    name,\n    image,\n    story,\n    link,\n    onClick,\n  } = props\n  return (\n    <>\n      <View style={{\n        width: 300,\n        height: 150,\n        flexDirection: 'row',\n        borderRadius: 30,\n        backgroundColor: '#304e57',\n        paddingLeft: 10,\n        paddingTop: 10,\n      }}\n      >\n        <Image\n          source={{ uri: image }}\n          style={{\n            width: 100,\n            height: 100,\n          }}\n        />\n        <View\n          style={{ flexDirection: 'column', width: 200 }}\n        >\n          <View\n            style={{\n              left: 10,\n            }}\n            interactive\n            buttonMode\n            pointertap={() => {\n              if (link) {\n                window.open(link, '_blank')\n              }\n              onClick?.()\n            }}\n          >\n            <Text\n              style={style.title}\n            >\n              {name}\n            </Text>\n          </View>\n          <Text\n          // @ts-ignore\n            style={style.paragraph}\n          >\n            {story}\n          </Text>\n\n        </View>\n      </View>\n\n    </>\n  )\n}\n\nexport const ProfileTemplate = wrapComponent<ProfileProps>(\n  ProfileElement,\n  {\n    isForwardRef: true,\n  },\n)\n\nconst style = {\n  paragraph: {\n    // align: 'center',\n    fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n    fontSize: 10,\n    // fontWeight: 300,\n    // fill: ['#ffffff', '#00ff99'], // gradient\n    // stroke: '#01d27e',\n    // strokeThickness: 5,\n    // letterSpacing: 20,\n    // dropShadow: false,\n    // dropShadowColor: '#ccced2',\n    // dropShadowBlur: 4,\n    // dropShadowAngle: Math.PI / 6,\n    // dropShadowDistance: 6,\n    width: 150,\n    wordWrap: true,\n    wordWrapWidth: 150,\n    color: 'white',\n    left: 30,\n  },\n  title: {\n    // align: 'center',\n    fontFamily: '\"Source Sans Pro\", Helvetica, sans-serif',\n    fontSize: 16,\n    // fontWeight: 400,\n    // fill: ['#ffffff', '#00ff99'], // gradient\n    // stroke: '#01d27e',\n    // strokeThickness: 5,\n    // letterSpacing: 20,\n    // dropShadow: false,\n    // dropShadowColor: '#ccced2',\n    // dropShadowBlur: 4,\n    // dropShadowAngle: Math.PI / 6,\n    // dropShadowDistance: 6,\n    width: 150,\n    wordWrap: true,\n    wordWrapWidth: 150,\n    color: 'white',\n  },\n}\n\n// const createLayout = layoutCreator({\n//   graphID,\n//   predicate: (element) => element.id() === id || _.find(cluster, { id: element.id() }),\n//   options: {\n//     name: 'grid',\n//     boundingBox: {\n//       x1: 0, y1: 0, w: window.innerWidth, h: window.innerHeight,\n//     },\n//     transform: (node, position) => {\n//       // const anim = new Animation({\n//       //   autoplay: false,\n//       //   from: {\n//       //     ...node.position(),\n//       //   },\n//       //   to: position,\n//       //   update: (s) => {\n//       //     node.position(s)\n//       //     getContext(node).render()\n//       //   },\n//       //   // duration: 10,\n//       // })\n//       // anim.play()\n//       return position\n//     },\n//   },\n// })\n","// @ts-nocheck\n\nimport * as R from 'colay/ramda'\nimport {\n  Core,\n  EdgeSingular,\n  NodeSingular,\n  Collection,\n} from 'cytoscape'\n\n// configSchema: {\n//   required: [],\n//   properties: {\n\n//   },\n// },\n\nconst getAttribute = (params: {\n  pathText: string;\n  nodes: any[];\n  edges: any[];\n}) => (element: any) => {\n  const {\n    pathText,\n    nodes = [],\n    edges = [],\n  } = params\n  const id = element.id()\n  const item = (element.isNode() ? nodes : edges).find((item) => item.id === id)\n  return R.path(pathText.split('.'), item)\n}\n\ntype ClusterAlgorithm = {\n  get: (arg: { cy: cytoscape.Core; attributes: string}) => Collection[];\n  getByItem: (\n    arg: {\n      cy: Core;\n      attributes: string;\n      nodes: NodeSingular[];\n      edges: EdgeSingular[];\n    }\n  ) => cytoscape.Collection[];\n  configSchema: any;\n  configForm: any;\n}\nexport const Clusters: Record<string, ClusterAlgorithm> = {\n  markov: {\n    /**\n                 * @function\n                 * @param {{ cy: cytoscape.Core, attributes: [string] | string}} options\n                *  @return {}\n                 */\n    // @ts-ignore\n    get: ({ cy, attributes, ...options }) => cy.elements().markovClustering({\n      ...options,\n      attributes: [\n        (edge: EdgeSingular) => edge.data(attributes),\n      ],\n    }),\n    getByItem: ({\n      cy, nodes, edges, attributes, ...options\n      // @ts-ignore\n    }) => cy.elements().markovClustering({\n      ...options,\n      attributes: [\n        getAttribute({\n          edges,\n          nodes,\n          pathText: attributes,\n        }),\n      ],\n    }),\n    configSchema: {\n      required: ['attributes'],\n      properties: {\n        attributes: {\n          type: 'string',\n          default: 'label',\n          info: 'each of which returns a numeric attribute value for the specified edge. Attributes are used to cluster the nodes; i.e. the attributes of an edge indicate similarity between its nodes.',\n        },\n        expandFactor: {\n          type: 'number',\n          default: 2,\n          info: 'A number that affects time of computation and cluster granularity to some extent: M * M (defaultValue 2)',\n        },\n        inflateFactor: {\n          type: 'number',\n          default: 1,\n          info: 'A number that affects cluster granularity (the greater the value, the more clusters): M(i,j) / E(j)',\n        },\n        multFactor: {\n          type: 'number',\n          default: 1,\n          info: 'Optional number of self loops for each node. Use a neutral value to improve cluster computations',\n        },\n        maxIterations: {\n          type: 'number',\n          default: 20,\n          info: 'Maximum number of iterations of the MCL algorithm in a single run',\n        },\n      },\n    },\n    configForm: {\n      attributes: {\n        type: 'string',\n        defaultValue: 'label',\n        info: 'each of which returns a numeric attribute value for the specified edge. Attributes are used to cluster the nodes; i.e. the attributes of an edge indicate similarity between its nodes.',\n        required: true,\n      },\n      expandFactor: {\n        type: 'number',\n        defaultValue: 2,\n        info: 'A number that affects time of computation and cluster granularity to some extent: M * M (defaultValue 2)',\n      },\n      inflateFactor: {\n        type: 'number',\n        defaultValue: 1,\n        info: 'A number that affects cluster granularity (the greater the value, the more clusters): M(i,j) / E(j)',\n      },\n      multFactor: {\n        type: 'number',\n        defaultValue: 1,\n        info: 'Optional number of self loops for each node. Use a neutral value to improve cluster computations',\n      },\n      maxIterations: {\n        type: 'number',\n        defaultValue: 20,\n        info: 'Maximum number of iterations of the MCL algorithm in a single run',\n      },\n    },\n  },\n  kMeans: {\n    /**\n                 * @function\n                 * @param {{ cy: cytoscape,attributes: [string] | string, k: number}} options\n                *  @return {function}\n                 */\n    // @ts-ignore\n    get: ({ cy, attributes, ...options }) => cy.nodes().kMeans({\n      ...options,\n      attributes: [\n        (node: NodeSingular) => node.data(attributes),\n      ],\n    }),\n    getByItem: ({\n      cy, nodes, edges, attributes, ...options\n      // @ts-ignore\n    }) => cy.elements().kMeans({\n      ...options,\n      attributes: [\n        getAttribute({\n          edges,\n          nodes,\n          pathText: attributes,\n        }),\n      ],\n    }),\n    configSchema: {\n      required: ['attributes', 'k', 'distance'],\n      properties: {\n        attributes: {\n          type: 'string',\n          default: 'label',\n          info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense. Attributes must be specified unless a custom distance: function( nodeP, nodeQ ) is specified.',\n        },\n        k: {\n          type: 'number',\n          default: 2,\n          info: 'The number of clusters to return.',\n        },\n        distance: {\n          type: 'string',\n          default: 'euclidean',\n          enum: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n          info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        },\n        maxIterations: {\n          type: 'number',\n          default: 10,\n          info: 'The maximum number of iterations of the algorithm to run ',\n        },\n        sensitivityThreshold: {\n          type: 'number',\n          default: 0.001,\n          info: 'The coefficients difference threshold used to determine whether the algorithm has converged',\n        },\n      },\n    },\n    configForm: {\n      attributes: {\n        type: 'string',\n        defaultValue: 'label',\n        info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense. Attributes must be specified unless a custom distance: function( nodeP, nodeQ ) is specified.',\n        required: true,\n      },\n      k: {\n        type: 'number',\n        defaultValue: 2,\n        info: 'The number of clusters to return.',\n        required: true,\n      },\n      distance: {\n        type: 'choice',\n        defaultValue: 'euclidean',\n        choices: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n        info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        required: true,\n      },\n      maxIterations: {\n        type: 'number',\n        defaultValue: 10,\n        info: 'The maximum number of iterations of the algorithm to run ',\n      },\n      sensitivityThreshold: {\n        type: 'number',\n        defaultValue: 0.001,\n        info: 'The coefficients difference threshold used to determine whether the algorithm has converged',\n      },\n    },\n  },\n  kMedoids: {\n    /**\n                 * @function\n                 * @param {{ cy: cytoscape,attributes: [string] | string, k: number}} options\n                *  @return {function}\n                 */\n    // @ts-ignore\n    get: ({ cy, attributes, ...options }) => cy.nodes().kMedoids({\n      ...options,\n      attributes: [\n        (node: NodeSingular) => node.data(attributes),\n      ],\n    }),\n    getByItem: ({\n      cy, nodes, edges, attributes, ...options\n    }) => cy.elements().kMedoids({\n      ...options,\n      attributes: [\n        getAttribute({\n          edges,\n          nodes,\n          pathText: attributes,\n        }),\n      ],\n    }),\n    configSchema: {\n      required: ['attributes', 'k', 'distance'],\n      properties: {\n        attributes: {\n          type: 'string',\n          default: 'label',\n          info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense',\n        },\n        k: {\n          type: 'number',\n          default: 2,\n          info: 'The number of clusters to return.',\n        },\n        distance: {\n          type: 'string',\n          default: 'euclidean',\n          enum: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n          info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        },\n        maxIterations: {\n          type: 'number',\n          default: 10,\n          info: 'The maximum number of iterations of the algorithm to run ',\n        },\n      },\n    },\n    configForm: {\n      attributes: {\n        type: 'string',\n        defaultValue: 'label',\n        info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense',\n        required: true,\n      },\n      k: {\n        type: 'number',\n        defaultValue: 2,\n        info: 'The number of clusters to return.',\n        required: true,\n      },\n      distance: {\n        type: 'choice',\n        defaultValue: 'euclidean',\n        choices: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n        info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        required: true,\n      },\n      maxIterations: {\n        type: 'number',\n        defaultValue: 10,\n        info: 'The maximum number of iterations of the algorithm to run ',\n      },\n    },\n  },\n  fuzzyCMeans: {\n    /**\n                 * @function\n                 * @param {{ cy: cytoscape,attributes: [string] | string, k: number}} options\n                *  @return {function}\n                 */\n    get: ({ cy, attributes, ...options }) => cy.nodes().fuzzyCMeans({\n      ...options,\n      attributes: [\n        (node: NodeSingular) => node.data(attributes),\n      ],\n    }),\n    getByItem: ({\n      cy, nodes, edges, attributes, ...options\n      // @ts-ignore\n    }) => cy.elements().fuzzyCMeans({\n      ...options,\n      attributes: [\n        getAttribute({\n          edges,\n          nodes,\n          pathText: attributes,\n        }),\n      ],\n    }),\n    configSchema: {\n      required: [\n        'attributes',\n        'k',\n        'distance',\n      ],\n      properties: {\n        attributes: {\n          type: 'string',\n          default: 'label',\n          info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense',\n        },\n        k: {\n          type: 'number',\n          default: 2,\n          info: 'The number of clusters to return.',\n        },\n        distance: {\n          type: 'string',\n          default: 'euclidean',\n          enum: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n          info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        },\n        maxIterations: {\n          type: 'number',\n          default: 10,\n          info: 'The maximum number of iterations of the algorithm to run ',\n        },\n        sensitivityThreshold: {\n          type: 'number',\n          default: 0.001,\n          info: 'The coefficients difference threshold used to determine whether the algorithm has converged',\n        },\n      },\n    },\n    configForm: {\n      attributes: {\n        type: 'string',\n        defaultValue: 'label',\n        info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense',\n        required: true,\n      },\n      k: {\n        type: 'number',\n        defaultValue: 2,\n        info: 'The number of clusters to return.',\n        required: true,\n      },\n      distance: {\n        type: 'choice',\n        defaultValue: 'euclidean',\n        choices: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n        info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        required: true,\n      },\n      maxIterations: {\n        type: 'number',\n        defaultValue: 10,\n        info: 'The maximum number of iterations of the algorithm to run ',\n      },\n      sensitivityThreshold: {\n        type: 'number',\n        defaultValue: 0.001,\n        info: 'The coefficients difference threshold used to determine whether the algorithm has converged',\n      },\n    },\n  },\n  hierarchical: {\n    /**\n                 * @function\n                 * @param {{ cy: cytoscape,mode: 'threshold', threshold: number, attributes: [string] | string}} param_name\n                *  @return {function}\n                 */\n    // @ts-ignore\n    get: ({ cy, attributes, ...options }) => cy.nodes().hierarchicalClustering({\n      ...options,\n      attributes: [\n        (node: NodeSingular) => node.data(attributes),\n      ],\n    }),\n    getByItem: ({\n      cy, nodes, edges, attributes, ...options\n    }) => cy.elements().hierarchicalClustering({\n      ...options,\n      attributes: [\n        getAttribute({\n          edges,\n          nodes,\n          pathText: attributes,\n        }),\n      ],\n    }),\n    configSchema: {\n      required: ['attributes', 'distance', 'mode'],\n      properties: {\n        attributes: {\n          type: 'string',\n          default: 'label',\n          info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense',\n        },\n        distance: {\n          type: 'string',\n          default: 'euclidean',\n          enum: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n          info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n          required: true,\n        },\n        linkage: {\n          type: 'string',\n          default: 'single',\n          enum: ['mean', 'min', 'complete', 'max'],\n          info: 'The linkage criterion for measuring the distance between two clusters;',\n        },\n        mode: {\n          type: 'string',\n          default: 'threshold',\n          enum: ['threshold', 'dendogram'],\n          info: ' The mode of the algorithm. For \\'threshold\\' (defaultValue), clusters are merged until they are at least the specified distance apart. For \\'dendrogram\\', the clusters are recursively merged using the branches in a dendrogram (tree) structure beyond a specified depth.',\n        },\n        threshold: {\n          type: 'number',\n          default: null,\n          info: 'In mode: \\'threshold\\', distance threshold for stopping the algorithm. All pairs of the returned clusters are at least threshold distance apart. Without specifying this value for mode: \\'threshold\\', all clusters will eventually be merged into a single cluster.',\n        },\n        dendrogramDepth: {\n          type: 'number',\n          default: null,\n          info: 'In mode: \\'dendrogram\\', the depth beyond which branches are merged in the tree. For example, a value of 0 (defaultValue) results in all branches being merged into a single cluster.',\n        },\n        addDendrogram: {\n          type: 'number',\n          default: null,\n          info: 'In mode: \\'dendrogram\\', whether to add nodes and edges to the graph for the dendrogram (defaultValue false). This is not necessary to run the algorithm, but it is useful for visualising the results.',\n        },\n      },\n    },\n    configForm: {\n      attributes: {\n        type: 'string',\n        defaultValue: 'label',\n        info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense',\n        required: true,\n      },\n      distance: {\n        type: 'choice',\n        defaultValue: 'euclidean',\n        choices: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n        info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        required: true,\n      },\n      linkage: {\n        type: 'choice',\n        defaultValue: 'single',\n        choices: ['mean', 'min', 'complete', 'max'],\n        info: 'The linkage criterion for measuring the distance between two clusters;',\n      },\n      mode: {\n        type: 'choice',\n        defaultValue: 'threshold',\n        choices: ['threshold', 'dendogram'],\n        info: ' The mode of the algorithm. For \\'threshold\\' (defaultValue), clusters are merged until they are at least the specified distance apart. For \\'dendrogram\\', the clusters are recursively merged using the branches in a dendrogram (tree) structure beyond a specified depth.',\n        required: true,\n      },\n      threshold: {\n        type: 'number',\n        defaultValue: null,\n        info: 'In mode: \\'threshold\\', distance threshold for stopping the algorithm. All pairs of the returned clusters are at least threshold distance apart. Without specifying this value for mode: \\'threshold\\', all clusters will eventually be merged into a single cluster.',\n      },\n      dendrogramDepth: {\n        type: 'number',\n        defaultValue: null,\n        info: 'In mode: \\'dendrogram\\', the depth beyond which branches are merged in the tree. For example, a value of 0 (defaultValue) results in all branches being merged into a single cluster.',\n      },\n      addDendrogram: {\n        type: 'number',\n        defaultValue: null,\n        info: 'In mode: \\'dendrogram\\', whether to add nodes and edges to the graph for the dendrogram (defaultValue false). This is not necessary to run the algorithm, but it is useful for visualising the results.',\n      },\n    },\n  },\n  affinityPropagation: {\n    /**\n                 * @function\n                 * @param {{ cy: cytoscape,attributes: [string] | string}} options\n                *  @return {function}\n                 */\n    // @ts-ignore\n    get: ({ cy, attributes, ...options }) => cy.nodes().affinityPropagation({\n      ...options,\n      attributes: [\n        (node: NodeSingular) => node.data(attributes),\n      ],\n    }),\n    getByItem: ({\n      cy, nodes, edges, attributes, ...options\n      // @ts-ignore\n    }) => cy.elements().affinityPropagation({\n      ...options,\n      attributes: [\n        getAttribute({\n          edges,\n          nodes,\n          pathText: attributes,\n        }),\n      ],\n    }),\n    configSchema: {\n      required: ['attributes', 'distance'],\n      properties: {\n        attributes: {\n          type: 'string',\n          default: 'label',\n          info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense',\n        },\n        distance: {\n          type: 'string',\n          default: 'euclidean',\n          enum: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n          info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        },\n        preference: {\n          type: 'string',\n          default: 'median',\n          enum: ['mean', 'min', 'complete', 'max'],\n          info: 'The metric used to determine the suitability of a data point (i.e. node attribute vector) to serve as an exemplar. It may take on one of several special values, which are determined from the similarity matrix (i.e. the negative distance matrix). Or a manual, numeric value may be used (generally of the opposite sign of your distance values)',\n        },\n        damping: {\n          type: 'number',\n          default: 0.8,\n          maximum: 1,\n          minimum: 0.5,\n          includeMin: true,\n          info: 'A damping factor on [0.5, 1)',\n        },\n        minIterations: {\n          type: 'number',\n          default: 100,\n          info: 'The minimum number of iteraions the algorithm will run before stopping',\n        },\n        maxIterations: {\n          type: 'number',\n          default: 1000,\n          info: 'The maximum number of iteraions the algorithm will run before stopping',\n        },\n      },\n    },\n    configForm: {\n      attributes: {\n        type: 'string',\n        defaultValue: 'label',\n        info: 'each of which returns a numeric attribute value for the specified node. Attributes are used to cluster the nodes; i.e. two nodes with similar attributes tend to be in the same cluster. Each attribute may have to be normalised in order for the chosen distance metric to make sense',\n        required: true,\n      },\n      distance: {\n        type: 'choice',\n        defaultValue: 'euclidean',\n        choices: ['euclidean', 'squaredEuclidean', 'manhattan', 'max'],\n        info: 'The distance classifier used to compare attribute vectors. It is optional if attributes are specified.',\n        required: true,\n      },\n      preference: {\n        type: 'choice',\n        defaultValue: 'median',\n        choices: ['mean', 'min', 'complete', 'max'],\n        info: 'The metric used to determine the suitability of a data point (i.e. node attribute vector) to serve as an exemplar. It may take on one of several special values, which are determined from the similarity matrix (i.e. the negative distance matrix). Or a manual, numeric value may be used (generally of the opposite sign of your distance values)',\n      },\n      damping: {\n        type: 'number',\n        defaultValue: 0.8,\n        max: 1,\n        min: 0.5,\n        includeMin: true,\n        info: 'A damping factor on [0.5, 1)',\n      },\n      minIterations: {\n        type: 'number',\n        defaultValue: 100,\n        info: 'The minimum number of iteraions the algorithm will run before stopping',\n      },\n      maxIterations: {\n        type: 'number',\n        defaultValue: 1000,\n        info: 'The maximum number of iteraions the algorithm will run before stopping',\n      },\n    },\n  },\n} as const\n","import React from 'react'\nimport { Position } from 'colay-ui/type'\nimport { BoundingBox, NodeElement } from '@type'\nimport * as PIXI from 'pixi.js'\nimport {\n  PixiComponent,\n} from '@inlet/react-pixi'\nimport * as R from 'colay/ramda'\nimport * as V from 'colay/vector'\nimport * as C from 'colay/color'\nimport { applyDefaultProps, preprocessProps } from '@utils'\nimport { DefaultTheme } from '@core/theme'\nimport { wrapComponent } from 'colay-ui'\nimport { EDGE_LINE_Z_INDEX } from '@constants'\n\nexport type GraphicsProps = {\n\n}\n\ntype BezierLinePoints = {\n  start: Position;\n  mid: Position;\n  end: Position;\n}\nconst controlPointsCreator = {\n  bezier: (config: {\n    from: Position;\n    to: Position;\n    unitVector: Position;\n    distance: number;\n    count: number;\n    normVector: Position;\n  }): BezierLinePoints[] => {\n    const {\n      from,\n      to,\n      distance,\n      count,\n      unitVector,\n      normVector,\n    } = config\n    const upperVector = V.multiplyScalar(distance)(normVector)\n    const lowerVector = V.multiplyScalar(-1)(upperVector)\n    const chunkDistanceVector = R.pipe(\n      V.subtract(from),\n      V.divideScalar(count),\n    )(to)\n    const semiChunkDistanceVector = V.divideScalar(2)(chunkDistanceVector)\n    return R.mapIndexed(\n      (_, index: number) => {\n        const isUpper = index % 2 === 0\n        const startVec = R.pipe(\n          V.multiplyScalar(index),\n          V.add(from),\n        )(chunkDistanceVector)\n        const endVec = V.add(startVec)(chunkDistanceVector)\n        const midVec = R.pipe(\n          V.add(semiChunkDistanceVector),\n          V.add(isUpper ? upperVector : lowerVector),\n        )(startVec)\n        return {\n          start: startVec,\n          mid: midVec,\n          end: endVec,\n          upperVector,\n          midVec: R.pipe(\n            V.add(semiChunkDistanceVector),\n          )(startVec),\n        }\n      },\n    )(R.range(0, count))\n  },\n}\nconst drawArrowHead = ({\n  graphics,\n  to,\n  radius = 10,\n  unitVector,\n  fill,\n}: {\n  graphics: PIXI.Graphics;\n  unitVector: Position;\n  to: Position;\n  radius?: number;\n  fill: number;\n}) => {\n  const bottomCenter = to\n  const unitDistanceVec = V.multiplyScalar(radius)(unitVector)\n  const perpendicularUnitDistanceVec = V.rotate(-Math.PI / 2)(unitDistanceVec)\n  const leftControlPoint = R.pipe(\n    V.multiplyScalar(-1),\n    V.add(bottomCenter),\n  )(perpendicularUnitDistanceVec)\n  const rightControlPoint = R.pipe(\n    V.add(bottomCenter),\n  )(perpendicularUnitDistanceVec)\n  const topControlPoint = V.add(unitDistanceVec)(to)\n  graphics.beginFill(fill)\n  graphics.drawPolygon(\n    new PIXI.Point(leftControlPoint.x, leftControlPoint.y),\n    new PIXI.Point(rightControlPoint.x, rightControlPoint.y),\n    new PIXI.Point(topControlPoint.x, topControlPoint.y),\n  )\n  graphics.endFill()\n  graphics.isSprite = true\n}\nexport const drawLine = (\n  config: {\n    graphics: PIXI.Graphics;\n    sourceElement: NodeElement;\n    targetElement: NodeElement;\n    from: BoundingBox;\n    to: BoundingBox;\n    unitVector: Position;\n    distanceVector: Position;\n    normVector: Position;\n    undirectedUnitVector:Position;\n    undirectedNormVector:Position;\n    fill?: number;\n    directed?: boolean;\n    type?: 'bezier' | 'segments' | 'straight';\n    width?: number;\n    alpha?: number;\n    arrowHead?: {\n      radius?: number;\n    };\n    distance?: number;\n    margin?: Position;\n  },\n) => {\n  const {\n    from: fromBoundingBox,\n    to: toBoundingBox,\n    fill = C.rgbNumber(DefaultTheme.palette.background.paper),\n    directed,\n    type, //= 'bezier',\n    graphics,\n    width = 6,\n    alpha = 1,\n    arrowHead = {\n      radius: 2,\n    },\n    distance,\n    margin = {\n      x: 0,\n      y: 0,\n    },\n    unitVector,\n    normVector,\n    undirectedUnitVector,\n    undirectedNormVector,\n    // distanceVector,\n  } = config\n  const marginVector = {\n    x: undirectedNormVector.x * margin.x,\n    y: undirectedNormVector.y * margin.y,\n  }\n  const radiusFrom = Math.hypot(fromBoundingBox.width, fromBoundingBox.height) / 2\n  const radiusTo = Math.hypot(toBoundingBox.width, toBoundingBox.height) / 2\n  const centerOfFrom = V.add(\n    fromBoundingBox.width / 2,\n    fromBoundingBox.height / 2,\n  )(fromBoundingBox)\n  const centerOfTo = V.add(\n    toBoundingBox.width / 2,\n    toBoundingBox.height / 2,\n  )(toBoundingBox)\n  const from = R.pipe(\n    V.add(V.multiplyScalar(radiusFrom)(unitVector)),\n    V.add(marginVector),\n  )(centerOfFrom)\n  const to = R.pipe(\n    V.subtract(V.multiplyScalar(radiusTo)(unitVector)),\n    V.add(marginVector),\n  )(centerOfTo)\n  graphics.clear()\n  graphics.lineStyle(width, fill, alpha)\n\n  if (directed) {\n    drawArrowHead({\n      graphics,\n      unitVector,\n      to,\n      fill,\n      ...arrowHead,\n    })\n  }\n\n  R.cond([\n    [\n      R.equals('bezier'),\n      () => {\n        const controlPoints = controlPointsCreator.bezier({\n          from,\n          to,\n          count: 2,\n          distance: 100,\n          unitVector: undirectedUnitVector,\n          normVector: undirectedNormVector,\n        })\n        R.map(\n          ({\n            start,\n            end,\n            control1,\n            control2,\n          }: BezierLinePoints) => {\n            graphics.moveTo(start.x, start.y)\n            graphics.bezierCurveTo(\n              control1.x, control1.y, control2.x, control2.y, end.x, end.y,\n            )\n          },\n        )(controlPoints)\n      },\n    ],\n    [\n      R.equals('segments'),\n      () => {\n        const controlPoints = controlPointsCreator.bezier({\n          from,\n          to,\n          count: 4,\n          distance: 100,\n          unitVector: undirectedUnitVector,\n          normVector: undirectedNormVector,\n        })\n        R.map(\n          ({\n            start,\n            mid,\n            end,\n          }: BezierLinePoints) => {\n            graphics.moveTo(start.x, start.y)\n            graphics.lineTo(\n              mid.x, mid.y,\n            )\n            graphics.moveTo(mid.x, mid.y)\n            graphics.lineTo(\n              end.x, end.y,\n            )\n          },\n        )(controlPoints)\n      },\n    ],\n    [\n      R.T,\n      () => {\n        if (distance) {\n          const controlPoints = controlPointsCreator.bezier({\n            from,\n            to,\n            count: 1,\n            distance,\n            unitVector: undirectedUnitVector,\n            normVector: undirectedNormVector,\n          })\n          R.map(\n            ({\n              mid,\n              start,\n              end,\n            }: BezierLinePoints) => {\n              graphics.moveTo(start.x, start.y)\n              graphics.bezierCurveTo(\n                start.x, start.y, mid.x, mid.y, end.x, end.y,\n              )\n            },\n          )(controlPoints)\n        } else {\n          graphics.moveTo(from.x, from.y)\n          graphics.lineTo(to.x, to.y)\n        }\n      },\n    ],\n  ])(type)\n  graphics.endFill()\n  graphics.zIndex = EDGE_LINE_Z_INDEX\n}\n\nexport const drawGraphics = (instance: PIXI.Graphics, props: {\n  style: any\n}) => {\n  const {\n    style: {\n      width = 0,\n      height = 0,\n      backgroundColor = 'black',\n      borderRadius = 0,\n      borderWidth = 0,\n      borderColor = 'black',\n    } = {},\n  } = props\n  instance.clear()\n  instance.beginFill(C.rgbNumber(backgroundColor), C.getAlpha(backgroundColor))\n  instance.lineStyle(borderWidth, C.rgbNumber(borderColor))\n  const radius = width / 2\n  if ((width === height) && (borderRadius >= radius)) {\n    instance.drawCircle(radius, radius, radius)\n  } else {\n    instance.drawRoundedRect(0, 0, width, height, borderRadius)\n  }\n  instance.endFill()\n}\n\n// @ts-ignore\nconst GraphicsPIXI = PixiComponent<GraphProps, PIXI.Graphics>('Graphics2', {\n  create: (props: GraphProps) => {\n    const instance = new PIXI.Graphics()\n    return instance\n  },\n  applyProps: (mutableInstance: PIXI.Graphics, oldProps, _props) => {\n    const props = preprocessProps(_props)\n    const {\n      ...restProps\n    } = props\n\n    applyDefaultProps(mutableInstance, oldProps, restProps)\n  },\n})\n\nfunction GraphicsElement(props: GraphProps, forwardRef: any) {\n  return (\n    <GraphicsPIXI\n      ref={forwardRef}\n      {...props}\n    />\n  )\n}\n\nexport const Graphics = wrapComponent<GraphProps>(\n  GraphicsElement, {\n    isForwardRef: true,\n  },\n)\n","import React from 'react'\nimport * as PIXI from 'pixi.js'\nimport * as R from 'colay/ramda'\nimport { PIXIBasicStyle, PIXIShapeStyle } from '@type'\nimport { View, ViewProps } from '../View'\n\nexport type PressableProps = {\n  style?: PIXIBasicStyle & PIXIShapeStyle;\n  children?: React.ReactNode;\n  buttonMode?: boolean;\n} & ViewProps\n\n// const PressablePIXI = PixiComponent<PressableProps, PIXI.Container>('PressablePIXI', {\n//   create: () => {\n//     const mutableInstance = new PIXI.Container()\n//     mutableInstance.interactive = true\n//     mutableInstance.buttonMode = true\n//     return mutableInstance\n//   },\n//   applyProps: (\n//     instance: PIXI.Graphics,\n//     oldProps,\n//     _props,\n//   ) => applyDefaultProps(instance, oldProps, preprocessProps(_props))\n//   ,\n// })\n\nexport const Pressable = (props: PressableProps) => {\n  const {\n    // onLongPress,\n    // onPress,\n    // onDoublePress,\n    // onHoverEnd,\n    // onHoverStart,\n    // onPressChange,\n    // onPressEnd,\n    // onPressMove,\n    // onPressStart,\n    buttonMode,\n    ...rest\n  } = props\n  // const events = useEvents(\n  //   R.omitBy(R.isNil, {\n  //     onLongPress,\n  //     onPress,\n  //     onDoublePress,\n  //     onHoverEnd,\n  //     onHoverStart,\n  //     onPressChange,\n  //     onPressEnd,\n  //     onPressMove,\n  //     onPressStart,\n  //   }),\n  //   {\n  //     extraData: [\n  //       onLongPress,\n  //       onPress,\n  //       onDoublePress,\n  //       onHoverEnd,\n  //       onHoverStart,\n  //       onPressChange,\n  //       onPressEnd,\n  //       onPressMove,\n  //       onPressStart,\n  //     ],\n  //   },\n  // )\n  const viewRef = React.useRef<PIXI.Container>(null)\n  React.useEffect(() => {\n    R.when(\n      R.isNotNil,\n      () => {\n        const mutableContainer = viewRef.current as PIXI.Container\n        mutableContainer.buttonMode = !!buttonMode\n        mutableContainer.interactive = true\n      },\n    )(viewRef.current)\n  }, [viewRef, buttonMode])\n  return (\n    <View\n      ref={viewRef}\n      {...rest}\n      // {...events}\n    />\n  )\n}\n\n\n","// @ts-nocheck\nimport yoga from 'yoga-layout-prebuilt'\n\nexport const FlexDirection = {\n  column: yoga.FLEX_DIRECTION_COLUMN,\n  'column-reverse': yoga.FLEX_DIRECTION_COLUMN_REVERSE,\n  row: yoga.FLEX_DIRECTION_ROW,\n  'row-reverse': yoga.FLEX_DIRECTION_ROW_REVERSE,\n} as const\n\nexport const JustifyContent = {\n  'flex-start': yoga.JUSTIFY_FLEX_START,\n  'flex-end': yoga.JUSTIFY_FLEX_END,\n  center: yoga.JUSTIFY_CENTER,\n  'space-between': yoga.JUSTIFY_SPACE_BETWEEN,\n  'space-around': yoga.JUSTIFY_SPACE_AROUND,\n} as const\n\nexport const FlexWrap = {\n  wrap: yoga.WRAP_WRAP,\n  'no-wrap': yoga.WRAP_NO_WRAP,\n  'wrap-reverse': yoga.WRAP_WRAP_REVERSE,\n} as const\n\nexport const Align = {\n  stretch: yoga.ALIGN_STRETCH,\n  auto: yoga.ALIGN_AUTO,\n  baseline: yoga.ALIGN_BASELINE,\n  center: yoga.ALIGN_CENTER,\n  'flex-start': yoga.ALIGN_FLEX_START,\n  'flex-end': yoga.ALIGN_FLEX_END,\n  'space-between': yoga.ALIGN_SPACE_BETWEEN,\n  'space-around': yoga.ALIGN_SPACE_AROUND,\n}as const\n\nexport const PositionType = {\n  relative: yoga.POSITION_TYPE_RELATIVE,\n  absolute: yoga.POSITION_TYPE_ABSOLUTE,\n}as const\n\nexport const Display = {\n  flex: yoga.DISPLAY_FLEX,\n  none: yoga.DISPLAY_NONE,\n} as const\n\nexport const YogaCustomSizeConfig = {\n  AUTO: 'auto',\n  SCREEN_SIZE: 'screen',\n  WINDOW_SIZE: 'window',\n} as const\n\nexport const YogaEdges = [yoga.EDGE_TOP, yoga.EDGE_RIGHT, yoga.EDGE_BOTTOM, yoga.EDGE_LEFT]\n\nexport type ComputedLayout = {\n  left: number;\n  right: number;\n  top: number;\n  bottom: number;\n  width: number;\n  height: number;\n}\n// }\n\nexport const YogaConstants = {\n  FlexDirection,\n  JustifyContent,\n  FlexWrap,\n  Align,\n  PositionType,\n  Display,\n  YogaCustomSizeConfig,\n  YogaEdges,\n} as const\n","// @ts-nocheck\nimport { IAnimationState } from './YogaLayout'\n\nexport class YogaAnimationManager {\n  public animations: IAnimationState[] = []\n\n  public update(delta: number): void {\n    delta *= 16.6\n    const toDelete = []\n    for (const anim of this.animations) {\n      anim.elapsed += delta\n      let progress = anim.easing(anim.elapsed / anim.time)\n\n      if (progress > 1) {\n        progress = 1\n        toDelete.push(anim)\n      }\n      anim.curX = anim.fromX + (anim.toX - anim.fromX) * progress\n      anim.curY = anim.fromY + (anim.toY - anim.fromY) * progress\n    }\n\n    for (const anim of toDelete) {\n      this.remove(anim)\n    }\n  }\n\n  public add(anim: IAnimationState) {\n    this.animations.push(anim)\n  }\n\n  public remove(anim: IAnimationState) {\n    this.animations.splice(this.animations.indexOf(anim), 1)\n  }\n}\n\nexport const yogaAnimationManager = new YogaAnimationManager()\n","// @ts-nocheck\n\nimport Yoga from 'yoga-layout-prebuilt'\nimport * as PIXI from 'pixi.js'\nimport { YogaConstants, YogaEdges } from './YogaContants'\nimport { YogaLayoutConfig } from './YogaLayoutConfig'\nimport { yogaAnimationManager } from './YogaAnimationManager'\n\nexport { YogaConstants } from './YogaLayoutConfig'\nexport type YogaEdges = typeof YogaConstants.YogaEdges\nexport type DisplayObject = typeof PIXI.DisplayObject\nexport type ComputedLayout = typeof YogaConstants.ComputedLayout\nexport type FlexDirection = typeof YogaConstants.FlexDirection\nexport type JustifyContent = typeof YogaConstants.JustifyContent\nexport type Align = typeof YogaConstants.Align\nexport type FlexWrap = typeof YogaConstants.FlexWrap\nexport type Display = typeof YogaConstants.Display\nexport type PositionType = typeof YogaConstants.PositionType\n\nexport type PixelsOrPercentage = number | string\nexport type YogaSize = PixelsOrPercentage | 'pixi' | 'auto'\n\nexport type IAnimationState = {\n  fromX: number;\n  fromY: number;\n  curX: number;\n  curY: number;\n  toX: number;\n  toY: number;\n  time: number;\n  elapsed: number;\n  easing: (progress: number) => number;\n}\n\nexport type IYogaAnimationConfig = {\n  time: number;\n  easing: (progress: number) => number;\n\n  // @ts-ignore\n  shouldRunAnimation?(yoga: YogaLayout, prev: ComputedLayout, newLayout: ComputedLayout): boolean;\n\n}\n\nexport class YogaLayout {\n  /**\n     * Internal value. True if we are currently in WebGLRenderer.render() (based on 'prerender' and 'postrender' events). Used to skip some updateTransform calls.\n     */\n  public static isRendering = true\n\n  /**\n     * Experimental feature for building layouts independent of pixi tree\n     */\n  public static roots: Map<string, YogaLayout> = new Map()\n\n  public static readonly LAYOUT_UPDATED_EVENT = 'LAYOUT_UPDATED_EVENT'\n\n  public static readonly AFTER_LAYOUT_UPDATED_EVENT = 'AFTER_LAYOUT_UPDATED_EVENT'\n\n  public static readonly NEED_LAYOUT_UPDATE = 'NEED_LAYOUT_UPDATE'\n\n  public readonly target: DisplayObject\n\n  public readonly node: Yoga.YogaNode\n\n  public children: YogaLayout[] = []\n\n  public parent?: YogaLayout\n\n  /**\n     * If set, position transitions will be animated\n     */\n  public animationConfig: IYogaAnimationConfig\n\n  /**\n     * True if Yoga should manage PIXI objects width/height\n     */\n  public rescaleToYoga = false\n\n  /**\n     * If true and rescaleToYoga===true, resizing will keep aspect ratio of obejct.\n     * Defaults to true on PIXI.Text and PIXI.Sprite.\n     */\n  public keepAspectRatio: boolean | undefined\n\n  private _width: YogaSize\n\n  private _height: YogaSize\n\n  private _cachedLayout: ComputedLayout | undefined\n\n  private _lastLayout: ComputedLayout | undefined\n\n  private _lastRecalculationDuration = 0\n\n  private _animation: IAnimationState\n\n  /**\n     * Will be recalculated in next frame\n     */\n  private _needUpdateAsRoot = false\n\n  /**\n     * Used instead of Yoga.AspectRatio because of Yoga issue https://github.com/facebook/yoga/issues/677\n     */\n  private _aspectRatio: number\n\n  private _gap = 0\n\n  /**\n     * Internal values stored to reduce calls to nbind\n     */\n  private _marginTop = 0\n\n  private _marginLeft = 0\n\n  constructor(pixiObject: DisplayObject = new DisplayObject()) {\n    this.node = Yoga.Node.create()\n    pixiObject.__hasYoga = true\n    this.fillDefaults()\n    this.target = pixiObject\n    if ((<any> this.target)._texture) {\n      this.width = this.height = 'pixi'\n    } else {\n      this.width = this.height = 'auto'\n    }\n\n    if (pixiObject instanceof PIXI.Text || pixiObject instanceof PIXI.Sprite) {\n      this.keepAspectRatio = true\n    }\n\n    // broadcast event\n    pixiObject.on(YogaLayout.LAYOUT_UPDATED_EVENT as any, () => {\n      this._lastLayout = this._cachedLayout\n      this._cachedLayout = undefined\n      this.children.forEach((child) => child.target.emit(YogaLayout.LAYOUT_UPDATED_EVENT))\n    })\n\n    pixiObject.on(YogaLayout.NEED_LAYOUT_UPDATE as any, () => {\n      // size change of this element wont change size/positions of its parent, so there is no need to update whole tree\n      if (!this.parent /* || (this.hasContantDeclaredSize && this.parent.width !== \"auto\" && this.parent.height !== \"auto\") */) {\n        this._needUpdateAsRoot = true\n      } else {\n        this.parent.target.emit(YogaLayout.NEED_LAYOUT_UPDATE)\n      }\n    })\n  }\n\n  public get animationState(): Readonly<IAnimationState> {\n    return this._animation\n  }\n\n  public set root(val: string) {\n    const root = YogaLayout.roots.get(val)\n    if (root) {\n      root.addChild(this)\n    }\n  }\n\n  /**\n     * Assigns given properties to this yoga layout\n     * @param config\n     */\n  public fromConfig(config: YogaLayoutConfig) {\n    Object.assign(this, config)\n  }\n\n  /**\n     * Same as 'fromConfig()'\n     * @param config\n     */\n  public set config(config: YogaLayoutConfig) {\n    this.fromConfig(config)\n  }\n\n  /**\n     * Copies all properties (styles, size, rescaleToYoga etc) from other YogaLayout objects\n     * @param layout\n     */\n  public copy(layout: YogaLayout): void {\n    this.node.copyStyle(layout.node)\n    this.rescaleToYoga = layout.rescaleToYoga\n    this.aspectRatio = layout.aspectRatio\n    this.keepAspectRatio = layout.keepAspectRatio\n    this._width = layout._width\n    this._height = layout._height\n  }\n\n  public fillDefaults() {\n    this.node.setFlexDirection(Yoga.FLEX_DIRECTION_ROW)\n    this.node.setAlignItems(Yoga.ALIGN_FLEX_START)\n    this.node.setAlignContent(Yoga.ALIGN_FLEX_START)\n    this.node.setWidth('auto')\n    this.node.setHeight('auto')\n  }\n\n  public addChild(yoga: YogaLayout, index = this.node.getChildCount()): void {\n    if (yoga.parent) {\n      yoga.parent.removeChild(yoga)\n    }\n    this.node.insertChild(yoga.node, index)\n    this.children.splice(index, 0, yoga)\n    yoga.parent = this\n    this.updateGap()\n  }\n\n  public removeChild(yoga: YogaLayout): void {\n    const { length } = this.children\n    this.children = this.children.filter((child) => child !== yoga)\n    if (length !== this.children.length) {\n      this.node.removeChild(yoga.node)\n    }\n    yoga.parent = undefined\n  }\n\n  /**\n     * Mark object as dirty and request layout recalculation\n     */\n  public requestLayoutUpdate(): void {\n    this.target.emit(YogaLayout.NEED_LAYOUT_UPDATE)\n  }\n\n  public recalculateLayout(): void {\n    const start = performance.now()\n    this.node.calculateLayout()\n    this._lastRecalculationDuration = performance.now() - start\n    this.target.emit(YogaLayout.LAYOUT_UPDATED_EVENT)\n  }\n\n  public update(): void {\n    if (!this.target.parent && this.parent) {\n      this.parent.removeChild(this)\n      return\n    }\n\n    if (this._needUpdateAsRoot && !this.parent) {\n      this.recalculateLayout()\n    }\n    this._needUpdateAsRoot = false\n  }\n\n  public get isRoot(): boolean {\n    return !this.parent\n  }\n\n  /**\n     * Returns true if object size is independent of its children sizes.\n     */\n  public get hasContantDeclaredSize(): boolean {\n    return !!this._width && this._width !== 'pixi' && this._width !== 'auto'\n            && !!this._height && this._height !== 'pixi' && this._height !== 'auto'\n  }\n\n  public willLayoutWillBeRecomputed(): boolean {\n    return !this._cachedLayout\n  }\n\n  // @ts-ignore\n  public getComputedLayout(): ComputedLayout {\n    if (!this._cachedLayout) {\n      this._cachedLayout = this.node.getComputedLayout()\n\n      // YOGA FIX for percent widht/height for absolute positioned elements\n      if (this.position === 'absolute' && this.parent && this.node.getWidth().unit === Yoga.UNIT_PERCENT) {\n        this._cachedLayout.width = Math.round(parseFloat(this._width as string) / 100 * this.parent.calculatedWidth)\n      }\n\n      if (this.position === 'absolute' && this.parent && this.node.getHeight().unit === Yoga.UNIT_PERCENT) {\n        this._cachedLayout.height = Math.round(parseFloat(this._height as string) / 100 * this.parent.calculatedHeight)\n      }\n\n      // if (this.position === \"absolute\" && this.parent && !this.bottom && !this.right) {\n      //     this._cachedLayout.left = this.node.getComputedMargin(Yoga.EDGE_LEFT);\n      //     this._cachedLayout.top = this.node.getComputedMargin(Yoga.EDGE_TOP)\n      // }\n\n      // YOGA FIX for not working aspect ratio https://github.com/facebook/yoga/issues/677\n      if (this._aspectRatio && this.keepAspectRatio) {\n        const newHeight = this.calculatedWidth / this._aspectRatio\n        this._cachedLayout.top += (this.calculatedHeight - newHeight) / 2\n        this._cachedLayout.height = newHeight\n        this.height = this.calculatedHeight\n      }\n\n      if (this.animationConfig && (!this.animationConfig.shouldRunAnimation || this.animationConfig.shouldRunAnimation(this, this._lastLayout || this._cachedLayout, this._cachedLayout))) {\n        this._animation = {\n          fromX: this._lastLayout?.left || this._cachedLayout.left,\n          fromY: this._lastLayout?.top || this._cachedLayout.top,\n          curX: this._lastLayout?.left || this._cachedLayout.left,\n          curY: this._lastLayout?.top || this._cachedLayout.top,\n          toX: this._cachedLayout.left,\n          toY: this._cachedLayout.top,\n          time: this.animationConfig.time,\n          elapsed: 0,\n          easing: this.animationConfig.easing,\n        }\n\n        yogaAnimationManager.add(this._animation)\n      } else {\n        this._animation = <any>{\n          curX: this._cachedLayout.left,\n          curY: this._cachedLayout.top,\n        }\n      }\n    }\n\n    this._cachedLayout.left = this._animation.curX\n    this._cachedLayout.top = this._animation.curY\n\n    return this._cachedLayout\n  }\n\n  public set aspectRatio(value: number) {\n    if (this._aspectRatio === value) {\n      return\n    }\n    this._aspectRatio = value\n    this.requestLayoutUpdate()\n  }\n\n  public get aspectRatio(): number {\n    return this._aspectRatio\n  }\n\n  public get isWidthCalculatedFromPixi(): boolean {\n    return this._width === 'pixi'\n  }\n\n  public get isHeightCalculatedFromPixi(): boolean {\n    return this._height === 'pixi'\n  }\n\n  /**\n     * Returns computed width in pixels\n     */\n  public get calculatedWidth(): number {\n    return this._cachedLayout ? this._cachedLayout.width : this.node.getComputedWidth()\n  }\n\n  /**\n     * Returns computed height in pixels\n     */\n  public get calculatedHeight(): number {\n    return this._cachedLayout ? this._cachedLayout.height : this.node.getComputedHeight()\n  }\n\n  /**\n     * Can handle:\n     * - pixels (eg 150)\n     * - percents (\"50%\")\n     * - \"auto\" to use values from yoga\n     * - \"pixi\" to use DisplayObject.width/height\n     * @param value\n     */\n  public set width(value: YogaSize) {\n    if (this._width === value) {\n      return\n    }\n    this._width = value\n    if (value !== 'pixi') {\n      this.node.setWidth(value)\n    }\n    this.requestLayoutUpdate()\n  }\n\n  public get width(): YogaSize {\n    return this._parseValue(this.node.getWidth())\n  }\n\n  /**\n     * Can handle:\n     * - pixels (eg 150)\n     * - percents (\"50%\")\n     * - \"auto\" to use values from yoga\n     * - \"pixi\" to use DisplayObject.width/height\n     * @param value\n     */\n  public set height(value: YogaSize) {\n    if (this._height === value) {\n      return\n    }\n    this._height = value\n    if (value !== 'pixi') {\n      this.node.setHeight(value)\n    }\n    this.requestLayoutUpdate()\n  }\n\n  public get height(): YogaSize {\n    return this._parseValue(this.node.getHeight())\n  }\n\n  // @ts-ignore\n  public set flexDirection(direction: keyof FlexDirection) {\n    // @ts-ignore\n    this.node.setFlexDirection(<Yoga.YogaFlexDirection>YogaConstants.FlexDirection[direction])\n    this.updateGap()\n    this.requestLayoutUpdate()\n  }\n\n  // @ts-ignore\n  public get flexDirection(): keyof FlexDirection {\n    return YogaConstants.FlexDirection[this.node.getFlexDirection()] as any\n  }\n\n  // @ts-ignore\n  public set justifyContent(just: keyof JustifyContent) {\n    this.node.setJustifyContent(<Yoga.YogaJustifyContent>YogaConstants.JustifyContent[just])\n    this.requestLayoutUpdate()\n  }\n\n  // @ts-ignore\n  public get justifyContent(): keyof JustifyContent {\n    return YogaConstants.JustifyContent[this.node.getJustifyContent()] as any\n  }\n\n  // @ts-ignore\n  public set alignContent(align: keyof Align) {\n    this.node.setAlignContent(<Yoga.YogaAlign>YogaConstants.Align[align])\n    this.requestLayoutUpdate()\n  }\n\n  // @ts-ignore\n  public get alignContent(): keyof Align {\n    return YogaConstants.Align[this.node.getAlignContent()] as any\n  }\n\n  // @ts-ignore\n  public set alignItems(align: keyof Align) {\n    this.node.setAlignItems(<Yoga.YogaAlign>YogaConstants.Align[align])\n    this.requestLayoutUpdate()\n  }\n\n  // @ts-ignore\n  public get alignItems(): keyof Align {\n    // @ts-ignore\n    return YogaConstants.Align[this.node.getAlignItems()]\n  }\n\n  // @ts-ignore\n  public set alignSelf(align: keyof Align) {\n    this.node.setAlignSelf(<Yoga.YogaAlign>YogaConstants.Align[align])\n    this.requestLayoutUpdate()\n  }\n\n  // @ts-ignore\n  public get alignSelf(): keyof Align {\n    // @ts-ignore\n    return YogaConstants.Align[this.node.getAlignSelf()]\n  }\n\n  // @ts-ignore\n  public set flexWrap(wrap: keyof FlexWrap) {\n    this.node.setFlexWrap(<Yoga.YogaFlexWrap>YogaConstants.FlexWrap[wrap])\n    this.requestLayoutUpdate()\n  }\n\n  // @ts-ignore\n  public get flexWrap(): keyof FlexWrap {\n    // @ts-ignore\n    return YogaConstants.FlexWrap[this.node.getFlexWrap()]\n  }\n\n  public set flexGrow(grow: number) {\n    this.node.setFlexGrow(grow)\n    this.requestLayoutUpdate()\n  }\n\n  public get flexGrow(): number {\n    return this.node.getFlexGrow()\n  }\n\n  public set flexShrink(shrink: number) {\n    this.node.setFlexShrink(shrink)\n    this.requestLayoutUpdate()\n  }\n\n  public get flexShrink(): number {\n    return this.node.getFlexShrink()\n  }\n\n  public set flexBasis(basis: number) {\n    this.node.setFlexBasis(basis)\n    this.requestLayoutUpdate()\n  }\n\n  public get flexBasis(): number {\n    return this.node.getFlexBasis()\n  }\n\n  // @ts-ignore\n  public set position(type: keyof PositionType) {\n    this.node.setPositionType(<Yoga.YogaPositionType>YogaConstants.PositionType[type])\n    this.requestLayoutUpdate()\n  }\n\n  // @ts-ignore\n  public get position(): keyof PositionType {\n    // @ts-ignore\n    return YogaConstants.PositionType[this.node.getPositionType()]\n  }\n\n  public set padding(margin: number[]) {\n    YogaEdges.forEach((edge, index) => {\n      const value = margin[index]\n      this.node.setPadding(edge, value)\n    })\n    this.requestLayoutUpdate()\n  }\n\n  public get padding(): number[] {\n    return YogaEdges.map((edge) => this.node.getPadding(edge).value || 0)\n  }\n\n  public set paddingAll(value: number) {\n    this.padding = [value, value, value, value]\n  }\n\n  public set paddingTop(value: number) {\n    this.node.setPadding(Yoga.EDGE_TOP, value)\n    this.requestLayoutUpdate()\n  }\n\n  public get paddingTop(): number {\n    return this.node.getPadding(Yoga.EDGE_TOP).value || 0\n  }\n\n  public set paddingBottom(value: number) {\n    this.node.setPadding(Yoga.EDGE_BOTTOM, value)\n    this.requestLayoutUpdate()\n  }\n\n  public get paddingBottom(): number {\n    return this.node.getPadding(Yoga.EDGE_BOTTOM).value || 0\n  }\n\n  public set paddingLeft(value: number) {\n    this.node.setPadding(Yoga.EDGE_LEFT, value)\n    this.requestLayoutUpdate()\n  }\n\n  public get paddingLeft(): number {\n    return this.node.getPadding(Yoga.EDGE_LEFT).value || 0\n  }\n\n  public set paddingRight(value: number) {\n    this.node.setPadding(Yoga.EDGE_RIGHT, value)\n    this.requestLayoutUpdate()\n  }\n\n  public get paddingRight(): number {\n    return this.node.getPadding(Yoga.EDGE_RIGHT).value || 0\n  }\n\n  public set margin(margin: number[]) {\n    YogaEdges.forEach((edge, index) => {\n      const value = margin[index]\n      this.node.setMargin(edge, value)\n    })\n    this.requestLayoutUpdate()\n  }\n\n  public set marginAll(value: number) {\n    this.margin = [value, value, value, value]\n  }\n\n  public get margin(): number[] {\n    return YogaEdges.map((edge) => this.node.getMargin(edge).value || 0)\n  }\n\n  public set marginTop(value: number) {\n    if (this._marginTop !== value) {\n      this._marginTop = value\n      this.node.setMargin(Yoga.EDGE_TOP, value)\n      this.requestLayoutUpdate()\n    }\n  }\n\n  public get marginTop(): number {\n    return this._marginTop\n  }\n\n  public set marginBottom(value: number) {\n    this.node.setMargin(Yoga.EDGE_BOTTOM, value)\n    this.requestLayoutUpdate()\n  }\n\n  public get marginBottom(): number {\n    return this.node.getMargin(Yoga.EDGE_BOTTOM).value || 0\n  }\n\n  public set marginLeft(value: number) {\n    if (this._marginLeft !== value) {\n      this._marginLeft = value\n      this.node.setMargin(Yoga.EDGE_LEFT, value)\n      this.requestLayoutUpdate()\n    }\n  }\n\n  public get marginLeft(): number {\n    return this._marginLeft\n  }\n\n  public set marginRight(value: number) {\n    this.node.setMargin(Yoga.EDGE_RIGHT, value)\n    this.requestLayoutUpdate()\n  }\n\n  public get marginRight(): number {\n    return this.node.getMargin(Yoga.EDGE_RIGHT).value || 0\n  }\n\n  public set border(margin: number[]) {\n    YogaEdges.forEach((edge, index) => {\n      const value = margin[index]\n      this.node.setBorder(edge, value)\n    })\n    this.requestLayoutUpdate()\n  }\n\n  public get border(): number[] {\n    return YogaEdges.map((edge) => this.node.getBorder(edge))\n  }\n\n  public set borderAll(value: number) {\n    this.border = [value, value, value, value]\n  }\n\n  public set borderTop(value: number) {\n    this.node.setBorder(Yoga.EDGE_TOP, value)\n    this.requestLayoutUpdate()\n  }\n\n  public get borderTop(): number {\n    return this.node.getBorder(Yoga.EDGE_TOP)\n  }\n\n  public set borderBottom(value: number) {\n    this.node.setBorder(Yoga.EDGE_BOTTOM, value)\n    this.requestLayoutUpdate()\n  }\n\n  public get borderBottom(): number {\n    return this.node.getBorder(Yoga.EDGE_BOTTOM)\n  }\n\n  public set borderLeft(value: number) {\n    this.node.setBorder(Yoga.EDGE_LEFT, value)\n    this.requestLayoutUpdate()\n  }\n\n  public get borderLeft(): number {\n    return this.node.getBorder(Yoga.EDGE_LEFT)\n  }\n\n  public set borderRight(value: number) {\n    this.node.setBorder(Yoga.EDGE_RIGHT, value)\n    this.requestLayoutUpdate()\n  }\n\n  public get borderRight(): number {\n    return this.node.getBorder(Yoga.EDGE_RIGHT)\n  }\n\n  public set top(value: PixelsOrPercentage) {\n    this.node.setPosition(Yoga.EDGE_TOP, value)\n    this.requestLayoutUpdate()\n  }\n\n  public get top(): PixelsOrPercentage {\n    return this._parseValue(this.node.getPosition(Yoga.EDGE_TOP))\n  }\n\n  public set bottom(value: PixelsOrPercentage) {\n    this.node.setPosition(Yoga.EDGE_BOTTOM, value)\n    this.requestLayoutUpdate()\n  }\n\n  public get bottom(): PixelsOrPercentage {\n    return this._parseValue(this.node.getPosition(Yoga.EDGE_BOTTOM))\n  }\n\n  public set left(value: PixelsOrPercentage) {\n    this.node.setPosition(Yoga.EDGE_LEFT, value)\n    this.requestLayoutUpdate()\n  }\n\n  public get left(): PixelsOrPercentage {\n    return this._parseValue(this.node.getPosition(Yoga.EDGE_LEFT))\n  }\n\n  public set right(value: PixelsOrPercentage) {\n    this.node.setPosition(Yoga.EDGE_RIGHT, value)\n    this.requestLayoutUpdate()\n  }\n\n  public get right(): PixelsOrPercentage {\n    return this._parseValue(this.node.getPosition(Yoga.EDGE_RIGHT))\n  }\n\n  public set minWidth(value: PixelsOrPercentage) {\n    this.node.setMinWidth(value)\n    this.requestLayoutUpdate()\n  }\n\n  public get minWidth(): PixelsOrPercentage {\n    return this._parseValue(this.node.getMinWidth())\n  }\n\n  public set minHeight(value: PixelsOrPercentage) {\n    this.node.setMinHeight(value)\n    this.requestLayoutUpdate()\n  }\n\n  public get minHeight(): PixelsOrPercentage {\n    return this._parseValue(this.node.getMinHeight())\n  }\n\n  public set maxWidth(value: PixelsOrPercentage) {\n    this.node.setMaxWidth(value)\n    this.requestLayoutUpdate()\n  }\n\n  public get maxWidth(): PixelsOrPercentage {\n    return this._parseValue(this.node.getMaxWidth())\n  }\n\n  public set maxHeight(value: PixelsOrPercentage) {\n    this.node.setMaxHeight(value)\n    this.requestLayoutUpdate()\n  }\n\n  public get maxHeight(): PixelsOrPercentage {\n    return this._parseValue(this.node.getMaxHeight())\n  }\n\n  // @ts-ignore\n  public set display(value: keyof Display) {\n    this.node.setDisplay(<Yoga.YogaDisplay>YogaConstants.Display[value])\n    this.requestLayoutUpdate()\n  }\n\n  // @ts-ignore\n  public get display(): keyof Display {\n    // @ts-ignore\n    return Display[this.node.getDisplay()]\n  }\n\n  public set gap(val: number) {\n    if (this._gap === val) {\n      return\n    }\n    this._gap = val\n    this.updateGap()\n    this.requestLayoutUpdate()\n  }\n\n  public get gap() {\n    return this._gap\n  }\n\n  public updateGap(): void {\n    if (!this._gap) {\n      return\n    }\n\n    let firstChildrenSkipped = false\n    this.children.forEach((child, index) => {\n      if (firstChildrenSkipped) {\n        this.flexDirection === 'column' ? child.marginTop = this._gap : child.marginLeft = this._gap\n      }\n\n      if (child.position !== 'absolute') {\n        firstChildrenSkipped = true\n      }\n    })\n  }\n\n  private _parseValue(value: { unit: any; value: any }): PixelsOrPercentage {\n    if (value.unit === Yoga.UNIT_POINT) {\n      return parseFloat(value.value)\n    }\n\n    if (value.unit === Yoga.UNIT_PERCENT) {\n      return `${value.value.toString()}%`\n    }\n\n    if (value.unit === Yoga.UNIT_AUTO) {\n      return 'auto'\n    }\n    return undefined as any\n  }\n}\n","// @ts-nocheck\nimport * as PIXI from 'pixi.js'\nimport { applyContainerPolyfill } from './containerPolyfill'\nimport { applyDisplayObjectPolyfill } from './displayObjectPolyfill'\nimport { yogaAnimationManager } from './YogaAnimationManager'\nimport { YogaLayout } from './YogaLayout'\n\nexport { YogaLayout } from './YogaLayout'\nexport type { IYogaAnimationConfig } from './YogaLayout'\nexport { YogaLayoutConfig } from './YogaLayoutConfig'\nexport * from './YogaContants'\n\nexport type IFlexLayoutOptions = {\n  usePixiSharedTicker: boolean;\n}\n\n/**\n * Polyfills PIXI.DisplayObject and PIXI.Container\n *\n */\nexport function initializeYogaLayout(options: IFlexLayoutOptions = { usePixiSharedTicker: true }) {\n  applyDisplayObjectPolyfill()\n  applyContainerPolyfill()\n  if (options.usePixiSharedTicker) {\n    PIXI.Ticker.shared.add((delta) => yogaAnimationManager.update(delta))\n  }\n}\n\n/**\n * Can be used to optimize Yoga update calls.\n * If renderer is set yoga boundBoxCheck/layotutUpdate in updateTransform will be called ONLY when rendering.\n * @param renderer\n */\nexport function yogaSetRenderer(renderer: PIXI.Renderer) {\n  renderer.on('prerender', () => YogaLayout.isRendering = true)\n  renderer.on('postrender', () => YogaLayout.isRendering = false)\n}\n","import * as PIXI from 'pixi.js'\nimport { IS_FLEX_DEFAULT } from '@utils'\nimport { initializeYogaLayout, yogaSetRenderer } from './flex-layout'\n\nif (IS_FLEX_DEFAULT) {\n  console.log('FLEX_LAYOUT_ADDED')\n  initializeYogaLayout()\n  // @ts-ignore\n  yogaSetRenderer(PIXI.autoDetectRenderer())\n}\n\n// const containerStyle = {\n//   justifyContent: 'space-between',\n//   flexWrap: 'wrap',\n//   width: 200,\n// }\n\n// const container = new PIXI.Container()\n// container.flex = true\n// container.yoga.fromConfig(containerStyle)\n// container.yoga.flexDirection = 'row'\n// container.yoga.animationConfig = {\n//   time: 200,\n//   easing: (t) => t,\n// }\n","// @ts-nocheck\nimport * as PIXI from 'pixi.js'\n// import { DisplayObject } from 'pixi.js'\nimport { YogaLayout } from './YogaLayout'\n\ntype TransformStatic = PIXI.Transform\n\n// const NineSlicePlane = (<any>PIXI).NineSlicePlane || (<any>PIXI).mesh.NineSlicePlane\n\ndeclare module 'pixi.js' {\n  export type DisplayObject = {\n    yoga: YogaLayout;\n\n    /**\n         * Internal property for fast checking if object has yoga\n         */\n    __hasYoga: boolean;\n\n    /**\n         * Applies yoga layout to DisplayObject\n         */\n    updateYogaLayout(): void;\n\n    /**\n         * Checks boundaries of DisplayObject and emits NEED_LAYOUT_UPDATE if needed\n         */\n    checkIfBoundingBoxChanged(): void;\n    _yogaLayoutHash: number;\n    _prevYogaLayoutHash: number;\n    __yoga: YogaLayout;\n  }\n\n}\n\nexport function applyDisplayObjectPolyfill(prototype: any = PIXI.DisplayObject.prototype) {\n  Object.defineProperty(prototype, 'yoga', {\n    get(): boolean {\n      if (!this.__yoga) {\n        this.__yoga = new YogaLayout(this)\n        this.__hasYoga = true\n      }\n      return this.__yoga\n    },\n    set(v: any): void {\n      this.__yoga = v\n    },\n  })\n\n  Object.defineProperty(prototype, 'visible', {\n    get(): boolean {\n      return this._visible\n    },\n    set(v: any): void {\n      if (this.__hasYoga && this._visible !== v) {\n        this.__yoga.display = v ? 'flex' : 'none'\n      }\n      this._visible = v\n    },\n  })\n\n  const { destroy } = prototype\n  prototype.destroy = function () {\n    if (this.__hasYoga) {\n      this.yoga.children = []\n      this.yoga.node.free()\n      this.yoga.parent = undefined\n      this.__hasYoga = false\n      delete this.yoga\n    }\n    destroy.call(this)\n  }\n\n  prototype.checkIfBoundingBoxChanged = function (this: PIXI.DisplayObject) {\n    if ((this as any).updateText) {\n      (this as any).updateText(true)\n    }\n\n    for (let i = 0, j = this.__yoga.children.length; i < j; i++) {\n      if (this.__yoga.children[i].target.visible) {\n        this.__yoga.children[i].target.checkIfBoundingBoxChanged()\n      }\n    }\n\n    const texture: PIXI.Texture = (this as any)._texture\n    const bounds = (this as any)._bounds\n\n    if (texture) {\n      let tw = Math.abs(this.__yoga.rescaleToYoga ? 1 : this.scale.x) * texture.orig.width\n      let th = Math.abs(this.__yoga.rescaleToYoga ? 1 : this.scale.y) * texture.orig.height\n      if (!this.__yoga.rescaleToYoga && (<any> this).updateHorizontalVertices /* Is NineSlicePlane? */) {\n        tw = (<any> this).width\n        th = (<any> this).height\n      } else if (this.__yoga.rescaleToYoga && this.__yoga.keepAspectRatio) {\n        this.__yoga.aspectRatio = texture.orig.width / texture.orig.height\n      }\n\n      this._yogaLayoutHash = tw * 0.12498 + th * 4121\n      if (this._yogaLayoutHash !== this._prevYogaLayoutHash) {\n        (<any> this.__yoga)._width === 'pixi' && this.__yoga.node.setWidth(tw);\n        (<any> this.__yoga)._height === 'pixi' && this.__yoga.node.setHeight(th)\n        this.emit(YogaLayout.NEED_LAYOUT_UPDATE)\n      }\n\n      this._prevYogaLayoutHash = this._yogaLayoutHash\n    } else if (bounds) {\n      this._yogaLayoutHash = -1000000\n\n      if ((<any> this.__yoga)._width === 'pixi') {\n        const w = Math.round(bounds.maxX - bounds.minX)\n        this.__yoga.node.setWidth(w)\n        this._yogaLayoutHash += w * 0.2343\n      }\n\n      if ((<any> this.__yoga)._height === 'pixi') {\n        const h = Math.round(bounds.maxY - bounds.minY)\n        this.__yoga.node.setHeight(h)\n        this._yogaLayoutHash += h * 5121\n      }\n\n      if (this._yogaLayoutHash !== -1000000 && this._yogaLayoutHash !== this._prevYogaLayoutHash) {\n        this.emit(YogaLayout.NEED_LAYOUT_UPDATE)\n      }\n      this._prevYogaLayoutHash = this._yogaLayoutHash\n    }\n  }\n\n  prototype.updateYogaLayout = function (this: PIXI.DisplayObject) {\n    this.__yoga.update()\n    const updated = this.__yoga.willLayoutWillBeRecomputed()\n    const layout = this.__yoga.getComputedLayout()\n\n    if (updated || this.__yoga.animationConfig) {\n      (this.transform as TransformStatic).position.set(layout.left, layout.top)\n\n      if (this.__yoga.rescaleToYoga) {\n        (<any> this).width = layout.width;\n        (<any> this).height = layout.height\n      }\n\n      if (updated) {\n        this.emit(YogaLayout.AFTER_LAYOUT_UPDATED_EVENT, layout)\n      }\n    }\n\n    for (let i = 0, j = this.__yoga.children.length; i < j; i++) {\n      if (this.__yoga.children[i].target.visible) {\n        this.__yoga.children[i].target.updateYogaLayout()\n      }\n    }\n  }\n}\n","// @ts-nocheck\nimport { YogaLayout } from './YogaLayout'\nimport * as PIXI from 'pixi.js'\n\n// declare module 'pixi.js' {\n//   export type Container = {\n//     /**\n//          * True to enable flex for direct children. See also: flexRecursive\n//          */\n//     flex: boolean;\n\n//     /**\n//          * True to enable flex for ALL children. See also: flex\n//          */\n//     flexRecursive: boolean;\n//   }\n// }\n\nexport function applyContainerPolyfill(proto: any = PIXI.Container.prototype) {\n  Object.defineProperty(proto, 'flex', {\n    get(): boolean {\n      return this.__flex\n    },\n    set(newFlex: boolean): void {\n      if (!this.flex && newFlex) {\n        this.children.forEach((child) => {\n          this.yoga.addChild(child.yoga)\n          if (this.flexRecursive && child instanceof PIXI.Container && child.flex !== false) {\n            child.flexRecursive = true\n          }\n        })\n        this.emit(YogaLayout.NEED_LAYOUT_UPDATE)\n      }\n\n      if (this.flex && !newFlex) {\n        this.children.forEach((child) => {\n          this.yoga.removeChild(child.yoga)\n        })\n      }\n      this.__flex = newFlex\n    },\n  })\n\n  Object.defineProperty(proto, 'flexRecursive', {\n    get(): boolean {\n      return this.__flexRecursive\n    },\n    set(newFlex: boolean): void {\n      this.__flexRecursive = newFlex\n      this.flex = newFlex\n    },\n  })\n\n  const { addChild } = proto\n  const { removeChildren } = proto\n  const { addChildAt } = proto\n  const { removeChild } = proto\n  const containerUpdateTransform = proto.updateTransform\n\n  proto.addChild = function (...children) {\n    if (children.length === 1) {\n      const child = children[0]\n      if (this.flex) {\n        child.yoga = child.yoga || new YogaLayout(child)\n        child.__hasYoga = true\n        this.yoga.addChild(child.yoga)\n      }\n\n      if (this.flexRecursive && child instanceof PIXI.Container && child.flex !== false) {\n        child.flexRecursive = true\n      }\n      this.emit(YogaLayout.NEED_LAYOUT_UPDATE)\n    }\n    return addChild.call(this, ...children) as any\n  }\n\n  proto.addChildAt = function (child, index) {\n    if (this.flex) {\n      child.yoga = child.yoga || new YogaLayout(child)\n      this.__hasYoga = true\n      this.yoga.addChild(child.yoga, index)\n    }\n\n    if (this.flexRecursive && child instanceof PIXI.Container && child.flex !== false) {\n      child.flexRecursive = true\n    }\n    this.emit(YogaLayout.NEED_LAYOUT_UPDATE)\n    return addChildAt.call(this, child, index) as any\n  }\n\n  proto.removeChild = function (...children) {\n    if (children.length === 1) {\n      const child = children[0]\n      if (this.flex) {\n        this.yoga.removeChild(child.yoga)\n      }\n      this.emit(YogaLayout.NEED_LAYOUT_UPDATE)\n    }\n    return removeChild.call(this, ...children) as any\n  }\n\n  proto.removeChildren = function (beginIndex, endIndex) {\n    if (this.__hasYoga) {\n      const begin = beginIndex || 0\n      const end = typeof endIndex === 'number' ? endIndex : this.children.length\n      const range = end - begin\n\n      if (range > 0 && range <= end) {\n        const removed = this.children.slice(begin, range)\n        removed.forEach((child) => child.__hasYoga && this.yoga.removeChild(child.yoga))\n      }\n      this.emit(YogaLayout.NEED_LAYOUT_UPDATE)\n    }\n    return removeChildren.call(this, beginIndex, endIndex) as any\n  }\n\n  proto.updateTransform = function () {\n    if (this.__hasYoga && this.__yoga.isRoot && YogaLayout.isRendering) {\n      this.checkIfBoundingBoxChanged()\n      this.updateYogaLayout()\n    }\n\n    return containerUpdateTransform.call(this)\n  }\n}\n","import '@utils/addFlexLayout'\nimport cytoscape from 'cytoscape'\nimport * as PIXI from 'pixi.js'\n// @ts-ignore\nimport euler from 'cytoscape-euler'\n// @ts-ignore\nimport cise from 'cytoscape-cise'\n// @ts-ignore\nimport d3Force from 'cytoscape-d3-force'\n// @ts-ignore\nimport cola from 'cytoscape-cola'\n// @ts-ignore\nimport avsdf from 'cytoscape-avsdf'\n// @ts-ignore\nimport dagre from 'cytoscape-dagre'\n// @ts-ignore\nimport spread from 'cytoscape-spread'\n// @ts-ignore\nimport klay from 'cytoscape-klay'\n\ncytoscape.use(klay)\nspread(cytoscape)\ncytoscape.use(dagre)\ncytoscape.use(avsdf)\ncytoscape.use(euler)\ncytoscape.use(cise)\ncytoscape.use(cola)\ncytoscape.use(d3Force)\n\n// HIGH\n// PIXI.settings.ROUND_PIXELS = true\n// // @ts-ignore\n// PIXI.settings.PRECISION_FRAGMENT = PIXI.PRECISION.HIGH\n// PIXI.settings.RESOLUTION = 32// 64// window.devicePixelRatio\n// PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.LINEAR\n\n// LOW\nPIXI.settings.ROUND_PIXELS = false// true\n// @ts-ignore\nPIXI.settings.PRECISION_FRAGMENT = PIXI.PRECISION.LOW\nPIXI.settings.RESOLUTION = 1// 32// 64// window.devicePixelRatio\nPIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST\n","import React from 'react'\nimport cytoscape, { Core } from 'cytoscape'\nimport { Cluster, ClustersByNodeId, ClustersByChildClusterId } from '@type'\n\nexport const mutableGraphMap: Record<string, {\n  cy: Core;\n  clustersByNodeId: ClustersByNodeId;\n  clustersByChildClusterId: ClustersByChildClusterId;\n}> = {}\n\nexport type Props = {\n  id: string;\n  onLoad?: (cy: Core) => void;\n  create?: true;\n  clusters?: Cluster[];\n}\n\n// const createCanvas = () => {\n//   const canvas = document.createElement('canvas')\n//   canvas.width = window.innerWidth\n//   canvas.height = window.innerHeight\n//   document.body.appendChild(canvas)\n//   return canvas\n// }\nexport default (props: Props) => {\n  const {\n    onLoad,\n    id,\n    clusters = [],\n  } = props\n  const isExistRef = React.useRef(false)\n  const graph = React.useMemo(() => {\n    if (mutableGraphMap[id]) {\n      isExistRef.current = true\n      return mutableGraphMap[id]\n    }\n    const cyInstance = cytoscape({ // // create\n      elements: [],\n      headless: true,\n      styleEnabled: true,\n      // container: createCanvas(),\n      // style: [ // the stylesheet for the graph\n      //   {\n      //     selector: 'node',\n      //     style: {\n      //       'background-color': '#666',\n      //       label: 'data(id)',\n      //       width: 100,\n      //       height: 100,\n      //     },\n      //   },\n\n      //   {\n      //     selector: 'edge',\n      //     style: {\n      //       width: 3,\n      //       'line-color': '#ccc',\n      //       'target-arrow-color': '#ccc',\n      //       'target-arrow-shape': 'triangle',\n      //       // 'curve-style': 'bezier',\n      //     },\n      //   },\n      // ],\n\n    })\n    mutableGraphMap[id] = {\n      cy: cyInstance,\n      clustersByNodeId: {},\n      clustersByChildClusterId: {},\n    }\n    return mutableGraphMap[id]\n  }, [id])\n  const {\n    cy,\n  } = graph\n  React.useMemo(() => {\n    const clustersByNodeId: ClustersByNodeId = {}\n    clusters.forEach((cluster) => {\n      cluster.ids.forEach((nodeID) => {\n        const clusterById = clustersByNodeId[nodeID] ?? []\n        clusterById.push(cluster)\n        clustersByNodeId[nodeID] = clusterById\n      })\n    })\n    const clustersByChildClusterId: ClustersByChildClusterId = {}\n    clusters.forEach((cluster) => {\n      cluster.childClusterIds.forEach((clusterId) => {\n        const clusterById = clustersByChildClusterId[clusterId] ?? []\n        clusterById.push(cluster)\n        clustersByChildClusterId[clusterId] = clusterById\n      })\n    })\n    graph.clustersByNodeId = clustersByNodeId\n    graph.clustersByChildClusterId = clustersByChildClusterId\n  }, [graph, clusters])\n  React.useEffect(() => {\n    if (isExistRef.current) return\n    setTimeout(() => {\n      onLoad?.(cy)\n    }, 500)\n    return () => {\n      if (!isExistRef.current) {\n        delete mutableGraphMap[id]\n        cy.destroy()\n      }\n    }\n  }, // destroy\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [cy])\n  return graph\n}\n","import React from 'react'\nimport { Core, NodeSingular, EdgeSingular } from 'cytoscape'\nimport {\n  ElementContext, Element,\n  NodeConfig,\n  EdgeConfig,\n  ElementData,\n  ElementFilterOption,\n} from '@type'\nimport { CYTOSCAPE_EVENT, ELEMENT_DATA_FIELDS } from '@constants'\nimport { calculateVisibilityByContext, contextUtils } from '@utils'\nimport { useInitializedRef } from 'colay-ui/hooks/useInitializedRef'\n\nexport type Props = {\n  element: Element;\n  item: ElementData\n  cy: Core;\n  contextRef: React.RefObject<ElementContext>;\n  config: NodeConfig | EdgeConfig;\n  filter?: ElementFilterOption<Element>\n}\n\ntype Result = {\n\n}\n\nexport const useElement = (props: Props): Result => {\n  const {\n    // cy,\n    element,\n    contextRef,\n    config,\n    item,\n  } = props\n  const {\n    renderEvents = [],\n  } = config\n  const initializedRef = useInitializedRef()\n  // Update data\n  React.useEffect(\n    () => {\n      if (initializedRef.current) {\n        element.data({\n          [ELEMENT_DATA_FIELDS.DATA]: item?.data,\n        })\n      }\n    },\n    [item?.data],\n  )\n  // EventListeners\n  React.useEffect(\n    () => {\n      renderEvents.forEach((eventName) => {\n        element.on(eventName, () => {\n          contextRef.current?.render?.()\n        })\n      })\n      /// ADD SELECT_EDGE and SELECT_NODE Events ***\n      const isNode = element.isNode()\n      element.on(CYTOSCAPE_EVENT.select, () => {\n        if (isNode) {\n          (element as NodeSingular).connectedEdges().forEach((edge) => {\n            edge.emit(CYTOSCAPE_EVENT.selectNode)\n          })\n        } else {\n          const edge = element as EdgeSingular\n          edge.source().emit(CYTOSCAPE_EVENT.selectEdge)\n          edge.target().emit(CYTOSCAPE_EVENT.selectEdge)\n        }\n      })\n      element.on(CYTOSCAPE_EVENT.unselect, () => {\n        if (isNode) {\n          (element as NodeSingular).connectedEdges().forEach((edge) => {\n            edge.emit(CYTOSCAPE_EVENT.unselectNode)\n          })\n        } else {\n          const edge = element as EdgeSingular\n          edge.source().emit(CYTOSCAPE_EVENT.unselectEdge)\n          edge.target().emit(CYTOSCAPE_EVENT.unselectEdge)\n        }\n      })\n      /// ***ADD SELECT_EDGE and SELECT_NODE Events\n      return () => {\n        renderEvents.forEach((eventName) => {\n          element.off(eventName)\n        })\n        /// ADD SELECT_EDGE and SELECT_NODE Events ***\n        element.off(CYTOSCAPE_EVENT.select)\n        element.off(CYTOSCAPE_EVENT.unselect)\n        /// *** ADD SELECT_EDGE and SELECT_NODE Events\n      }\n    },\n    [element, renderEvents],\n  )\n  // Filter\n  React.useEffect(() => {\n    const oldFiltered = contextRef.current!.settings.filtered\n    // @ts-ignore\n    const filtered = config.filter?.test?.({ element, item }) ?? true\n    contextRef.current!.settings.filtered = filtered\n    if (oldFiltered !== filtered) {\n      contextUtils.update(element, contextRef.current)\n      // @ts-ignore\n      if (calculateVisibilityByContext(element)) {\n        contextRef.current?.render()\n      }\n    }\n  }, [config.filter])\n\n  // Add fields\n  React.useMemo(() => {\n    element.hovered = () => contextRef.current?.settings.hovered\n    element.filtered = () => contextRef.current?.settings.filtered\n  }, [element])\n  return {\n\n  }\n}\n","import React from 'react'\nimport { useStateWithCallback } from 'colay-ui'\nimport { NodeSingular, Core } from 'cytoscape'\nimport { Position } from 'colay/type'\nimport {\n  NodeContext,\n  NodeConfig,\n  Cluster,\n  NodeData,\n} from '@type'\nimport { getClusterVisibility, calculateVisibilityByContext, contextUtils } from '@utils'\nimport { CYTOSCAPE_EVENT, ELEMENT_DATA_FIELDS } from '@constants'\nimport { useInitializedRef } from 'colay-ui/hooks/useInitializedRef'\nimport { mutableGraphMap } from './useGraph'\nimport { useElement } from './useElement'\n\nexport type Props = {\n  graphID: string;\n  position: Position;\n  isCluster?: boolean;\n  onPositionChange?: (c: {element: NodeSingular; context: NodeContext }) => void|any;\n  config?: NodeConfig;\n  item: NodeData;\n}\n\ntype Result = {\n  element: NodeSingular;\n  context: NodeContext;\n  clusters?: Cluster[];\n  cy: Core;\n}\n\nconst DEFAULT_BOUNDING_BOX = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n}\n\nexport default (props: Props): Result => {\n  const {\n    position,\n    onPositionChange,\n    graphID,\n    config = {},\n    item,\n    isCluster = false,\n  } = props\n  const {\n    id,\n  } = item\n  const initializedRef = useInitializedRef()\n  const { cy, clustersByNodeId, clustersByChildClusterId } = mutableGraphMap[graphID]\n  const clusters = isCluster\n    ? clustersByChildClusterId[id]\n    : clustersByNodeId[id]\n  const [, setState] = useStateWithCallback({}, () => {})\n  const contextRef = React.useRef<NodeContext>({\n    render: (callback: () => {}) => setState({}, callback),\n    onPositionChange: () => {\n      onPositionChange?.({ element, context: contextRef.current })\n      element.connectedEdges().forEach((mutableEdge) => {\n        const edgeContext = contextUtils.get(mutableEdge)\n        edgeContext.onPositionChange()\n      })\n    },\n    boundingBox: DEFAULT_BOUNDING_BOX,\n    settings: {\n      filtered: true,\n      visibility: {\n        cluster: getClusterVisibility(id, clusters),\n      },\n      hovered: false,\n    },\n  } as NodeContext)\n  const element = React.useMemo(() => cy!.add({\n    data: {\n      id,\n      [ELEMENT_DATA_FIELDS.CONTEXT]: contextRef.current,\n      [ELEMENT_DATA_FIELDS.DATA]: item?.data,\n    }, // ...(parentID ? { parent: parentID } : {}),\n    position: { ...position },\n    group: 'nodes',\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }) as NodeSingular, [cy, id])\n  React.useEffect(\n    () => {\n      const {\n        current: {\n          onPositionChange,\n        },\n      } = contextRef\n      const onHover = () => {\n        contextRef.current.settings.hovered = true\n        contextUtils.update(element, contextRef.current)\n      }\n      const onHoverExit = () => {\n        contextRef.current.settings.hovered = false\n        contextUtils.update(element, contextRef.current)\n      }\n      element.on(CYTOSCAPE_EVENT.position, onPositionChange)\n      element.on(CYTOSCAPE_EVENT.mouseover, onHover)\n      element.on(CYTOSCAPE_EVENT.mouseout, onHoverExit)\n      return () => {\n        element.off(CYTOSCAPE_EVENT.position, `#${element.id()}`, onPositionChange)\n        element.off(CYTOSCAPE_EVENT.mouseover, `#${element.id()}`, onHover)\n        element.off(CYTOSCAPE_EVENT.mouseout, `#${element.id()}`, onHoverExit)\n        cy!.remove(element!)\n      }\n    }, // destroy\n    [cy, id],\n  )\n  React.useMemo(() => {\n    if (initializedRef.current) {\n      element.position(position)\n    }\n  }, [position.x, position.y])\n  // Update Visibility\n  React.useMemo(() => {\n    const clusterVisibility = getClusterVisibility(element.id(), clusters)\n    if (clusterVisibility !== contextRef.current.settings.visibility.cluster) {\n      const oldVisible = calculateVisibilityByContext(element)\n      contextRef.current.settings.visibility.cluster = clusterVisibility\n      // contextRef.current.settings = {\n      //   ...contextRef.current.settings,\n      //   visibility,\n      // }\n      contextUtils.update(element, contextRef.current)\n      if (oldVisible !== calculateVisibilityByContext(element)) {\n        contextRef.current.render()\n      }\n    }\n  }, [element, clusters])\n  useElement({\n    contextRef,\n    cy,\n    element,\n    config,\n    item,\n  })\n  return {\n    element,\n    context: contextRef.current,\n    clusters,\n    cy,\n  }\n}\n","import { createStoreProvider } from 'colay-ui'\n// import { createStoreProvider } from '@root/components/GraphEditor/createStoreProvider'\nimport {\n  GraphEditorContext as GraphEditorContextType,\n} from '@type'\n\nconst {\n  // store,\n  Context,\n  useSelector,\n  Provider,\n} = createStoreProvider<GraphEditorContextType>(\n  {} as unknown as GraphEditorContextType, { immer: false },\n)\n\nexport const GraphEditorContext = Context\nexport const GraphEditorProvider = Provider\nexport const useGraphEditor = useSelector\n","import React from 'react'\nimport {\n  PixiComponent,\n  Container as PIXIReactContainer,\n} from '@inlet/react-pixi'\nimport * as PIXI from 'pixi.js'\nimport { dragTrack } from '@core/utils/events'\nimport {\n  applyDefaultProps, preprocessProps,\n  getEventClientPosition,\n} from '@utils'\nimport {\n  PIXIFlexStyle,\n  PIXIBasicStyle,\n  PIXIDisplayObjectProps,\n  PIXIBasicProps,\n} from '@type'\nimport { Position, PropsWithRef } from 'colay-ui/type'\nimport { Enumerable } from 'colay/type'\n\nexport type ContainerProps = PIXIBasicProps & PIXIDisplayObjectProps\n& Omit<React.ComponentProps<typeof PIXIReactContainer>, 'children'> &{\n  style: PIXIFlexStyle & PIXIBasicStyle;\n  children: Enumerable<React.ReactNode>;\n  draggable?: boolean;\n  onDrag?: (param: Position) => void;\n}\n\ntype ContainerPropsWithRef = PropsWithRef<\nPIXI.Container,\nContainerProps\n>\n\nexport type ContainerType = React.FC<ContainerPropsWithRef>\nexport type ContainerRef = PIXI.Container\n\n// @ts-ignore\nexport const Container = PixiComponent<ContainerProps, PIXI.Container>(\n  'PIXIContainer',\n  {\n    create: (props) => {\n      const {\n        onDrag,\n        draggable = false,\n        interactive = false,\n      } = props\n      const instance = new PIXI.Container()\n      instance.interactive = interactive || draggable\n      if (draggable) {\n        const { onDown, onMove } = dragTrack((posDiff) => {\n          const { parent: { scale } } = instance\n          instance.x += posDiff.x / scale.x\n          instance.y += posDiff.y / scale.y\n          onDrag && onDrag({ x: instance.x, y: instance.y })\n        })\n        instance\n          .on('pointerdown', (e: PIXI.InteractionEvent) => {\n            const { originalEvent } = e.data\n            const { x, y } = getEventClientPosition(originalEvent)// originalEvent as MouseEvent\n            onDown({ x, y })\n          })\n          .on('pointermove', (e: PIXI.InteractionEvent) => {\n            const { originalEvent } = e.data\n            const { x, y } = getEventClientPosition(originalEvent)// originalEvent as MouseEvent\n            onMove({ x, y })\n          })\n      }\n      // applyEvents(instance, props)\n      return instance\n    },\n    applyProps: (mutableInstance: PIXI.Container, oldProps, _props) => {\n      const props = preprocessProps(_props)\n      const {\n        left = 0,\n        top = 0,\n        width,\n        height,\n      } = props.style ?? {}\n      applyDefaultProps(\n        mutableInstance,\n        oldProps,\n        props,\n        {\n          isFlex: false,\n        },\n      )\n      mutableInstance.x = left\n      mutableInstance.y = top\n      width && (mutableInstance.width = width)\n      height && (mutableInstance.height = height)\n    },\n  },\n) as unknown as ContainerType\n","import * as R from 'colay/ramda'\nimport { Position } from 'colay/type'\nimport * as V from 'colay/vector'\n\ntype OnDragResult = {\n  keepDragging?: boolean;\n  position?: Position;\n}\n\nexport function dragTrack(\n  onDrag: (pos: Position) => {keepDragging?: boolean; position?: Position }|void,\n) {\n  const mutableData: { position: Position | null} = { position: null }\n  const onDown = (position: Position) => {\n    mutableData.position = position\n  }\n  const onMove = (position: Position) => R.when(\n    R.isNotNil,\n    () => {\n      const result = (onDrag(V.subtract(mutableData.position!)(position)) ?? {}) as OnDragResult\n\n      mutableData.position = position\n      if (result?.keepDragging === false) {\n        mutableData.position = null\n      }\n      if (R.has('position', result)) {\n        (mutableData as OnDragResult).position = result.position\n      }\n      return result\n      // return R.pipe(\n      //   R.tap(\n      //     R.when(\n      //       R.propEq('keepDragging', false),\n      //       () => {\n      //         mutableData.position = null\n      //       },\n      //     ),\n      //   ),\n      //   R.tap(\n      //     R.when(\n      //       R.has('position'),\n      //       () => {\n      //         // @ts-ignore\n      //         mutableData.position = result.position\n      //       },\n      //     ),\n      //   ),\n      // )(result ?? {})\n    },\n  )(mutableData.position)\n  document.addEventListener('pointerup', () => {\n    mutableData.position = null\n  })\n  return {\n    onDown,\n    onMove,\n  }\n}\n","import React from 'react'\nimport { wrapComponent } from 'colay-ui'\nimport { useNode } from '@hooks'\nimport {\n  RenderClusterNode, NodeConfig, GraphRef,\n  Cluster,\n} from '@type'\nimport {\n  calculateObjectBoundsWithoutChildren,\n  calculateVisibilityByContext,\n} from '@utils'\nimport { useTheme } from '@core/theme'\nimport { Container, ContainerRef } from '../Container'\n\nexport type ClusterNodeContainerProps = {\n  children: RenderClusterNode;\n  item: Cluster;\n  graphID: string;\n  graphRef: React.RefObject<GraphRef>;\n  config?: NodeConfig;\n\n}\n\nexport type ClusterNodeContainerType = React.ForwardedRef<ClusterNodeContainerProps>\n\nconst DEFAULT_POSITION = { x: 0, y: 0 }\nconst ClusterNodeContainerElement = (\n  props: ClusterNodeContainerProps,\n  __: React.ForwardedRef<ClusterNodeContainerType>,\n) => {\n  const {\n    item,\n    graphID,\n    children,\n    config = {} as NodeConfig,\n    graphRef,\n  } = props\n  const containerRef = React.useRef<ContainerRef>(null)\n  React.useEffect(() => {\n    if (item.ids.length > 0) {\n      const positionAcc = {\n        x: 0,\n        y: 0,\n      }\n      item.ids.forEach((id) => {\n        const clusterElement = cy.$id(id)\n        const clusterElementPos = clusterElement.position()\n        positionAcc.x += clusterElementPos.x\n        positionAcc.y += clusterElementPos.y\n      })\n      const { length } = item.ids\n      const calculatedPosition = {\n        x: positionAcc.x / length,\n        y: positionAcc.y / length,\n      }\n      element.position(calculatedPosition)\n    }\n  }, [item.ids])\n  const { element, context, cy } = useNode({\n    graphID,\n    config,\n    position: config.position ?? DEFAULT_POSITION,\n    onPositionChange: ({ element }) => {\n      const container = containerRef.current!\n      const { x, y } = element.position()\n      container.x = x\n      container.y = y\n      context.boundingBox.x = x\n      context.boundingBox.y = y\n    },\n    item,\n  })\n  const { x, y } = element.position()\n  const onDrag = React.useCallback(\n    (pos) => {\n      element.position(pos)\n    },\n    [element],\n  )\n  React.useEffect(() => {\n    const container = containerRef.current!\n    context.boundingBox = calculateObjectBoundsWithoutChildren(\n      container,\n    )\n  })\n  const theme = useTheme()\n  const visible = calculateVisibilityByContext(element) && (item.visible ?? true)\n  const opacity = context.settings.filtered\n    ? 1\n    : (config.filter?.settings?.opacity ?? 0.2)\n  return (\n    <Container\n      ref={containerRef}\n      style={{\n        left: x,\n        top: y,\n      }}\n      alpha={opacity}\n      visible={visible}\n      draggable\n      onDrag={onDrag}\n      // onRightPress={(event) => {\n      //   event.data.originalEvent.preventDefault()\n      //   event.data.originalEvent.stopPropagation()\n      // }}\n    >\n      {children({\n        item,\n        element,\n        cy,\n        theme,\n        graphRef,\n      })}\n    </Container>\n  )\n}\n\nexport const ClusterNodeContainer = wrapComponent<ClusterNodeContainerProps>(\n  ClusterNodeContainerElement,\n  {\n    isForwardRef: true,\n  },\n)\n","import React from 'react'\nimport { wrapComponent } from 'colay-ui'\nimport * as R from 'colay/ramda'\nimport * as C from 'colay/color'\nimport * as PIXI from 'pixi.js'\nimport { useTheme } from '@core/theme'\nimport { useEdge } from '@hooks'\nimport { contextUtils, calculateVisibilityByContext } from '@utils'\nimport { EDGE_CONTAINER_Z_INDEX, CYTOSCAPE_EVENT } from '@constants'\nimport {\n  RenderEdge,\n  EdgeConfig,\n  DrawLine,\n  EdgeElement,\n  NodeElement,\n  GraphRef,\n} from '@type'\nimport * as V from 'colay/vector'\nimport { Graphics, drawLine as defaultDrawLine } from '../Graphics'\nimport { Container, ContainerRef } from '../Container'\n\nexport type EdgeContainerProps = {\n  children: RenderEdge;\n  item: any;\n  graphID: string;\n  drawLine?: DrawLine;\n  config?: EdgeConfig;\n  graphRef: React.RefObject<GraphRef>;\n}\n\nexport type EdgeContainerType = React.FC<EdgeContainerProps>\nconst DEFAULT_DISTANCE = 36\nconst DEFAULT_MARGIN = 10\n\nexport const calculateEdgeGroupInfo = (edge: EdgeElement) => {\n  const edgeID = edge.id()\n  const targetElement = edge.target()\n  const sourceElement = edge.source()\n  const betweenEdges = targetElement.edgesWith(sourceElement)\n  const betweenEdgesCount = betweenEdges.length\n  const betweenEdgesMedian = Math.floor(betweenEdgesCount / 2)\n  let edgeIndex = 0\n  betweenEdges.forEach((edgeEl, i) => {\n    if (edgeEl.id() === edgeID) {\n      edgeIndex = i\n    }\n  })\n  let sortedIndex = 0\n  if (betweenEdgesCount > 1) {\n    sortedIndex = R.range(-betweenEdgesMedian, betweenEdgesMedian + 1)[edgeIndex]\n    if (betweenEdgesCount % 2 === 0 && sortedIndex >= 0) {\n      sortedIndex += 1\n    }\n  }\n  return {\n    sortedIndex,\n    index: edgeIndex,\n    count: betweenEdgesCount,\n  }\n}\nexport const calculateVectorInfo = (\n  source: NodeElement,\n  to: NodeElement,\n) => {\n  const fromPosition = source.position()\n  const toPosition = to.position()\n  const distanceVector = V.subtract(fromPosition)(toPosition)\n  // const distanceVector = R.pipe(\n  //   V.subtract(fromPosition),\n  // )(toPosition)\n  const unitVector = V.normalize(distanceVector)\n  const normVector = V.rotate(Math.PI / 2)(unitVector)\n  // V.multiplyScalar(sortedIndex > 0 ? 1 : -1)(V.rotate(Math.PI / 2)(unitVector))\n  const midpointPosition = V.midpoint(fromPosition)(toPosition)\n  const sign = source.id() > to.id() ? 1 : -1\n  return {\n    fromPosition,\n    toPosition,\n    distanceVector,\n    unitVector,\n    normVector,\n    midpointPosition,\n    undirectedUnitVector: V.multiplyScalar(sign)(unitVector),\n    undirectedNormVector: V.multiplyScalar(sign)(normVector),\n  }\n}\nconst EdgeContainerElement = (\n  props: EdgeContainerProps,\n  __: React.ForwardedRef<EdgeContainerType>,\n) => {\n  const {\n    item,\n    // item: _item,\n    graphID,\n    children,\n    drawLine = defaultDrawLine,\n    config = {},\n    graphRef,\n  } = props\n  const theme = useTheme()\n  const graphicsRef = React.useRef<PIXI.Graphics>(null)\n  const containerRef = React.useRef<ContainerRef>(null)\n  // const edgeID = React.useMemo(() => _item.id ?? R.uuid(), [])\n  // const item = {\n  //   ..._item,\n  //   id: edgeID,\n  // }\n  const drawLineCallback = React.useCallback(({\n    element,\n    cy,\n  }: {\n    cy: cytoscape.Core,\n    element: EdgeElement,\n  }) => {\n    const targetElement = element.target()\n    const sourceElement = element.source()\n    const edgeGroupInfo = calculateEdgeGroupInfo(element)\n    const {\n      distanceVector,\n      // fromPosition,\n      // toPosition,\n      midpointPosition,\n      normVector,\n      unitVector,\n      undirectedUnitVector,\n      undirectedNormVector,\n    } = calculateVectorInfo(sourceElement, targetElement)\n    containerRef.current!.x = midpointPosition.x + (\n      edgeGroupInfo.sortedIndex * undirectedNormVector.x * DEFAULT_DISTANCE\n    )\n    containerRef.current!.y = midpointPosition.y + (\n      edgeGroupInfo.sortedIndex * undirectedNormVector.y * DEFAULT_DISTANCE\n    )\n    const sourceElementContext = contextUtils.getNodeContext(sourceElement)\n    const targetElementContext = contextUtils.getNodeContext(targetElement)\n    // calculate sortedIndex\n    return drawLine({\n      item,\n      element,\n      // cy,\n      graphRef,\n      theme,\n      sourceElement,\n      targetElement,\n      fill: C.rgbNumber(\n        element.selected()\n          ? theme.palette.primary.main\n          : (element.source().selected() || element.target().selected())\n            ? theme.palette.secondary.main\n            : theme.palette.background.paper,\n      ),\n      graphics: graphicsRef.current!,\n      to: targetElementContext.boundingBox,\n      from: sourceElementContext.boundingBox,\n      directed: true,\n      distance: edgeGroupInfo.sortedIndex * DEFAULT_DISTANCE,\n      margin: {\n        x: edgeGroupInfo.sortedIndex * DEFAULT_MARGIN,\n        y: edgeGroupInfo.sortedIndex * DEFAULT_MARGIN,\n      },\n      distanceVector,\n      unitVector,\n      normVector,\n      undirectedUnitVector,\n      undirectedNormVector,\n      ...edgeGroupInfo,\n      cy,\n    })\n  }, [containerRef, graphicsRef])\n  const onPositionChange = React.useCallback(({ element }) => {\n    drawLineCallback({\n      cy,\n      element,\n    })\n  }, [drawLineCallback])\n  const { element, cy, context } = useEdge({\n    graphID,\n    onPositionChange,\n    config,\n    item,\n  })\n  React.useEffect(\n    () => {\n      drawLineCallback({\n        cy,\n        element,\n      })\n    },\n  )\n  React.useEffect(\n    () => {\n      containerRef.current!.zIndex = EDGE_CONTAINER_Z_INDEX\n    },\n    [],\n  )\n  const edgeGroupInfo = calculateEdgeGroupInfo(element)\n  const {\n    // normVector,\n    midpointPosition,\n    toPosition,\n    fromPosition,\n    undirectedNormVector,\n  } = calculateVectorInfo(element.source(), element.target())\n  const visible = calculateVisibilityByContext(element)\n  const filtered = context.settings.filtered && context.settings.nodeFiltered\n  const opacity = filtered\n    ? 1\n    : (config?.filter?.settings?.opacity ?? 0.2)\n\n  const targetElement = element.target()\n  const sourceElement = element.source()\n  return (\n    <>\n      <Container\n        ref={containerRef}\n        alpha={opacity}\n        visible={visible}\n        style={{\n          left: midpointPosition.x + (\n            edgeGroupInfo.sortedIndex * undirectedNormVector.x * DEFAULT_DISTANCE\n          ),\n          top: midpointPosition.y + (\n            edgeGroupInfo.sortedIndex * undirectedNormVector.y * DEFAULT_DISTANCE\n          ),\n          zIndex: EDGE_CONTAINER_Z_INDEX,\n        }}\n        interactive\n        mouseover={() => {\n          element.emit(CYTOSCAPE_EVENT.mouseover)\n        }}\n        mouseout={() => {\n          element.emit(CYTOSCAPE_EVENT.mouseout)\n        }}\n        // pointertap={() => console.log('ONPRESS')}\n      >\n        {\n          children({\n            item,\n            element,\n            to: toPosition,\n            from: fromPosition,\n            cy,\n            theme,\n            graphRef,\n            ...edgeGroupInfo,\n            targetElement,\n            sourceElement,\n          })\n        }\n      </Container>\n      <Graphics\n        ref={graphicsRef}\n        visible={visible}\n        alpha={opacity}\n        // interactive\n        // buttonMode\n        // pointertap={() => console.log('ONPRESS')}\n      />\n    </>\n  )\n}\n\nexport const EdgeContainer = wrapComponent<EdgeContainerProps>(\n  EdgeContainerElement,\n  {\n    isForwardRef: true,\n  },\n)\n","import { useStateWithCallback } from 'colay-ui'\nimport { EdgeSingular, Core } from 'cytoscape'\nimport React from 'react'\nimport {\n  EdgeContext,\n  EdgeConfig,\n  EdgeElement,\n  EdgeData,\n} from '@type'\nimport { CYTOSCAPE_EVENT, ELEMENT_DATA_FIELDS } from '@constants'\nimport { calculateVisibilityByContext, contextUtils } from '@utils'\nimport { mutableGraphMap } from './useGraph'\nimport { useElement } from './useElement'\n\nexport type Props<T> = {\n  children?: React.ReactNode;\n  item: EdgeData;\n  graphID: string;\n  onPositionChange?: (c: {element: EdgeSingular; context: EdgeContext; cy: Core }) => void;\n  config?: EdgeConfig;\n}\n\ntype Result<T> = {\n  element: EdgeSingular;\n  context: EdgeContext;\n  cy: Core;\n}\n\nexport default <T>(props: Props<T>): Result<T> => {\n  const {\n    onPositionChange,\n    graphID,\n    config = {},\n    item,\n  } = props\n  const {\n    id,\n    source,\n    target,\n  } = item\n  const { cy } = mutableGraphMap[graphID]\n  const [, setState] = useStateWithCallback({}, () => {\n  })\n  const contextRef = React.useRef<EdgeContext>({\n    render: (callback: () => {}) => {\n      setState({}, callback)\n    },\n    onPositionChange: () => {\n      onPositionChange?.({\n      // @ts-ignore\n        element: contextRef.current.element,\n        context: contextRef.current,\n        cy,\n      })\n    },\n    element: null as unknown as EdgeElement,\n    settings: {\n      filtered: true,\n      nodeFiltered: true,\n      visibility: {\n        nodeVisible: true,\n      },\n    },\n  } as EdgeContext)\n  contextRef.current.element = React.useMemo(() => {\n    const {\n      current: {\n        element,\n      },\n    } = contextRef\n    if (element) {\n      cy.remove(element)\n    }\n    return cy!.add({\n      data: {\n        id,\n        source,\n        target,\n        [ELEMENT_DATA_FIELDS.CONTEXT]: contextRef.current,\n        [ELEMENT_DATA_FIELDS.DATA]: item?.data,\n      },\n      group: 'edges',\n    })\n  },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [cy, id, source, target])\n  const {\n    current: {\n      element,\n    },\n  } = contextRef\n  React.useEffect(\n    () => {\n      contextRef.current.onPositionChange = () => {\n        onPositionChange?.({ cy, element, context: contextRef.current })\n      }\n      contextUtils.update(\n        element,\n        contextRef.current,\n      )\n    },\n    [onPositionChange],\n  )\n  React.useEffect(() => () => { cy!.remove(element!) },\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n    [cy, id, source, target])\n\n  // Visibility Change\n  // EventListeners\n  React.useEffect(\n    () => {\n      const nodeDataUpdated = () => {\n        // Update visibility\n        const oldVisible = calculateVisibilityByContext(element)\n        const sourceContext = contextUtils.get(element.source())\n        const targetContext = contextUtils.get(element.target())\n        const sourceVisible = calculateVisibilityByContext(element.source())\n        const targetVisible = calculateVisibilityByContext(element.target())\n        const newNodeVisible = sourceVisible && targetVisible\n        let forceRender = false\n        if (newNodeVisible !== contextRef.current.settings.visibility.nodeVisible) {\n          contextRef.current.settings.visibility.nodeVisible = newNodeVisible\n          contextUtils.update(element, contextRef.current)\n          if (oldVisible !== calculateVisibilityByContext(element)) {\n            forceRender = false\n          }\n        }\n        const oldNodeFiltered = contextRef.current.settings.nodeFiltered\n        const newNodeFiltered = sourceContext.settings.filtered\n        && targetContext.settings.filtered\n        contextRef.current.settings.nodeFiltered = newNodeFiltered\n        if (newNodeFiltered !== oldNodeFiltered) {\n          forceRender = true\n          contextUtils.update(element, contextRef.current)\n        }\n        if (forceRender) {\n          contextRef.current.render()\n        }\n      }\n      element.source().on(CYTOSCAPE_EVENT.data, nodeDataUpdated)\n      element.target().on(CYTOSCAPE_EVENT.data, nodeDataUpdated)\n      // element.source().emit(CYTOSCAPE_EVENT.data)\n      return () => {\n        element.source().off(CYTOSCAPE_EVENT.data, `#${element.id()}`, nodeDataUpdated)\n        element.target().off(CYTOSCAPE_EVENT.data, `#${element.id()}`, nodeDataUpdated)\n      }\n    },\n    [element],\n  )\n  useElement({\n    contextRef,\n    cy,\n    element,\n    item,\n    config,\n  })\n  return {\n    element,\n    context: contextRef.current,\n    cy,\n  }\n}\n","import React from 'react'\nimport { wrapComponent } from 'colay-ui'\nimport { useNode } from '@hooks'\nimport { CYTOSCAPE_EVENT } from '@constants'\nimport {\n  RenderNode, NodeConfig, GraphRef,\n} from '@type'\nimport {\n  calculateObjectBoundsWithoutChildren,\n  calculateVisibilityByContext,\n} from '@utils'\nimport { useTheme } from '@core/theme'\nimport { Container } from '../Container'\n\nexport type NodeContainerProps = {\n  children: RenderNode;\n  item: any;\n  graphID: string;\n  graphRef: React.RefObject<GraphRef>;\n  config?: NodeConfig;\n}\n\nexport type NodeContainerType = React.ForwardedRef<NodeContainerProps>\nconst DEFAULT_POSITION = { x: 0, y: 0 }\nconst NodeContainerElement = (\n  props: NodeContainerProps,\n  __: React.ForwardedRef<NodeContainerType>,\n) => {\n  const {\n    item,\n    graphID,\n    children,\n    config = {} as NodeConfig,\n    graphRef,\n  } = props\n  const containerRef = React.useRef(null)\n  const { element, context, cy } = useNode({\n    graphID,\n    config,\n    position: config.position ?? item.position ?? DEFAULT_POSITION,\n    onPositionChange: ({ element }) => {\n      const { x, y } = element.position()\n      // @ts-ignore\n      containerRef.current.x = x\n      // @ts-ignore\n      containerRef.current.y = y\n      context.boundingBox.x = x\n      context.boundingBox.y = y\n    },\n    item,\n  })\n  const { x, y } = element.position()\n  const onDrag = React.useCallback(\n    (pos) => {\n      element.position(pos)\n    },\n    [element],\n  )\n  React.useEffect(() => {\n    // @ts-ignore\n    context.boundingBox = calculateObjectBoundsWithoutChildren(\n      containerRef.current!,\n    )\n  })\n  const theme = useTheme()\n  const visible = calculateVisibilityByContext(element)\n  const opacity = context.settings.filtered\n    ? 1\n    : (config.filter?.settings?.opacity ?? 0.2)\n  return (\n    <Container\n      ref={containerRef}\n      style={{\n        left: x,\n        top: y,\n      }}\n      alpha={opacity}\n      visible={visible}\n      draggable\n      onDrag={onDrag}\n      mouseover={() => {\n        element.emit(CYTOSCAPE_EVENT.mouseover)\n      }}\n      mouseout={() => {\n        element.emit(CYTOSCAPE_EVENT.mouseout)\n      }}\n      // onRightPress={(event) => {\n      //   event.data.originalEvent.preventDefault()\n      //   event.data.originalEvent.stopPropagation()\n      // }}\n    >\n      {children({\n        item,\n        element,\n        cy,\n        theme,\n        graphRef,\n        context,\n      })}\n    </Container>\n  )\n}\n\nexport const NodeContainer = wrapComponent<NodeContainerProps>(\n  NodeContainerElement,\n  {\n    isForwardRef: true,\n  },\n)\n","import { RenderNode } from '@type'\nimport { cyUnselectAll } from '@utils'\nimport * as R from 'colay/ramda'\nimport React from 'react'\nimport { Text as GraphText } from '../Text'\nimport { View as GraphView } from '../View'\n\nexport const DefaultRenderClusterNode: RenderNode = ({\n  item, element, cy, theme,\n}) => {\n  const hasSelectedEdge = element.connectedEdges(':selected').length > 0\n  return (\n    <GraphView\n      style={{\n        width: 150,\n        height: 150,\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        backgroundColor: hasSelectedEdge\n          ? theme.palette.secondary.main\n          : (element.selected()\n            ? theme.palette.primary.main\n            : theme.palette.warning.main),\n        borderRadius: 20,\n      }}\n      interactive\n      pointertap={() => {\n        cyUnselectAll(cy)\n        element.select()\n      }}\n    >\n      <GraphText\n        style={{\n          position: 'absolute',\n          top: -90,\n          color: 'black',\n        }}\n        isSprite\n      >\n        {R.last(item.id.split('/'))?.substring(0, 10) ?? item.id}\n      </GraphText>\n    </GraphView>\n  )\n}\n","import { RenderNode } from '@type'\nimport { cyUnselectAll } from '@utils'\nimport * as R from 'colay/ramda'\nimport React from 'react'\nimport { Text as GraphText } from '../Text'\nimport { View as GraphView } from '../View'\nimport { CYTOSCAPE_EVENT } from '@constants'\n\nexport const DefaultRenderNode: RenderNode = ({\n  item, element, cy, theme,\n}) => {\n  const hasSelectedEdge = element.connectedEdges(':selected').length > 0\n  return (\n    <GraphView\n      style={{\n        width: 50,\n        height: 50,\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        backgroundColor: hasSelectedEdge\n          ? theme.palette.secondary.main\n          : (element.selected()\n            ? theme.palette.primary.main\n            : theme.palette.background.paper),\n        borderRadius: 50,\n      }}\n      interactive\n      pointertap={() => {\n        cyUnselectAll(cy)\n        element.select()\n      }}\n    >\n      <GraphText\n        style={{\n          position: 'absolute',\n          top: -40,\n          color: 'black',\n        }}\n        isSprite\n      >\n        {R.last(item.id.split('/'))?.substring(0, 10) ?? item.id}\n      </GraphText>\n    </GraphView>\n  )\n}\n","import { RenderEdge } from '@type'\nimport { cyUnselectAll } from '@utils'\nimport * as R from 'colay/ramda'\nimport React from 'react'\nimport { Text as GraphText } from '../Text'\nimport { View as GraphView } from '../View'\n\nexport const DefaultRenderEdge: RenderEdge = ({\n  cy,\n  item,\n  element,\n}) => (\n  <GraphView\n    style={{\n      // width: 20,\n      // height: 20,\n      position: 'absolute',\n\n      justifyContent: 'center',\n      alignItems: 'center',\n      display: 'flex',\n      // backgroundColor: DefaultTheme.palette.background.paper,\n      // element.selected()\n      //   ? DefaultTheme.palette.primary.main\n      //   : DefaultTheme.palette.background.paper,\n      // borderRadius: 50,\n    }}\n    pointertap={() => {\n      cyUnselectAll(cy)\n      element.select()\n    }}\n  >\n    <GraphText\n      style={{\n        // position: 'absolute',\n        // top: -40,\n        // backgroundColor: DefaultTheme.palette.background.paper,\n        color: 'black',\n        fontSize: 12,\n      }}\n      isSprite\n    >\n      {R.last(item.id.split('/'))?.substring(0, 10) ?? item.id}\n    </GraphText>\n  </GraphView>\n)\n","import { PixiComponent, useApp } from '@inlet/react-pixi'\nimport * as R from 'colay/ramda'\nimport { Viewport as ViewportNative } from 'pixi-viewport'\nimport * as PIXI from 'pixi.js'\nimport * as V from 'colay/vector'\n// import Cull from 'pixi-cull'\nimport React from 'react'\nimport { wrapComponent, useForwardRef } from 'colay-ui'\nimport {\n  getBoundingBox,\n  getPointerPositionOnViewport,\n  isMultipleTouches,\n} from '@utils'\nimport { Position, BoundingBox } from 'colay/type'\nimport { drawGraphics } from '@components/Graphics'\nimport { ViewportType } from '@type'\nimport { Simple } from 'pixi-cull'\n\nconst QUALITY_LEVEL = {\n  HIGH: 2,\n  MEDIUM: 1,\n  LOW: 0,\n} as const\n\ntype NativeViewportProps = {\n  app: PIXI.Application;\n  width: number;\n  height: number;\n  onCreate?: (v: ViewportNative) => void;\n  onPress?: (c: {\n    nativeEvent: PIXI.InteractionEvent;\n    position: Position;\n  }) => void|undefined;\n  zoom?: number;\n  transform?: {\n    x?: number;\n    y?: number;\n    scaleX?: number;\n    scaleY?: number;\n    rotation?: number;\n    skewX?: number;\n    skewY?: number;\n    pivotX?: number;\n    pivotY?: number;\n  };\n  onBoxSelectionStart: (c: {\n    event: PIXI.InteractionEvent;\n    startPosition: Position;\n  }) => void;\n  onBoxSelection: (c: {\n    event: PIXI.InteractionEvent;\n    startPosition: Position;\n    endPosition: Position;\n    boundingBox: BoundingBox;\n  }) => void;\n  onBoxSelectionEnd: (c: {\n    event: PIXI.InteractionEvent;\n    startPosition: Position;\n    endPosition: Position;\n    boundingBox: BoundingBox;\n  }) => void;\n\n}\n\nconst DEFAULT_EVENT_HANDLER = () => {}\nconst ReactViewportComp = PixiComponent('Viewport', {\n  create: (props: NativeViewportProps) => {\n    const {\n      app: {\n        renderer,\n        ticker,\n        stage,\n      },\n      height,\n      width,\n      onCreate,\n      onBoxSelectionStart = DEFAULT_EVENT_HANDLER,\n      onBoxSelection = DEFAULT_EVENT_HANDLER,\n      onBoxSelectionEnd = DEFAULT_EVENT_HANDLER,\n    } = props\n    const viewport: ViewportType = new ViewportNative({\n      screenWidth: width,\n      screenHeight: height,\n      worldWidth: width,\n      worldHeight: height,\n      ticker,\n      interaction: renderer.plugins.interaction,\n      passiveWheel: false,\n      divWheel: renderer.view,\n    }) as ViewportType\n    onCreate?.(viewport)\n    viewport.sortableChildren = true\n    viewport\n      .drag({ pressDrag: false })\n      .pinch()\n      .wheel({\n        trackpadPinch: true,\n        wheelZoom: false,\n      })\n    const localDataRef = {\n      current: {\n        boxSelection: {\n          enabled: false,\n          startPosition: null as Position | null,\n          currentPosition: null as Position | null,\n          boxElement: null as PIXI.Graphics | null,\n        },\n      },\n    }\n    // to avoid dragging when onClick child\n    viewport.on(\n      'pointerdown',\n      (e) => {\n        // const { metaKey } = e.data.originalEvent\n        // BOX_SELECTION\n        // @ts-ignore\n        if (\n          e.target === e.currentTarget\n          && !isMultipleTouches(e)\n        ) {\n          // @ts-ignore\n          const position = getPointerPositionOnViewport(viewport, e.data.originalEvent)\n          localDataRef.current.boxSelection.startPosition = {\n            x: position.x,\n            y: position.y,\n          }\n          viewport.plugins.pause('drag')\n        }\n        // const { x, y } = viewport.toWorld(e.data.global)\n        viewport.isClick = true\n        setTimeout(() => {\n          viewport.isClick = false\n        }, 250)\n      },\n    )\n    viewport.on('pointerup', (e) => {\n      viewport.plugins.resume('drag')\n      if (localDataRef.current.boxSelection.enabled) {\n        const {\n          boxElement,\n          currentPosition,\n          startPosition,\n        } = localDataRef.current.boxSelection\n        onBoxSelectionEnd({\n          event: e,\n          startPosition: startPosition!,\n          endPosition: currentPosition!,\n          boundingBox: getBoundingBox(startPosition!, currentPosition!),\n        })\n        viewport.removeChild(boxElement!)\n        boxElement?.destroy()\n      }\n      localDataRef.current.boxSelection = {}\n    })\n    viewport.on('pointermove', (e) => {\n      // const { metaKey } = e.data.originalEvent\n      if (localDataRef.current.boxSelection.startPosition && !localDataRef.current.boxSelection.boxElement) {\n        const position = getPointerPositionOnViewport(viewport, e.data.originalEvent)\n        if (\n          R.pipe(\n            V.subtract(localDataRef.current.boxSelection.startPosition),\n            V.length,\n          )(position) > 20) {\n          const boxElement = new PIXI.Graphics()\n          viewport.addChild(boxElement!)\n          localDataRef.current.boxSelection.boxElement = boxElement\n          onBoxSelectionStart({\n            event: e,\n            startPosition: localDataRef.current.boxSelection.startPosition,\n          })\n          localDataRef.current.boxSelection.enabled = true\n        }\n      }\n      if (localDataRef.current.boxSelection.enabled) {\n        // @ts-ignore\n        const position = getPointerPositionOnViewport(viewport, e.data.originalEvent)\n        localDataRef.current.boxSelection.currentPosition = {\n          x: position.x,\n          y: position.y,\n        }\n        const {\n          startPosition,\n          currentPosition,\n          boxElement: pBoxElement,\n        } = localDataRef.current.boxSelection\n        const boxElement = pBoxElement!\n        const boundingBox = getBoundingBox(startPosition!, currentPosition!)\n        onBoxSelection({\n          event: e,\n          endPosition: currentPosition!,\n          startPosition: startPosition!,\n          boundingBox,\n        })\n        boxElement.x = boundingBox.x\n        boxElement.y = boundingBox.y\n        drawGraphics(boxElement, {\n          style: {\n            width: boundingBox.width,\n            height: boundingBox.height,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderColor: 'rgba(0,0,0,0.7)',\n            borderWidth: 1 / viewport.scale.x,\n          },\n        })\n      }\n    })\n    viewport.on('wheel', (data) => {\n      // @ts-ignore\n      data.event.preventDefault()\n    })\n    // viewport.on('drag', () => {\n    //   console.log('DRAG')\n    // })\n    // viewport.on('drag-end', () => {\n    //   console.log('DRAG_END')\n    // })\n    // viewport.on('pinch-end', () => {\n    //   console.log('pinch_END')\n    // })\n    // viewport.on('snap-end', () => {\n    //   console.log('snap_END')\n    // })\n    // viewport.on('zoom-end', () => {\n    //   console.log('zoom_END')\n    // })\n    // viewport.on('snap-zoom-end', () => {\n    //   console.log('snap-zoom_END')\n    // })\n    // viewport.on('wheel-end', () => {\n    //   console.log('wheel_END')\n    // })\n\n    // PIXI CULL\n    const cull = new Simple({\n      dirtyTest: false,\n    }) // new SpatialHash()\n    cull.addList(viewport.children)\n    cull.cull(viewport.getVisibleBounds())\n\n    // cull whenever the viewport moves\n    PIXI.Ticker.shared.add(() => {\n      if (viewport.dirty) {\n        cull.cull(viewport.getVisibleBounds())\n        viewport.children.map((child) => {\n          if (R.isFalse(child._visible)) {\n            child.visible = child._visible\n          }\n        })\n        viewport.dirty = false\n      }\n      // PERFORMANCE\n      const visibleChildren = viewport.children.filter((child) => child.visible)\n      const objectCount = visibleChildren.length\n      const qualityLevel = objectCount < 150\n        ? QUALITY_LEVEL.HIGH\n        : (\n          objectCount < 400\n            ? QUALITY_LEVEL.MEDIUM\n            : QUALITY_LEVEL.LOW\n        )\n      const traverse = (displayObject: PIXI.DisplayObject) => {\n        if (displayObject instanceof PIXI.Sprite) {\n          displayObject.forceToRender()\n        }\n        if (displayObject.children) {\n          displayObject.children.forEach((child) => {\n            traverse(child)\n          })\n        }\n      }\n      const update = () => {\n        visibleChildren.forEach((child) => {\n          traverse(child)\n        })\n      }\n      if (viewport.qualityLevel !== qualityLevel) {\n        viewport.oldQualityLevel = viewport.qualityLevel\n        viewport.qualityLevel = qualityLevel\n        viewport.qualityChanged = true\n        switch (qualityLevel) {\n          case QUALITY_LEVEL.HIGH:\n            // HIGH\n            PIXI.settings.ROUND_PIXELS = true\n            // @ts-ignore\n            PIXI.settings.PRECISION_FRAGMENT = PIXI.PRECISION.HIGH\n            PIXI.settings.RESOLUTION = 32// 64// window.devicePixelRatio\n            PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.LINEAR\n            break\n          case QUALITY_LEVEL.MEDIUM:\n            PIXI.settings.ROUND_PIXELS = false// true\n            // @ts-ignore\n            PIXI.settings.PRECISION_FRAGMENT = PIXI.PRECISION.MEDIUM\n            PIXI.settings.RESOLUTION = 12// 32// 64// window.devicePixelRatio\n            PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST\n            break\n          case QUALITY_LEVEL.LOW:\n            PIXI.settings.ROUND_PIXELS = false\n            // @ts-ignore\n            PIXI.settings.PRECISION_FRAGMENT = PIXI.PRECISION.LOW\n            PIXI.settings.RESOLUTION = 0.8// 32// 64// window.devicePixelRatio\n            PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST\n            break\n          default:\n            break\n        }\n      }\n      if (viewport.qualityChanged && !viewport.moving) {\n        viewport.qualityChanged = false\n        if (viewport.oldQualityLevel < viewport.qualityLevel) {\n          update()\n        }\n      }\n    })\n    // PIXI CULL\n    return viewport\n  },\n  applyProps: (\n    mutableViewport: ViewportType,\n    oldProps,\n    newProps,\n  ) => {\n    const {\n      transform,\n      onPress,\n      zoom,\n      width,\n      height,\n    } = newProps\n    mutableViewport.resize(width, height)\n    mutableViewport.removeListener('pointertap', mutableViewport.clickEvent)\n    mutableViewport.clickEvent = (e: PIXI.InteractionEvent) => R.ifElse(\n      R.equals(e.target),\n      () => {\n        const { x, y } = mutableViewport.toWorld(e.data.global)\n        return R.when(\n          R.equals(true),\n          () => onPress?.({ nativeEvent: e, position: { x, y } }),\n        )(mutableViewport.isClick)\n      },\n      R.identity,\n    )(e.currentTarget)\n    R.unless(\n      R.equals(oldProps.zoom),\n      () => mutableViewport.setZoom(zoom ?? 1, true),\n    )(zoom)\n    R.unless(\n      R.equals(oldProps.transform),\n      () => mutableViewport.setTransform(\n        transform?.x,\n        transform?.y,\n        transform?.scaleX,\n        transform?.scaleY,\n        transform?.rotation,\n        transform?.skewX,\n        transform?.skewY,\n        transform?.pivotX,\n        transform?.pivotY,\n      ),\n    )(transform)\n    mutableViewport.on('pointertap', mutableViewport.clickEvent)\n    // return\n  },\n  didMount: () => {\n  },\n  willUnmount: () => {\n  },\n})\n\nexport type ViewportProps = {\n  children?: React.ReactNode;\n} & Omit<NativeViewportProps, 'app'>\n\nfunction ViewportElement(props: ViewportProps, ref: React.ForwardedRef<ViewportType>) {\n  const {\n    children,\n    ...rest\n  } = props\n  const app = useApp()\n  const viewportRef = useForwardRef(ref, {})\n  // Culling\n  // const cull = React.useMemo(() => new Cull.Simple(), [])\n  // React.useEffect(() => {\n  //   cull.addList(viewportRef.current.children)\n  //   cull.cull(viewportRef.current.getVisibleBounds())\n  //   return () => {\n  //     cull.removeList(viewportRef.current.children)\n  //   }\n  // }, [children])\n  // React.useEffect(() => {\n  //   /// Culling\n  //   PIXI.Ticker.shared.add(() => {\n  //     if (viewportRef.current.dirty) {\n  //       cull.cull(viewportRef.current.getVisibleBounds())\n  //       viewportRef.current.dirty = false\n  //     }\n  //   })\n  // }, [])\n  const keyboardRef = React.useRef({\n    pressedKeys: {},\n    intervalTimeout: null,\n  })\n  React.useEffect(() => {\n    const keyDownListener = (e) => {\n      if (document.body === e.target) {\n        keyboardRef.current.pressedKeys[e.key] = true\n        if (!keyboardRef.current.intervalTimeout) {\n          const interval = setInterval(() => {\n            const {\n              current: {\n                center,\n              },\n            } = viewportRef\n            const {\n              current: {\n                pressedKeys,\n              },\n            } = keyboardRef\n            const pointer = {\n              x: 0,\n              y: 0,\n            }\n            const MULTIPLIER = 30\n            Object.keys(pressedKeys).map((key) => {\n              switch (key) {\n                case 'ArrowRight':\n                  pointer.x += MULTIPLIER\n                  break\n                case 'ArrowLeft':\n                  pointer.x -= MULTIPLIER\n                  break\n                case 'ArrowUp':\n                  pointer.y -= MULTIPLIER\n                  break\n                case 'ArrowDown':\n                  pointer.y += MULTIPLIER\n                  break\n\n                default:\n                  break\n              }\n            })\n            const newCenter = new PIXI.Point(center.x + pointer.x, center.y + pointer.y)\n            viewportRef.current.center = newCenter\n          }, 5)\n          keyboardRef.current.intervalTimeout = interval\n        }\n        // viewportRef.current.center =\n      }\n    }\n    const keyUpListener = (e) => {\n      clearInterval(keyboardRef.current.intervalTimeout)\n      keyboardRef.current.intervalTimeout = null\n      keyboardRef.current.pressedKeys = {}\n    }\n    document.addEventListener('keydown', keyDownListener)\n    document.addEventListener('keyup', keyUpListener)\n    return () => {\n      document.removeEventListener('keydown', keyDownListener)\n      document.removeEventListener('keyup', keyUpListener)\n    }\n  }, [])\n  return (\n    <ReactViewportComp\n      ref={viewportRef}\n      app={app}\n      {...rest}\n    >\n      {children}\n    </ReactViewportComp>\n  )\n}\n\nexport const Viewport = wrapComponent<ViewportProps>(\n  ViewportElement, {\n    isForwardRef: true,\n  },\n)\n","import '@core/config'\nimport { DefaultTheme, ThemeProvider } from '@core/theme'\nimport { useGraph } from '@hooks'\nimport { Stage } from '@inlet/react-pixi'\nimport {\n  DrawLine, EdgeData, GraphConfig,\n  GraphRef, NodeData, RenderEdge, RenderNode,\n  RenderClusterNode,\n} from '@type'\nimport {\n  calculateVisibilityByContext, contextUtils, cyUnselectAll, isPositionInBox,\n} from '@utils'\nimport { CYTOSCAPE_EVENT } from '@constants'\nimport {\n  DataRender, useForwardRef,\n  View,\n  ViewProps, wrapComponent,\n} from 'colay-ui'\nimport { PropsWithRef } from 'colay-ui/type'\nimport * as C from 'colay/color'\nimport * as R from 'colay/ramda'\nimport { BoundingBox } from 'colay/type'\nimport React from 'react'\nimport * as PIXI from 'pixi.js'\nimport { ClusterNodeContainer } from '../ClusterNodeContainer'\nimport { EdgeContainer } from '../EdgeContainer'\nimport { NodeContainer } from '../NodeContainer'\nimport { DefaultRenderClusterNode } from './DefaultRenderClusterNode'\nimport { DefaultRenderNode } from './DefaultRenderNode'\nimport { DefaultRenderEdge } from './DefaultRenderEdge'\nimport { Viewport, ViewportProps } from '../Viewport'\n\nexport type GraphProps = {\n  children?: React.ReactNode;\n  extraData?: any;\n  nodes: NodeData[];\n  edges: EdgeData[];\n  style?: ViewProps['style'];\n  renderNode?: RenderNode;\n  renderEdge?: RenderEdge;\n  renderClusterNode?: RenderClusterNode;\n  onPress?: ViewportProps['onPress'];\n  drawLine?: DrawLine;\n  config?: GraphConfig;\n  onBoxSelection?: (c: {\n    event: PIXI.InteractionEvent,\n    elements: cytoscape.Collection,\n    elementIds: string[],\n    boundingBox: BoundingBox;\n  }) => void;\n  selectedElementIds?: string[]\n}\n\nconst GraphElement = (props: GraphProps, ref: React.ForwardedRef<GraphRef>) => {\n  const {\n    style = {},\n    nodes = [],\n    edges = [],\n    onPress,\n    renderNode = DefaultRenderNode,\n    renderEdge = DefaultRenderEdge,\n    drawLine,\n    extraData,\n    config: configProp = {} as Partial<GraphConfig>,\n    onBoxSelection,\n    selectedElementIds = [],\n    children,\n    renderClusterNode = DefaultRenderClusterNode,\n  } = props\n  // const boxSelectionEnabled = !!onBoxSelection\n  const width = style?.width as number\n  const height = style?.height as number\n  const config = React.useMemo(() => ({\n    ...DEFAULT_CONFIG,\n    ...configProp,\n  }), [configProp])\n  const { theme } = config\n  const graphID = React.useMemo<string>(() => config.graphId ?? R.uuid(), [config.graphId])\n  const stageRef = React.useRef<{ app: PIXI.Application }>(null)\n  const { cy } = useGraph({\n    id: graphID,\n    onLoad: () => {\n    },\n    clusters: config.clusters,\n  })\n  const graphRef = useForwardRef<GraphRef>(ref, { cy })\n  const graphLayoutRef = React.useRef<cytoscape.Layouts>(null)\n  React.useEffect(() => {\n    graphRef.current.app = stageRef.current?.app!\n    if (graphRef.current.app) {\n      graphRef.current.app.view.addEventListener('contextmenu', (e) => {\n        e.preventDefault()\n      })\n    }\n  }, [stageRef.current])\n  React.useEffect(() => {\n    cyUnselectAll(cy)\n    selectedElementIds.forEach((id) => {\n      cy.$id(id).select()\n    })\n  }, [selectedElementIds, cy])\n  React.useEffect(() => {\n    if (stageRef.current && config.layout) {\n      const { hitArea } = graphRef.current.viewport\n      const boundingBox = {\n        x1: hitArea.x,\n        y1: hitArea.y,\n        w: hitArea.width,\n        h: hitArea.height,\n      }\n      graphLayoutRef.current?.stop()\n      // @ts-ignore\n      graphLayoutRef.current = cy.createLayout({\n        boundingBox,\n        ...config.layout,\n      })\n      graphLayoutRef.current.on('layoutstop', () => {\n        // @ts-ignore\n        graphLayoutRef.current = null\n        // Fix the edge lines\n        cy.edges().forEach((edge) => {\n          const edgeContext = contextUtils.get(edge)\n          edgeContext.onPositionChange()\n        })\n        // FOR CULLING\n        graphRef.current.viewport.dirty = true\n      })\n      graphLayoutRef.current.start()\n    }\n  }, [config.layout])\n  const backgroundColor = React.useMemo(\n    () => C.rgbNumber(theme.palette.background.default),\n    [theme.palette.background.default],\n  )\n  React.useEffect(() => {\n    stageRef.current!.app.renderer.backgroundColor = backgroundColor\n  }, [backgroundColor])\n  const {\n    ids: nodeConfigIds,\n    ...globalNodeConfig\n  } = {\n    ...DEFAULT_NODE_CONFIG,\n    ...(config.nodes ?? {}),\n  }\n  const {\n    ids: edgeConfigIds,\n    ...globalEdgeConfig\n  } = {\n    ...DEFAULT_EDGE_CONFIG,\n    ...(config.edges ?? {}),\n  }\n\n  const onPressCallback = React.useCallback((e) => {\n    cyUnselectAll(cy)\n    onPress?.(e)\n  }, [cy, onPress])\n  return (\n    <View\n      style={style}\n    >\n      <Stage\n        // @ts-ignore\n        ref={stageRef}\n        {...{ width, height }}\n        options={{\n          width,\n          height,\n          resolution: window.devicePixelRatio || 1, // 64, // window.devicePixelRatio || 1,\n          antialias: true,\n          autoDensity: true,\n          backgroundColor,\n        }}\n      >\n        <ThemeProvider\n          value={theme}\n        >\n          <Viewport\n            onCreate={(viewport) => {\n              graphRef.current.viewport = viewport\n            }}\n            onPress={onPressCallback}\n            zoom={config.zoom}\n            transform={config.transform}\n            {...{ width, height }}\n            onBoxSelectionEnd={({\n              event,\n              boundingBox,\n            }) => {\n              cyUnselectAll(cy)\n              const elementIds: string[] = []\n              const selectedCollection = cy.nodes().filter((element) => {\n                const elementPosition = element.position()\n                const elementContext = contextUtils.get(element)\n                const selected = calculateVisibilityByContext(element)\n                  && isPositionInBox(elementPosition, boundingBox)\n                if (selected) {\n                  element.select()\n                  elementIds.push(element.id())\n                }\n                return selected\n              })\n              onBoxSelection?.({\n                boundingBox,\n                elements: selectedCollection,\n                event,\n                elementIds,\n              })\n            }}\n          >\n            <DataRender\n              extraData={[extraData, config.nodes, config.clusters]}\n              data={nodes}\n              accessor={['children']}\n              keyExtractor={(item) => item.id}\n              renderItem={({ item }) => (\n                <NodeContainer\n                  graphID={graphID}\n                  item={item}\n                  graphRef={graphRef}\n                  config={{\n                    ...(globalNodeConfig ?? {}),\n                    ...(nodeConfigIds?.[item.id] ?? {}),\n                  }}\n                >\n                  {renderNode}\n                </NodeContainer>\n              )}\n            />\n            <DataRender\n              extraData={[extraData, config.edges, config.clusters]}\n              data={edges}\n              accessor={['children']}\n              keyExtractor={(item) => item.id}\n              renderItem={({ item }) => (\n                <EdgeContainer\n                  graphID={graphID}\n                  item={item}\n                  graphRef={graphRef}\n                  drawLine={drawLine}\n                  config={{\n                    ...(globalEdgeConfig ?? {}),\n                    ...(edgeConfigIds?.[item.id] ?? {}),\n                  }}\n                >\n                  {renderEdge}\n                </EdgeContainer>\n              )}\n            />\n            <DataRender\n              extraData={[extraData]}\n              data={config.clusters ?? []}\n              accessor={['children']}\n              keyExtractor={(item) => item.id}\n              renderItem={({ item }) => (\n                <ClusterNodeContainer\n                  graphID={graphID}\n                  item={item}\n                  graphRef={graphRef}\n                  config={{\n                    ...(globalNodeConfig ?? {}),\n                    ...(nodeConfigIds?.[item.id] ?? {}),\n                  }}\n                >\n                  {renderClusterNode}\n                </ClusterNodeContainer>\n              )}\n            />\n            {children}\n          </Viewport>\n        </ThemeProvider>\n      </Stage>\n    </View>\n  )\n}\n\nconst DEFAULT_NODE_CONFIG = {\n  renderEvents: [\n    CYTOSCAPE_EVENT.select,\n    CYTOSCAPE_EVENT.unselect,\n    CYTOSCAPE_EVENT.selectEdge,\n    CYTOSCAPE_EVENT.unselectEdge,\n    CYTOSCAPE_EVENT.mouseover,\n    CYTOSCAPE_EVENT.mouseout,\n  ],\n}\n\nconst DEFAULT_EDGE_CONFIG = {\n  renderEvents: [\n    CYTOSCAPE_EVENT.select,\n    CYTOSCAPE_EVENT.unselect,\n    CYTOSCAPE_EVENT.selectNode,\n    CYTOSCAPE_EVENT.unselectNode,\n    CYTOSCAPE_EVENT.mouseover,\n    CYTOSCAPE_EVENT.mouseout,\n  ],\n}\n\nconst DEFAULT_CONFIG = {\n  theme: DefaultTheme,\n}\n\nexport const Graph = wrapComponent<PropsWithRef<GraphRef, GraphProps>>(\n  GraphElement,\n  {\n    isForwardRef: true,\n    isEqual: R.equalsExclude(R.is(Function)),\n  },\n)\n\nexport { DefaultRenderClusterNode } from './DefaultRenderClusterNode'\nexport { DefaultRenderNode } from './DefaultRenderNode'\nexport { DefaultRenderEdge } from './DefaultRenderEdge'\n","import { ProfileTemplate } from '@components/templates/Profile'\nimport { ComponentType } from 'colay-ui/type'\nimport Layouts from '@core/layouts'\nimport { Clusters } from '@core/clusters'\nimport { ELEMENT_TYPE } from '@constants'\nimport { View } from './View'\nimport { Graphics } from './Graphics'\nimport { Pressable } from './Pressable'\nimport { Text } from './Text'\nimport { Image } from './Image'\nimport { HoverContainer } from './HoverContainer'\nimport { Graph as NativeGraph, GraphProps } from './Graph'\n\nexport const Graph = NativeGraph as ComponentType<GraphProps> & {\n  View: typeof View;\n  Text: typeof Text;\n  Image: typeof Image;\n  Pressable: typeof Pressable;\n  Graphics: typeof Graphics;\n  ProfileTemplate: typeof ProfileTemplate;\n  Layouts: typeof Layouts;\n  Clusters: typeof Clusters;\n  HoverContainer: typeof HoverContainer;\n  elementType: typeof ELEMENT_TYPE;\n}\n\nGraph.View = View\nGraph.Text = Text\nGraph.Image = Image\nGraph.Pressable = Pressable\nGraph.Graphics = Graphics\nGraph.ProfileTemplate = ProfileTemplate\nGraph.Layouts = Layouts\nGraph.Clusters = Clusters\nGraph.HoverContainer = HoverContainer\nGraph.elementType = ELEMENT_TYPE\n\nexport { DefaultRenderEdge, DefaultRenderNode } from './Graph'\nexport {\n  ProfileTemplate,\n} from './templates/Profile'\n\nexport type { GraphProps } from './Graph'\n\nexport {\n  drawLine,\n} from './Graphics'\n\n// export {\n//   GraphEditor,\n//   GraphEditorProps,\n// } from './GraphEditor'\n","import React from 'react'\nimport { View, ViewProps } from '../View'\n\nexport type HoverContainerProps = {\n  renderHoverElement: () => React.ReactChild;\n} & ViewProps\n\nexport const HoverContainer = (props: HoverContainerProps) => {\n  const {\n    children,\n    renderHoverElement,\n    ...rest\n  } = props\n  const [state, setState] = React.useState({ hovered: false })\n  const onHoverStart = React.useCallback(() => {\n    setState({ hovered: true })\n  }, [])\n  const onHoverEnd = React.useCallback(() => {\n    setState({ hovered: false })\n  }, [])\n  return (\n    <View\n      interactive\n      {...rest}\n      pointerover={onHoverStart}\n      pointerout={onHoverEnd}\n    >\n      {children}\n      {state.hovered && renderHoverElement()}\n    </View>\n  )\n}\n\n/**\n * ## Usage\n * To use Image on Graph\n * Check example\n *\n * ```js live=true\n * <Graph\n *  style={{ width: '100%', height: 250 }}\n *  nodes={[\n *    {\n *      id: 1,\n *      position: { x: 10, y: 10 },\n *      data: {\n *        title: 'Edison',\n *        image: 'https://www.biography.com/.image/t_share/MTE4MDAzNDEwNTEzMDA0MDQ2/thomas-edison-9284349-1-402.jpg'\n *       }\n *    },\n *    {\n *      id: 2,\n *      position: { x: 300, y: 10 },\n *      data: {\n *        title: 'lamp',\n *        image: 'https://images.unsplash.com/photo-1552529232-9e6cb081de19?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60'\n *      }\n *    },\n *  ]}\n *  edges={[\n *    { id: 51, source: 1, target: 2 }\n *  ]}\n *  renderNode={({ item: { data } }) => (\n *    <Graph.HoverContainer\n *      style={{\n          width: 100,\n          height: 100,\n          backgroundColor: '#3291a8',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderRadius: 25\n        }}\n        renderHoverElement={() => (\n          <Graph.View\n            style={{\n              backgroundColor: 'white',\n              width: NODE_SIZE.width * 2,\n              height: 20,\n              position: 'absolute',\n              left: 0\n            }}\n          >\n            <Graph.Text style={{fontSize: 20, textAlign: 'center'}}>\n              {R.replace('ECLI:NL:', '')(data.ecli)}\n            </Graph.Text>\n          </Graph.View>\n        )}\n *    >\n *      <Graph.Image\n *        style={{ width: 100, height: 100 }}\n *        source={{ uri: data.image }}\n *      />\n *    </Graph.HoverContainer>\n * )}\n * />\n * ```\n */\n","import React from 'react'\nimport { Position } from 'colay/type'\nimport { GraphEditorRef } from '@type'\nimport {\n  Menu,\n  MenuItem,\n  Portal,\n} from '@mui/material'\n\nexport type ContextMenuProps = {\n  onSelect?: (value: string) => void;\n  children?: React.ReactNode;\n  items?: {\n    label: string; value: string;\n  }[]\n  open?: boolean;\n  position?: Position;\n  graphEditorRef: React.MutableRefObject<GraphEditorRef>\n}\n\nconst DEFAULT_FONT_SIZE = 20\nconst WIDTH = 540\nexport const ContextMenu = (props: ContextMenuProps) => {\n  const {\n    children,\n    onSelect,\n    items = [],\n    open,\n    position = { x: 0, y: 0 },\n    graphEditorRef,\n  } = props\n  return (\n    <Portal container={document.body}>\n      <Menu\n        open={open}\n        onClose={() => onSelect?.()}\n        anchorReference=\"anchorPosition\"\n        anchorPosition={{\n          left: position.x,\n          top: position.y,\n        }}\n      >\n        {\n          items.map(({ value, label }) => (\n            <MenuItem\n              key={value}\n              onClick={() => {\n                onSelect?.(value)\n              }}\n            >\n              {label}\n            </MenuItem>\n          ))\n        }\n      </Menu>\n    </Portal>\n\n  )\n}\n","// @ts-nocheck\nimport cytoscape from 'cytoscape'\nimport * as R from 'colay/ramda'\nimport { NodeData, EdgeData } from '@type'\n\ntype Props = {\n  nodes: NodeData[]\n  edges: EdgeData[]\n}\nexport const calculateStatistics = (params: Props) => {\n  const {\n    nodes = [],\n    edges = [],\n  } = params\n  const cy = cytoscape({\n    // @ts-ignore\n    elements: R.concat(\n      nodes.map((n) => ({\n        data: n,\n        group: 'nodes',\n      })),\n      edges.map((e) => ({\n        data: e,\n        group: 'edges',\n      })),\n    ),\n    headless: true,\n  })\n  const {\n    indegree: indegreeCentralityCalc,\n    outdegree: outdegreeCentralityCalc,\n  } = cy.elements().degreeCentralityNormalized({\n    // weight: (edge) => {\n    //   return edge.connectedNodes().length\n    // },\n    // alpha: 1\n    directed: true,\n  })\n  const {\n    degree: degreeCentralityCalc,\n  } = cy.elements().degreeCentralityNormalized({\n    // weight: (edge) => {\n    //   return edge.connectedNodes().length\n    // },\n    // alpha: 1\n  })\n  const {\n    closeness: closenessCentralityCalc,\n  } = cy.elements().closenessCentralityNormalized({\n  })\n  const {\n    betweenness: betweennessCentralityCalc,\n  } = cy.elements().betweennessCentrality({})\n  const {\n    rank: pageRankCalc,\n  } = cy.elements().pageRank({\n  })\n  const nodeStatisticsMap: Record<string, any> = {}\n  // const nodesStatistics =\n  cy.nodes().map((node) => {\n    const nodeId = node.id()\n    nodeStatisticsMap[nodeId] = {\n      degree: degreeCentralityCalc(node),\n      indegree: indegreeCentralityCalc(node),\n      outdegree: outdegreeCentralityCalc(node),\n      closeness: closenessCentralityCalc(node),\n      betweenness: betweennessCentralityCalc(node),\n      pageRank: pageRankCalc(node),\n    }\n    return {\n      id: nodeId,\n      ...nodeStatisticsMap[nodeId],\n    }\n  })\n  cy.destroy()\n  return nodeStatisticsMap\n}\n","// @ts-nocheck\ntype Callback = (...params: any[]) => void\n\ntype Checker = () => boolean\n\ninterface KeyId {\n  [key: string]: any\n}\n\ninterface OriginalMs {\n  [key: string]: number\n}\n\nclass MetadataRecord {\n  public executedTime: number\n\n  public paused = false\n\n  public startTime = new Date().getTime()\n\n  public timeSpentWaiting = 0\n\n  constructor(\n    public callback: Callback,\n    public key: string,\n    public ms: number,\n    public params: any[],\n  ) {\n  }\n}\n\ninterface Metadata {\n  [key: string]: MetadataRecord\n}\n\nexport interface TimeoutInstance {\n  clear: (erase?: boolean) => void;\n  executed: () => boolean;\n  exists: () => boolean;\n  lastExecuted: () => Date;\n  pause: () => number | boolean;\n  paused: () => boolean;\n  pending: () => boolean;\n  remaining: () => number;\n  restart: () => boolean | Checker;\n  resume: () => boolean | Checker;\n  set: (newCallback: Callback, newMs?: number, ...newParams: any[]) => Checker;\n}\n\nexport class Timeout {\n  private static keyId: KeyId = {}\n\n  private static originalMs: OriginalMs = {}\n\n  private static metadata: Metadata = {}\n\n  /**\n   * clear timeout and optionally erase all knowledge of its existence\n   * @param key\n   * @param erase\n   */\n  static clear(key: string, erase = true) {\n    clearTimeout(Timeout.keyId[key])\n    delete Timeout.keyId[key]\n\n    if (erase) {\n      delete Timeout.metadata[key]\n      delete Timeout.originalMs[key]\n    }\n  }\n\n  /**\n   * returns a function allowing you to test if it has executed\n   * @param key\n   * @param callback\n   * @param ms\n   * @param params\n   */\n  static set(key: string, callback: Callback, ms: number, ...params: any[]): Checker\n  /**\n   * returns a function allowing you to test if it has executed\n   * @param callback\n   * @param ms\n   * @param params\n   */\n  static set(callback: Callback, ms: number, ...params: any[]): Checker\n  static set(...args: any[]): Checker\n  static set(...args: any[]): Checker {\n    let key: string\n    let ms: number\n    let params: any[]\n    let callback: Callback\n\n    if (args.length === 0) {\n      throw Error('Timeout.set() requires at least one argument')\n    }\n\n    if (typeof args[1] === 'function') {\n      [key, callback, ms, ...params] = args\n    } else {\n      [callback, ms, ...params] = args\n      key = callback.toString()\n    }\n\n    if (!callback) {\n      throw Error('Timeout.set() requires a callback parameter')\n    }\n\n    Timeout.clear(key)\n\n    const invoke = () => {\n      Timeout.metadata[key].executedTime = new Date().getTime()\n      callback(...params)\n    }\n\n    Timeout.keyId[key] = setTimeout(invoke, ms || 0)\n    Timeout.originalMs[key] = Timeout.originalMs[key] || ms\n\n    Timeout.metadata[key] = new MetadataRecord(\n      callback,\n      key,\n      ms,\n      params,\n    )\n\n    return () => Timeout.executed(key)\n  }\n\n  /**\n   * same as set() except returns false if timeout already exists\n   * @param key\n   * @param callback\n   * @param ms\n   * @param params\n   */\n  static create(key: string, callback: Callback, ms: number, ...params: any[]): boolean | Checker\n  /**\n   * same as set() except returns false if timeout already exists\n   * @param callback\n   * @param ms\n   * @param params\n   */\n  static create(callback: Callback, ms: number, ...params: any[]): boolean | Checker\n  static create(...args: any[]): boolean | Checker {\n    if (args.length === 0) {\n      throw Error('Timeout.create() requires at least one argument')\n    }\n\n    let key: string\n\n    if (typeof args[1] === 'function') {\n      [key] = args\n    } else {\n      const [callback] = args\n      key = callback.toString()\n    }\n\n    return Timeout.exists(key) ? false : Timeout.set(...args)\n  }\n\n  /**\n   * timeout has been created\n   * @param key\n   */\n  static exists(key: string): boolean {\n    return key in Timeout.keyId || (Timeout.metadata)[key] !== undefined\n  }\n\n  /**\n   * test if a timeout has run\n   * @param key\n   */\n  static executed(key: string): boolean {\n    return Timeout.exists(key) && !!Timeout.metadata[key].executedTime\n  }\n\n  /**\n   * when timeout was last executed\n   * @param key\n   */\n  static lastExecuted(key: string): Date {\n    return !Timeout.executed(key)\n      ? null\n      : new Date(Timeout.metadata[key].executedTime)\n  }\n\n  /**\n   * timeout does exist, but has not yet run\n   * @param key\n   */\n  static pending(key: string): boolean {\n    return Timeout.exists(key) && !Timeout.executed(key)\n  }\n\n  /**\n   * timeout does exist, but will not execute because it is paused\n   * @param key\n   */\n  static paused(key: string): boolean {\n    return Timeout.exists(key)\n      && !Timeout.executed(key)\n      && Timeout.metadata[key].paused\n  }\n\n  /**\n   * remaining time until timeout will occur\n   * @param key\n   */\n  static remaining(key: string): number {\n    if (!Timeout.metadata[key]) return 0\n\n    const metaDataRecord = Timeout.metadata[key]\n\n    return Timeout.paused(key)\n      ? metaDataRecord.ms - metaDataRecord.timeSpentWaiting\n      : Math.max(0, metaDataRecord.startTime + metaDataRecord.ms - new Date().getTime())\n  }\n\n  /**\n   * restart timeout with original time\n   * @param key\n   */\n  static restart(key: string): boolean | Checker {\n    if (!Timeout.metadata[key] || Timeout.executed(key)) return false\n\n    const metaDataRecord = Timeout.metadata[key]\n\n    Timeout.clear(key, false)\n\n    if (metaDataRecord.paused) {\n      metaDataRecord.paused = false\n    }\n\n    return Timeout.set(key, metaDataRecord.callback, Timeout.originalMs[key], ...metaDataRecord.params)\n  }\n\n  /**\n   * pause our execution countdown until we're ready for it to resume\n   * @param key\n   */\n  static pause(key: string): boolean | number {\n    if (!Timeout.metadata[key] || Timeout.paused(key) || Timeout.executed(key)) return false\n\n    Timeout.clear(key, false)\n\n    const metaDataRecord = Timeout.metadata[key]\n\n    metaDataRecord.paused = true\n    metaDataRecord.timeSpentWaiting = new Date().getTime() - metaDataRecord.startTime\n\n    return metaDataRecord.timeSpentWaiting\n  }\n\n  /**\n   * resume paused Timeout with the remaining time\n   * @param key\n   */\n  static resume(key: string): boolean | Checker {\n    if (!Timeout.metadata[key] || Timeout.executed(key)) return false\n\n    const metaDataRecord = Timeout.metadata[key]\n\n    if (!metaDataRecord.paused) return false\n\n    const originalMs = Timeout.originalMs[key]\n    const remainingTime = metaDataRecord.ms - metaDataRecord.timeSpentWaiting\n\n    const result = Timeout.set(key, metaDataRecord.callback, remainingTime, ...metaDataRecord.params)\n\n    Timeout.originalMs[key] = originalMs\n\n    return result\n  }\n\n  /**\n   * instantiate timeout to handle as object\n   * @param callback\n   * @param ms\n   * @param params\n   */\n  static instantiate(callback: Callback, ms = 0, ...params: any[]): TimeoutInstance {\n    if (!callback) {\n      throw Error('Timeout.instantiate() requires a function parameter')\n    }\n\n    const key = `${Math.random()}${callback}`.replace(/\\s/g, '')\n\n    Timeout.set(key, callback, ms, ...params)\n\n    return {\n      clear: (erase = true) => Timeout.clear(key, erase),\n      executed: () => Timeout.executed(key),\n      exists: () => Timeout.exists(key),\n      lastExecuted: () => Timeout.lastExecuted(key),\n      pause: () => Timeout.pause(key),\n      paused: () => Timeout.paused(key),\n      pending: () => Timeout.pending(key),\n      remaining: () => Timeout.remaining(key),\n      restart: () => Timeout.restart(key),\n      resume: () => Timeout.resume(key),\n      set: (newCallback: Callback, newMs = 0, ...newParams: any[]) => Timeout.set(key, newCallback, newMs, ...newParams),\n    }\n  }\n}\n","import { Timeout, TimeoutInstance } from './smart-timer'\n\nexport type {\n  TimeoutInstance,\n} from './smart-timer'\nexport type Timer<T> = {\n  after: number;\n} & T\n\nexport {\n  Timeout,\n} from './smart-timer'\n\nexport type Options = {\n  onFinish?: () => void;\n  onPlayChanged?: () => void;\n  autostart?: boolean\n}\nexport const createTimeoutManager = <T extends Timer<Record<string, any>>>(\n  timers: T[] = [],\n  callback: (timer: T, index: number, timeout: TimeoutInstance) => void,\n  options: Options = {},\n) => {\n  const {\n    onFinish: onFinishCallback,\n    autostart = true,\n    onPlayChanged: onPlayChangedCallback,\n  } = options\n  const isEmpty = timers.length === 0\n  const timeoutInstances: TimeoutInstance[] = []\n  let afterTotal = 0\n  const onFinish = () => {\n    controller.finished = true\n    controller.duration = 0\n    onFinishCallback?.()\n  }\n  const onPlayChanged = (started: boolean) => {\n    if (started) {\n      controller.durationCounter = createDurationCounter()\n    } else {\n      // @ts-ignore\n      controller.durationCounter && clearInterval(controller.durationCounter)\n    }\n    controller.paused = !started\n    onPlayChangedCallback?.()\n  }\n  let totalDuration = 0\n  timers.forEach(({ after }: T) => {\n    totalDuration += after\n  })\n  const createDurationCounter = () => setInterval(() => {\n    controller.duration += 100\n  }, 100)\n  const controller = {\n    currentIndex: 0,\n    totalDuration,\n    duration: 0,\n    durationCounter: null as null | Timeout,\n    timers,\n    timeoutInstances,\n    finished: isEmpty,\n    paused: !autostart,\n    pause: () => {\n      timeoutInstances.forEach((timeoutInstance, index) => {\n        if (index >= controller.currentIndex) {\n          timeoutInstance.pause()\n        }\n      })\n      onPlayChanged(false)\n    },\n    start: () => {\n      timeoutInstances.forEach((timeoutInstance, index) => {\n        if (index >= controller.currentIndex) {\n          timeoutInstance.resume()\n        }\n      })\n      onPlayChanged(true)\n    },\n    clear: () => {\n      timeoutInstances.forEach((timeoutInstance) => {\n        timeoutInstance.clear()\n      })\n      // @ts-ignore\n      controller.durationCounter && clearInterval(controller.durationCounter)\n      onFinish()\n    },\n  }\n  timers.forEach((timer, index) => {\n    afterTotal += timer.after\n    const timeoutInstance = Timeout.instantiate(() => {\n      controller.currentIndex = index + 1\n      callback(timer, index, timeoutInstance)\n      if (index === timers.length - 1) {\n        controller.clear()\n      }\n    }, afterTotal)\n    if (!autostart) {\n      timeoutInstance.pause()\n    }\n    timeoutInstances.push(\n      timeoutInstance,\n    )\n  })\n  if (autostart) {\n    controller.durationCounter = createDurationCounter()\n  }\n  return controller\n}\n\nexport type TimeoutManager = ReturnType<typeof createTimeoutManager>\n","import React from 'react'\nimport {\n  AddCircle,\n  Adjust,\n  DeleteRounded,\n  RecordVoiceOverRounded,\n  Edit,\n  ExpandMore,\n  BuildCircle,\n  RepeatOne,\n  SortByAlpha,\n  Close,\n  InfoOutlined,\n  Filter,\n  ArrowDropDownRounded,\n  ArrowDropUpRounded,\n  Bookmark,\n  Bookmarks,\n  BookmarkBorder,\n  Minimize,\n  Videocam,\n  FiberManualRecord,\n  Settings,\n  BuildCircleOutlined,\n  MoreVert,\n  Redo,\n  ChevronLeft,\n  ChevronRight,\n  KeyboardArrowUp,\n  KeyboardArrowDown,\n  PlaylistAdd,\n  PlaylistPlay,\n  PlayArrow,\n  NavigateNext,\n  NavigateBefore,\n  Assessment,\n  Beenhere,\n  UnfoldLess,\n  UnfoldMore,\n  MyLocation,\n  DragHandle,\n} from '@mui/icons-material'\nimport { IconProps as MUIIconProps } from '@mui/material'\n\nconst ICONS = {\n  assessment: Assessment,\n  add_circle: AddCircle,\n  addjust: Adjust,\n  delete_rounded: DeleteRounded,\n  record_voice_over_rounded: RecordVoiceOverRounded,\n  build_circle_outlined: BuildCircleOutlined,\n  more_vert: MoreVert,\n  edit: Edit,\n  build_circle: BuildCircle,\n  repeat_one: RepeatOne,\n  sort_by_alpha: SortByAlpha,\n  close: Close,\n  info_outlined: InfoOutlined,\n  filter: Filter,\n  arrow_drop_down_rounded: ArrowDropDownRounded,\n  arrow_drop_up_rounded: ArrowDropUpRounded,\n  bookmarks: Bookmarks,\n  bookmark: Bookmark,\n  bookmark_border: BookmarkBorder,\n  minimize: Minimize,\n  videocam: Videocam,\n  fiber_manual_record: FiberManualRecord,\n  settings: Settings,\n  redo: Redo,\n  chevron_left: ChevronLeft,\n  chevron_right: ChevronRight,\n  keyboard_arrow_up: KeyboardArrowUp,\n  keyboard_arrow_down: KeyboardArrowDown,\n  playlist_add: PlaylistAdd,\n  playlist_play: PlaylistPlay,\n  expand_more: ExpandMore,\n  play_arrow: PlayArrow,\n  navigate_before: NavigateBefore,\n  navigate_next: NavigateNext,\n  beenhere: Beenhere,\n  unfold_less: UnfoldLess,\n  unfold_more: UnfoldMore,\n  my_location: MyLocation,\n  drag_handle: DragHandle,\n} as const\n\ntype IconName = keyof typeof ICONS\n\nexport type IconProps = Omit<MUIIconProps, 'name'> & {\n  name: IconName;\n}\n\nexport const Icon = (props: IconProps) => {\n  const {\n    name,\n    ...rest\n  } = props\n  const IconSelected = ICONS[name]\n  return (\n    // @ts-ignore\n    <IconSelected {...rest} />\n  )\n}\n","import * as R from 'colay/ramda'\n\nimport { DocumentResult, DocumentPickerOptions } from './types'\n\nconst uuidv4 = R.uuid\n\nexport default {\n  get name(): string {\n    return 'ExpoDocumentPicker'\n  },\n\n  async getDocumentAsync({\n    type = '*/*',\n    multiple = false,\n  }: DocumentPickerOptions): Promise<DocumentResult> {\n    const input = document.createElement('input')\n    input.style.display = 'none'\n    input.setAttribute('type', 'file')\n    input.setAttribute('accept', type)\n    input.setAttribute('id', uuidv4())\n    if (multiple) {\n      input.setAttribute('multiple', 'multiple')\n    }\n\n    document.body.appendChild(input)\n\n    return new Promise((resolve, reject) => {\n      input.addEventListener('change', () => {\n        if (input.files) {\n          const targetFile = input.files[0]\n          const reader = new FileReader()\n          reader.onerror = () => {\n            reject(new Error('Failed to read the selected media because the operation failed.'))\n          }\n          reader.onload = ({ target }) => {\n            const uri = (target as any).result\n            resolve({\n              type: 'success',\n              uri,\n              name: targetFile.name,\n              file: targetFile,\n              lastModified: targetFile.lastModified,\n              size: targetFile.size,\n              output: input.files,\n            })\n          }\n          // Read in the image file as a binary string.\n          reader.readAsDataURL(targetFile)\n        } else {\n          resolve({ type: 'cancel' })\n        }\n\n        document.body.removeChild(input)\n      })\n\n      const event = new MouseEvent('click')\n      input.dispatchEvent(event)\n    })\n  },\n}\n","import { LAYOUT_NAMES } from '@constants'\nimport {\n  Card,\n  CardActionArea, CardContent, CardMedia, MenuItem,\n  Popper,\n  TextField,\n  Typography\n} from '@mui/material'\nimport { utils, WidgetProps } from '@rjsf/core'\nimport { useDisclosure, View } from 'colay-ui'\nimport React from 'react'\nimport { LAYOUT_INFO } from './layoutInfo'\n\nconst { asNumber, guessType } = utils\n\nconst nums = new Set(['number', 'integer'])\n\nexport const WIDTH = 300\nexport const HEIGHT = 300\n\n/**\n * This is a silly limitation in the DOM where option change event values are\n * always retrieved as strings.\n */\nconst processValue = (schema: any, value: any) => {\n  // \"enum\" is a reserved word, so only \"type\" and \"items\" can be destructured\n  const { type, items } = schema\n  if (value === '') {\n    return undefined\n  } if (type === 'array' && items && nums.has(items.type)) {\n    return value.map(asNumber)\n  } if (type === 'boolean') {\n    return value === 'true'\n  } if (type === 'number') {\n    return asNumber(value)\n  }\n\n  // If type is undefined, but an enum is present, try and infer the type from\n  // the enum values\n  if (schema.enum) {\n    if (schema.enum.every((x: any) => guessType(x) === 'number')) {\n      return asNumber(value)\n    } if (schema.enum.every((x: any) => guessType(x) === 'boolean')) {\n      return value === 'true'\n    }\n  }\n\n  return value\n}\n\nconst LayoutNameSelect = (props: WidgetProps) => {\n  const {\n    schema,\n    id,\n    label,\n    required,\n    disabled,\n    readonly,\n    options,\n    value,\n    multiple,\n    autofocus,\n    onChange,\n    onBlur,\n    onFocus,\n    rawErrors = [],\n  } = props\n  const { enumOptions, enumDisabled } = options\n\n  const emptyValue = multiple ? [] : ''\n\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<{ name?: string; value: unknown }>) => onChange(processValue(schema, value))\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) => onBlur(id, processValue(schema, value))\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, processValue(schema, value))\n  const {\n    anchorEl,\n    // isOpen,\n    onClose,\n    onOpen,\n  } = useDisclosure({})\n  const hoveredIndexRef = React.useRef(-1)\n  return (\n    <TextField\n      id={id}\n      label={label || schema.title}\n      select\n      value={typeof value === 'undefined' ? emptyValue : value}\n      required={required}\n      disabled={disabled || readonly}\n      autoFocus={autofocus}\n      error={rawErrors.length > 0}\n      onChange={_onChange}\n      onBlur={_onBlur}\n      onFocus={_onFocus}\n      InputLabelProps={{\n        shrink: true,\n      }}\n      SelectProps={{\n        multiple: typeof multiple === 'undefined' ? false : multiple,\n      }}\n    >\n      {(enumOptions as any).map(({ value, label }: any, i: number) => {\n        const disabled: any = enumDisabled && (enumDisabled as any).indexOf(value) != -1\n        return (\n          <MenuItem\n            key={i}\n            value={value}\n            disabled={disabled}\n            onMouseEnter={(e) => {\n              hoveredIndexRef.current = i\n              onOpen(e)\n            }}\n            onMouseLeave={onClose}\n          >\n            <LayoutNameItem\n              openInfo={{\n                anchorEl,\n                isOpen: hoveredIndexRef.current === i,\n              }}\n              value={value}\n              label={label}\n              disabled={disabled}\n            />\n          </MenuItem>\n\n        // <MenuItem\n        //   key={i}\n        //   value={value}\n        //   disabled={disabled}\n        // >\n\n        //   <View\n        //   style={{\n        //     flexDirection: 'row',\n        //     justifyContent: 'space-between',\n        //     width: '100%',\n        //   }}\n        // >\n        //   <Typography>\n        //     {label}\n        //   </Typography>\n        //   <img\n        //     src={`https://raw.githubusercontent.com/sabaturgay/assets/main/gifs/${value}Layout.gif`}\n        //     width={32}\n        //     height={32}\n        //     alt={label}\n        //   />\n        // </View>\n        // </MenuItem>\n        )\n      })}\n    </TextField>\n  )\n}\n\ntype LayoutNameItemProps = {\n  value: string;\n  label: string;\n  disabled?: boolean;\n  openInfo: {\n    anchorEl?: any;\n    isOpen?: boolean\n  };\n}\nconst LayoutNameItem = (props: LayoutNameItemProps) => {\n  const {\n    label,\n    value,\n    openInfo = {},\n  } = props\n  const {\n    isOpen,\n    anchorEl,\n  } = openInfo\n  const info = LAYOUT_INFO[value as keyof typeof LAYOUT_INFO]\n  return (\n    <>\n      <View\n        style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n          width: '100%',\n        }}\n      >\n        <Typography>\n          {label}\n        </Typography>\n        <img\n          src={`https://raw.githubusercontent.com/sabaturgay/assets/main/gifs/${value}Layout.gif`}\n          width={32}\n          height={32}\n          alt={label}\n        />\n      </View>\n      {/* <Popper\n        // id={id}\n        open={isOpen}\n        anchorEl={anchorEl}\n        transition\n        // disablePortal\n        placement=\"right-start\"\n        style={{\n          zIndex: 2000,\n        }}\n      >\n        <LayoutCard\n          {...info}\n        />\n\n      </Popper> */}\n    </>\n  )\n}\n\ntype LayoutCardProps = typeof LAYOUT_INFO['breadthfirst']\nconst LayoutCard = (props: LayoutCardProps) => {\n  const {\n    content,\n    image,\n    title,\n  } = props\n  return (\n    <>\n      <Card\n        sx={{\n          width: WIDTH,\n          zIndex: (theme) => theme.zIndex.modal,\n        }}\n      >\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            height={`${HEIGHT}`}\n            width={`${WIDTH}`}\n            image={image}\n            title={title}\n          />\n          <CardContent>\n            <Typography\n              gutterBottom\n              variant=\"h5\"\n              component=\"h2\"\n            >\n              {title}\n            </Typography>\n            <Typography\n              variant=\"body2\"\n              color=\"textSecondary\"\n              component=\"p\"\n            >\n              {content}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        {/*\n      <CardActions>\n        <Button size=\"small\" color=\"primary\">\n          Share\n        </Button>\n        <Button size=\"small\" color=\"primary\">\n          Learn More\n        </Button>\n      </CardActions> */}\n      </Card>\n    </>\n  //   <Paper\n  //   sx={{\n  //     width: { sx: '8vw', md: '50vw' },\n  //     display: 'flex',\n  //     padding: 10,\n  //     flexDirection: 'column',\n  //   }}\n  // >\n  //   <Typography variant=\"h1\">\n  //     {info.title}\n  //   </Typography>\n  //   <img\n  //     src={info.image}\n  //     width={250}\n  //     height={250}\n  //     alt={label}\n  //   />\n  //   <Typography\n  //     variant=\"body1\"\n  //   >\n  //     {info.content}\n  //   </Typography>\n  // </Paper>\n  )\n}\nexport const getFormProps = () => ({\n  schema: {\n    title: 'Layout',\n    properties: {\n      name: {\n        type: 'string',\n        enum: LAYOUT_NAMES,\n      },\n      animationDuration: {\n        type: 'number',\n        minimum: 0,\n        maximum: 10000,\n      },\n      refresh: {\n        type: 'number',\n        minimum: 0,\n        maximum: 100,\n      },\n      maxIterations: {\n        type: 'number',\n        minimum: 0,\n        maximum: 1000,\n      },\n      maxSimulationTime: {\n        type: 'number',\n        minimum: 0,\n        maximum: 1000,\n      },\n    },\n  },\n  uiSchema: {\n    name: {\n      'ui:field': (props: any) => {\n        const {\n          schema,\n          formData,\n        } = props\n        return (\n          <LayoutNameSelect\n            {...props}\n            value={formData}\n            options={{\n              enumOptions: schema.enum.map(\n                (value: string) => ({\n                  label: value,\n                  value,\n                }),\n              ),\n            }}\n          />\n        )\n      },\n    },\n  },\n}) as const\n","import {\n  Box, Button, Popover,\n  Backdrop,\n  Portal,\n} from '@mui/material'\nimport Form from '@rjsf/material-ui'\nimport { EVENT } from '@constants'\nimport { OnEventLite } from '@type'\nimport { useDisclosure } from 'colay-ui'\nimport React from 'react'\nimport {\n  getFormProps,\n  WIDTH,\n} from './getFormProps'\n\ntype LayoutOptionsValue = {\n  name?: string;\n  animationDuration?: number;\n  refresh? : number;\n  maxIterations? : number;\n  maxSimulationTime? : number;\n}\nexport type LayoutOptionsProps = {\n  layout?: LayoutOptionsValue;\n  schema?: any;\n  onEvent: OnEventLite;\n}\n\nexport const LayoutOptions = (props: LayoutOptionsProps) => {\n  const {\n    layout = {},\n    onEvent,\n    schema,\n  } = props\n  const {\n    anchorEl,\n    isOpen,\n    onClose,\n    onOpen,\n  } = useDisclosure({})\n  const onSubmitCallback = React.useCallback((e) => {\n    onEvent({\n      type: EVENT.LAYOUT_CHANGED,\n      payload: {\n        form: e,\n        value: e.formData,\n      },\n    })\n    onClose()\n  }, [onEvent])\n  return (\n    <Box>\n      <Button\n        // @ts-ignore\n        onClick={onOpen}\n        sx={{\n          color: (theme) => theme.palette.text.secondary,\n        }}\n      >\n        {layout.name ?? 'Select Layout'}\n      </Button>\n      {/* <Popover\n        open={isOpen}\n        anchorEl={anchorEl}\n        PaperProps={{\n          style: {\n            width: '100%',\n            height: '100%',\n            top: 0,\n            left: 0,\n            position: 'absolute',\n            backgroundColor: 'rgba(0,0,0,0.4)',\n            zIndex: 100,\n          },\n        }}\n      /> */}\n      <Popover\n        // id={id}\n        open={isOpen}\n        anchorEl={anchorEl}\n        onClose={onClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Portal>\n          <Backdrop\n            open\n            sx={{\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              zIndex: (theme) => theme.zIndex.drawer,\n              width: '100vw',\n              height: '100vw',\n            }}\n          />\n        </Portal>\n        <Box\n          sx={{\n            width: WIDTH,\n            padding: 2,\n          }}\n        >\n          <Form\n            {...getFormProps()}\n            {...(schema ? { schema } : {})}\n            // extraData={[layout]}\n            formData={{\n              name: layout.name,\n              animationDuration: layout.animationDuration,\n              refresh: layout.refresh,\n              maxIterations: layout.maxIterations,\n              maxSimulationTime: layout.maxSimulationTime,\n            }}\n            onSubmit={onSubmitCallback}\n          />\n        </Box>\n      </Popover>\n\n    </Box>\n  )\n}\n","import {\n  Icon,\n} from '@components/Icon'\nimport { EDITOR_MODE, EVENT } from '@constants'\nimport { useGraphEditor } from '@hooks'\nimport {\n  Box, Button, FormControl, IconButton, InputLabel, Menu,\n  MenuItem, Select, useTheme, SelectProps,\n} from '@mui/material'\nimport {\n  EditorMode, OnEventLite,\n} from '@type'\nimport { readTextFile } from '@utils'\nimport DocumentPicker from '@utils/DocumentPicker'\nimport { useAnimation, useDisclosure, wrapComponent } from 'colay-ui'\nimport { Recorder } from 'colay-ui/components/Recorder'\n// import Form from 'unitx-ui/components/Form'\nimport * as R from 'colay/ramda'\nimport React from 'react'\nimport { LayoutOptions } from './LayoutOptions'\n// export const ACTION = {\n//   EXPORT_DATA: 'EXPORT_DATA',\n// }\ntype ActionOption = {\n  visible?: boolean;\n}\n\nexport type ActionBarProps = {\n  renderMoreAction?: () => React.ReactElement;\n  left?: React.FC;\n  right?: React.FC;\n  isOpen?: boolean;\n  autoOpen?: boolean;\n  mode?: EditorMode;\n  layoutName?: string;\n  theming?: {\n    options?: {\n      name: string;\n      value: string;\n    }[];\n    value?: string;\n  }\n  recording?: boolean;\n  eventRecording?: boolean;\n  actions?: {\n    add: ActionOption;\n    recordEvents: ActionOption;\n    delete: ActionOption;\n    // record: { visible: boolean; };\n    options: {\n      actions: { import: ActionOption };\n    };\n    layout: ActionOption;\n  };\n  onAction: (action: { type: string; value?: any }) => void;\n}\n\nconst DEFAULT_ACTIONS = {\n  add: { visible: true },\n  delete: { visible: true },\n  recordEvents: { visible: true },\n  options: {\n    actions: { import: { visible: true } },\n  },\n  layout: { visible: true },\n}\nconst RECORDING_STATUS_MAP = {\n  START: 'START',\n  STOP: 'STOP',\n  RECORDING: 'RECORDING',\n  IDLE: 'IDLE',\n}\n\nconst HEIGHT = 40\n// const AnimatedSurface = animated(Box)\n\nconst ActionBarElement = (props: ActionBarProps) => {\n  const {\n    renderMoreAction,\n    isOpen = false,\n    autoOpen = false,\n    recording = false,\n    eventRecording = false,\n    // recordingActions = false,\n    onAction,\n    left: LeftComponent,\n    right: RightComponent,\n    theming = {\n      options: [\n        { name: 'Default', value: 'Default' },\n        { name: 'Dark', value: 'Dark' },\n      ],\n      value: 'Default',\n    },\n  } = props\n  const [\n    {\n      onEvent,\n      graphEditorRef,\n      mode,\n      graphConfig,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      onEvent: editor.onEvent,\n      graphEditorRef: editor.graphEditorRef,\n      mode: editor.mode,\n      graphConfig: editor.graphConfig,\n    }),\n  )\n  const {\n    style: animationStyle,\n    ref: animationRef,\n  } = useAnimation({\n    from: {\n      bottom: -HEIGHT,\n    },\n    to: {\n      bottom: 0,\n    },\n    autoPlay: false,\n  })\n  // const initialized = React.useRef(false)\n  React.useEffect(() => {\n    animationRef.current.play(isOpen)\n  }, [animationRef.current, isOpen])\n  const theme = useTheme()\n  const recordingRef = React.useRef(\n    RECORDING_STATUS_MAP.IDLE,\n  )\n  React.useMemo(() => {\n    switch (recordingRef.current) {\n      case RECORDING_STATUS_MAP.IDLE:\n        recordingRef.current = recording ? RECORDING_STATUS_MAP.START : RECORDING_STATUS_MAP.IDLE\n        break\n      case RECORDING_STATUS_MAP.START:\n        recordingRef.current = recording\n          ? RECORDING_STATUS_MAP.RECORDING\n          : RECORDING_STATUS_MAP.STOP\n        break\n      case RECORDING_STATUS_MAP.RECORDING:\n        recordingRef.current = recording\n          ? RECORDING_STATUS_MAP.RECORDING\n          : RECORDING_STATUS_MAP.STOP\n        break\n      case RECORDING_STATUS_MAP.STOP:\n        recordingRef.current = recording ? RECORDING_STATUS_MAP.START : RECORDING_STATUS_MAP.IDLE\n        break\n\n      default:\n        break\n    }\n  }, [recording])\n  // React.useEffect(() => {\n  //   animationRef?.current?.start()\n  // }, [])\n  const actions = R.mergeDeepRight(DEFAULT_ACTIONS, props.actions ?? {})\n  return (\n    <Box\n      style={{\n        position: 'absolute',\n        width: '100%',\n        height: HEIGHT,\n        left: 0,\n        flexDirection: 'row',\n        display: 'flex',\n        justifyContent: 'space-between',\n        // @ts-ignore\n        backgroundColor: theme.palette.background.paper,\n        ...animationStyle,\n      }}\n    >\n      {LeftComponent && <LeftComponent />}\n      <Box\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          display: 'flex',\n          height: HEIGHT,\n          // width: '100%',\n        }}\n      >\n        {\n          actions.add.visible && (\n          <Button\n            style={styles.button}\n            startIcon={(\n              <Icon name=\"add_circle\" />\n)}\n            onClick={() => onEvent({\n              type: EVENT.MODE_CHANGED,\n              payload: {\n                value: [\n                  EDITOR_MODE.ADD,\n                  EDITOR_MODE.CONTINUES_ADD,\n                  // @ts-ignore\n                ].includes(mode)\n                  ? EDITOR_MODE.DEFAULT\n                  : EDITOR_MODE.ADD,\n              },\n            })}\n            variant={EDITOR_MODE.CONTINUES_ADD === mode ? 'contained' : 'outlined'}\n            color={[\n              EDITOR_MODE.ADD,\n              EDITOR_MODE.CONTINUES_ADD,\n              // @ts-ignore\n            ].includes(mode) ? 'secondary' : 'primary'}\n            onDoubleClick={() => onEvent({\n              type: EVENT.MODE_CHANGED,\n              payload: { value: EDITOR_MODE.CONTINUES_ADD },\n            })}\n          >\n            Add\n          </Button>\n          )\n        }\n        {\n          actions.delete.visible && (\n          <Button\n            style={styles.button}\n            startIcon={(\n              <Icon name=\"delete_rounded\" />\n            )}\n            color={[\n              EDITOR_MODE.DELETE,\n              EDITOR_MODE.CONTINUES_DELETE,\n              // @ts-ignore\n            ].includes(mode)\n              ? 'primary'\n              : 'secondary'}\n            variant={EDITOR_MODE.CONTINUES_DELETE === mode ? 'contained' : 'outlined'}\n            onClick={() => onEvent({\n              type: EVENT.MODE_CHANGED,\n              payload: {\n                value: [\n                  EDITOR_MODE.DELETE,\n                  EDITOR_MODE.CONTINUES_DELETE,\n                // @ts-ignore\n                ].includes(mode)\n                  ? EDITOR_MODE.DEFAULT\n                  : EDITOR_MODE.DELETE,\n              },\n            })}\n            onDoubleClick={() => onEvent({\n              type: EVENT.MODE_CHANGED,\n              payload: { value: EDITOR_MODE.CONTINUES_DELETE },\n            })}\n          >\n            Delete\n          </Button>\n          )\n        }\n        {\n          actions.layout.visible && (\n          <LayoutOptions\n            layout={graphConfig?.layout}\n            onEvent={onEvent}\n            {...actions.layout}\n          />\n          )\n        }\n        {\n          actions.recordEvents.visible && (\n          <IconButton\n            onClick={() => onEvent({ type: EVENT.TOGGLE_RECORD_EVENTS })}\n          >\n            <Icon\n              name=\"addjust\"\n              color={!eventRecording ? 'inherit' : 'error'}\n            />\n          </IconButton>\n          )\n        }\n        <Recorder\n          // @ts-ignore\n          getStream={() => graphEditorRef.current.app.renderer.view.captureStream(25)}\n          render={({\n            startRecording,\n            stopRecording,\n            status,\n          }) => {\n            if (recordingRef.current === RECORDING_STATUS_MAP.START) {\n              recordingRef.current = RECORDING_STATUS_MAP.RECORDING\n              startRecording()\n            }\n            if (recordingRef.current === RECORDING_STATUS_MAP.STOP) {\n              recordingRef.current = RECORDING_STATUS_MAP.IDLE\n              stopRecording()\n            }\n            return (\n              <IconButton\n                onClick={() => onEvent({ type: EVENT.TOGGLE_RECORD })}\n              >\n                <Icon\n                  name=\"videocam\"\n                  color={status !== 'recording' ? 'inherit' : 'error'}\n                />\n              </IconButton>\n            )\n          }}\n          onStop={(_, blob) => {\n            onEvent({\n              type: EVENT.RECORD_FINISHED,\n              payload: { value: blob },\n            })\n          }}\n        />\n        <MoreOptions\n          renderMoreAction={renderMoreAction}\n          theming={theming}\n          onEvent={onEvent}\n          onAction={onAction}\n        />\n      </Box>\n      {RightComponent && <RightComponent />}\n      {\n        !autoOpen && (\n          <IconButton\n            style={styles.icon}\n            onClick={() => {\n              onEvent({\n                type: EVENT.TOGGLE_ACTION_BAR,\n                avoidHistoryRecording: true,\n              })\n            }}\n          >\n            <Icon\n              name=\"build_circle_outlined\"\n            />\n          </IconButton>\n        )\n      }\n\n    </Box>\n  )\n}\ntype MoreOptionsProps = {\n  onEvent: OnEventLite;\n} & Pick<ActionBarProps, 'renderMoreAction' | 'onAction' | 'theming'>\n\nconst OPTIONS = {\n  Import: 'Import',\n  Export: 'Export',\n  ImportEvents: 'Import Events',\n} as const\nconst MoreOptions = (props: MoreOptionsProps) => {\n  const {\n    renderMoreAction = () => <Box />,\n    onEvent,\n    onAction,\n    theming,\n  } = props\n  const {\n    anchorEl,\n    isOpen,\n    onClose,\n    onOpen,\n  } = useDisclosure({})\n  const handleMenuItemClick = async (event: React.MouseEvent<HTMLLIElement>, index: number) => {\n    onClose()\n    const action = Object.values(OPTIONS)[index]\n    switch (action) {\n      case OPTIONS.Import: {\n        const result = await DocumentPicker.getDocumentAsync({ type: 'application/json' })\n        if (result.type === 'success') {\n          const fileText = await readTextFile(result.file!)\n          onEvent({\n            type: EVENT.IMPORT_DATA,\n            payload: { value: JSON.parse(fileText) },\n          })\n        }\n        break\n      }\n      case OPTIONS.ImportEvents: {\n        const result = await DocumentPicker.getDocumentAsync({ type: 'application/json' })\n        if (result.type === 'success') {\n          const fileText = await readTextFile(result.file!)\n          onEvent({\n            type: EVENT.IMPORT_EVENTS,\n            payload: { value: JSON.parse(fileText) },\n          })\n        }\n        break\n      }\n      case OPTIONS.Export:\n        onAction({ type: EVENT.EXPORT_DATA })\n        break\n\n      default:\n        break\n    }\n  }\n\n  const handleThemeChange: SelectProps['onChange'] = (e) => {\n    onAction({ type: EVENT.CHANGE_THEME, value: e.target.value })\n    onClose()\n  }\n\n  return (\n    <>\n      <IconButton\n        onClick={onOpen}\n      >\n        <Icon name=\"more_vert\" />\n      </IconButton>\n      <Menu\n        anchorEl={anchorEl}\n        open={isOpen}\n        onClose={onClose}\n        style={{ width: 400 }}\n      >\n        {Object.values(OPTIONS).map((option, index) => (\n          <MenuItem\n            key={option}\n            // selected={index === selectedIndex}\n            onClick={(event) => handleMenuItemClick(event, index)}\n          >\n            {option}\n          </MenuItem>\n        ))}\n        <FormControl fullWidth>\n          <InputLabel id=\"theme-select-label\">Theme</InputLabel>\n          <Select\n            labelId=\"theme-select-label\"\n            onChange={handleThemeChange}\n            value={theming?.value}\n          >\n            {theming?.options?.map((themeOption) => (\n              <MenuItem\n                key={themeOption.value}\n                value={themeOption.value}\n              >\n                {themeOption.name}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        {renderMoreAction()}\n      </Menu>\n    </>\n  )\n}\n\nexport const ActionBar = wrapComponent<ActionBarProps>(ActionBarElement, {})\n\nconst styles = {\n  icon: {\n    width: 24,\n    height: 24,\n    position: 'absolute',\n    left: 2,\n    top: -26,\n    fontSize: 24,\n  },\n  button: {\n    marginRight: 10,\n  },\n} as const\n","import React from 'react'\nimport {\n  pauseEvent,\n} from '@utils'\n\nexport const useDrag = (options) => {\n  const {\n    ref,\n    onDrag,\n  } = options\n\n  const resizer = React.useCallback((event) => {\n    const e = event.nativeEvent\n    const prevX = e.x\n    const prevY = e.y\n    const panelRect = ref.current.getBoundingClientRect()\n    function mousemove(e) {\n      pauseEvent(e)\n      const newX = prevX - e.x\n      const newY = prevY - e.y\n      onDrag({ x: newX, y: newY }, panelRect)\n    }\n\n    function mouseup() {\n      window.removeEventListener('mousemove', mousemove)\n      window.removeEventListener('mouseup', mouseup)\n    }\n    window.addEventListener('mousemove', mousemove)\n    window.addEventListener('mouseup', mouseup)\n  }, [])\n\n  return resizer\n}\n","import React from 'react'\nimport { ReactHTMLElementProps } from 'colay-ui/type'\n\nexport type ResizeDividerProps = ReactHTMLElementProps<HTMLDivElement>\nexport const ResizeDivider = (props: ResizeDividerProps) => {\n  const [state, setState] = React.useState({\n    onHover: false,\n  })\n  return (\n    <div\n      style={{\n        width: state.onHover ? 4 : 2,\n        height: '100%',\n        backgroundColor: 'black',\n        cursor: 'col-resize',\n        ...(props?.style ?? {}),\n      }}\n      onMouseEnter={() => setState({ ...state, onHover: true })}\n      onMouseLeave={() => setState({ ...state, onHover: false })}\n      {...props}\n    />\n  )\n}\n","import React from 'react'\nimport { JsonEditor as Editor } from 'jsoneditor-react'\nimport 'jsoneditor-react/es/editor.min.css'\nimport ace from 'brace'\nimport 'brace/mode/json'\nimport 'brace/theme/github'\nimport { useGraphEditor } from '@hooks'\nimport { EVENT } from '@constants'\n\nexport type JSONEditorProps = {\n}\n\nexport const JSONEditor = (props: JSONEditorProps) => {\n  const [\n    {\n      item,\n      onEvent,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      item: editor.selectedItem,\n      onEvent: editor.onEvent,\n    }),\n  )\n  return (\n    <>\n      <Editor\n        value={item?.data}\n        onChange={(newData: any) => {\n          onEvent({\n            type: EVENT.UPDATE_DATA,\n            payload: {\n              value: newData,\n            },\n          })\n        }}\n        ace={ace}\n        theme=\"ace/theme/github\"\n      />\n    </>\n  )\n}\n","import { Icon } from '@components/Icon'\nimport {\n  IconButton,\n  Typography,\n  Accordion,\n  AccordionDetails,\n  AccordionSummary,\n} from '@mui/material'\nimport { EVENT } from '@constants'\nimport {\n  JSONViewer,\n} from 'colay-ui'\nimport { View } from 'colay-ui/components/View'\nimport React from 'react'\nimport { OnEventLite } from '@type'\n\nexport type GlobalNetworkStatisticsProps = {\n  data?: any;\n  onEvent: OnEventLite;\n}\n\nexport const GlobalNetworkStatistics = (props: GlobalNetworkStatisticsProps) => {\n  const {\n    data,\n    onEvent,\n  } = props\n  return (\n    <Accordion\n      defaultExpanded\n    >\n      <AccordionSummary\n        aria-controls=\"panel1a-content\"\n      >\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: '100%',\n          }}\n        >\n          <View\n            style={{\n              flexDirection: 'row',\n              alignItems: 'center',\n            }}\n          >\n            <Typography\n              variant=\"h6\"\n            >\n              Global Network Statistics\n            </Typography>\n          </View>\n          <View\n            style={{\n              // alignItems: 'space-between',\n              flexDirection: 'row',\n            }}\n          >\n            <IconButton\n              onClick={(e) => {\n                e.stopPropagation()\n                onEvent({\n                  type: EVENT.CALCULATE_GLOBAL_NETWORK_STATISTICS,\n                })\n              }}\n            >\n              <Icon\n                name=\"assessment\"\n              />\n            </IconButton>\n          </View>\n        </View>\n      </AccordionSummary>\n      <AccordionDetails>\n        <JSONViewer\n          data={data}\n          sort={-1}\n          left={({ collapsed, onCollapse, noChild }) => (\n            <IconButton\n              size=\"small\"\n              sx={{ height: 24 }}\n              disabled={noChild}\n              onClick={() => onCollapse(!collapsed)}\n            >\n              <Icon\n                style={{\n                  fontSize: noChild ? 12 : 24,\n                }}\n                name={\n                        noChild\n                          ? 'fiber_manual_record'\n                          : collapsed\n                            ? 'arrow_drop_down_rounded'\n                            : 'arrow_drop_up_rounded'\n  }\n              />\n            </IconButton>\n          )}\n          renderItem={({ item: { key, value } }) => (\n            <View\n              style={{\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Typography\n                variant=\"subtitle1\"\n                style={{ alignContent: 'center' }}\n              >\n                {`${key}${value ? ': ' : ''}`}\n              </Typography>\n              {value\n                ? (\n                  <Typography\n                    variant=\"subtitle1\"\n                    style={{ alignContent: 'center' }}\n                  >\n                    {value}\n                  </Typography>\n                )\n                : null}\n            </View>\n          )}\n        />\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import { Icon } from '@components/Icon'\nimport {\n  Accordion,\n  AccordionDetails,\n  AccordionSummary, IconButton,\n  Typography,\n} from '@mui/material'\nimport { OnEventLite } from '@type'\nimport {\n  JSONViewer,\n} from 'colay-ui'\nimport { View } from 'colay-ui/components/View'\nimport React from 'react'\n\nexport type LocalNetworkStatisticsProps = {\n  data?: any;\n  onEvent: OnEventLite;\n}\n\nexport const LocalNetworkStatistics = (props: LocalNetworkStatisticsProps) => {\n  const {\n    data,\n  } = props\n  return (\n    <Accordion\n      defaultExpanded\n    >\n      <AccordionSummary\n        aria-controls=\"panel1a-content\"\n      >\n        <View\n          style={{\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            width: '100%',\n          }}\n        >\n          <View\n            style={{\n              flexDirection: 'row',\n              alignItems: 'center',\n            }}\n          >\n            <Typography\n              variant=\"h6\"\n            >\n              Local Network Statistics\n            </Typography>\n          </View>\n          <View\n            style={{\n              // alignItems: 'space-between',\n              flexDirection: 'row',\n            }}\n          >\n            {/* <IconButton\n              onClick={(e) => {\n                e.stopPropagation()\n                onEvent({\n                  type: EVENT.CALCULATE_LOCAL_NETWORK_STATISTICS,\n                })\n              }}\n            >\n              <Icon\n                name=\"assessment\"\n              />\n            </IconButton> */}\n          </View>\n        </View>\n      </AccordionSummary>\n      <AccordionDetails>\n        <JSONViewer\n          data={data}\n          sort={-1}\n          left={({ collapsed, onCollapse, noChild }) => (\n            <IconButton\n              size=\"small\"\n              sx={{ height: 24 }}\n              disabled={noChild}\n              onClick={() => onCollapse(!collapsed)}\n            >\n              <Icon\n                style={{\n                  fontSize: noChild ? 12 : 24,\n                }}\n                name={\n                        noChild\n                          ? 'fiber_manual_record'\n                          : collapsed\n                            ? 'arrow_drop_down_rounded'\n                            : 'arrow_drop_up_rounded'\n  }\n              />\n            </IconButton>\n          )}\n          renderItem={({ item: { key, value } }) => (\n            <View\n              style={{\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Typography\n                variant=\"subtitle1\"\n                style={{ alignContent: 'center' }}\n              >\n                {`${key}${value ? ': ' : ''}`}\n              </Typography>\n              {value\n                ? (\n                  <Typography\n                    variant=\"subtitle1\"\n                    style={{ alignContent: 'center' }}\n                  >\n                    {value}\n                  </Typography>\n                )\n                : null}\n            </View>\n          )}\n        />\n      </AccordionDetails>\n    </Accordion>\n  )\n}\n","import React from 'react'\nimport {\n  Typography,\n  AccordionDetails,\n  Accordion,\n  AccordionSummary,\n  ListItem,\n  List,\n  ListItemText,\n  ListItemIcon,\n} from '@mui/material'\nimport {\n  Icon,\n} from '@components/Icon'\nimport {\n  useGraphEditor,\n} from '@hooks'\nimport {\n  EVENT,\n} from '@constants'\nimport {\n  getItemFromElement,\n} from '@utils'\n\nexport type ConnectedElementsProps = {\n\n}\n\nexport const ConnectedElements = () => {\n  const [\n    {\n      // item,\n      selectedElement,\n      onEvent,\n    },\n  ] = useGraphEditor(\n    (editor) => {\n      const {\n        selectedElement,\n        selectedItem,\n        onEvent,\n      } = editor\n      return {\n        item: editor.selectedItem,\n        selectedElement,\n        onEvent,\n      }\n    },\n  )\n  if (!selectedElement) {\n    return null\n  }\n  const isNode = selectedElement.isNode()\n  let itemList\n  if (isNode) {\n    itemList = selectedElement.connectedEdges().toArray().map(\n      getItemFromElement,\n    )\n  } else {\n    itemList = [selectedElement.source(), selectedElement.target()].map(\n      getItemFromElement,\n    )\n  }\n  return (\n    <Accordion\n      defaultExpanded\n    >\n      <AccordionSummary>\n        <Typography\n          variant=\"h6\"\n        >\n          {`Connected ${isNode ? 'Edges' : 'Nodes'}`}\n        </Typography>\n      </AccordionSummary>\n      <AccordionDetails>\n        <List\n          dense\n        >\n          {\n        itemList.map((item) => (\n          <ListItem\n            key={item.id}\n            button\n            onClick={() => onEvent({\n              type: EVENT.ELEMENT_SELECTED_WITH_ZOOM,\n              payload: {\n                itemIds: [item.id],\n              },\n              avoidHistoryRecording: true,\n            })}\n          >\n            <ListItemIcon>\n              <Icon name=\"chevron_right\" />\n            </ListItemIcon>\n            <ListItemText primary={item.id} />\n          </ListItem>\n        ))\n      }\n        </List>\n      </AccordionDetails>\n    </Accordion>\n\n  )\n}\n","import { Icon } from '@components/Icon'\nimport { useGraphEditor } from '@hooks'\nimport {\n  Accordion, AccordionDetails,\n  AccordionSummary, Divider, IconButton, Paper, Typography,\n  Button,\n} from '@mui/material'\nimport { EVENT, SIDE_PANEL_DEFAULT_WIDTH } from '@constants'\nimport { EdgeElement } from '@type'\nimport {\n  JSONViewer,\n  useAnimation,\n} from 'colay-ui'\nimport { View } from 'colay-ui/components/View'\nimport * as R from 'colay/ramda'\nimport React from 'react'\n// import {\n//   DataEditor,\n// } from '../DataEditor'\nimport { useDrag } from '@hooks/useDrag'\nimport { ResizeDivider } from '@components/ResizeDivider'\nimport { JSONEditor } from './JSONEditor'\nimport { GlobalNetworkStatistics } from './GlobalNetworkStatistics'\nimport { LocalNetworkStatistics } from './LocalNetworkStatistics'\nimport { ConnectedElements } from './ConnectedElements'\n\nexport type DataBarProps = {\n  editable?: boolean;\n  isOpen?: boolean;\n  header?: React.FC;\n  footer?: React.FC;\n  sort?: any;\n} // & Omit<DataEditorProps, 'data'>\n\nconst ICON_SIZE = 16\n\nexport const DataBar = (props: DataBarProps) => {\n  const {\n    editable = true,\n    isOpen = false,\n    sort = -1,\n    header: HeaderComponent,\n    footer: FooterComponent,\n    ...rest\n  } = props\n\n  const [\n    {\n      item,\n      onEvent,\n      networkStatistics,\n      globalLabel,\n      localLabel,\n      isGlobalLabelFirst,\n      selectedElement,\n    },\n  ] = useGraphEditor(\n    (editor) => {\n      const {\n        selectedElement,\n        selectedItem,\n        label,\n        localDataRef,\n        networkStatistics,\n      } = editor\n      const targetPath = selectedElement?.isNode() ? 'nodes' : 'edges'\n      return {\n        graphEditorConfig: editor.config,\n        item: editor.selectedItem,\n        localLabel: selectedElement && (label?.[targetPath][selectedItem?.id!]),\n        globalLabel: label?.global?.[targetPath],\n        isGlobalLabelFirst: label?.isGlobalFirst?.[targetPath],\n        onEvent: editor.onEvent,\n        networkStatistics: {\n          local: localDataRef.current!.networkStatistics!.local?.[selectedItem?.id!],\n          global: networkStatistics?.global?.[selectedItem?.id!],\n        },\n        selectedElement,\n      }\n    },\n  )\n  const localDataRef = React.useRef({\n    width: SIDE_PANEL_DEFAULT_WIDTH,\n  })\n  const {\n    style: animationStyle,\n    ref: animationRef,\n  } = useAnimation({\n    from: {\n      width: 0,\n    },\n    to: {\n      width: localDataRef.current.width,\n    },\n    autoPlay: false,\n  }, [localDataRef.current.width])\n  const containerRef = React.useRef()\n  React.useEffect(() => {\n    animationRef.current?.play?.(isOpen)\n  }, [animationRef, isOpen])\n  const hasStatistics = Object.values(networkStatistics).find((val) => val)\n  const [state, setState] = React.useState({\n    isEditing: false,\n  })\n  const onMouseDown = useDrag({\n    ref: containerRef,\n    onDrag: ({ x, y }, rect) => {\n      localDataRef.current.width = rect.width + x\n      const target = containerRef.current\n      target.style.width = `${localDataRef.current.width}px`\n    },\n  })\n  return (\n    <Paper\n      ref={containerRef}\n      style={{\n        position: 'absolute',\n        height: '100%',\n        top: 0,\n        display: 'flex',\n        flexDirection: 'row',\n        right: 0,\n        // width: animationStyle.right,\n        ...animationStyle,\n      }}\n    >\n      <ResizeDivider\n        onMouseDown={onMouseDown}\n      />\n      <View\n        style={{\n          height: '100%',\n          flex: 1,\n          // @ts-ignore\n          overflowY: 'auto',\n          overflowX: 'hidden',\n        }}\n      >\n        {HeaderComponent && <HeaderComponent />}\n        {item && (\n        <Accordion\n          defaultExpanded\n        >\n          <AccordionSummary>\n            <Typography\n              variant=\"h6\"\n              style={{\n                wordBreak: 'break-word',\n                padding: 2,\n              }}\n            >\n              {` id: ${item?.id}`}\n            </Typography>\n          </AccordionSummary>\n          <AccordionDetails>\n            <View style={{\n              width: '100%',\n              height: hasStatistics ? '70%' : '100%',\n              // wordWrap: 'break-word',\n              // flexWrap: 'wrap',\n            }}\n            >\n              {/* {\n                isEdge && <EdgeElementSummary element={selectedElement} />\n              } */}\n              {\n        editable && item?.data\n          && (\n            // <DataEditor\n            //   data={item.data}\n            //   onEvent={onEvent}\n            //   {...rest}\n            // />\n            <View\n              style={{\n                flexDirection: 'row',\n                justifyContent: 'flex-end',\n              }}\n            >\n              <Button\n                onClick={() => setState({ ...state, isEditing: !state.isEditing })}\n              >\n                {state.isEditing ? 'Done' : 'Edit'}\n\n              </Button>\n            </View>\n          )\n      }\n              {\n        state.isEditing\n          ? (\n            <JSONEditor />\n          )\n          : (\n            <JSONViewer\n              extraData={[localLabel, globalLabel]}\n              data={item?.data}\n              sort={sort}\n              left={(props) => {\n                const {\n                  item: { path },\n                  collapsed, onCollapse, noChild,\n                } = props\n                const isLocalLabel = R.equals(path, localLabel)\n                const isGlobalLabel = R.equals(path, globalLabel)\n                return (\n                  <View\n                    style={{\n                      flexDirection: 'row',\n                      alignItems: 'center',\n                      height: 32,\n                    }}\n                  >\n\n                    <IconButton\n                      size=\"small\"\n                      sx={{ height: ICON_SIZE }}\n                      onClick={() => onEvent(\n                        isLocalLabel\n                          ? {\n                            type: EVENT.CLEAR_NODE_LOCAL_LABEL,\n                          }\n                          : {\n                            type: EVENT.SET_NODE_LOCAL_LABEL,\n                            payload: {\n                              value: path,\n                            },\n                          },\n                      )}\n                    >\n                      <Icon\n                        style={{\n                          fontSize: ICON_SIZE,\n                          textDecoration: !isGlobalLabelFirst ? 'underline' : '',\n                        }}\n                        name={\n                          isLocalLabel ? 'bookmark' : 'bookmark_border'\n                        }\n                      />\n                    </IconButton>\n                    <IconButton\n                      size=\"small\"\n                      sx={{ height: ICON_SIZE }}\n                      onClick={() => onEvent(\n                        isGlobalLabel\n                          ? {\n                            type: EVENT.CLEAR_NODE_GLOBAL_LABEL,\n                          }\n                          : {\n                            type: EVENT.SET_NODE_GLOBAL_LABEL,\n                            payload: {\n                              value: path,\n                            },\n                          },\n                      )}\n                    >\n                      <Icon\n                        style={{\n                          fontSize: ICON_SIZE,\n                          textDecoration: isGlobalLabelFirst ? 'underline' : '',\n                        }}\n                        name={\n                          isGlobalLabel ? 'bookmarks' : 'bookmark_border'\n  }\n                      />\n                    </IconButton>\n                    <IconButton\n                      size=\"small\"\n                      sx={{ height: ICON_SIZE }}\n                      disabled={noChild}\n                      onClick={() => onCollapse(!collapsed)}\n                    >\n                      <Icon\n                        style={{\n                          fontSize: ICON_SIZE, // noChild ? 12 : ICON_SIZE,\n                        }}\n                        name={\n                      noChild\n                        ? 'fiber_manual_record'\n                        : collapsed\n                          ? 'arrow_drop_down_rounded'\n                          : 'arrow_drop_up_rounded'\n}\n                      />\n                    </IconButton>\n                  </View>\n                )\n              }}\n              renderItem={({ item: { key, value } }) => (\n                <View\n                  style={{\n                    flexDirection: 'row',\n                    justifyContent: 'space-between',\n                    width: '100%',\n                    alignItems: 'center',\n                  }}\n                >\n                  <Typography\n                    variant=\"subtitle1\"\n                    style={{\n                      alignContent: 'center',\n                      flexDirection: 'row',\n                      width: '100%',\n                      wordWrap: 'break-word',\n                    }}\n                  >\n                    {`${key}${value ? ': ' : ''}`}\n                    {value\n                      ? (\n                        <Typography\n                          variant=\"subtitle1\"\n                          component={isValidURL(value) ? 'a' : 'span'}\n                          align=\"center\"\n                          href={value}\n                          target=\"_blank\"\n                          style={{ wordWrap: 'break-word' }}\n                        >\n                          {value}\n                        </Typography>\n                      )\n                      : null}\n                  </Typography>\n\n                </View>\n              )}\n            />\n          )\n      }\n\n            </View>\n          </AccordionDetails>\n        </Accordion>\n\n        )}\n        <Divider />\n        <ConnectedElements />\n        {\n        hasStatistics && (\n          <View\n            style={{\n              height: '30%',\n              width: '100%',\n            }}\n          >\n            {\n          networkStatistics.global && (\n            <GlobalNetworkStatistics\n              data={networkStatistics.global}\n              onEvent={onEvent}\n            />\n          )\n        }\n            <Divider />\n            {\n          networkStatistics.local && (\n            <LocalNetworkStatistics\n              data={networkStatistics.local}\n              onEvent={onEvent}\n            />\n          )\n        }\n          </View>\n        )\n      }\n        {FooterComponent && <FooterComponent />}\n      </View>\n\n      <IconButton\n        style={{\n          position: 'absolute',\n          left: -34,\n          top: 0,\n          fontSize: 24,\n        }}\n        onClick={() => {\n          onEvent({\n            type: EVENT.TOGGLE_DATA_BAR,\n            avoidHistoryRecording: true,\n          })\n        }}\n      >\n        <Icon\n          name=\"info_outlined\"\n        />\n      </IconButton>\n    </Paper>\n  )\n}\n\ntype EdgeElementSummaryProps = {\n  element: EdgeElement;\n}\nconst EdgeElementSummary = (props: EdgeElementSummaryProps) => {\n  const {\n    element,\n  } = props\n  const sourceId = element.source().id()\n  const targetId = element.target().id()\n  return (\n    <View>\n      <View style={{ flexDirection: 'row' }}>\n        <Typography variant=\"subtitle1\">source:</Typography>\n        <Typography>{` ${sourceId}`}</Typography>\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        <Typography variant=\"subtitle1\">target:</Typography>\n        <Typography>{` ${targetId}`}</Typography>\n      </View>\n    </View>\n  )\n}\n\nexport const isValidURL = (value: string) => {\n  let url\n  try {\n    url = new URL(value)\n  } catch (_) {\n    return false\n  }\n  return url.protocol === 'http:' || url.protocol === 'https:'\n}\n","import React from 'react'\nimport {\n  Modal,\n  Button,\n  Paper,\n} from '@mui/material'\nimport { FormProps } from '@rjsf/core'\nimport Form from '@rjsf/material-ui'\nimport * as R from 'colay/ramda'\nimport {\n  useGraphEditor,\n} from '@hooks'\nimport {\n  EVENT,\n} from '@constants'\n// import {\n//   View,\n// } from 'colay-ui'\n\nexport type ModalComponentProps = {\n  isOpen?: boolean;\n  render?: () => React.ReactElement;\n  form?: FormProps<any>\n  onClose?: () => void\n}\n\nexport const ModalComponent = (props: ModalComponentProps) => {\n  const {\n    isOpen = false,\n    render,\n    form,\n    onClose,\n    name,\n  } = props\n  const Component = render\n  const [\n    {\n      onEvent,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      onEvent: editor.onEvent,\n    }),\n  )\n  const onCloseCallback = React.useCallback(() => {\n    onClose?.()\n    onEvent({\n      type: EVENT.CLOSE_MODAL,\n      payload: {\n        name,\n      },\n    })\n  }, [onClose])\n  return (\n    <Modal\n      open={isOpen}\n      onClose={onCloseCallback}\n      onBackdropClick={onCloseCallback}\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      {\n      form\n        ? (\n          <Paper\n            style={{\n              maxWidth: '80%',\n              maxHeight: '90%',\n              overflow: 'scroll',\n              padding: 2,\n            }}\n          >\n            <Form\n              {...form}\n              schema={R.omit(['title'])(form.schema)}\n            >\n              {\n              form.children ?? (\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n              >\n                Apply\n              </Button>\n              )\n}\n            </Form>\n          </Paper>\n        )\n        : (\n          <>\n            {render?.({})}\n          </>\n        )\n      }\n\n    </Modal>\n  )\n}\n","import React from 'react'\nimport { getEventClientPosition } from '@utils'\n// import { Icon } from '@mui/material'\n\nexport type MouseIconProps = {\n  name?: string|null;\n  cursor?: boolean;\n}\n\nexport const MouseIcon = (props: MouseIconProps) => {\n  const {\n    name,\n    cursor = false,\n  } = props\n  const [, setState] = React.useState({\n    x: 0,\n    y: 0,\n  })\n  React.useEffect(() => {\n    const onMouseMove = (event: MouseEvent) => {\n      if (cursor) {\n        return\n      }\n      const position = getEventClientPosition(event)\n      setState({\n        x: position.x + 30,\n        y: position.y + 30,\n      })\n    }\n    document.addEventListener('mousemove', onMouseMove)\n    return () => {\n      document.removeEventListener('mousemove', onMouseMove)\n    }\n  }, [cursor])\n  React.useEffect(() => {\n    if (cursor) {\n      document.body.style.cursor = `url(${name}), auto`\n    }\n  }, [cursor, name])\n  return (\n    name && !cursor\n      ? (\n        <span>{name}</span>\n        // <Icon\n        //   style={{\n        //     position: 'absolute',\n        //     left: `${state.x}px`,\n        //     top: `${state.y}px`,\n        //   }}\n        // >\n        //   {name}\n        // </Icon>\n      )\n      : null\n  )\n}\n","import React from 'react'\nimport {\n  Modal,\n  Paper,\n  Typography,\n  Divider,\n  Slide,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Link,\n  Breadcrumbs,\n  Collapse,\n} from '@mui/material'\nimport { Icon } from '@components/Icon'\nimport { useGraphEditor } from '@hooks'\nimport { EVENT } from '@constants'\nimport { View, DataRender } from 'colay-ui'\nimport Form from '@rjsf/material-ui'\nimport ExpandLess from '@mui/icons-material/ExpandLess'\nimport ExpandMore from '@mui/icons-material/ExpandMore'\nimport * as R from 'colay/ramda'\n\ntype SidebarItemData = {\n  label: string;\n  items?: SidebarItemData[];\n  icon?: string;\n} | string\n\nexport type PreferencesModalProps = {\n  isOpen?: boolean;\n  sidebar?: SidebarItemData[];\n  components?: Record<string, React.ReactNode>;\n}\n\nexport const PreferencesModal = (props: PreferencesModalProps) => {\n  const {\n    isOpen = false,\n    sidebar = MOCK_SIDEBAR_DATA,\n    components = {},\n  } = props\n  const [\n    {\n      onEvent,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      onEvent: editor.onEvent,\n    }),\n  )\n  // @ts-ignore\n  const drawer = React.useMemo(() => createDrawer(sidebar), [sidebar, components])\n  return (\n    <Modal\n      open={isOpen}\n      onClose={() => onEvent({\n        type: EVENT.TOGGLE_PREFERENCES_MODAL,\n      })}\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Paper\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          width: '80vw',\n          height: '80vh',\n        }}\n      >\n        <View>\n          <Typography variant=\"h6\">Preferences</Typography>\n        </View>\n        <View\n          style={{\n            flexDirection: 'row',\n          }}\n        >\n          <View\n            style={{\n              // width: '30%',\n              marginRight: 4,\n              flexDirection: 'row',\n            }}\n          >\n            <Slide\n              in\n            >\n              {drawer}\n            </Slide>\n            <Divider\n              orientation=\"vertical\"\n              flexItem\n            />\n          </View>\n          <View>\n            <Breadcrumbs aria-label=\"breadcrumb\">\n              <Link\n                color=\"inherit\"\n                href=\"/\"\n              >\n                General\n              </Link>\n              <Typography color=\"text.primary\">UI</Typography>\n            </Breadcrumbs>\n            <Form\n              schema={{\n                type: 'object',\n                required: [\n                  'historyTabVisible',\n                  'playlistTabVisible',\n                ],\n                properties: {\n                  labelTextSize: {\n                    type: 'number',\n                    title: 'Label Text Size',\n                  },\n                  historyTabVisible: {\n                    type: 'boolean',\n                    title: 'History Tab Visible',\n                  },\n                  playlistTabVisible: {\n                    type: 'boolean',\n                    title: 'Playlist Tab Visible',\n                  },\n                },\n              }}\n              uiSchema={{\n                'ui:options': {\n                  label: false,\n                },\n              }}\n              // onSubmit={onSubmitCallback}\n            />\n          </View>\n        </View>\n      </Paper>\n    </Modal>\n  )\n}\n\nconst createDrawer = (sidebar: SidebarItemData[]) => (\n  <div>\n    {/* <Toolbar /> */}\n    <Divider />\n    <List>\n      <DataRender\n      // @ts-ignore\n        data={sidebar}\n        accessor={['items']}\n        renderItem={(params) => {\n          const {\n            children,\n          } = params\n          const item = params.item as unknown as SidebarItemData\n          return (\n            <SidebarItem\n              item={item}\n            >\n              {children}\n            </SidebarItem>\n          )\n        }}\n      />\n    </List>\n  </div>\n)\n\ntype SidebarItemProps = {\n  item: SidebarItemData;\n  children: React.ReactNode;\n}\nconst SidebarItem = (props: SidebarItemProps) => {\n  const {\n    children,\n    item: propItem,\n  } = props\n  const [open, setOpen] = React.useState(false)\n  const handleClick = () => {\n    setOpen(!open)\n  }\n  const item = (R.is(String)(propItem) ? {\n    label: propItem,\n  } : propItem) as Exclude<SidebarItemData, string>\n  const hasChildren = !!item.items\n  return (\n    <>\n      <ListItem\n        button\n        onClick={handleClick}\n        selected={!hasChildren && open}\n      >\n        <ListItemIcon>\n          {item.icon}\n        </ListItemIcon>\n        <ListItemText primary={item.label} />\n        {hasChildren ? (open ? <ExpandLess /> : <ExpandMore />) : null}\n      </ListItem>\n      <Collapse\n        in={open}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List\n          component=\"div\"\n          disablePadding\n          sx={{ ml: 2 }}\n        >\n          {children}\n        </List>\n      </Collapse>\n    </>\n  )\n}\n\nconst MOCK_SIDEBAR_DATA = [\n  {\n    icon: <Icon name=\"settings\" />,\n    label: 'General',\n    items: [\n      'UI',\n    ],\n  },\n  {\n    icon: <Icon name=\"bookmark\" />,\n    label: 'Bookmarks',\n    items: [\n      {\n        icon: <Icon name=\"filter\" />,\n        label: 'Filter',\n        items: [\n          'History',\n        ],\n      },\n      'Text',\n    ],\n  },\n]\n","import {\n  Button,\n  CircularProgress, Modal,\n  Paper, Typography, CircularProgressProps,\n} from '@mui/material'\nimport { TimeoutManager } from '@utils/TimeoutManager'\nimport { View } from 'colay-ui'\nimport React from 'react'\n\ntype EventsModalProps = {\n  timeoutManager: TimeoutManager\n  onClose: () => void\n}\nexport const RecordedEventsModal = (props: EventsModalProps) => {\n  const {\n    timeoutManager,\n    onClose,\n  } = props\n  const isOpen = !timeoutManager.finished\n  const [state, setState] = React.useState({\n    alert: {\n      visible: false,\n    },\n  })\n  const currentTimer = timeoutManager.timers?.[timeoutManager.currentIndex]\n  const {\n    duration,\n    totalDuration,\n    currentIndex,\n    paused,\n    timeoutInstances,\n  } = timeoutManager\n  return (\n    <Modal\n      open={isOpen}\n    // onClose={onClose}\n      style={{\n        display: 'flex',\n        flexDirection: 'column-reverse',\n      }}\n      BackdropProps={{\n        style: {\n          backgroundColor: 'rgba(0, 0, 0, 0)',\n        },\n        onClick: () => {\n          setState({\n            ...state,\n            alert: {\n              ...state.alert,\n              visible: true,\n            },\n          })\n          setTimeout(() => {\n            setState({\n              ...state,\n              alert: {\n                ...state.alert,\n                visible: false,\n              },\n            })\n          }, 1500)\n        },\n      }}\n    >\n      <Paper style={{\n        display: 'flex',\n        flexDirection: 'column',\n      }}\n      >\n        <View style={{\n          flexDirection: 'row',\n          justifyContent: 'space-between',\n        }}\n        >\n          <Typography variant=\"h6\">Play Events</Typography>\n          {state.alert.visible && (\n          <Typography\n            variant=\"h6\"\n            color=\"error\"\n          >\n            You cannot take action while the events are playing\n          </Typography>\n          )}\n        </View>\n\n        <View\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n          }}\n        >\n          <View style={{ flexDirection: 'row' }}>\n            <Button\n              color={paused ? 'primary' : 'secondary'}\n              onClick={() => {\n                paused\n                  ? timeoutManager.start()\n                  : timeoutManager.pause()\n              }}\n            >\n              {paused ? 'Play' : 'Pause'}\n            </Button>\n            <Button\n              color=\"secondary\"\n              onClick={() => {\n                onClose()\n              }}\n            >\n              Close\n            </Button>\n          </View>\n          <Typography variant=\"subtitle1\">\n            {`Current Event: ${currentTimer?.type}`}\n          </Typography>\n          <View\n            style={{\n              flexDirection: 'row',\n              height: '100%',\n              alignItems: 'center',\n            }}\n          >\n            <Typography variant=\"subtitle2\">{`Events: ${currentIndex} / ${timeoutInstances.length}`}</Typography>\n            <CircularProgressWithLabel\n              value={\n            (duration / totalDuration) * 100\n          }\n            />\n          </View>\n\n        </View>\n      </Paper>\n    </Modal>\n  )\n}\n\nfunction CircularProgressWithLabel(props: CircularProgressProps) {\n  return (\n    <View>\n      <CircularProgress\n        variant=\"determinate\"\n        {...props}\n      />\n      <View\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Typography\n          variant=\"caption\"\n          component=\"div\"\n          color=\"textSecondary\"\n        >\n          {`${Math.round(\n            props.value!,\n          )}%`}\n\n        </Typography>\n      </View>\n    </View>\n  )\n}\n\n// <View\n//   style={{\n//     width: 200,\n//   }}\n// >\n//   <Typography\n//     style={{\n//       left: '-100%',\n//       width: '200%',\n//       whiteSpace: 'nowrap',\n//       position: 'relative',\n//       overflow: 'hidden', /* Required to make ellipsis work */\n//       textOverflow: 'ellipsis',\n//       '-webkit-transition': 'left 3s, width 3s',\n//       '-moz-transition': 'left 3s, width 3s',\n//       transition: 'left 3s, width 3s',\n//     }}\n//   >\n//     {JSON.stringify(currentTimer?.data)}\n//   </Typography>\n// </View>\n","import React from 'react'\nimport * as R from 'colay/ramda'\nimport {\n  DragDropContext,\n  Droppable, Draggable,\n  DropResult,\n  DraggableProvided,\n  DraggableStateSnapshot,\n  DraggableRubric,\n  DroppableProvided,\n  DroppableStateSnapshot,\n} from 'react-beautiful-dnd'\n\n// const grid = 8\n\n// const getItemStyle = (isDragging: boolean, draggableStyle: any) => ({\n//   // some basic styles to make the items look a bit nicer\n//   userSelect: 'none',\n//   padding: grid * 2,\n//   margin: `0 0 ${grid}px 0`,\n\n//   // change background colour if dragging\n//   background: isDragging ? 'lightgreen' : 'grey',\n\n//   // styles we need to apply on draggables\n//   ...draggableStyle,\n// })\n\n// const getListStyle = (isDraggingOver: boolean) => ({\n//   background: isDraggingOver ? 'lightblue' : 'lightgrey',\n//   padding: grid,\n//   width: 250,\n// })\n\nexport type SortableListProps<T> = {\n  onReorder?: (result: DropResult) => void\n  onDragEnd?: (result: DropResult) => void\n  data: T[]\n  renderItem: (props: {\n    item: T;\n    index: number;\n    provided: DraggableProvided;\n    snapshot: DraggableStateSnapshot;\n    rubric: DraggableRubric;\n    droppableProvided: DroppableProvided;\n    droppableSnapshot: DroppableStateSnapshot\n  }) => React.ReactNode;\n  // renderContainer: (props: {})\n}\n\nexport const SortableList = <T extends { id: string }>(props: SortableListProps<T>) => {\n  const {\n    onReorder,\n    onDragEnd,\n    data = [],\n    renderItem,\n  } = props\n  const droppableId = React.useMemo(() => R.uuid(), [])\n  return (\n    <DragDropContext onDragEnd={(result) => {\n      onDragEnd?.(result)\n      if (!result.destination && (result.destination!.index === result.source.index)) {\n        return\n      }\n      onReorder?.(result)\n    }}\n    >\n      <Droppable droppableId={droppableId}>\n        {(droppableProvided, droppableSnapshot) => (\n          <div\n            {...droppableProvided.droppableProps}\n            ref={droppableProvided.innerRef}\n          >\n            {\n              data.map((item, index) => (\n                <Draggable\n                  key={item.id}\n                  draggableId={item.id}\n                  index={index}\n                >\n                  {\n                  // @ts-ignore\n                  (provided, snapshot, rubric) => renderItem({\n                    item,\n                    index,\n                    provided,\n                    snapshot,\n                    rubric,\n                    droppableProvided,\n                    droppableSnapshot,\n                  })\n}\n                  {/* {(provided, snapshot) => (\n                    <div\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                      {...provided.dragHandleProps}\n                    >\n                      {child}\n                    </div>\n                  )} */}\n                </Draggable>\n              ))\n            }\n            {droppableProvided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  )\n}\n","import React from 'react'\nimport { Icon, IconProps } from '@components/Icon'\nimport { SpeedDial, SpeedDialAction } from '@mui/material'\nimport {\n  View,\n} from 'colay-ui'\n\nconst ICON_SIZE = 24\n\ntype Action = {\n  name: string;\n  icon: Omit<IconProps, 'name'> & { name: string };\n  onClick: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n}\nexport type SpeedDialCreatorProps = {\n  actions: Action[];\n}\n\nexport const SpeedDialCreator = (props: SpeedDialCreatorProps) => {\n  const {\n    actions,\n  } = props\n\n  return (\n    <View\n      style={{\n        width: ICON_SIZE,\n        height: ICON_SIZE,\n      }}\n    >\n      <SpeedDial\n        ariaLabel=\"SpeedDial basic example\"\n        icon={(\n          <Icon\n            name=\"settings\"\n            style={{ fontSize: ICON_SIZE - 4 }}\n          />\n)}\n        FabProps={{\n          style: {\n            width: ICON_SIZE,\n            height: ICON_SIZE,\n            minWidth: ICON_SIZE,\n            minHeight: ICON_SIZE,\n\n          },\n          color: 'inherit',\n        }}\n        style={{\n          width: ICON_SIZE,\n          height: ICON_SIZE,\n        }}\n        direction=\"left\"\n      >\n        {\n         actions.map((action) => {\n           const {\n             icon,\n             name,\n             onClick,\n           } = action\n           return (\n             // @ts-ignore\n             <SpeedDialAction\n               key={name}\n               tooltipTitle={name}\n               tooltipPlacement=\"bottom\"\n               onClick={(e) => {\n                 e.stopPropagation()\n                 onClick?.(e)\n               }}\n               {...icon}\n               icon={(\n                 // @ts-ignore\n                 <Icon {...icon} />\n                )}\n             />\n           )\n         })\n                              }\n      </SpeedDial>\n    </View>\n  )\n}\n","import React from 'react'\nimport { Box } from '@mui/material'\n\nexport type TabPanelProps = {\n  children: React.ReactNode;\n  value: number;\n  index: number;\n}\nexport const  TabPanel = (props: TabPanelProps) => {\n  const { children, value, index, ...rest } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...rest}\n    >\n      {value === index && (\n        <Box>\n          {children}\n        </Box>\n      )}\n    </div>\n  );\n}\n","import { EVENT } from '@constants'\nimport { Clusters } from '@core/clusters'\nimport { useGraphEditor } from '@hooks'\nimport {\n  InputLabel, MenuItem, Select\n} from '@mui/material'\nimport Form from '@rjsf/material-ui'\nimport {\n  View\n} from 'colay-ui'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\nimport React from 'react'\n\nexport type CreateClusterByAlgorithmProps = {\n  onSubmit: () => void\n}\nconst CLUSTER_ALGORITHM_NAMES = Object.keys(Clusters)\n\nexport const CreateClusterByAlgorithm = (props: CreateClusterByAlgorithmProps) => {\n  const {\n    onSubmit,\n  } = props\n  const [\n    {\n      onEvent,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      onEvent: editor.onEvent,\n    }),\n  )\n  const [state, updateState] = useImmer({\n    selectedClusterName: CLUSTER_ALGORITHM_NAMES[0],\n  })\n  return (\n    <View\n      style={{\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      <InputLabel id=\"create-cluster-by-algorithm-label\">Age</InputLabel>\n      <Select\n        labelId=\"create-cluster-by-algorithm-label\"\n        value={state.selectedClusterName}\n        onChange={(e) => updateState((draft) => {\n          draft.selectedClusterName = e.target.value\n        })}\n      >\n        {CLUSTER_ALGORITHM_NAMES.map((clusterName) => (\n          <MenuItem\n            key={clusterName}\n            value={clusterName}\n          >\n            {clusterName}\n          </MenuItem>\n        ))}\n      </Select>\n      <Form\n        onSubmit={(event) => {\n          // updateState((draft) => {\n          //   draft.formData = event.formData\n          //   draft.createClusterDialog.visible = true\n          // })\n          // onEvent({\n          //   type: EVENT.CREATE_CLUSTER_BY_ALGORITHM,\n          //   payload: {\n          //     config: event.formData,\n          //     name: state.selectedClusterName,\n          //   },\n          // })\n          onEvent({\n            type: EVENT.CREATE_CLUSTER_BY_ALGORITHM_FORM_SUBMIT,\n            payload: {\n              config: event.formData,\n              name: state.selectedClusterName,\n            },\n          })\n          onSubmit()\n        }}\n        schema={Clusters[state.selectedClusterName].configSchema}\n      />\n    </View>\n  )\n}\n","import { Icon } from '@components/Icon'\nimport { SortableList } from '@components/SortableList'\nimport { SpeedDialCreator } from '@components/SpeedDialCreator'\nimport { TabPanel } from '@components/TabPanel'\nimport { EDITOR_MODE, EVENT } from '@constants'\nimport { useGraphEditor } from '@hooks'\nimport { GraphEditorContext } from '@hooks/useGraphEditor'\nimport { Cluster } from '@type'\nimport {\n  Button,\n  Card, Checkbox,\n  Dialog, DialogTitle, IconButton, List,\n  ListItem, ListItemAvatar, ListItemSecondaryAction,\n  ListItemText, Menu,\n  MenuItem, TextField, Typography,\n} from '@mui/material'\nimport Accordion from '@mui/material/Accordion'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport { FormProps } from '@rjsf/core'\nimport Form from '@rjsf/material-ui'\nimport {\n  useDisclosure, View,\n} from 'colay-ui'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\nimport * as R from 'colay/ramda'\nimport React from 'react'\nimport { CreateClusterByAlgorithm } from './CreateClusterByAlgorithm'\n\nexport type ClusterTableProps = {\n  // onSelectAllClusters: (checked: boolean) => void\n  // onSelectCluster: (cluster: Cluster, checked: boolean) => void\n  createClusterForm?: FormProps<any>;\n}\n\nexport const ClusterTable = (props: ClusterTableProps) => {\n  const {\n    // onSelectAllClusters,\n    // onSelectCluster,\n    createClusterForm = { schema: { } },\n  } = props\n  const [\n    {\n      onEvent,\n      clusters = [],\n      editorMode,\n      graphEditorLocalDataRef,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      clusters: editor.graphConfig?.clusters,\n      onEvent: editor.onEvent,\n      graphEditorLocalDataRef: editor.localDataRef,\n      editorMode: editor.mode,\n    }),\n  )\n  const [state, updateState] = useImmer({\n    expanded: true,\n    selectedClusterIds: [] as string[],\n    currentTab: 0,\n    formData: {},\n    createClusterDialog: {\n      name: '',\n      visible: false,\n    },\n  })\n  const hasSelected = state.selectedClusterIds.length > 0\n  const {\n    anchorEl,\n    isOpen,\n    onClose,\n    onOpen,\n  } = useDisclosure({})\n  return (\n    <>\n      <Accordion\n        expanded={state.expanded}\n        onChange={(e, expanded) => updateState((draft) => {\n          draft.expanded = expanded\n        })}\n      >\n        <AccordionSummary\n          aria-controls=\"panel1a-content\"\n        >\n          <View\n            style={{\n              width: '100%',\n            }}\n          >\n            <View\n              style={{\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                width: '100%',\n              }}\n            >\n              <View\n                style={{\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                }}\n              >\n                <Typography\n                  variant=\"h6\"\n                >\n                  Clusters\n                </Typography>\n              </View>\n              <IconButton\n                onClick={(e) => {\n                  e.stopPropagation()\n                  // @ts-ignore\n                  onOpen(e)\n                }}\n              >\n                <Icon\n                  color={state.currentTab === 0 ? 'inherit' : 'secondary'}\n                  name={state.currentTab === 0 ? 'add_circle' : 'close'}\n                />\n              </IconButton>\n              <Menu\n                anchorEl={anchorEl}\n                open={isOpen}\n                onClose={onClose}\n                // style={{ width: 400 }}\n              >\n                {\n                  state.currentTab !== 0 && (\n                    <MenuItem\n                      // key=\"Close\"\n                    // selected={index === selectedIndex}\n                      onClick={(event) => {\n                        event.stopPropagation()\n                        updateState((draft) => {\n                          draft.currentTab = 0\n                        })\n                        onClose()\n                      }}\n                    >\n                      Close\n                    </MenuItem>\n                  )\n                }\n                <MenuItem\n                  // key=\"By Filter\"\n                  selected={state.currentTab === 1}\n                  onClick={(event) => {\n                    event.stopPropagation()\n                    updateState((draft) => {\n                      draft.currentTab = 1\n                      draft.expanded = true\n                    })\n                    onClose()\n                  }}\n                >\n                  By Filter\n                </MenuItem>\n                <MenuItem\n                  // key=\"By Algorithm\"\n                  selected={state.currentTab === 2}\n                  onClick={(event) => {\n                    event.stopPropagation()\n                    updateState((draft) => {\n                      draft.currentTab = 2\n                      draft.expanded = true\n                    })\n                    onClose()\n                  }}\n                >\n                  By Algorithm\n                </MenuItem>\n              </Menu>\n            </View>\n            {\n            state.expanded && hasSelected && (\n              <Card\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  height: 32,\n                  width: '100%',\n                }}\n              >\n                <ListItem>\n                  <Checkbox\n                    onClick={(e) => e.stopPropagation()}\n                    checked={!R.isEmpty(state.selectedClusterIds)\n               && state.selectedClusterIds.length === clusters.length}\n                    onChange={(event) => {\n                      const {\n                        checked,\n                      } = event.target\n                      updateState((draft) => {\n                        if (checked) {\n                          draft.selectedClusterIds = clusters.map((cluster) => cluster.id)\n                        } else {\n                          draft.selectedClusterIds = []\n                        }\n                      })\n                    }}\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                  />\n                  <IconButton\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      onEvent({\n                        type: EVENT.DELETE_CLUSTER,\n                        payload: {\n                          itemIds: state.selectedClusterIds,\n                        },\n                      })\n                      updateState((draft) => {\n                        draft.selectedClusterIds = []\n                      })\n                    }}\n                  >\n                    <Icon\n                      name=\"delete_rounded\"\n                    />\n                  </IconButton>\n                </ListItem>\n              </Card>\n            )\n          }\n          </View>\n\n        </AccordionSummary>\n        <AccordionDetails>\n          <TabPanel\n            value={state.currentTab}\n            index={0}\n          >\n            {\n          clusters.length === 0 && (\n            <Typography>\n              Let's create a Cluster.\n            </Typography>\n          )\n        }\n            <List dense>\n              <SortableList\n                onReorder={(result) => {\n                  onEvent({\n                    type: EVENT.REORDER_CLUSTER,\n                    payload: {\n                      fromIndex: result.source.index,\n                      toIndex: result.destination!.index,\n                    },\n                  })\n                }}\n                data={clusters}\n                renderItem={({\n                  provided,\n                  item: cluster,\n                  // index,\n                }) => {\n                  const { ids: elementIds, id, name } = cluster\n                  return (\n                    <Accordion\n                      key={id}\n                      ref={provided.innerRef}\n                      {...provided.draggableProps}\n                    >\n                      <AccordionSummary\n                        aria-controls=\"panel1a-content\"\n                      >\n                        <View\n                          style={{\n                            flexDirection: 'row',\n                            justifyContent: 'space-between',\n                            alignItems: 'center',\n                            width: '100%',\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: 'row',\n                              alignItems: 'center',\n                            }}\n                          >\n                            <Checkbox\n                              onClick={(e) => e.stopPropagation()}\n                              checked={state.selectedClusterIds.includes(cluster.id)}\n                              onChange={(e) => {\n                                const { checked } = e.target\n                                updateState((draft) => {\n                                  if (checked) {\n                                    draft.selectedClusterIds.push(cluster.id)\n                                  } else {\n                                    draft.selectedClusterIds = draft.selectedClusterIds.filter(\n                                      (id) => id !== cluster.id,\n                                    )\n                                  }\n                                })\n                              }}\n                              inputProps={{ 'aria-label': 'primary checkbox' }}\n                            />\n                            <Typography\n                              variant=\"h6\"\n                            >\n                              {name}\n                            </Typography>\n                          </View>\n\n                          <View\n                            style={{\n                              flexDirection: 'row',\n                              alignItems: 'center',\n                            }}\n                          >\n                            <SpeedDialActionsView\n                              graphEditorLocalDataRef={graphEditorLocalDataRef}\n                              editorMode={editorMode}\n                              onEvent={onEvent}\n                              item={cluster}\n                            />\n                            <IconButton\n                              edge=\"end\"\n                              disableFocusRipple\n                              disableRipple\n                              disableTouchRipple\n                              {...provided.dragHandleProps}\n                            >\n                              <Icon name=\"drag_handle\" />\n                            </IconButton>\n                          </View>\n                        </View>\n                      </AccordionSummary>\n                      <AccordionDetails>\n                        {\n                        elementIds.map((elementId) => (\n                          <ListItem\n                            key={elementId}\n                          >\n                            <ListItemAvatar>\n                              <Checkbox\n                                // checked={selectedClustersIds.includes(id)}\n                                // onChange={(_, checked) => {\n                                //   onSelectCluster(cluster, checked)\n                                // }}\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\n                                onClick={(e) => e.stopPropagation()}\n                              />\n                            </ListItemAvatar>\n                            <ListItemText\n                              primary={R.take(10)(elementId)}\n                            />\n                            <ListItemSecondaryAction>\n                              <IconButton\n                                edge=\"end\"\n                                aria-label=\"select\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  onEvent({\n                                    type: EVENT.ELEMENT_SELECTED,\n                                    payload: {\n                                      itemIds: [elementId]\n                                    },\n                                    avoidHistoryRecording: true,\n                                  })\n                                }}\n                              >\n                                <Icon name=\"my_location\" />\n                              </IconButton>\n                              <IconButton\n                                edge=\"end\"\n                                aria-label=\"delete\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                  onEvent({\n                                    type: EVENT.DELETE_CLUSTER_ELEMENT,\n                                    payload: {\n                                      itemIds: [elementId],\n                                      clusterId: cluster.id,\n                                    },\n                                  })\n                                }}\n                              >\n                                <Icon name=\"delete_rounded\" />\n                              </IconButton>\n                            </ListItemSecondaryAction>\n                          </ListItem>\n                        ))\n                      }\n                      </AccordionDetails>\n                    </Accordion>\n                  )\n                }}\n              />\n            </List>\n          </TabPanel>\n          <TabPanel\n            value={state.currentTab}\n            index={1}\n          >\n            <Form\n              onSubmit={(event) => {\n                updateState((draft) => {\n                  draft.formData = event.formData\n                  draft.createClusterDialog.visible = true\n                })\n              }}\n              {...createClusterForm}\n            />\n          </TabPanel>\n          <TabPanel\n            value={state.currentTab}\n            index={2}\n          >\n            <CreateClusterByAlgorithm\n              onSubmit={() => {\n                updateState((draft) => {\n                  draft.currentTab = 0\n                })\n              }}\n            />\n          </TabPanel>\n        </AccordionDetails>\n      </Accordion>\n      <Dialog\n        onClose={() => updateState((draft) => {\n          draft.createClusterDialog.visible = false\n        })}\n        aria-labelledby=\"create-playlist-dialog-title\"\n        open={state.createClusterDialog.visible}\n      >\n        <DialogTitle id=\"create-playlist-dialog-title\">Create Cluster</DialogTitle>\n        <View\n          style={{\n            width: '50%',\n            padding: 10,\n            justifyContent: 'center',\n          }}\n        >\n          <TextField\n            style={{\n              marginBottom: 10,\n              width: '50vw',\n            }}\n            fullWidth\n            label=\"name\"\n            value={state.createClusterDialog.name}\n            onChange={({ target: { value } }) => updateState((draft) => {\n              draft.createClusterDialog.name = value\n            })}\n          />\n          <Button\n            fullWidth\n            onClick={() => {\n              updateState((draft) => {\n                draft.currentTab = 0\n                draft.createClusterDialog.name = ''\n                draft.createClusterDialog.visible = false\n              })\n              onEvent({\n                type: EVENT.CREATE_CLUSTER_FORM_SUBMIT,\n                payload: {\n                  formData: state.formData,\n                  name: state.createClusterDialog.name,\n                },\n              })\n            }}\n          >\n            Create\n          </Button>\n        </View>\n      </Dialog>\n    </>\n  )\n}\n\ntype SpeedDialActionsViewProps = {\n  graphEditorLocalDataRef: GraphEditorContext['localDataRef'];\n  editorMode: GraphEditorContext['mode'];\n  onEvent: GraphEditorContext['onEvent'];\n  item: Cluster;\n}\n\nconst SpeedDialActionsView = (props: SpeedDialActionsViewProps) => {\n  const {\n    item: cluster,\n    editorMode,\n    onEvent,\n    graphEditorLocalDataRef,\n  } = props\n\n  return (\n    <SpeedDialCreator\n      actions={[\n        {\n          name: 'Delete',\n          icon: {\n            name: 'delete_rounded',\n          },\n          onClick: (e) => {\n            e.stopPropagation()\n            onEvent({\n              type: EVENT.DELETE_CLUSTER,\n              payload: {\n                itemIds: [cluster.id],\n              },\n            })\n          },\n        },\n        {\n          name: cluster.visible === false ? 'Visible' : 'Invisible',\n          icon: {\n            name: cluster.visible === false ? 'unfold_more' : 'unfold_less',\n          },\n          onClick: (e) => {\n            e.stopPropagation()\n            onEvent({\n              type: EVENT.CHANGE_CLUSTER_VISIBILITY,\n              payload: {\n                clusterId: cluster.id,\n                value: cluster.visible === false,\n              },\n            })\n          },\n        },\n        {\n          name: 'Select',\n          icon: {\n            name: 'beenhere',\n          },\n          onClick: (e) => {\n            e.stopPropagation()\n            onEvent({\n              type: EVENT.SELECT_CLUSTER,\n              payload: {\n                itemIds: [cluster.id],\n              },\n            })\n          },\n        },\n        {\n          name: 'Add',\n          icon: {\n            name: 'add_circle',\n            color: editorMode === EDITOR_MODE.ADD_CLUSTER_ELEMENT\n        && graphEditorLocalDataRef.current?.issuedClusterId === cluster.id\n              ? 'primary' : 'inherit',\n          },\n          onClick: (e) => {\n            e.stopPropagation()\n            onEvent({\n              type: EVENT.PRESS_ADD_CLUSTER_ELEMENT,\n              payload: {\n                clusterId: cluster.id,\n              },\n            })\n          },\n        },\n      ]}\n    />\n  )\n}\n","import { Icon } from '@components/Icon'\nimport { SortableList } from '@components/SortableList'\nimport { SpeedDialCreator } from '@components/SpeedDialCreator'\nimport { EVENT } from '@constants'\nimport { useGraphEditor } from '@hooks'\nimport {\n  Card, Checkbox, IconButton, List,\n  ListItem, ListItemAvatar, ListItemText, Typography,\n} from '@mui/material'\nimport Accordion from '@mui/material/Accordion'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport {\n  View,\n  wrapComponent,\n} from 'colay-ui'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\nimport * as R from 'colay/ramda'\nimport React from 'react'\n\nexport type EventHistoryTableProps = {\n  onCreatePlaylistClick: (selectedEventIds: string[]) => void;\n}\n\nconst EventHistoryTableElement = (props: EventHistoryTableProps) => {\n  const {\n    onCreatePlaylistClick,\n  } = props\n  const [state, updateState] = useImmer({\n    expanded: false,\n    selectedEventIds: [] as string[],\n  })\n  const hasSelected = state.selectedEventIds.length > 0\n  const [\n    {\n      onEvent,\n      eventHistory,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      onEvent: editor.onEvent,\n      eventHistory: editor.eventHistory,\n    }),\n  )\n  return (\n    <View\n      style={{\n        // @ts-ignore\n        overflowY: 'auto',\n        overflowX: 'hidden',\n        // paddingRight: 10,\n        // paddingLeft: 10,\n        height: '100%',\n        width: '100%',\n      }}\n    >\n      <Accordion\n        expanded={state.expanded}\n        onChange={(e, expanded) => updateState((draft) => {\n          draft.expanded = expanded\n        })}\n      >\n        <AccordionSummary\n          aria-controls=\"panel1a-content\"\n        >\n          <View\n            style={{\n              width: '100%',\n            }}\n          >\n            <View\n              style={{\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                width: '100%',\n              }}\n            >\n              <View\n                style={{\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                }}\n              >\n                <Typography\n                  variant=\"h6\"\n                >\n                  History\n                </Typography>\n              </View>\n              <View\n                style={{\n                // alignItems: 'space-between',\n                  flexDirection: 'row',\n                }}\n              >\n                <IconButton\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    onEvent({\n                      type: EVENT.UNDO_EVENT,\n                      avoidEventRecording: true,\n                      avoidHistoryRecording: true,\n                    })\n                  }}\n                >\n                  <Icon\n                    name=\"keyboard_arrow_down\"\n                  />\n                </IconButton>\n                <IconButton\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    onEvent({\n                      type: EVENT.REDO_EVENT,\n                      avoidEventRecording: true,\n                      avoidHistoryRecording: true,\n                    })\n                  }}\n                >\n                  <Icon\n                    name=\"keyboard_arrow_up\"\n                  />\n                </IconButton>\n              </View>\n            </View>\n            {\n              state.expanded && hasSelected && (\n                <Card\n                  style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    height: 32,\n                    width: '100%',\n                  }}\n                >\n                  <ListItem>\n                    <Checkbox\n                      checked={!R.isEmpty(state.selectedEventIds)\n             && state.selectedEventIds.length === eventHistory!.events.length}\n                      onChange={(e) => {\n                        const { checked } = e.target\n                        updateState((draft) => {\n                          if (checked) {\n                            draft.selectedEventIds = eventHistory!.events.map((event) => event.id)\n                          } else {\n                            draft.selectedEventIds = []\n                          }\n                        })\n                      }}\n                      onClick={(e) => e.stopPropagation()}\n                      inputProps={{ 'aria-label': 'primary checkbox' }}\n                    />\n                    <IconButton\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        onCreatePlaylistClick(state.selectedEventIds)\n                        updateState((draft) => {\n                          draft.selectedEventIds = []\n                        })\n                      }}\n                    >\n                      <Icon\n                        name=\"playlist_add\"\n                      />\n                    </IconButton>\n                    <IconButton\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        onEvent({\n                          type: EVENT.DELETE_HISTORY_ITEM,\n                          payload: {\n                            itemIds: state.selectedEventIds,\n                          },\n                        })\n                        updateState((draft) => {\n                          draft.selectedEventIds = []\n                        })\n                      }}\n                    >\n                      <Icon\n                        name=\"delete_rounded\"\n                      />\n                    </IconButton>\n                  </ListItem>\n                </Card>\n              )\n            }\n          </View>\n        </AccordionSummary>\n        <AccordionDetails>\n          {\n          eventHistory!.events.length === 0 && (\n            <Typography>\n              Let's do a few things.\n            </Typography>\n          )\n        }\n          <List dense>\n            <SortableList\n              onReorder={(result) => {\n                const { length } = eventHistory!.events\n                onEvent({\n                  type: EVENT.REORDER_HISTORY_ITEM,\n                  payload: {\n                    fromIndex: length - result.source.index - 1,\n                    toIndex: length - result.destination!.index! - 1,\n                  },\n                })\n              }}\n              data={R.reverse(eventHistory!.events)}\n              renderItem={({\n                provided,\n                item: event,\n                index,\n              }) => {\n                const { length } = eventHistory!.events\n                return (\n                  <ListItem\n                    key={event.id}\n                    selected={eventHistory!.currentIndex === (length - 1) - index}\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                  >\n                    <ListItemAvatar>\n                      <Checkbox\n                        checked={state.selectedEventIds.includes(event.id)}\n                        onChange={(e) => {\n                          const { checked } = e.target\n                          updateState((draft) => {\n                            if (checked) {\n                              draft.selectedEventIds.push(event.id)\n                            } else {\n                              draft.selectedEventIds = draft.selectedEventIds.filter((id) => id !== event.id)\n                            }\n                          })\n                        }}\n                        inputProps={{ 'aria-label': 'primary checkbox' }}\n                      />\n                    </ListItemAvatar>\n                    <ListItemText\n                      primary={event.type}\n                    />\n                    <View\n                      style={{\n                        display: 'flex',\n                        flexDirection: 'row',\n                        alignItems: 'center',\n\n                      }}\n                    >\n                      <SpeedDialCreator\n                        actions={[\n                          {\n                            name: 'Redo',\n                            icon: {\n                              name: 'navigate_next',\n                            },\n                            onClick: (e) => onEvent({\n                              type: EVENT.APPLY_EVENTS,\n                              payload: {\n                                events: [{\n                                  ...event,\n                                  avoidEventRecording: true,\n                                  avoidHistoryRecording: true,\n                                }],\n                              },\n                            }),\n                          },\n                          {\n                            name: 'Undo',\n                            icon: {\n                              name: 'navigate_before',\n                            },\n                            onClick: () => onEvent({\n                              type: EVENT.APPLY_EVENTS,\n                              payload: {\n                                events: [{\n                                  ...eventHistory!.undoEvents[index],\n                                  avoidEventRecording: true,\n                                  avoidHistoryRecording: true,\n                                }],\n                              },\n                            }),\n                          },\n                          {\n                            name: 'Delete',\n                            icon: {\n                              name: 'delete_rounded',\n                            },\n                            onClick: () => onEvent({\n                              type: EVENT.DELETE_HISTORY_ITEM,\n                              payload: {\n                                itemIds: [event.id],\n                              },\n                              avoidEventRecording: true,\n                              avoidHistoryRecording: true,\n                            }),\n                          },\n                        ]}\n                      />\n                      <IconButton\n                        edge=\"end\"\n                        disableFocusRipple\n                        disableRipple\n                        disableTouchRipple\n                        {...provided.dragHandleProps}\n                      >\n                        <Icon name=\"drag_handle\" />\n                      </IconButton>\n                    </View>\n                  </ListItem>\n                )\n              }}\n            />\n          </List>\n        </AccordionDetails>\n      </Accordion>\n    </View>\n  )\n}\n\nexport const EventHistoryTable = wrapComponent<EventHistoryTableProps>(EventHistoryTableElement, {})\n","import { Icon } from '@components/Icon'\nimport { SortableList } from '@components/SortableList'\nimport { SpeedDialCreator } from '@components/SpeedDialCreator'\nimport {\n  EVENT,\n} from '@constants'\nimport {\n  useGraphEditor,\n} from '@hooks'\nimport {\n  Button,\n  Card, Checkbox,\n  Dialog,\n  DialogTitle, IconButton, List,\n  ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText, TextField, Typography,\n} from '@mui/material'\nimport Accordion from '@mui/material/Accordion'\nimport AccordionDetails from '@mui/material/AccordionDetails'\nimport AccordionSummary from '@mui/material/AccordionSummary'\nimport {\n  View,\n} from 'colay-ui'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\nimport * as R from 'colay/ramda'\nimport React from 'react'\n\nexport type EventHistoryTableProps = {\n  isOpen?: boolean;\n  // onPlay: (playlist: Playlist) => void\n  createPlaylistDialog: {\n    visible: boolean;\n    onClose: () => void;\n  }\n  onCreatePlaylist: (param: {\n    id: string;\n    name: string;\n  }) => void\n}\n\n// onSelectPlaylist={(playlist, checked) => {\n//   updateState((draft) => {\n//     if (checked) {\n//       draft.selectedPlaylistIds.push(playlist.id)\n//     } else {\n//       draft.selectedPlaylistIds = draft.selectedPlaylistIds.filter(\n//         (id) => id !== playlist.id,\n//       )\n//     }\n//   })\n// }}\n// selectedPlaylistIds={state.selectedPlaylistIds}\n\nexport const PlaylistTable = (props: EventHistoryTableProps) => {\n  const {\n    createPlaylistDialog,\n    onCreatePlaylist,\n  } = props\n  const [\n    {\n      onEvent,\n      playlists = [],\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      onEvent: editor.onEvent,\n      playlists: editor.playlists,\n    }),\n  )\n  const [state, updateState] = useImmer({\n    expanded: false,\n    createPlaylistDialog: {\n      name: '',\n    },\n    selectedPlaylistIds: [] as string[],\n  })\n  const hasSelected = state.selectedPlaylistIds.length > 0\n  return (\n    <>\n      <Accordion\n        expanded={state.expanded}\n        onChange={(e, expanded) => updateState((draft) => {\n          draft.expanded = expanded\n        })}\n      >\n        <AccordionSummary\n          aria-controls=\"panel1a-content\"\n        >\n          <View\n            style={{\n              width: '100%',\n            }}\n          >\n            <View\n              style={{\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                width: '100%',\n              }}\n            >\n              <View\n                style={{\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                }}\n              >\n                <Typography\n                  variant=\"h6\"\n                >\n                  Playlists\n                </Typography>\n              </View>\n            </View>\n            {\n            state.expanded && hasSelected && (\n              <Card\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  height: 32,\n                  width: '100%',\n                }}\n              >\n                <ListItem>\n                  <Checkbox\n                    onClick={(e) => e.stopPropagation()}\n                    checked={!R.isEmpty(state.selectedPlaylistIds)\n               && state.selectedPlaylistIds.length === playlists.length}\n                    onChange={(e) => {\n                      const { checked } = e.target\n                      updateState((draft) => {\n                        if (checked) {\n                          draft.selectedPlaylistIds = playlists.map((playlist) => playlist.id)\n                        } else {\n                          draft.selectedPlaylistIds = []\n                        }\n                      })\n                    }}\n                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                  />\n                  <IconButton\n                    onClick={(e) => {\n                      e.stopPropagation()\n                      updateState((draft) => {\n                        draft.selectedPlaylistIds = []\n                      })\n                      onEvent({\n                        type: EVENT.DELETE_PLAYLIST,\n                        payload: {\n                          itemIds: state.selectedPlaylistIds,\n                        },\n                      })\n                    }}\n                  >\n                    <Icon\n                      name=\"delete_rounded\"\n                    />\n                  </IconButton>\n                </ListItem>\n              </Card>\n            )\n              }\n          </View>\n\n        </AccordionSummary>\n        <AccordionDetails>\n          {\n          playlists.length === 0 && (\n            <Typography>\n              Let's create a playlist.\n            </Typography>\n          )\n        }\n          <List dense>\n            <SortableList\n              onReorder={(result) => onEvent({\n                type: EVENT.REORDER_PLAYLIST,\n                payload: {\n                  fromIndex: result.source.index,\n                  toIndex: result.destination!.index,\n                },\n              })}\n              data={playlists}\n              renderItem={({\n                provided,\n                item: playlist,\n              }) => {\n                const { events, id, name } = playlist\n                return (\n                  <Accordion\n                    key={id}\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                  >\n                    <AccordionSummary\n                      aria-controls=\"panel1a-content\"\n                    >\n                      <View\n                        style={{\n                          flexDirection: 'row',\n                          justifyContent: 'space-between',\n                          alignItems: 'center',\n                          width: '100%',\n                        }}\n                      >\n                        <View\n                          style={{\n                            flexDirection: 'row',\n                            alignItems: 'center',\n                          }}\n                        >\n                          <Checkbox\n                            onClick={(e) => e.stopPropagation()}\n                            checked={hasSelected\n                          && state.selectedPlaylistIds.includes(playlist.id)}\n                            onChange={(e) => {\n                              const { checked } = e.target\n                              updateState((draft) => {\n                                if (checked) {\n                                  draft.selectedPlaylistIds.push(playlist.id)\n                                } else {\n                                  draft.selectedPlaylistIds = draft.selectedPlaylistIds.filter(\n                                    (id) => id !== playlist.id,\n                                  )\n                                }\n                              })\n                            }}\n                            inputProps={{ 'aria-label': 'primary checkbox' }}\n                          />\n                          <Typography\n                            variant=\"h6\"\n                          >\n                            {name}\n                          </Typography>\n                        </View>\n                        <View\n                          style={{\n                            flexDirection: 'row',\n                            alignItems: 'center',\n                          }}\n                        >\n                          <SpeedDialCreator\n                            actions={[\n                              {\n                                name: 'Delete',\n                                icon: {\n                                  name: 'delete_rounded',\n                                },\n                                onClick: (e) => {\n                                  e.stopPropagation()\n                                  updateState((draft) => {\n                                    draft.selectedPlaylistIds = []\n                                  })\n                                  onEvent({\n                                    type: EVENT.DELETE_PLAYLIST,\n                                    payload: {\n                                      itemIds: [playlist.id],\n                                    },\n                                  })\n                                },\n                              },\n                              {\n                                name: 'Play',\n                                icon: {\n                                  name: 'play_arrow',\n                                },\n                                onClick: (e) => {\n                                  e.stopPropagation()\n                                  onEvent({\n                                    type: EVENT.PLAY_EVENTS,\n                                    payload: {\n                                      events: playlist.events,\n                                    },\n                                  })\n                                },\n                              },\n                            ]}\n                          />\n                          <IconButton\n                            edge=\"end\"\n                            disableFocusRipple\n                            disableRipple\n                            disableTouchRipple\n                            {...provided.dragHandleProps}\n                          >\n                            <Icon name=\"drag_handle\" />\n                          </IconButton>\n                        </View>\n                      </View>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      {\n                        events.map((event) => (\n                          <ListItem\n                            key={event.id}\n                          >\n                            <ListItemAvatar>\n                              <Checkbox\n                                // checked={state.selectedPlaylistIds.includes(id)}\n                                // onChange={(_, checked) => {\n                                //   updateState((draft) => {\n                                //     if (checked) {\n                                //       draft.selectedPlaylistIds.push(playlist.id)\n                                //     } else {\n                                //       draft.selectedPlaylistIds = draft.selectedPlaylistIds.filter(\n                                //         (id) => id !== playlist.id,\n                                //       )\n                                //     }\n                                //   })\n                                // }}\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\n                                onClick={(e) => e.stopPropagation()}\n                              />\n                            </ListItemAvatar>\n                            <ListItemText\n                              primary={event.type}\n                            />\n                            <ListItemSecondaryAction>\n                              <IconButton\n                                edge=\"end\"\n                                aria-label=\"delete\"\n                                onClick={(e) => {\n                                  e.stopPropagation()\n                                }}\n                              >\n                                <Icon name=\"delete_rounded\" />\n                              </IconButton>\n                            </ListItemSecondaryAction>\n                          </ListItem>\n                        ))\n                      }\n                    </AccordionDetails>\n                  </Accordion>\n                )\n              }}\n            />\n          </List>\n        </AccordionDetails>\n      </Accordion>\n      <Dialog\n        onClose={createPlaylistDialog.onClose}\n        aria-labelledby=\"create-playlist-dialog-title\"\n        open={createPlaylistDialog.visible}\n      >\n        <DialogTitle id=\"create-playlist-dialog-title\">Create Playlist</DialogTitle>\n        <View\n          style={{\n            width: '50%',\n            padding: 10,\n            justifyContent: 'center',\n          }}\n        >\n          <TextField\n            style={{\n              marginBottom: 10,\n              width: '50vw',\n            }}\n            fullWidth\n            label=\"name\"\n            value={state.createPlaylistDialog.name}\n            onChange={({ target: { value } }) => updateState((draft) => {\n              draft.createPlaylistDialog.name = value\n            })}\n          />\n          <Button\n            fullWidth\n            onClick={() => {\n              onCreatePlaylist({\n                id: R.uuid(),\n                name: state.createPlaylistDialog.name,\n              })\n              updateState((draft) => {\n                draft.createPlaylistDialog.name = ''\n              })\n            }}\n          >\n            Create\n          </Button>\n        </View>\n      </Dialog>\n    </>\n  )\n}\n","import { Icon } from '@components/Icon'\nimport { EVENT, SIDE_PANEL_DEFAULT_WIDTH } from '@constants'\nimport { useGraphEditor } from '@hooks'\nimport {\n  Accordion, AccordionDetails, AccordionSummary, Button, Divider,\n  IconButton, Paper, Typography,\n} from '@mui/material'\nimport { FormProps } from '@rjsf/core'\nimport Form from '@rjsf/material-ui'\nimport {\n  useAnimation,\n  View, wrapComponent,\n} from 'colay-ui'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\nimport React from 'react'\nimport * as R from 'colay/ramda'\nimport { useDrag } from '@hooks/useDrag'\nimport { ResizeDivider } from '@components/ResizeDivider'\nimport { ClusterTable } from './ClusterTable'\nimport { EventHistoryTable } from './EventHistoryTable'\nimport { PlaylistTable } from './PlaylistTable'\n\ntype SettingsForm = {\n  schema: FormProps<any>['schema'];\n} & Partial<\nPick<\nFormProps<any>,\n'onChange'|'onSubmit'|'formData'| 'uiSchema' | 'children'\n>\n>\nexport type SettingsBarProps = {\n  isOpen?: boolean;\n  forms?: SettingsForm[];\n  createClusterForm?: FormProps<any>;\n}\n\nconst SettingsBarElement = (props: SettingsBarProps) => {\n  const {\n    isOpen = false,\n    // schema = {},\n    forms = [],\n    createClusterForm,\n    // children,\n    // ...formProps\n  } = props\n  const [\n    {\n      onEvent,\n      eventHistory,\n      clusters,\n      playlists,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      onEvent: editor.onEvent,\n      eventHistory: editor.eventHistory,\n      playlists: editor.playlists,\n      clusters: editor.graphConfig?.clusters,\n      // editorMode: editor.mode,\n      // graphEditorLocalDataRef: editor.localDataRef,\n    }),\n  )\n  const localDataRef = React.useRef({\n    width: SIDE_PANEL_DEFAULT_WIDTH,\n  })\n  const {\n    style: animationStyle,\n    ref: animationRef,\n  } = useAnimation({\n    from: {\n      width: 0,\n    },\n    to: {\n      width: localDataRef.current.width,\n    },\n    autoPlay: false,\n  }, [localDataRef.current.width])\n  React.useEffect(() => {\n    animationRef.current.play(isOpen)\n  }, [animationRef, isOpen])\n  const [state, updateState] = useImmer({\n    createPlaylistDialog: {\n      visible: false,\n    },\n    selectedEventIds: [] as string[],\n  })\n  const containerRef = React.useRef()\n  const onMouseDown = useDrag({\n    ref: containerRef,\n    onDrag: ({ x, y }, rect) => {\n      localDataRef.current.width = rect.width - x\n      const target = containerRef.current\n      target.style.width = `${localDataRef.current.width}px`\n    },\n  })\n  return (\n    <Paper\n      ref={containerRef}\n      style={{\n        position: 'absolute',\n        height: '100%',\n        top: 0,\n        left: 0,\n        display: 'flex',\n        flexDirection: 'row',\n        ...animationStyle,\n      }}\n    >\n      <View\n        style={{\n          // @ts-ignore\n          overflowY: 'auto',\n          overflowX: 'hidden',\n          height: '100%',\n          flex: 1,\n        }}\n      >\n        {\n        forms.map((form, index) => {\n          const title = form.schema?.title ?? `Form-${index}`\n          return (\n            <React.Fragment key={title}>\n              <Accordion>\n                <AccordionSummary>\n                  <Typography\n                    variant=\"h6\"\n                  >\n                    {title}\n                  </Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Form\n              // schema={schema}\n              // {...formProps}\n                    {...form}\n                    schema={R.omit(['title'])(form.schema)}\n                    onSubmit={(\n                      e,\n                    ) => onEvent({\n                      type: EVENT.SETTINGS_FORM_CHANGED,\n                      payload: { form, value: e.formData, index },\n                    })}\n                  >\n                    {\n                      form.children ?? (\n                      <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                      >\n                        Apply\n                      </Button>\n                      )\n}\n                  </Form>\n                </AccordionDetails>\n              </Accordion>\n              <View style={{ marginTop: 5, marginBottom: 5 }} />\n            </React.Fragment>\n          )\n        })\n      }\n        <Divider />\n        {\n        eventHistory && (\n        <>\n          <View\n            style={{\n              // height: '50%',\n              width: '100%',\n            }}\n          >\n            <EventHistoryTable\n              onCreatePlaylistClick={(selectedEventIds) => updateState((draft) => {\n                draft.createPlaylistDialog.visible = true\n                draft.selectedEventIds = selectedEventIds\n              })}\n            />\n          </View>\n          <Divider style={{ marginTop: 5, marginBottom: 5 }} />\n        </>\n        )\n      }\n        <Divider />\n        {\n          playlists && (\n          <PlaylistTable\n            createPlaylistDialog={{\n              ...state.createPlaylistDialog,\n              onClose: () => updateState((draft) => {\n                draft.createPlaylistDialog.visible = false\n              }),\n            }}\n            onCreatePlaylist={(playlistWithoutEvents) => {\n              const playlistEvents = state.selectedEventIds.map(\n                (eventId) => eventHistory!.events.find((event) => event.id === eventId)!,\n              ).sort((item, other) => (item.date > other.date ? 1 : -1))\n              updateState((draft) => {\n                draft.createPlaylistDialog.visible = false\n              })\n              onEvent({\n                type: EVENT.CREATE_PLAYLIST,\n                payload: {\n                  items: [\n                    {\n                      ...playlistWithoutEvents,\n                      events: playlistEvents,\n                    },\n                  ],\n                },\n              })\n            }}\n          />\n\n          )\n        }\n        <Divider />\n        {\n        clusters && (\n        <>\n          <View\n            style={{\n              // height: '50%',\n              width: '100%',\n            }}\n          >\n            <ClusterTable\n              createClusterForm={createClusterForm}\n            />\n          </View>\n          <Divider style={{ marginTop: 5, marginBottom: 5 }} />\n        </>\n        )\n      }\n      </View>\n      <ResizeDivider\n        onMouseDown={onMouseDown}\n      />\n      <IconButton\n        style={styles.icon}\n        onClick={() => {\n          onEvent({\n            type: EVENT.TOGGLE_FILTER_BAR,\n            avoidHistoryRecording: true,\n          })\n        }}\n      >\n        <Icon\n          name=\"settings\"\n        />\n      </IconButton>\n    </Paper>\n  )\n}\n\nexport const SettingsBar = wrapComponent<SettingsBarProps>(SettingsBarElement, {})\n\nconst styles = {\n  icon: {\n    position: 'absolute',\n    right: -36,\n    top: 2,\n    fontSize: 24,\n  },\n} as const\n","import {\n  DefaultRenderEdge,\n  DefaultRenderNode, Graph, GraphProps,\n} from '@components'\nimport { ContextMenu } from '@components/ContextMenu'\nimport { EDITOR_MODE, EVENT } from '@constants'\nimport { Clusters } from '@core/clusters'\nimport { GraphEditorProvider } from '@hooks/useGraphEditor'\nimport {\n  Backdrop, Box, CircularProgress,\n} from '@mui/material'\nimport {\n  EditorMode, EventHistory, EventInfo, EventType,\n  GraphConfig, GraphEditorConfig, GraphEditorRef, GraphEditorRenderEdge,\n  GraphEditorRenderNode, GraphLabelData, NetworkStatistics,\n  NodeElement, OnEvent, OnEventLite, Playlist, RecordedEvent,\n} from '@type'\nimport {\n  getEventClientPosition, getLabel, getSelectedItemByElement,\n  throttle,\n} from '@utils'\nimport { calculateStatistics } from '@utils/networkStatistics'\nimport { useTimeoutManager } from '@utils/useTimeoutManager'\nimport { useForwardRef, wrapComponent } from 'colay-ui'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\nimport { PropsWithRef } from 'colay-ui/type'\nimport * as R from 'colay/ramda'\nimport React from 'react'\nimport { ActionBar, ActionBarProps } from './ActionBar'\nimport { DataBar, DataBarProps } from './DataBar'\nimport { ModalComponent, ModalComponentProps } from './ModalComponent'\nimport { MouseIcon } from './MouseIcon'\nimport { PreferencesModal, PreferencesModalProps } from './PreferencesModal'\nimport { RecordedEventsModal } from './RecordedEventsModal'\nimport { SettingsBar, SettingsBarProps } from './SettingsBar'\n\ntype RenderElementAdditionalInfo = {\n  // label: string;\n}\n\nexport type GraphEditorProps = {\n  onEvent?: OnEvent;\n  graphConfig?: GraphConfig;\n  config?: GraphEditorConfig;\n  renderMoreAction?: () => React.ReactElement;\n  label?: GraphLabelData;\n  settingsBar?: SettingsBarProps;\n  dataBar?: Pick<DataBarProps, 'editable'| 'isOpen'>;\n  actionBar?: Pick<ActionBarProps, 'renderMoreAction' | 'isOpen' | 'recording' |'eventRecording' | 'autoOpen' | 'theming'>;\n  preferencesModal?: PreferencesModalProps;\n  selectedElementIds?: string[] | null;\n  mode?: EditorMode;\n  renderEdge?: GraphEditorRenderEdge<RenderElementAdditionalInfo>;\n  renderNode?: GraphEditorRenderNode<RenderElementAdditionalInfo>;\n  events?: RecordedEvent[]\n  eventHistory?: EventHistory;\n  playlists?: Playlist[];\n  networkStatistics?: NetworkStatistics;\n  isLoading?: boolean;\n  modals?: {\n    ElementSettings?: ModalComponentProps\n  };\n} & Omit<\nGraphProps,\n'config'|'onPress' | 'renderNode' | 'renderEdge'\n>\n\nconst MODE_ICON_SCALE = 0.8\nconst MODE_ICON_MAP_BY_URL = {\n  [EDITOR_MODE.ADD]: `https://img.icons8.com/material/${MODE_ICON_SCALE}x/plus-math.png`,\n  [EDITOR_MODE.DELETE]: `https://img.icons8.com/material/${MODE_ICON_SCALE}x/minus--v2.png`,\n  [EDITOR_MODE.CONTINUES_ADD]: `https://img.icons8.com/material/${MODE_ICON_SCALE}x/plus.png`,\n  [EDITOR_MODE.CONTINUES_DELETE]: `https://img.icons8.com/material/${MODE_ICON_SCALE}x/minus-sign.png`,\n  [EDITOR_MODE.ADD_CLUSTER_ELEMENT]: `https://img.icons8.com/material/${MODE_ICON_SCALE}x/doctors-folder.png`,\n  [EDITOR_MODE.DEFAULT]: null,\n}\n\nconst DEFAULT_HANDLER = R.identity as (info: EventInfo) => void\n\nexport type GraphEditorType = React.FC<GraphEditorProps>\n\nconst DEFAULT_GRAPH_EDITOR_CONFIG: GraphEditorConfig = {\n  enableNetworkStatistics: true,\n}\nconst GraphEditorElement = (\n  props: GraphEditorProps,\n  ref: React.MutableRefObject<GraphEditorRef>,\n) => {\n  const {\n    onEvent: onEventCallback = DEFAULT_HANDLER,\n    renderEdge,\n    renderNode,\n    graphConfig,\n    style,\n    settingsBar,\n    actionBar,\n    dataBar = {},\n    preferencesModal = {},\n    nodes,\n    edges,\n    selectedElementIds = [],\n    label,\n    mode = EDITOR_MODE.DEFAULT,\n    events,\n    eventHistory,\n    config = DEFAULT_GRAPH_EDITOR_CONFIG,\n    playlists,\n    networkStatistics,\n    isLoading = false,\n    modals,\n    ...rest\n  } = props\n\n  const localDataRef = React.useRef({\n    initialized: false,\n    targetNode: null as NodeElement | null,\n    props,\n    issuedClusterId: null as string|null,\n    newClusterBoxSelection: {\n      elementIds: [] as string[],\n    },\n    networkStatistics: {\n      local: null,\n    },\n    contextMenu: {\n      itemIds: [],\n    },\n  })\n  const [state, updateState] = useImmer({\n    eventsModal: {\n      visible: false,\n    },\n    contextMenu: {\n      visible: false,\n      position: {\n        x: 0,\n        y: 0,\n      },\n    },\n    isLoading: false,\n  })\n  localDataRef.current.props = props\n  React.useEffect(() => {\n    localDataRef.current.initialized = true\n    // setTimeout(() => updateState((draft) => {\n    //   draft.isLoading = false\n    // }), 2200)\n  }, [])\n  const graphId = React.useMemo<string>(\n    () => graphConfig?.graphId ?? R.uuid(),\n    [graphConfig?.graphId],\n  )\n  const graphEditorRef = useForwardRef(ref)\n  // @TODO: DANGER\n  React.useEffect(() => {\n    setTimeout(() => {\n      ref.current = graphEditorRef.current\n    }, 1000)\n  }, [graphEditorRef.current])\n  // @TODO: DANGER\n  const selectedElement = React.useMemo(\n    () => {\n      const collection = graphEditorRef.current?.cy?.$id(R.last(selectedElementIds)!)\n      return collection?.length === 0\n        ? null\n        : collection\n    },\n    // if (!localDataRef.current.initialized) {\n    //   const callback = () => {\n    //     setTimeout(() => {\n    //       if (graphEditorRef.current.cy) {\n\n    //       } else {\n    //         callback()\n    //       }\n    //     }, 1000)\n    //   }\n    // } else if (selectedElementIds?.length > 0) {\n    //   return graphEditorRef.current.cy && graphEditorRef.current.cy.$id(R.last(selectedElementIds))\n    // }\n\n    [nodes, edges, selectedElementIds],\n  )\n  const selectedItem = selectedElement && getSelectedItemByElement(\n    selectedElement, { nodes, edges },\n  ).item\n  // const selectedElementIsNode = selectedElement && selectedElement.isNode()\n  // const targetPath = selectedElementIsNode ? 'nodes' : 'edges'\n  const onEvent: OnEventLite = React.useCallback((eventInfo) => {\n    const {\n      props: {\n        nodes,\n        edges,\n      },\n    } = localDataRef.current\n    switch (eventInfo.type) {\n      case EVENT.PRESS_ADD_CLUSTER_ELEMENT:\n        localDataRef.current.issuedClusterId = eventInfo.payload.clusterId\n        break\n      case EVENT.CREATE_CLUSTER_BY_ALGORITHM_FORM_SUBMIT: {\n        const {\n          config = {},\n          name,\n        } = eventInfo.payload\n        const clusterCollections: cytoscape.Collection[] = Clusters[name as keyof typeof Clusters]\n          .getByItem({\n            cy: graphEditorRef.current?.cy,\n            nodes,\n            edges,\n            ...config,\n          })\n        let clusterLength = (graphConfig?.clusters?.length ?? 0) - 1\n        const clusters = clusterCollections.map((collection) => {\n          const elementIds = collection.map((el) => el.id())\n          clusterLength += 1\n          return {\n            id: R.uuid(),\n            name: `Cluster-${clusterLength}`,\n            ids: elementIds,\n            childClusterIds: [],\n          }\n        }).filter((val) => !!val)\n        if (clusters.length === 0) {\n          alert('There is no clusters with this configuration!')\n        } else {\n          onEventCallback({\n            id: R.uuid(),\n            date: new Date().toString(),\n            type: EVENT.CREATE_CLUSTER,\n            payload: {\n              items: clusters,\n            },\n          })\n        }\n\n        return\n      }\n\n      default:\n        break\n    }\n    onEventCallback({\n      ...(selectedElement ? { elementId: selectedElement.id() } : {}),\n      ...eventInfo,\n      id: R.uuid(),\n      date: new Date().toString(),\n      ...(\n        eventInfo.event\n          ? {\n            event: R.pickPaths([\n              ['data', 'originalEvent', 'metaKey'],\n            ])(eventInfo.event),\n          }\n          : {}\n      ),\n    })\n  }, [onEventCallback, selectedItem?.id])\n  const eventTimeoutsManager = useTimeoutManager(\n    (events ?? []).map((event, index) => ({\n      ...event,\n      after: events?.[index - 1]\n        ? new Date(\n          event.date,\n        ).getMilliseconds() - new Date(events[index - 1].date).getMilliseconds()\n        : 0,\n    })),\n    (event) => {\n      onEventCallback(event)\n    },\n    {\n      deps: [events],\n      renderOnFinished: true,\n      renderOnPlayChanged: true,\n      autostart: false,\n    },\n  )\n  React.useEffect(() => {\n    if (!config.enableNetworkStatistics) {\n      localDataRef.current.networkStatistics.local = networkStatistics?.local\n    } else {\n      localDataRef.current.networkStatistics.local = R.mergeDeepRight(\n        calculateStatistics({ nodes, edges }),\n        (networkStatistics?.local ?? {}),\n      )\n    }\n  }, [])\n  React.useMemo(() => {\n    if (localDataRef.current.initialized) {\n      localDataRef.current.networkStatistics.local = R.mergeDeepRight(\n        calculateStatistics({ nodes, edges }),\n        (networkStatistics?.local ?? {}),\n      )\n    }\n  }, [nodes, edges, networkStatistics?.local, config.enableNetworkStatistics])\n  React.useEffect(() => {\n    localDataRef.current.targetNode = null\n  }, [mode])\n  const graphEditorValue = React.useMemo(() => ({\n    config,\n    eventHistory,\n    events,\n    graphConfig,\n    label,\n    mode,\n    onEvent,\n    playlists,\n    selectedElementIds,\n    localDataRef,\n    selectedItem,\n    selectedElement,\n    networkStatistics,\n    graphEditorRef,\n    nodes,\n    edges,\n  }),\n  [\n    config,\n    eventHistory,\n    events,\n    graphConfig,\n    label,\n    mode,\n    onEvent,\n    playlists,\n    selectedElementIds,\n    selectedItem,\n    selectedElement,\n    networkStatistics,\n    graphEditorRef,\n    nodes,\n    edges,\n  ])\n  if (graphEditorRef.current) {\n    graphEditorRef.current.context = graphEditorValue\n  }\n  return (\n    <GraphEditorProvider\n      value={graphEditorValue}\n    >\n      <Box\n      // @ts-ignore\n        style={{\n          ...style,\n          overflow: 'hidden',\n          position: 'relative',\n        }}\n        onMouseMove={(e: React.MouseEvent<HTMLDivElement>) => {\n          throttle(\n            () => {\n              const {\n                pageY,\n              } = e.nativeEvent\n              const {\n                offsetHeight,\n                offsetTop,\n              } = e.currentTarget\n              if (props.actionBar && props.actionBar.autoOpen) {\n                if (pageY + 25 >= offsetTop + offsetHeight\n                && !props.actionBar?.isOpen) {\n                  return onEvent({\n                    type: EVENT.TOGGLE_ACTION_BAR,\n                    avoidHistoryRecording: true,\n                  })\n                }\n                if (pageY + 50 <= offsetTop + offsetHeight && props.actionBar?.isOpen) {\n                  return onEvent({\n                    type: EVENT.TOGGLE_ACTION_BAR,\n                    avoidHistoryRecording: true,\n                  })\n                }\n              }\n            },\n            1000,\n            'GraphEditorOnMouseMove',\n          )\n        }}\n      >\n        <Graph\n        // @ts-ignore\n          ref={graphEditorRef}\n          style={{\n            width: style?.width,\n            height: style?.height,\n          }}\n          nodes={nodes}\n          edges={edges}\n          {...rest}\n          extraData={{\n            label,\n            extraData: rest.extraData,\n          }}\n          config={{\n            ...graphConfig,\n            graphId,\n          }}\n          selectedElementIds={selectedElementIds}\n          onPress={({ position }) => {\n            if (state.contextMenu.visible) {\n              updateState((draft) => {\n                draft.contextMenu.visible = false\n              })\n            }\n            const { mode } = localDataRef.current.props\n            if (\n            // @ts-ignore\n              [EDITOR_MODE.ADD, EDITOR_MODE.CONTINUES_ADD].includes(mode)\n            ) {\n              onEvent({\n                type: EVENT.ADD_NODE,\n                payload: {\n                  items: [{\n                    id: R.uuid(),\n                    position,\n                    data: {},\n                  }],\n                },\n              })\n              return\n            }\n            onEvent({\n              type: EVENT.PRESS_BACKGROUND,\n              payload: { position },\n              avoidHistoryRecording: true,\n            })\n          }}\n          onBoxSelection={(event) => {\n            const { mode } = localDataRef.current.props\n            const {\n              elementIds,\n            } = event\n            if (EDITOR_MODE.ADD_CLUSTER_ELEMENT === mode) {\n              onEvent({\n                type: EVENT.ADD_CLUSTER_ELEMENT,\n                payload: {\n                  clusterId: localDataRef.current.issuedClusterId,\n                  itemIds,\n                },\n              })\n              return\n            }\n            // TODO: DANGER**\n            localDataRef.current.newClusterBoxSelection.elementIds = elementIds\n            if (elementIds.length > 0) {\n              localDataRef.current.contextMenu.itemIds = elementIds\n              updateState((draft) => {\n                const e = event.event.data.originalEvent\n                draft.contextMenu.visible = true\n                draft.contextMenu.position = getEventClientPosition(e)\n                // getPointerPositionOnViewport(\n                //   graphEditorRef.current.viewport,\n                //   // @ts-ignore\n                //   event.event.data.originalEvent,\n                // )\n              })\n              // TODO: **DANGER\n              onEvent({\n                type: EVENT.BOX_SELECTION,\n                payload: {\n                  elementIds,\n                },\n              })\n            }\n          }}\n          renderNode={({ item, element, ...rest }) => (\n            <Graph.View\n              interactive\n              // rightdown={(event) => {\n              //   event.stopPropagation()\n              // }}\n              rightclick={(event) => {\n                localDataRef.current.contextMenu.itemIds = [element.id()]\n                updateState((draft) => {\n                  draft.contextMenu.visible = true\n                  draft.contextMenu.position = getEventClientPosition(event.data.originalEvent)\n                })\n                event.stopPropagation()\n              }}\n              pointertap={(event) => {\n                const { mode } = localDataRef.current.props\n                const elementId = element.id()\n                if (\n                  [\n                    EDITOR_MODE.DELETE,\n                    // @ts-ignore\n                    EDITOR_MODE.CONTINUES_DELETE].includes(mode)\n                ) {\n                  onEvent({\n                    type: EVENT.DELETE_NODE,\n                    payload: {\n                      itemIds: [item.id],\n                    },\n                    event,\n                  })\n                  return\n                }\n                if (\n                  // @ts-ignore\n                  [EDITOR_MODE.ADD, EDITOR_MODE.CONTINUES_ADD].includes(mode)\n                ) {\n                  if (localDataRef.current.targetNode) {\n                    onEvent({\n                      type: EVENT.ADD_EDGE,\n                      payload: {\n                        items: [{\n                          id: R.uuid(),\n                          source: localDataRef.current.targetNode.id(),\n                          target: elementId,\n                        }],\n                      },\n                      event,\n                    })\n                    localDataRef.current.targetNode = null\n                  } else {\n                    localDataRef.current.targetNode = element\n                  }\n                  return\n                }\n                if (EDITOR_MODE.ADD_CLUSTER_ELEMENT === mode) {\n                  onEvent({\n                    type: EVENT.ADD_CLUSTER_ELEMENT,\n                    payload: {\n                      clusterId: localDataRef.current.issuedClusterId,\n                      itemIds: [elementId],\n                    },\n                  })\n                  return\n                }\n                // cyUnselectAll(graphEditorRef.current.cy)\n                // element.select()\n                onEvent({\n                  type: EVENT.ELEMENT_SELECTED,\n                  payload: {\n                    itemIds: [element.id()],\n                  },\n                  event,\n                  avoidHistoryRecording: true,\n                })\n              }}\n            >\n              {(renderNode ?? DefaultRenderNode)({\n                item,\n                element,\n                // @ts-ignore\n                label: getLabel(\n                  label?.isGlobalFirst\n                    ? (label?.global.nodes ?? label?.nodes?.[item.id])\n                    : (label?.nodes?.[item.id] ?? label?.global.nodes),\n                  item,\n                ),\n                labelPath: (label?.isGlobalFirst\n                  ? (label?.global.nodes ?? label?.nodes?.[item.id])\n                  : (label?.nodes?.[item.id] ?? label?.global.nodes)) ?? [],\n                ...rest,\n              })}\n            </Graph.View>\n          )}\n          renderEdge={({ item, element, ...rest }) => (\n            <Graph.View\n              interactive\n              rightclick={(event) => {\n                onEvent({\n                  type: EVENT.ELEMENT_SELECTED,\n                  payload: {\n                    itemIds: [element.id()],\n                  },\n                  event,\n                  avoidHistoryRecording: true,\n                })\n                updateState((draft) => {\n                  draft.contextMenu.visible = true\n                })\n                event.stopPropagation()\n              }}\n              pointertap={(event) => {\n                const { mode } = localDataRef.current.props\n                if (\n                  [\n                    EDITOR_MODE.DELETE,\n                    // @ts-ignore\n                    EDITOR_MODE.CONTINUES_DELETE].includes(mode)\n                ) {\n                  onEvent({\n                    type: EVENT.DELETE_EDGE,\n                    payload: {\n                      itemIds: [item.id],\n                    },\n                    event,\n                  })\n                  return\n                }\n                // cyUnselectAll(graphEditorRef.current.cy)\n                // element.select()\n                onEvent({\n                  type: EVENT.ELEMENT_SELECTED,\n                  payload: {\n                    itemIds: [element.id()],\n                  },\n                  avoidHistoryRecording: true,\n                })\n              }}\n            >\n              {\n               // @ts-ignore\n            (renderEdge ?? DefaultRenderEdge)({\n              item,\n              // @ts-ignore\n              label: getLabel(\n                label?.isGlobalFirst\n                  ? (label?.global.edges ?? label?.edges?.[item.id])\n                  : (label?.edges?.[item.id] ?? label?.global.edges),\n                item,\n              ),\n              labelPath: (label?.isGlobalFirst\n                ? (label?.global.edges ?? label?.edges?.[item.id])\n                : (label?.edges?.[item.id] ?? label?.global.edges)) ?? [],\n              element,\n              ...rest,\n            })\n}\n            </Graph.View>\n          )}\n        />\n        {\n        settingsBar && (\n          <SettingsBar\n            {...settingsBar}\n          />\n        )\n      }\n        <DataBar\n          {...dataBar}\n        />\n\n        {\n        actionBar && (\n        <ActionBar\n          onAction={({ type, value }) => {\n            switch (type) {\n              case EVENT.EXPORT_DATA:\n                onEvent({\n                  type: EVENT.EXPORT_DATA,\n                  payload: {\n                    value: extractGraphEditorData(props),\n                  },\n                })\n                break\n              case EVENT.CHANGE_THEME:\n                onEvent({\n                  type: EVENT.CHANGE_THEME,\n                  payload: {\n                    value,\n                  },\n                })\n                break\n\n              default:\n                onEvent({\n                  type: type as EventType,\n                  payload: value,\n                })\n                break\n            }\n          }}\n          {...actionBar}\n        />\n        )\n}\n        <MouseIcon\n        // name={MODE_ICON_MAP[mode]}\n          name={MODE_ICON_MAP_BY_URL[mode]}\n          cursor\n        />\n        <RecordedEventsModal\n          timeoutManager={eventTimeoutsManager}\n          onClose={() => {\n            updateState(() => {})\n            eventTimeoutsManager.clear()\n          }}\n        />\n        <ContextMenu\n          graphEditorRef={graphEditorRef}\n          items={[\n            { value: 'CreateCluster', label: 'Create Cluster' },\n            { value: 'Delete', label: 'Delete' },\n            { value: 'Settings', label: 'Settings' },\n          ]}\n          onSelect={(value) => {\n            const {\n              current: {\n                contextMenu: {\n                  itemIds,\n                },\n              },\n            } = localDataRef\n            switch (value) {\n              case 'CreateCluster':\n                onEvent({\n                  type: EVENT.CREATE_CLUSTER,\n                  payload: {\n                    items: [{\n                      id: R.uuid(),\n                      name: `Cluster-${graphConfig?.clusters?.length ?? 0}`,\n                      ids: itemIds,\n                      childClusterIds: [],\n                    }],\n                  },\n                })\n                break\n              case 'Delete':\n                onEvent({\n                  type: EVENT.DELETE_NODE,\n                  payload: {\n                    itemIds,\n                  },\n                })\n                break\n              case 'Settings':\n                onEvent({\n                  type: EVENT.ELEMENT_SETTINGS,\n                  payload: {\n                    itemIds,\n                  },\n                })\n                break\n              default:\n                break\n            }\n            localDataRef.current.newClusterBoxSelection.elementIds = []\n            localDataRef.current.contextMenu.itemIds = []\n            updateState((draft) => {\n              draft.contextMenu.visible = false\n            })\n          }}\n          position={state.contextMenu.position}\n          open={state.contextMenu.visible}\n        />\n      </Box>\n      <PreferencesModal\n        {...preferencesModal}\n      />\n      {\n        Object.keys(modals).map((modalName) => (\n          <ModalComponent\n            key={modalName}\n            {...(modals[modalName] ?? {})}\n            name={modalName}\n          />\n        ))\n      }\n      <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={isLoading || state.isLoading}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </GraphEditorProvider>\n\n  )\n}\n\nconst convert = (object: any) => {\n  const cache: any[] = []\n  return JSON.stringify(object, (key, value) => {\n    if (typeof value === 'object' && value !== null) {\n      // Duplicate reference found, discard key\n      if (cache.includes(value)) return null\n\n      // Store value in our collection\n      cache.push(value)\n    }\n    return value\n  })\n}\nconst extractGraphEditorData = (props: GraphEditorProps) => convert({\n  graphConfig: props.graphConfig,\n  label: props.label,\n  // settingsBar: R.omit(['header', 'footer'], props.settingsBar),\n  dataBar: R.omit(['header', 'footer'], props.dataBar),\n  actionBar: R.omit(['right', 'left'], props.actionBar),\n  eventHistory: props.eventHistory,\n  mode: props.mode,\n  nodes: props.nodes,\n  edges: props.edges,\n})\n\nexport const GraphEditor = wrapComponent<\nPropsWithRef<GraphEditorRef, GraphEditorProps>\n>(\n  GraphEditorElement,\n  {\n    isEqual: (item, otherItem) => {\n      if (R.is(Function, item)) {\n        return true\n      }\n      return item === otherItem\n    }, // R.equalsExclude(R.is(Function)),\n    isForwardRef: true,\n  },\n)\n","import React from 'react'\nimport {\n  createTimeoutManager,\n  Timer,\n  TimeoutInstance,\n} from './TimeoutManager'\n\ntype Options = {\n  deps?: any[];\n  renderOnTimeout?: boolean;\n  renderOnFinished?: boolean;\n  renderOnPlayChanged?: boolean;\n  onFinish?: () => void\n  autostart?: boolean;\n}\n\nexport const useTimeoutManager = <T extends Timer<Record<string, any>>>(\n  timers: T[],\n  callback: (timer: T, index: number, timeout: TimeoutInstance) => void,\n  options: Options = {},\n) => {\n  const {\n    deps = [],\n    renderOnTimeout = false,\n    renderOnFinished = false,\n    renderOnPlayChanged = false,\n    onFinish,\n    autostart = true,\n  } = options\n  const [, setState] = React.useState({})\n  const eventTimeoutsManager = React.useMemo(() => createTimeoutManager(\n    timers,\n    (timer, index, timeout) => {\n      callback(timer, index, timeout)\n      if (renderOnTimeout) {\n        setState({})\n      }\n    },\n    {\n      onFinish: () => {\n        onFinish?.()\n        if (renderOnFinished) {\n          setState({})\n        }\n      },\n      onPlayChanged: () => {\n        if (renderOnPlayChanged) {\n          setState({})\n        }\n      },\n      autostart,\n    },\n  ), deps)\n  React.useEffect(\n    () => () => {\n      eventTimeoutsManager.clear()\n    },\n    deps,\n  )\n  return eventTimeoutsManager\n}\n","import React from 'react'\nimport { Button, Slider, Typography } from '@mui/material'\n\nconst SliderUIField = ({ formData, schema, onChange, name }) => {\n\n  return (\n    <>\n      <Typography id={`${schema.title}-continuous-slider`} gutterBottom>\n        {schema.title ?? name}\n      </Typography>\n      <Slider\n        value={formData ?? [schema.minimum, schema.maximum]}\n        onChange={(e) => {\n          onChange(e.target.value)\n        }}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby={`${schema.title}-continuous-slider`}\n        min={schema.minimum}\n        max={schema.maximum}\n      />\n    </>\n  )\n}\nexport const getFilterSchema = (props: {} = {}) => {\n  const {\n  } = props\n  return {\n    schema: {\n      title: 'Filter',\n      type: 'object',\n      required: [\n        // 'title',\n        // 'year',\n        // 'rechtsgebied',\n        // 'adjustLayout',\n      ],\n      additionalProperties: false,\n      properties: {\n        // label: {\n        //   type: 'string',\n        // },\n        year: {\n          type: 'array',\n          items: {\n            type: 'number',\n          },\n          minimum: 1969,\n          maximum: 2015,\n        },\n        degree: {\n          type: 'array',\n          items: {\n            type: 'number',\n          },\n          minimum: 0,\n          maximum: 100,\n        },\n        indegree: {\n          type: 'array',\n          items: {\n            type: 'number',\n          },\n          minimum: 0,\n          maximum: 100,\n        },\n        outdegree: {\n          type: 'array',\n          items: {\n            type: 'number',\n          },\n          minimum: 0,\n          maximum: 100,\n        },\n      },\n    },\n    uiSchema: {\n      'year': {\n        'ui:field': SliderUIField,\n      },\n      'degree': {\n        'ui:field': SliderUIField,\n      },\n      'indegree': {\n        'ui:field': SliderUIField,\n      },\n      'outdegree': {\n        'ui:field': SliderUIField,\n      },\n    }\n  }\n}\n\nexport const getQueryBuilderSchema = () => {\n  return {\n    // children: <div></div>,\n    schema: {\n      title: 'Fetch Data',\n      type: 'object',\n      required: [\n        // 'title',\n        // 'year',\n        // 'rechtsgebied',\n        // 'adjustLayout',\n      ],\n      additionalProperties: false,\n      properties: {\n        DataSources: {\n          type: 'array',\n          title: 'Data sources',\n          uniqueItems: true,\n          items: {\n            enum: [\n              'RS',\n              'ECHR',\n              'Eurlex'\n            ],\n            enumNames: [\n              'Rechtspraak',\n              'European Court of Human Rights',\n              'Eurlex'\n            ],\n            type: 'string'\n          },\n        },\n        Eclis: {\n          type: 'string',\n          title: 'ECLIs'\n        },\n        Keywords: {\n          type: 'string',\n          title: 'Keywords'\n        },\n        Articles: {\n          type: 'string',\n          title: 'Articles'\n        },\n        Date: {\n          type: 'array',\n          title: 'Date',\n          items: {\n            type: 'number',\n          },\n          minimum: 1969,\n          maximum: 2015,\n        },\n        DegreesSources: {\n          type: 'integer',\n          title: 'Degrees Sources',\n          minimum: 1,\n          maximum: 5,\n        },\n        DegreesTargets: {\n          type: 'integer',\n          title: 'Degrees Targets',\n          minimum: 1,\n          maximum: 5,\n        },\n        Instances: {\n          type: 'array',\n          title: 'Instances',\n          uniqueItems: true,\n          items: {\n            enum: [\n              '',\n              'Hoge Raad',\n              'Raad van State',\n              'Centrale Raad van Beroep',\n              'College van Beroep voor het bedrijfsleven',\n              'Gerechtshof Arnhem-Leeuwarden'\n            ],\n            type: 'string'\n          },\n        },\n        Domains: {\n          type: 'array',\n          title: 'Domains',\n          uniqueItems: true,\n          items: {\n            enum: [\n              '',\n              'Not',\n              'Sure',\n              'What'\n            ],\n            type: 'string'\n          },\n        },\n        Doctypes: {\n          type: 'array',\n          title: 'Document types',\n          uniqueItems: true,\n          items: {\n            enum: [\n              '',\n              'DEC',\n              'OPI'\n            ],\n            type: 'string'\n          },\n        },\n        LiPermission: {\n          type: 'boolean',\n          title: 'LI Permission',\n        },\n      },\n    },\n    uiSchema: {\n      'Date': {\n        'ui:field': SliderUIField,\n      },\n      // 'degreesSources': {\n      //   'ui:field': SliderUIField,\n      // },\n      // 'degreesTargets': {\n      //   'ui:field': SliderUIField,\n      // },\n      // 'source':{\n      //   'ui:widget': 'checkboxes'\n      // },\n      // 'liPermission':{\n      //   'ui:widget': 'select'\n      // },\n    }\n  }\n}\n\nexport const getFetchSchema = (props: { onPopupPress: () => void }) => {\n  const {\n    onPopupPress\n  } = props\n  return {\n    children: <div></div>,\n    schema: {\n      title: 'Fetch Data',\n      type: 'object',\n      additionalProperties: false,\n      properties: {\n        popup: {\n          title: 'Build Query',\n          type: 'boolean',\n        },\n      },\n    },\n    uiSchema: {\n      'Date': {\n        'ui:field': SliderUIField,\n      },\n      // 'degreesSources': {\n      //   'ui:field': SliderUIField,\n      // },\n      // 'degreesTargets': {\n      //   'ui:field': SliderUIField,\n      // },\n      // 'source':{\n      //   'ui:widget': 'checkboxes'\n      // },\n      // 'liPermission':{\n      //   'ui:widget': 'select'\n      // },\n      'popup': {\n        'ui:field': ({ formData, schema, onChange }) => {\n          return (\n            <Button onClick={onPopupPress}>Open Query Builder</Button>\n          )\n        },\n      },\n    }\n  }\n}\nexport const VIEW_CONFIG_SCHEMA = {\n  schema: {\n    title: 'Visualisation',\n    type: 'object',\n    required: [],\n    additionalProperties: false,\n    properties: {\n      nodeSize: {\n        \"type\": \"string\",\n        \"title\": \"Node Size\",\n        \"enum\": [\n          \"degree\",\n          \"out_degree\",\n          \"in_degree\",\n          \"year\",\n        ]\n      },\n      nodeColor: {\n        \"type\": \"string\",\n        \"title\": \"Node Color\",\n        \"enum\": [\n          \"community\",\n          \"degree\",\n          \"out_degree\",\n          \"in_degree\",\n          \"year\",\n        ]\n      },\n    },\n  },\n}\n\nexport const RECORDED_EVENTS = [\n  {\n    \"type\": \"@\",\n    \"data\": {\n      \"type\": \"PRESS_BACKGROUND\",\n      \"payload\": {\n        \"x\": 1552.63671875,\n        \"y\": 2627.20703125\n      },\n      \"event\": {}\n    },\n    \"date\": \"2021-02-26T07:59:37.065Z\",\n  },\n  {\n    \"type\": \"@\",\n    \"data\": {\n      \"type\": \"ELEMENT_SELECTED\",\n      \"elementId\": \"http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2009:BF8875\",\n      \"event\": {\n        \"data\": {\n          \"originalEvent\": {\n            \"metaKey\": false\n          }\n        }\n      }\n    },\n    \"date\": \"2021-02-26T07:59:37.992Z\",\n  },\n  {\n    \"type\": \"@\",\n    \"data\": {\n      \"type\": \"ELEMENT_SELECTED\",\n      \"elementId\": \"http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2009:BJ7832\",\n      \"event\": {\n        \"data\": {\n          \"originalEvent\": {\n            \"metaKey\": false\n          }\n        }\n      }\n    },\n    \"date\": \"2021-02-26T07:59:39.640Z\",\n  },\n  {\n    \"type\": \"@\",\n    \"data\": {\n      \"type\": \"ELEMENT_SELECTED\",\n      \"elementId\": \"http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2011:BR5223\",\n      \"event\": {\n        \"data\": {\n          \"originalEvent\": {\n            \"metaKey\": false\n          }\n        }\n      }\n    },\n    \"date\": \"2021-02-26T07:59:41.945Z\",\n  },\n  {\n    \"type\": \"@\",\n    \"data\": {\n      \"type\": \"ELEMENT_SELECTED\",\n      \"elementId\": \"http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2012:BV1295\",\n      \"event\": {\n        \"data\": {\n          \"originalEvent\": {\n            \"metaKey\": false\n          }\n        }\n      }\n    },\n    \"date\": \"2021-02-26T07:59:44.725Z\",\n  }\n]","import * as R from 'colay/ramda'\n\ntype DoActions = any[]\ntype UndoActions = any[]\n\ntype HistoryItem = {\n  id: string;\n  do: DoActions;\n  undo: UndoActions;\n}\ntype HistoryItemOptionalId = Omit<HistoryItem, 'id'> & { id?: string; }\n\ntype HistoryRecord = {\n  items: HistoryItem[]\n  currentIndex: number;\n}\n\nconst DEFAULT_INDEX = 0\nconst DEFAULT_HISTORY_DATA_ITEM: HistoryRecord = {\n  items: [],\n  currentIndex: DEFAULT_INDEX,\n}\n\nconst EVENT_TYPE = {\n  REDO: 'REDO',\n  UNDO: 'UNDO',\n  UNDO_ALL: 'UNDO_ALL',\n  REDO_ALL: 'REDO_ALL',\n} as const\n\n// export type History = {\n//   record: HistoryRecord;\n//   add: (item: HistoryItem) => void;\n//   clear: () => void;\n//   new: () => void;\n//   set: (historyRecord: HistoryRecord) => void;\n//   redo: () => void;\n//   redoAll: () => void;\n//   undo: () => void;\n//   undoAll: () => void;\n//   createRoot: () => void;\n//   clearRoot: () => void;\n//   getRoot: () => HistoryRecord;\n//   setRoot: (historyRecord: HistoryRecord) => void;\n//   EVENT_TYPE: typeof EVENT_TYPE\n// }\nexport type History = ReturnType<typeof createHistory>\n\ntype Event = {\n  type: keyof typeof EVENT_TYPE;\n  item: HistoryItem;\n  actions: (DoActions|UndoActions);\n  items?: HistoryItem[];\n}\n\ntype CreateHistoryOptions = {\n  onEvent: (\n    event: Event\n  ) => boolean|void;\n}\n\nexport const createHistory = (options: CreateHistoryOptions) => {\n  const {\n    onEvent = () => {},\n  } = options\n  const ref = {\n    current: null as unknown as History,\n  }\n  const record: HistoryRecord = R.clone(DEFAULT_HISTORY_DATA_ITEM)\n\n  const history = {\n    record,\n    add: (item: HistoryItemOptionalId) => {\n      const { currentIndex, items } = record\n      record.items = R.slice(\n        0,\n        currentIndex,\n      )(items)\n      record.items.push({\n        id: R.uuid(),\n        ...item,\n      })\n      record.currentIndex = record.items.length\n    },\n    clear: () => {\n      const {\n        current: history,\n      } = ref\n      history.set(R.clone(DEFAULT_HISTORY_DATA_ITEM))\n    },\n    set: (newHistoryRecord: HistoryRecord) => {\n      Object.keys(newHistoryRecord).forEach((key) => {\n        // @ts-ignore\n        record[key] = newHistoryRecord[key]\n      })\n    },\n    undo: () => {\n      const item = record?.items?.[record.currentIndex - 1]\n      if (item) {\n        const passed = onEvent({\n          item,\n          type: EVENT_TYPE.UNDO,\n          actions: item.undo,\n        }) ?? true\n        if (passed) {\n          record.currentIndex -= 1\n        }\n      }\n    },\n    redo: () => {\n      const { currentIndex } = record\n      const item = record?.items?.[currentIndex]\n      if (item) {\n        const passed = onEvent({\n          item,\n          type: EVENT_TYPE.REDO,\n          actions: item.do,\n        }) ?? true\n        if (passed) {\n          record.currentIndex = currentIndex + 1\n        }\n      }\n    },\n    undoAll: () => R.when(\n      R.allPass([\n        R.isNotNil,\n        () => record.items.length > record.currentIndex,\n      ]),\n      () => {\n        const {\n          items,\n        } = record\n        const relatedItems = R.slice(0, record.currentIndex + 1)(items)\n        const undoList = R.unnest(\n          R.map(\n            (item) => item.undo,\n            relatedItems,\n          ),\n        ) as UndoActions[]\n        const doList = R.unnest(\n          R.map(\n            (item) => item.do,\n            relatedItems,\n          ),\n        ) as DoActions[]\n        onEvent({\n          item: {\n            id: R.uuid,\n            do: doList,\n            undo: undoList,\n          },\n          actions: undoList,\n          items: relatedItems,\n          type: EVENT_TYPE.UNDO_ALL,\n        })\n        record.currentIndex = DEFAULT_INDEX\n      },\n    )(record),\n    redoAll: () => R.when(\n      R.allPass([\n        R.isNotNil,\n        () => record.items.length > record.currentIndex,\n      ]),\n      () => {\n        const {\n          items,\n        } = record\n        const relatedItems = R.slice(0, record.currentIndex + 1)(items)\n        const undoList = R.unnest(\n          R.map(\n            (item) => item.undo,\n            relatedItems,\n          ),\n        ) as UndoActions[]\n        const doList = R.unnest(\n          R.map(\n            (item) => item.do,\n            relatedItems,\n          ),\n        ) as DoActions[]\n        onEvent({\n          item: {\n            id: R.uuid,\n            do: doList,\n            undo: undoList,\n          },\n          actions: doList,\n          items: relatedItems,\n          type: EVENT_TYPE.REDO_ALL,\n        })\n        record.currentIndex = DEFAULT_INDEX\n      },\n    )(record),\n    delete: (ids: string[]) => {\n      record.items = record.items.filter((item, index) => {\n        const deleted = ids.includes(item.id)\n        if (deleted && index < record.currentIndex) {\n          record.currentIndex -= 1\n        }\n        return !deleted\n      })\n    },\n    getEventIdsByDoItemIds: (ids: string[]) => {\n      const events = record.items.filter((item) => {\n        const doItems = item.do.map((doItem) => doItem.id)\n        const intersection = R.intersection(doItems, ids)\n        return intersection.length > 0\n      })\n      return events.map((event) => event.id)\n    },\n    reorder: (fromIndex: number, toIndex: number) => {\n      record.items = R.reorder(fromIndex, toIndex)(record.items)\n    },\n  }\n  ref.current = history\n  return history\n}\n","import React from 'react'\nimport {\n  Modal,\n  Paper,\n  Typography,\n  Divider,\n  Slide,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Link,\n  Breadcrumbs,\n  Button,\n  Collapse,\n} from '@mui/material'\nimport { Icon } from '@components/Icon'\nimport { useGraphEditor } from '@hooks'\nimport { EVENT } from '@constants'\nimport {\n  View, DataRender, dataRenderPath, isReact,\n} from 'colay-ui'\nimport Form from '@rjsf/material-ui'\nimport ExpandLess from '@mui/icons-material/ExpandLess'\nimport ExpandMore from '@mui/icons-material/ExpandMore'\nimport * as R from 'colay/ramda'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\n\ntype SidebarItemData = {\n  label: string;\n  children?: SidebarItemData[];\n  icon?: string;\n  id: string\n} | string\n\nexport type PreferencesModalProps = {\n  isOpen?: boolean;\n  sidebar?: SidebarItemData[];\n  components?: Record<string, React.ReactNode>;\n}\n\nconst getId = (sidebarItem: SidebarItemData) => sidebarItem?.id ?? sidebarItem\n\nexport const ElementSettingsModal = (props: PreferencesModalProps) => {\n  const {\n    sidebar: sidebar_ = MOCK_SIDEBAR_DATA,\n    components = MOCK_COMPONENTS,\n  } = props\n\n  const [\n    {\n      onEvent,\n      graphEditorLocalDataRef,\n    },\n  ] = useGraphEditor(\n    (editor) => ({\n      onEvent: editor.onEvent,\n      graphEditorLocalDataRef: editor.localDataRef,\n    }),\n  )\n  const sidebar = React.useMemo(() => {\n    const normalize = (sidebar: SidebarItemData) => {\n      if (typeof sidebar === 'string') {\n        return {\n          id: sidebar,\n          label: sidebar,\n        }\n      }\n      return {\n        label: sidebar.id,\n        ...sidebar,\n        children: sidebar.children?.map((item) => normalize(item)) ?? [],\n      }\n    }\n    return sidebar_?.map((item) => normalize(item)) ?? []\n  }, [sidebar_])\n  const [state, update] = useImmer({\n    componentId: getId(sidebar[0]),\n    selectedPath: [getId(sidebar[0])],\n  })\n\n  const onSelect = React.useCallback((path) => {\n    const item = dataRenderPath(['children'], path, sidebar)\n    update((draft) => {\n      draft.selectedPath = path\n      draft.componentId = getId(item)\n    })\n  }, [])\n\n  // @ts-ignore\n  const drawer = React.useMemo(() => createDrawer({\n    sidebar,\n    onSelect,\n    selectedPath: state.selectedPath,\n  }), [sidebar, components, state.selectedPath])\n  const Component = components[state.componentId] ?? React.Fragment\n  const form = components[state.componentId]\n  return (\n    <Paper\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        width: '80vw',\n        height: '80vh',\n      }}\n    >\n      <View>\n        <Typography variant=\"h6\">Preferences</Typography>\n      </View>\n      <View\n        style={{\n          flexDirection: 'row',\n        }}\n      >\n        <View\n          style={{\n            // width: '30%',\n            marginRight: 4,\n            flexDirection: 'row',\n          }}\n        >\n          <Slide\n            in\n          >\n            {drawer}\n          </Slide>\n          <Divider\n            orientation=\"vertical\"\n            flexItem\n          />\n        </View>\n        <View>\n          {/* <Breadcrumbs aria-label=\"breadcrumb\">\n            {\n              R.dropLast(1, state.selectedPath).map((pathName) => (\n                <Link\n                  color=\"inherit\"\n                  href=\"/\"\n                >\n                  {pathName}\n                </Link>\n              ))\n            }\n            <Typography color=\"text.primary\">{R.last(state.selectedPath)}</Typography>\n          </Breadcrumbs> */}\n          {\n      !isReact.compatible(Component)\n        ? (\n          <Paper\n            style={{\n              maxWidth: '80%',\n              maxHeight: '90%',\n              overflow: 'scroll',\n              padding: 2,\n            }}\n          >\n            <Form\n              {...form}\n              style={{\n                width: '100%',\n                height: '100%',\n              }}\n              schema={R.omit(['title'])(form.schema)}\n              onSubmit={({ formData }) => {\n                onEvent({\n                  type: EVENT.ELEMENT_SETTINGS_FORM_SUBMIT,\n                  payload: {\n                    name: state.componentId,\n                    value: formData,\n                    itemIds: graphEditorLocalDataRef.current.contextMenu.itemIds,\n                  },\n                })\n                graphEditorLocalDataRef.current.contextMenu.itemIds = []\n              }}\n            >\n              {\n              form.children ?? (\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n              >\n                Save\n              </Button>\n              )\n}\n            </Form>\n          </Paper>\n        )\n        : <Component />\n      }\n          {/* <Form\n              schema={{\n                type: 'object',\n                required: [\n                  'historyTabVisible',\n                  'playlistTabVisible',\n                ],\n                properties: {\n                  labelTextSize: {\n                    type: 'number',\n                    title: 'Label Text Size',\n                  },\n                  historyTabVisible: {\n                    type: 'boolean',\n                    title: 'History Tab Visible',\n                  },\n                  playlistTabVisible: {\n                    type: 'boolean',\n                    title: 'Playlist Tab Visible',\n                  },\n                },\n              }}\n              uiSchema={{\n                'ui:options': {\n                  label: false,\n                },\n              }}\n              // onSubmit={onSubmitCallback}\n            /> */}\n        </View>\n      </View>\n    </Paper>\n  )\n}\n\ntype CreateDrawerParams = {\n  sidebar: SidebarItemData[];\n  onSelect: (name: string) => void\n  selectedPath: string[]\n}\nconst createDrawer = (params: CreateDrawerParams) => {\n  const {\n    sidebar,\n    onSelect,\n    selectedPath,\n  } = params\n  return (\n    <View>\n      {/* <Toolbar /> */}\n      <Divider />\n      <List>\n        <DataRender\n      // @ts-ignore\n          data={sidebar}\n          extraData={[selectedPath, onSelect]}\n          accessor={['children']}\n          renderItem={(params) => {\n            const {\n              children,\n            } = params\n            const item = params.item as unknown as SidebarItemData\n            return (\n              <SidebarItem\n                item={item}\n                onSelect={onSelect}\n                path={params.path}\n                selectedPath={selectedPath}\n              >\n                {children}\n              </SidebarItem>\n            )\n          }}\n        />\n      </List>\n    </View>\n  )\n}\n\ntype SidebarItemProps = {\n  item: SidebarItemData;\n  children: React.ReactNode;\n  onSelect: (name: string)=>void\n}\nconst SidebarItem = (props: SidebarItemProps) => {\n  const {\n    children,\n    item: propItem,\n    onSelect,\n    path,\n    selectedPath,\n  } = props\n  const [open, setOpen] = React.useState(false)\n  const item = (R.is(String)(propItem) ? {\n    label: propItem,\n    id: propItem,\n  } : propItem) as Exclude<SidebarItemData, string>\n  const handleClick = () => {\n    onSelect(path)\n    setOpen(!open)\n  }\n  const hasChildren = !!item.children\n  const selected = selectedPath.join('').includes(path.join(''))\n  return (\n    <>\n      <ListItem\n        button\n        onClick={handleClick}\n        selected={selected}\n      >\n        <ListItemIcon>\n          {item.icon}\n        </ListItemIcon>\n        <ListItemText primary={item.label} />\n        {hasChildren ? (open ? <ExpandLess /> : <ExpandMore />) : null}\n      </ListItem>\n      <Collapse\n        in={open}\n        timeout=\"auto\"\n        unmountOnExit\n      >\n        <List\n          component=\"div\"\n          disablePadding\n          sx={{ ml: 2 }}\n        >\n          {children}\n        </List>\n      </Collapse>\n    </>\n  )\n}\n\nconst MOCK_COMPONENTS = {\n  General: () => <div>General</div>,\n  Visualization: {\n    schema: {\n      type: 'object',\n      properties: {\n        size: {\n          title: 'Size',\n          type: 'integer',\n          minimum: 10,\n          maximum: 50,\n        },\n        fontSize: {\n          title: 'Font Size',\n          type: 'integer',\n          minimum: 10,\n          maximum: 50,\n        },\n        backgroundColor: {\n          type: 'string',\n          title: 'color picker',\n          default: '#151ce6',\n        },\n        textColor: {\n          type: 'string',\n          title: 'color picker',\n          default: '#151ce6',\n        },\n      },\n    },\n    uiSchema: {\n      size: {\n        'ui:widget': 'range',\n      },\n      fontSize: {\n        'ui:widget': 'range',\n      },\n      backgroundColor: {\n        'ui:widget': 'color',\n      },\n      textColor: {\n        'ui:widget': 'color',\n      },\n    },\n  },\n  // Visualization: () => <div>Visualization</div>,\n  Filter: () => <div>Filter</div>,\n  History: () => <div>History</div>,\n  Settings: () => <div>Settings</div>,\n}\n\nconst MOCK_SIDEBAR_DATA = [\n  {\n    icon: <Icon name=\"settings\" />,\n    id: 'General',\n    children: [\n      'Visualization',\n    ],\n  },\n  // {\n  //   icon: <Icon name=\"bookmark\" />,\n  //   id: 'Visualization',\n  //   children: [\n  //     {\n  //       icon: <Icon name=\"filter\" />,\n  //       id: 'Filter',\n  //       children: [\n  //         'History',\n  //       ],\n  //     },\n  //     'Settings',\n  //   ],\n  // },\n]\n","import { Graph } from '@components'\nimport { GraphEditorProps } from '@components/GraphEditor'\nimport GraphLayouts from '@core/layouts'\nimport {\n  ControllerState, DataItem, EditorMode, EventInfo,\n  GraphEditorRef, GraphLabelData, RDFType, RecordedEvent,\n} from '@type'\nimport {\n  getSelectedItemByElement,\n  getUndoEvents,\n  getSelectedElementInfo,\n} from '@utils'\nimport {\n  EDITOR_MODE, EVENT,\n} from '@constants'\nimport { createHistory } from '@utils/createHistory'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\nimport { Position } from 'colay-ui/type'\nimport { download } from 'colay-ui/utils'\nimport * as R from 'colay/ramda'\nimport * as PIXI from 'pixi.js'\nimport React from 'react'\nimport * as V from 'colay/vector'\nimport {\n  ElementSettingsModal,\n} from '@components/GraphEditor/modals/ElementSettingsModal'\n\n// type ControllerOptions = {\n//   // onEvent?: (info: EventInfo, draft: ControllerState) => boolean;\n// }\n\ntype UseControllerData = Pick<\nGraphEditorProps,\n'nodes'| 'edges' | 'mode'\n| 'actionBar' | 'dataBar' | 'settingsBar'\n| 'graphConfig' | 'events' | 'label' | 'playlists' | 'selectedElementIds'\n| 'modals'\n> & {\n  onEvent?: (info: EventInfo & {\n    graphEditor: GraphEditorRef;\n  }, draft: ControllerState) => boolean;\n}\n\n// export type UseControllerResult = [\n//   UseControllerData,\n//   {},\n// ]\n\nconst closeAllBars = (draft:UseControllerData) => {\n  draft.actionBar!.isOpen = false\n  draft.dataBar!.isOpen = false\n  draft.settingsBar!.isOpen = false\n}\n\nexport const useController = (\n  useControllerData: Partial<UseControllerData>,\n  _graphEditorRef?: React.MutableRefObject<GraphEditorRef>,\n  // options: ControllerOptions = {},\n) => {\n  const controllerConfig: UseControllerData = React.useMemo<UseControllerData>(\n    () => R.mergeDeepAll([\n      DEFAULT_CONTROLLER_CONFIG,\n      useControllerData,\n    ]) as UseControllerData, [], // useControllerData\n  )\n  const eventHistory = React.useMemo(() => createHistory({\n    onEvent: (event) => {\n      const {\n        actions,\n      } = event\n      actions.map(onEvent)\n    },\n  }), [])\n  const localGraphEditorRef = React.useRef(null)\n  const graphEditorRef = _graphEditorRef ?? localGraphEditorRef\n  const localDataRef = React.useRef({\n    recordedEvents: [] as RecordedEvent[],\n    // targetNode: null,\n  })\n  const [state, updateState] = useImmer(controllerConfig)\n  type UpdateFunction = (draft: UseControllerData, config: {\n    graphEditorRef: React.MutableRefObject<GraphEditorRef>\n  }) => void\n  const update = React.useCallback(async (updater: UpdateFunction) => {\n    await updateState(async (draft) => {\n      // @ts-ignore\n      await updater(draft, { graphEditorRef })\n    })\n  }, [updateState, graphEditorRef])\n  const onEvent = React.useCallback((eventInfo: EventInfo) => {\n    const {\n      type,\n      payload = {},\n      index = 0,\n      dataItem = {} as DataItem,\n      event,\n      elementId,\n      avoidEventRecording,\n      avoidHistoryRecording,\n    } = eventInfo\n    const graphEditor = graphEditorRef.current!\n    const element = elementId\n      ? graphEditor.cy.$id(`${elementId}`)\n      : null\n    // const isNode = element?.isNode()\n    // const targetPath = isNode ? 'nodes' : 'edges'\n    update(async (draft) => {\n      try {\n        if (!avoidHistoryRecording) {\n          const {\n            addHistory,\n            events: undoEvents,\n            // @ts-ignore\n          } = getUndoEvents(\n            [eventInfo], { graphEditor, controllerState: state },\n          )\n          if (addHistory) {\n            eventHistory.add({\n              do: [\n                {\n                  ...eventInfo,\n                  event,\n                  avoidEventRecording: true,\n                  avoidHistoryRecording: true,\n                },\n              ],\n              undo: undoEvents.map((e) => ({\n                ...e,\n                avoidEventRecording: true,\n                avoidHistoryRecording: true,\n              })),\n            })\n          }\n        }\n        if (\n          draft.actionBar?.eventRecording\n          && type !== EVENT.TOGGLE_RECORD_EVENTS\n          && !avoidEventRecording\n        ) {\n          localDataRef.current.recordedEvents.push({\n            ...eventInfo,\n            event,\n          })\n        }\n        const isAllowedToProcess = await controllerConfig.onEvent?.({\n          ...eventInfo,\n          graphEditor,\n          // @ts-ignore\n          update,\n          state,\n        }, draft)\n        if (isAllowedToProcess === false) {\n          return\n        }\n        const {\n          item: eventRelatedItem,\n        } = (element && getSelectedItemByElement(element, draft)) ?? {}\n        const targetDataList = eventRelatedItem?.data!// getSelectedItemByElement(element, draft).data\n        switch (type) {\n          case EVENT.REDO_EVENT:\n            eventHistory.redo()\n            break\n          case EVENT.UNDO_EVENT:\n            eventHistory.undo()\n            break\n          case EVENT.UPDATE_DATA: {\n            const {\n              selectedItem,\n            } = getSelectedElementInfo(draft, graphEditor)\n            selectedItem!.data = payload.value\n            break\n          }\n          case EVENT.ADD_DATA:\n            targetDataList.push({\n              ...payload,\n              value: [payload.value],\n            })\n            break\n          case EVENT.ADD_NODE: {\n            const {\n              items,\n              edgeItems,\n            } = payload\n            draft.nodes = draft.nodes.concat(items)\n            draft.edges = draft.edges.concat(edgeItems ?? [])\n            // const { position } = payload\n            // draft.nodes.push({\n            //   id: `${draft.nodes.length + 1}`, // R.uuid(),\n            //   position,\n            //   data: [],\n            // })\n            if (draft.mode === EDITOR_MODE.ADD) {\n              draft.mode = EDITOR_MODE.DEFAULT\n            }\n            break\n          }\n          case EVENT.DELETE_NODE: {\n            const {\n              itemIds = [],\n            } = payload as {\n              itemIds: {id: string} []\n            }\n            // const itemIds = items.map((item) => item.id)\n            // const itemIndex = draft.nodes.findIndex((node) => node.id === item.id)\n            // draft.nodes.splice(itemIndex, 1)\n            draft.nodes = draft.nodes.filter((nodeItem) => !itemIds.includes(nodeItem.id))\n            draft.edges = draft.edges.filter(\n              (edgeItem) => !itemIds.includes(edgeItem.source)\n              && !itemIds.includes(edgeItem.target),\n            )\n            if (draft.mode === EDITOR_MODE.DELETE) {\n              draft.mode = EDITOR_MODE.DEFAULT\n            }\n            break\n          }\n          case EVENT.ADD_EDGE: {\n            draft.edges = draft.edges.concat(payload.items)\n            // const {\n            //   id,\n            //   source,\n            //   target,\n            // } = payload\n            // draft.edges.push({\n            //   id,\n            //   source,\n            //   target,\n            //   data: {},\n            // })\n            if (draft.mode === EDITOR_MODE.ADD) {\n              draft.mode = EDITOR_MODE.DEFAULT\n            }\n            break\n          }\n          case EVENT.DELETE_EDGE: {\n            const {\n              itemIds = [],\n            } = payload as {\n              itemIds: {id: string} []\n            }\n            // const itemIds = items.map((item) => item.id)\n            draft.edges = draft.edges.filter((edgeItem) => !itemIds.includes(edgeItem.id))\n            if (draft.mode === EDITOR_MODE.DELETE) {\n              draft.mode = EDITOR_MODE.DEFAULT\n            }\n            break\n          }\n          case EVENT.PRESS_BACKGROUND: {\n            draft.selectedElementIds = []\n            break\n          }\n          case EVENT.ELEMENT_SELECTED_WITH_ZOOM: {\n            const {\n              itemIds,\n            } = payload\n            draft.selectedElementIds = itemIds\n            const {\n              selectedElement,\n            } = getSelectedElementInfo({\n              ...state,\n              selectedElementIds: itemIds,\n            }, graphEditor)\n            if (selectedElement) {\n              const {\n                viewport,\n              } = graphEditor\n              const TARGET_SIZE = 2000 // viewport.hitArea.width / 2// 800\n              // const MARGIN_SIZE = 180\n\n              // element.neighborhood().layout({\n              //   ...Graph.Layouts.circle,\n              //   boundingBox: {\n              //     x1: center.x - TARGET_SIZE / 2,\n              //     y1: center.y - TARGET_SIZE / 3,\n              //     w: TARGET_SIZE / 2,\n              //     h: TARGET_SIZE / 2,\n              //   },\n              // }).start()\n              // if (viewport.hitArea.width === TARGET_SIZE) {\n              //   TARGET_SIZE += 500\n              // }\n              let position\n              if (selectedElement.isNode()) {\n                position = selectedElement.position()\n              } else {\n                position = V.midpoint(\n                  selectedElement.source().position(),\n                )(selectedElement.target().position())\n              }\n              const center = {\n                x: position.x + TARGET_SIZE / 4,\n                y: position.y,\n              }\n              const centerPoint = new PIXI.Point(center.x, center.y)\n              viewport.center = centerPoint\n              // viewport.snapZoom({\n              //   center: centerPoint,\n              //   width: TARGET_SIZE,\n              //   forceStart: true,\n              //   time: Graph.Layouts.grid.animationDuration + 500,\n              //   removeOnComplete: true,\n              //   removeOnInterrupt: true,\n              //   noMove: false,\n              // })\n            }\n\n            break\n          }\n          case EVENT.ELEMENT_SELECTED: {\n            const {\n              itemIds,\n            } = payload\n            draft.selectedElementIds = itemIds\n            const {\n              selectedElement,\n            } = getSelectedElementInfo({\n              ...state,\n              selectedElementIds: itemIds,\n            }, graphEditor)\n            if (event && event.data!.originalEvent.metaKey && selectedElement?.isNode()) {\n              draft.dataBar!.isOpen = true\n              const {\n                viewport,\n              } = graphEditor\n              const TARGET_SIZE = 2000 // viewport.hitArea.width / 2// 800\n              // const MARGIN_SIZE = 180\n              const position = selectedElement.position()\n              const center = {\n                x: position.x + TARGET_SIZE / 4,\n                y: position.y,\n              }\n              selectedElement.neighborhood().layout({\n                ...Graph.Layouts.circle,\n                boundingBox: {\n                  x1: center.x - TARGET_SIZE / 2,\n                  y1: center.y - TARGET_SIZE / 3,\n                  w: TARGET_SIZE / 2,\n                  h: TARGET_SIZE / 2,\n                },\n              }).start()\n              viewport.snapZoom({\n                center: new PIXI.Point(center.x, center.y),\n                width: TARGET_SIZE,\n                forceStart: true,\n                time: Graph.Layouts.grid.animationDuration + 500,\n                removeOnComplete: true,\n                removeOnInterrupt: true,\n              })\n            }\n\n            break\n          }\n          case EVENT.MODE_CHANGED: {\n            draft.mode = payload.value\n            // localDataRef.current.targetNode.current = null\n            break\n          }\n          case EVENT.CHANGE_DATA_NAME:\n            targetDataList[index].name = payload.value\n            break\n          case EVENT.CHANGE_DATA_VALUE:\n            targetDataList[index].value[payload.valueIndex] = getValueByType(\n              dataItem.type!,\n              payload.value,\n            )\n            break\n          case EVENT.ADD_DATA_VALUE:\n            targetDataList[index].value.push(payload.value)\n            break\n          case EVENT.DELETE_DATA_VALUE:\n            targetDataList[index].value.splice(payload.valueIndex, 1)\n            break\n          case EVENT.DATA_VALUE_UP: {\n            const { value } = targetDataList[index]\n            const { length } = value\n            const temporary = value[payload.valueIndex]\n            const changeIndex = (payload.valueIndex === 0\n              ? (length - 1)\n              : (payload.valueIndex - 1)) % length\n            value[payload.valueIndex] = value[changeIndex]\n            value[changeIndex] = temporary\n            break\n          }\n          case EVENT.DATA_VALUE_DOWN: {\n            const { value } = targetDataList[index]\n            const { length } = value\n            const temporary = value[payload.valueIndex]\n            const changeIndex = (payload.valueIndex + 1) % length\n            value[payload.valueIndex] = value[changeIndex]\n            value[changeIndex] = temporary\n            break\n          }\n          case EVENT.DELETE_DATA:\n            targetDataList.splice(index, 1)\n            break\n\n          case EVENT.CHANGE_DATA_NAME_ADDITIONAL: {\n            const additionalItem = targetDataList[index]!.additional![payload.index]!\n            additionalItem.name = payload.value\n            break\n          }\n          case EVENT.CHANGE_DATA_VALUE_ADDITIONAL: {\n            const additionalItem = targetDataList[index]!.additional![payload.index]\n            targetDataList[index]!.additional![\n              payload.index\n            ].value[payload.valueIndex] = getValueByType(\n              additionalItem.type, payload.value,\n            )\n            break\n          }\n          case EVENT.ADD_DATA_ADDITIONAL:\n            targetDataList[index]!.additional!.push(payload)\n            break\n          case EVENT.ADD_DATA_VALUE_ADDITIONAL: {\n            targetDataList[index]!.additional![payload.index].value.push(payload.value)\n            break\n          }\n          case EVENT.DELETE_DATA_VALUE_ADDITIONAL:\n            targetDataList[index]!.additional![payload.index].value.splice(payload.valueIndex, 1)\n            break\n          case EVENT.DELETE_DATA_ADDITIONAL:\n            targetDataList[index]!.additional!.splice(payload.index, 1)\n            break\n          case EVENT.TOGGLE_FILTER_BAR:\n            draft.settingsBar!.isOpen = !draft.settingsBar?.isOpen\n            break\n          case EVENT.TOGGLE_DATA_BAR:\n            draft.dataBar!.isOpen = !draft.dataBar?.isOpen\n            break\n          case EVENT.TOGGLE_ACTION_BAR:\n            draft.actionBar!.isOpen = !draft.actionBar?.isOpen\n            break\n          case EVENT.IMPORT_DATA:\n\n            R.mapObjIndexed((value, key) => {\n              // @ts-ignore\n              draft[key] = value\n            })(payload.value)\n            const {\n              eventHistory: eventHistoryData,\n            } = payload.value ?? {}\n            eventHistory.set({\n              currentIndex: eventHistoryData.events.length,\n              items: eventHistoryData.events.map((event, i) => ({\n                id: R.uuid(),\n                do: [event],\n                undo: [eventHistoryData.undoEvents[i]],\n              })),\n            })\n            break\n          case EVENT.IMPORT_EVENTS:\n            closeAllBars(draft)\n            draft.events = [...(payload.value ?? [])]\n            break\n          case EVENT.PLAY_EVENTS:\n            closeAllBars(draft)\n            draft.events = [...(payload.events ?? [])]\n            break\n          case EVENT.APPLY_EVENTS:\n            payload.events.map((event: EventInfo) => onEvent(event))\n            break\n          case EVENT.EXPORT_DATA:\n            download(payload.value, 'perfect-graph.json')\n            break\n          case EVENT.TOGGLE_RECORD:\n            draft.actionBar!.recording = !draft.actionBar?.recording\n            break\n          case EVENT.TOGGLE_RECORD_EVENTS:\n            if (draft.actionBar?.eventRecording) {\n              download(JSON.stringify(localDataRef.current.recordedEvents), 'recorded-events.json')\n              localDataRef.current.recordedEvents = []\n            }\n            draft.actionBar!.eventRecording = !draft.actionBar?.eventRecording\n            break\n          case EVENT.RECORD_FINISHED:\n            download(eventInfo.payload.value, 'perfect-graph.mp4')\n            break\n          case EVENT.LAYOUT_CHANGED: {\n            let layout: any\n            if (payload.value.name) {\n              layout = R.pickBy((val) => R.isNotNil(val))({\n                // @ts-ignore\n                ...GraphLayouts[payload.value.name],\n                ...payload.value,\n              })\n            }\n            draft.graphConfig!.layout = layout\n            break\n          }\n          case EVENT.SET_POSITIONS_IMPERATIVELY: {\n            const {\n              positions,\n              oldLayout,\n            } = payload\n            type PositionItem = {\n              elementId: string;\n              position: Position;\n            }\n            positions.forEach((positionItem: PositionItem) => {\n              graphEditor?.cy.$id(positionItem.elementId).position(positionItem.position)\n            })\n            draft.graphConfig!.layout = oldLayout\n            break\n          }\n\n          case EVENT.SET_NODE_LOCAL_LABEL: {\n            const {\n              value,\n            } = payload\n            draft.label!.nodes[eventRelatedItem!.id] = value\n            break\n          }\n          case EVENT.CLEAR_NODE_LOCAL_LABEL: {\n            delete draft.label!.nodes[eventRelatedItem!.id]\n            break\n          }\n          case EVENT.TOGGLE_NODE_GLOBAL_LABEL_FIRST: {\n            draft.label!.isGlobalFirst!.nodes = !draft.label?.isGlobalFirst!.nodes\n            break\n          }\n          case EVENT.SET_NODE_GLOBAL_LABEL: {\n            const {\n              value,\n            } = payload\n            draft.label!.global.nodes = value\n            break\n          }\n          case EVENT.CLEAR_NODE_GLOBAL_LABEL: {\n            draft.label!.global!.nodes! = []\n            break\n          }\n          case EVENT.SELECT_CLUSTER: {\n            const {\n              itemIds = [],\n            } = payload\n            const selectedClusters = draft.graphConfig?.clusters?.filter(\n              (cluster) => itemIds.includes(cluster.id),\n            )\n            draft.selectedElementIds = R.concatAll(\n              selectedClusters!.map((cluster) => cluster.ids),\n            )\n            break\n          }\n          case EVENT.DELETE_CLUSTER: {\n            const {\n              itemIds = [],\n            } = payload\n            draft.graphConfig!.clusters = draft.graphConfig?.clusters?.filter(\n              (cluster) => !itemIds.includes(cluster.id),\n            )\n            break\n          }\n          case EVENT.DELETE_CLUSTER_ELEMENT: {\n            const {\n              clusterId,\n              itemIds = [],\n            } = payload\n            const selectedCluster = draft.graphConfig?.clusters?.find(\n              (cluster) => cluster.id === clusterId,\n            )\n            selectedCluster!.ids = selectedCluster!.ids.filter(\n              (id) => !itemIds.includes(id),\n            )\n            break\n          }\n          case EVENT.CREATE_CLUSTER: {\n            const {\n              items = [],\n            } = payload\n            draft.graphConfig!.clusters = draft.graphConfig?.clusters?.concat(items)\n            break\n          }\n          case EVENT.PRESS_ADD_CLUSTER_ELEMENT: {\n            if (draft.mode === EDITOR_MODE.ADD_CLUSTER_ELEMENT) {\n              draft.mode = EDITOR_MODE.DEFAULT\n              return\n            }\n            draft.mode = EDITOR_MODE.ADD_CLUSTER_ELEMENT\n            break\n          }\n          case EVENT.ADD_CLUSTER_ELEMENT: {\n            const {\n              clusterId,\n              itemIds,\n            } = payload\n            const selectedCluster = draft.graphConfig?.clusters?.find(\n              (cluster) => cluster.id === clusterId,\n            )\n            selectedCluster!.ids = R.union((selectedCluster?.ids ?? []), itemIds)\n            break\n          }\n          case EVENT.CHANGE_CLUSTER_VISIBILITY: {\n            const {\n              clusterId,\n              value,\n            } = payload\n            const selectedCluster = draft.graphConfig?.clusters?.find(\n              (cluster) => cluster.id === clusterId,\n            )\n            selectedCluster!.visible = value\n            break\n          }\n          case EVENT.DELETE_HISTORY_ITEM: {\n            const {\n              itemIds = [],\n            } = payload\n            eventHistory.delete(eventHistory.getEventIdsByDoItemIds(itemIds))\n            break\n          }\n          case EVENT.REORDER_HISTORY_ITEM: {\n            const {\n              fromIndex,\n              toIndex,\n            } = payload\n            eventHistory.reorder(\n              fromIndex,\n              toIndex,\n            )\n            break\n          }\n          // case EVENT.CREATE_CLUSTER_BY_ALGORITHM: {\n          // const {\n          //   config = {},\n          //   name,\n          // } = payload\n          // const clusterResult = Clusters[name].getByItem({\n          //   cy: graphEditor?.cy,\n          //   nodes: draft.nodes,\n          //   edges: draft.edges,\n          //   ...config,\n          // })\n          //   // draft.graphConfig.layout = oldLayout\n          //   break\n          // }\n          case EVENT.REORDER_CLUSTER: {\n            const {\n              fromIndex,\n              toIndex,\n            } = payload\n            draft.graphConfig!.clusters = R.reorder(\n              fromIndex,\n              toIndex,\n              draft.graphConfig!.clusters!,\n            )\n            break\n          }\n          case EVENT.CREATE_PLAYLIST: {\n            const {\n              items = [],\n            } = payload\n            draft.playlists = draft.playlists!.concat(items)\n            break\n          }\n          case EVENT.REORDER_PLAYLIST: {\n            const {\n              fromIndex,\n              toIndex,\n            } = payload\n            draft.playlists = R.reorder(\n              fromIndex,\n              toIndex,\n              draft.playlists!,\n            )\n            break\n          }\n          case EVENT.DELETE_PLAYLIST: {\n            const {\n              itemIds = [],\n            } = payload\n            draft.playlists = draft.playlists!.filter((playlist) => !itemIds.includes(playlist.id))\n            break\n          }\n          case EVENT.ELEMENT_SETTINGS: {\n            if (draft.modals?.ElementSettings) {\n              draft.modals.ElementSettings.isOpen = true\n            }\n            break\n          }\n          case EVENT.ELEMENT_SETTINGS_FORM_SUBMIT: {\n            const {\n              name,\n              value,\n            } = payload\n            console.log('v', name, value)\n            // draft.modals.ElementSettings.isOpen = true\n            switch (name) { \n              case 'Visualization':\n\n                break;\n            \n              default:\n                break;\n            }\n            break\n          }\n          case EVENT.CLOSE_MODAL: {\n            const {\n              name,\n            } = payload\n            draft.modals[name].isOpen = false\n            break\n          }\n          default:\n            break\n        }\n      } catch (error) {\n        console.log('error', error)\n      }\n    })\n  }, [state])\n  return [\n    // @ts-ignore\n    {\n      ...state,\n      ...(\n        !_graphEditorRef\n          ? { ref: localGraphEditorRef }\n          : {}\n      ),\n      eventHistory: {\n        currentIndex: eventHistory.record.currentIndex - 1,\n        events: R.unnest(\n          R.map((item) => item.do, eventHistory.record.items),\n        ),\n        undoEvents: R.unnest(\n          R.map((item) => item.undo, eventHistory.record.items),\n        ),\n      },\n      onEvent,\n    } as Pick<GraphEditorProps, 'nodes' | 'edges' | 'onEvent' | 'graphConfig' | 'eventHistory'>,\n    {\n      update,\n      onEvent,\n    },\n  ]\n}\n\nconst getValueByType = (type: RDFType, value: string) => value\n\nconst DEFAULT_CONTROLLER_CONFIG: UseControllerData = {\n  nodes: [],\n  edges: [],\n  isLoading: false,\n  label: {\n    global: { nodes: ['id'], edges: ['id'] },\n    nodes: {},\n    edges: {},\n    isGlobalFirst: {\n      edges: false,\n      nodes: false,\n    },\n  } as GraphLabelData,\n  actionBar: {\n    isOpen: false,\n  },\n  dataBar: {\n    isOpen: false,\n  },\n  settingsBar: {\n    isOpen: false,\n  },\n  mode: EDITOR_MODE.DEFAULT as EditorMode,\n  selectedElementIds: [] as string[] | undefined,\n  graphConfig: {\n    clusters: [],\n  },\n  playlists: [\n    // {\n    //   id: R.uuid(),\n    //   name: 'My playlist',\n    //   events: MOCK_DATA.events,\n    // },\n    // {\n    //   id: R.uuid(),\n    //   name: 'My playlist2',\n    //   events: MOCK_DATA.events,\n    // },\n  ],\n  modals: {\n    ElementSettings: {\n      isOpen: false,\n      render: ElementSettingsModal,\n    },\n  },\n}\n","import * as R from 'colay/ramda'\n// import mergeAllOf from 'json-schema-merge-allof'\n// @ts-ignore\nimport toJSONSchema from 'to-json-schema'\n\nexport const createSchema = (itemList: any[]) => {\n  const options = {\n    objects: { additionalProperties: false },\n    arrays: { mode: 'tuple' },\n  }\n  return {\n    ...toJSONSchema(R.mergeAll(itemList), options),\n    title: 'Filter',\n  }\n  // const allOf = itemList.map((item) => {\n  //   console.log('b', item)\n  //   let baseSchema\n  //   try {\n  //     baseSchema = toJSONSchema(item, options)\n  //   } catch (error) {\n  //     baseSchema = null\n  //   }\n  //   return baseSchema\n  // }).filter((item) => item !== null)\n  // const schema = {\n  //   type: ['object'],\n  //   // additionalProperties: {\n  //   //   type: 'string',\n  //   //   minLength: 5\n  //   // },\n  //   title: 'Filter',\n  //   allOf,\n  // }\n  // return mergeAllOf(schema)\n}\n// export const createSchema = (itemList: object[]) => {\n//   let required: string[] = []\n//   let baseSchema = { properties: { } }\n//   itemList.map((item: object) => {\n//     const keys = Object.keys(item)\n//     if (R.isEmpty(required)) {\n//       required = keys\n//       // @ts-ignore\n//       baseSchema = toJSONSchema(item)\n//       return\n//     }\n//     const schema = toJSONSchema(item)\n//     baseSchema.properties = {\n//       ...baseSchema.properties,\n//       ...schema.properties,\n//     }\n//     required = R.intersection(required, keys)\n//   })\n//   return {\n//     ...baseSchema,\n//     required,\n//   }\n// }\n","import React from 'react'\nimport * as R from 'colay/ramda'\nimport * as PIXI from 'pixi.js'\nimport { Graph,  } from '../../src/components'\nimport { RenderNode as RenderNodeType,  } from '../../src/type'\n\n\nexport type RenderNodeProps = Parameters<RenderNodeType>[0]\n\nconst DEFAULT_FONT_SIZE = 20\nconst TOP_SCALE = 3.1\nexport const RenderNode = (props: RenderNodeProps) => {\n  const {\n    item, element, cy, theme,\n    visualization, \n    filtering,\n    labelPath,\n    label,\n   graphRef ,\n } = props\n  const text = R.takeLast(6, `${label}`)//item.id\n  const size = calculateNodeSize(item.data, visualization.nodeSize)\n  const color = visualization.nodeColor ? calculateColor(\n    item.data,\n    visualization.nodeColor\n  ) : theme.palette.background.paper\n  const hasSelectedEdge = element.connectedEdges(':selected').length > 0\n  const textRef = React.useRef(null)\n  const localDataRef = React.useRef({\n    scale: {\n      x: 1,\n      y: 1\n    },\n    text: {\n      top: - DEFAULT_FONT_SIZE * TOP_SCALE,\n      left:- DEFAULT_FONT_SIZE / 2, \n    }\n  })\n  React.useEffect(() => {\n    const onZoom = () => {\n        const xScale = 1/graphRef.current.viewport.scale.x\n        const yScale = 1/graphRef.current.viewport.scale.y\n        localDataRef.current.scale.x = xScale\n        localDataRef.current.scale.y = yScale\n        if (xScale >= 1 && xScale <= 5) {\n          textRef.current.scale.x = xScale\n          textRef.current.scale.y = yScale\n          const top =  - DEFAULT_FONT_SIZE * yScale\n          const left =  - (DEFAULT_FONT_SIZE / 2) * xScale\n          textRef.current.x = left\n          textRef.current.y = top\n          return\n        }\n    }\n    if (graphRef.current.viewport) {\n      onZoom()\n      graphRef.current.viewport.on('zoomed',onZoom)\n    }\n    return () => {\n      if (graphRef.current.viewport) {\n        graphRef.current.viewport.off('zoomed',onZoom)\n      }\n    }\n  }, [graphRef.current.viewport])\n  return (\n    <Graph.View\n      style={{\n        width: size,\n        height: size,\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex',\n        backgroundColor: hasSelectedEdge\n        ? theme.palette.secondary.main\n        : (\n          element.selected()\n          ? theme.palette.primary.main\n          : (\n            element.hovered()\n            ? theme.palette.secondary.main\n            : color\n            )\n          ),\n        borderRadius: size,\n      }}\n      pointertap={(e) => {\n        cy.$(':selected').unselect()\n        element.select()\n      }}\n    >\n      <Graph.Text\n        ref={textRef}\n        style={{\n          position: 'absolute',\n          left: localDataRef.current.text.left,\n          top: localDataRef.current.text.top  - size/3,\n          fontSize: DEFAULT_FONT_SIZE\n        }}\n        isSprite\n      >\n        {text}\n      </Graph.Text>\n    </Graph.View>\n  )\n}\n\nconst NODE_SIZE = {\n  width: 80,\n  height: 80,\n}\n\nconst NODE_SIZE_RANGE_MAP = {\n  size: [60, 250],\n  community: [0, 10],\n  in_degree: [0, 10],\n  out_degree: [0, 10],\n  degree: [0, 20],\n  year: [\n    1969,\n    2015\n  ],\n}\nconst calculateNodeSize = (data: object, fieldName?: keyof typeof NODE_SIZE_RANGE_MAP) => {\n  if (!fieldName) {\n    return NODE_SIZE_RANGE_MAP.size[0]\n  }\n  const fieldRange = NODE_SIZE_RANGE_MAP[fieldName]\n  const sizeRangeGap = NODE_SIZE_RANGE_MAP.size[1] - NODE_SIZE_RANGE_MAP.size[0]\n  const fieldRangeGap = fieldRange[1] - fieldRange[0]\n  const fieldRangeValue = (data[fieldName] ?? fieldRange[0]) - fieldRange[0]\n  return  ((fieldRangeValue / fieldRangeGap) * sizeRangeGap) + NODE_SIZE_RANGE_MAP.size[0]\n}\nconst calculateColor = (data: object, fieldName?: keyof typeof NODE_SIZE_RANGE_MAP) => {\n  if (!fieldName) {\n    return perc2color(0)\n  }\n  const fieldRange = NODE_SIZE_RANGE_MAP[fieldName]\n  const sizeRangeGap = NODE_SIZE_RANGE_MAP.size[1] - NODE_SIZE_RANGE_MAP.size[0]\n  const fieldRangeGap = fieldRange[1] - fieldRange[0]\n  const fieldRangeValue = (data[fieldName] ?? fieldRange[0]) - fieldRange[0]\n  return  perc2color((fieldRangeValue / fieldRangeGap) * 100)\n}\nconst perc2color = (\n  perc: number,\n  min = 20, \n  max = 80\n) => {\n  var base = (max - min);\n\n  if (base === 0) { perc = 100; }\n  else {\n      perc = (perc - min) / base * 100; \n  }\n  var r, g, b = 0;\n  if (perc < 50) {\n      r = 255;\n      g = Math.round(5.1 * perc);\n  }\n  else {\n      g = 255;\n      r = Math.round(510 - 5.10 * perc);\n  }\n  var h = r * 0x10000 + g * 0x100 + b * 0x1;\n  return '#' + ('000000' + h.toString(16)).slice(-6);\n}\n","import React from 'react'\nimport * as R from 'colay/ramda'\nimport * as PIXI from 'pixi.js'\nimport { Graph,  } from '../../src/components'\nimport { RenderEdge as RenderEdgeType,  } from '../../src/type'\n\n\nexport type RenderEdgeProps = Parameters<RenderEdgeType>[0]\n\nconst DEFAULT_FONT_SIZE = 16\n\nexport const RenderEdge = ({\n   item, element, cy, theme,\n   visualization, \n   filtering,\n  graphRef \n}: RenderEdgeProps) => {\n  const text = R.takeLast(6, item.id)\n  const textRef = React.useRef(null)\n  const configRef = React.useRef({\n    fontSize: DEFAULT_FONT_SIZE\n  })\n  React.useEffect(() => {\n    const onZoom = () => {\n      const xScale = 1/graphRef.current.viewport.scale.x\n        const yScale = 1/graphRef.current.viewport.scale.y\n        if (xScale >= 1 && xScale <= 5){\n          textRef.current.scale.x = xScale\n          textRef.current.scale.y = yScale\n        }\n    }\n    if (graphRef.current.viewport) {\n      onZoom()\n      graphRef.current.viewport.on('zoomed', onZoom)\n    }\n    return () => {\n      if (graphRef.current.viewport) {\n        graphRef.current.viewport.off('zoomed', onZoom)\n      }\n    }\n    \n  }, [graphRef.current.viewport])\n  \n  return (\n    <Graph.View\n              interactive\n              style={{\n                position: 'absolute',\n                justifyContent: 'center',\n                alignItems: 'center',\n                display: 'flex',\n              }}\n              pointertap={() => {\n                cy.$(':selected').unselect()\n                element.select()\n              }}\n            >\n              <Graph.Text\n                ref={textRef}\n                style={{\n                  // position: 'absolute',\n                  // top: -40,\n                  // backgroundColor: DefaultTheme.palette.background.paper,\n                  fontSize: DEFAULT_FONT_SIZE\n                }}\n                isSprite\n              >\n                {text}\n              </Graph.Text>\n            </Graph.View>\n  )\n}\n\n","import Amplify, { API } from \"aws-amplify\";\n// import awsExports from \"./aws-exports\";\n\nconst API_AUTH_MODE = {\n  API_KEY: 'API_KEY'\n} as const\n\nconst convertJSONStringFields = (item) => {\n  return {\n    ...item,\n    ...(item.position ? { position: JSON.parse(item.position) } : {}),\n    data: JSON.parse(item.data)\n  }\n}\n\nconst LIST_CASES = `query QueryNetworkByUserInput(\n  $DataSources: [String]\n  $Keywords: String\n  $Articles: String\n  $Eclis: String\n  $DegreesSources: Int\n  $DegreesTargets: Int\n  $DateStart: AWSDate\n  $DateEnd: AWSDate\n  $Instances: [String]\n  $Domains: [String]\n  $Doctypes: [String]\n) {\n  queryNetworkByUserInput(\n    DataSources: $DataSources\n    Keywords: $Keywords\n    Articles: $Articles\n    Eclis: $Eclis\n    DegreesSources: $DegreesSources\n    DegreesTargets: $DegreesTargets\n    DateStart: $DateStart\n    DateEnd: $DateEnd\n    Instances: $Instances\n    Domains: $Domains\n    Doctypes: $Doctypes\n  ) {\n    nodes {\n      id\n      data\n    }\n    edges {\n      id\n      source\n      target\n      data\n    }\n    statistics\n    message\n  }\n}`\n\nconst GET_ELEMENT_DATA = `query GetElementData($id: String) {\n  fetchNodeData(Ecli: $id) {\n    data\n    id\n  }\n}`\n\nconst TEST_AUTH = `query TestAuth($id: String) {\n  testAuth(Ecli: $id) {\n    data\n    id\n  }\n}`\n\ntype listCasesVariables = {\n  DataSources: string[];\n}\n\nexport async function listCases(variables: listCasesVariables) {\n  try {\n    console.log(variables)\n    const listCasesResult = await API.graphql({\n      query: LIST_CASES,\n      // authMode: API_AUTH_MODE.API_KEY,\n      variables\n    })\n\n    const caseResults = listCasesResult.data.queryNetworkByUserInput\n    console.log(caseResults)\n\n    return {\n      nodes: caseResults.nodes.map(convertJSONStringFields),\n      edges: caseResults.edges.map(convertJSONStringFields),\n      networkStatistics: JSON.parse(caseResults.statistics),\n      message: caseResults.message,\n      // edges: project.edges.items.map(convertJSONStringFields),\n    }\n\n    // return caseResults.map(project => ({\n    //   // ...project,\n    //   nodes: project.nodes.items.map(convertJSONStringFields),\n    //   // edges: project.edges.items.map(convertJSONStringFields),\n    // }))\n  } catch (err) {\n    console.log('error creating node:', err)\n  }\n}\n\nconst COMPLEX_QUERY = `query ListCases($query) {\n  complexQuery(query: $query) {\n    items {\n      abstract\n      country\n      court\n      date\n      doctype\n      id\n      subject\n    }\n  }\n}`\n\nexport async function complexQuery(query: any) {\n  try {\n    const listCasesResult = await API.graphql({\n      query: COMPLEX_QUERY,\n      // authMode: API_AUTH_MODE.API_KEY,\n      variables: query\n    })\n    const caseResults = listCasesResult.data.listCaselaws.items\n    return caseResults\n    // return caseResults.map(project => ({\n    //   // ...project,\n    //   nodes: project.nodes.items.map(convertJSONStringFields),\n    //   // edges: project.edges.items.map(convertJSONStringFields),\n    // }))\n  } catch (err) {\n    console.log('error creating node:', err)\n  }\n}\n\ntype GetElementDataVariables = {\n  id: string;\n}\n\nexport async function getElementData(variables: GetElementDataVariables) {\n  try {\n    const elementDataResult = await API.graphql({\n      query: GET_ELEMENT_DATA,\n      // authMode: API_AUTH_MODE.API_KEY,\n      variables\n    })\n    const result = elementDataResult.data.fetchNodeData.data\n    return result ? JSON.parse(result) : {}\n    // return caseResults.map(project => ({\n    //   // ...project,\n    //   nodes: project.nodes.items.map(convertJSONStringFields),\n    //   // edges: project.edges.items.map(convertJSONStringFields),\n    // }))\n  } catch (err) {\n    console.log('error getElementData node:', err)\n  }\n}\n\n\nexport async function testAuth(variables: GetElementDataVariables) {\n  try {\n    const elementDataResult = await API.graphql({\n      query: TEST_AUTH,\n      // authMode: API_AUTH_MODE.API_KEY,\n      variables\n    })\n    const result = elementDataResult.data.testAuth.data\n    return result ? JSON.parse(result) : {}\n  } catch (err) {\n    console.log('error testAuth:', err)\n  }\n}","import React from 'react'\nimport { Button, Slider, Typography } from '@mui/material'\n\nconst SliderUIField = ({ formData, schema, onChange, name }) => {\n\n  return (\n    <>\n      <Typography id={`${schema.title}-continuous-slider`} gutterBottom>\n        {schema.title ?? name}\n      </Typography>\n      <Slider\n        value={formData ?? [schema.minimum, schema.maximum]}\n        onChange={(e) => {\n          onChange(e.target.value)\n        }}\n        valueLabelDisplay=\"auto\"\n        aria-labelledby={`${schema.title}-continuous-slider`}\n        min={schema.minimum}\n        max={schema.maximum}\n      />\n    </>\n  )\n}\nexport const getQueryBuilderSchema = () => {\n  return {\n    // children: <div></div>,\n    schema: {\n      title: 'Fetch Data',\n      type: 'object',\n      required: [\n        // 'title',\n        // 'year',\n        // 'rechtsgebied',\n        // 'adjustLayout',\n      ],\n      additionalProperties: false,\n      properties: {\n        DataSources: {\n          type: 'array',\n          title: 'Data sources',\n          uniqueItems: true,\n          items: {\n            enum: [\n              'RS',\n              'ECHR',\n              'Eurlex'\n            ],\n            enumNames: [\n              'Rechtspraak',\n              'European Court of Human Rights',\n              'Eurlex'\n            ],\n            type: 'string'\n          },\n        },\n        Eclis: {\n          type: 'string',\n          title: 'ECLIs'\n        },\n        Keywords: {\n          type: 'string',\n          title: 'Keywords'\n        },\n        Articles: {\n          type: 'string',\n          title: 'Articles'\n        },\n        Date: {\n          type: 'array',\n          title: 'Date',\n          items: {\n            type: 'number',\n          },\n          minimum: 1969,\n          maximum: 2015,\n        },\n        Instances: {\n          type: 'array',\n          title: 'Instances',\n          uniqueItems: true,\n          items: {\n            enum: [\n              '',\n              'Hoge Raad',\n              'Raad van State',\n              'Centrale Raad van Beroep',\n              'College van Beroep voor het bedrijfsleven',\n              'Gerechtshof Arnhem-Leeuwarden',\n              'Gerechtshof Amsterdam'\n            ],\n            type: 'string'\n          },\n        },\n        Domains: {\n          type: 'array',\n          title: 'Domains',\n          uniqueItems: true,\n          items: {\n            enum: [\n              '',\n              'Not',\n              'Sure',\n              'What'\n            ],\n            type: 'string'\n          },\n        },\n        Doctypes: {\n          type: 'array',\n          title: 'Document types',\n          uniqueItems: true,\n          items: {\n            enum: [\n              '',\n              'DEC',\n              'OPI'\n            ],\n            enumNames: [\n              '',\n              'Decision',\n              'Opinion'\n            ],\n            type: 'string'\n          },\n        },\n        DegreesSources: {\n          type: 'integer',\n          title: 'Degrees Sources',\n          minimum: 1,\n          maximum: 5,\n        },\n        DegreesTargets: {\n          type: 'integer',\n          title: 'Degrees Targets',\n          minimum: 1,\n          maximum: 5,\n        },\n      },\n    },\n    uiSchema: {\n      'Date': {\n        'ui:field': SliderUIField,\n      },\n      // 'degreesSources': {\n      //   'ui:field': SliderUIField,\n      // },\n      // 'degreesTargets': {\n      //   'ui:field': SliderUIField,\n      // },\n      // 'source':{\n      //   'ui:widget': 'checkboxes'\n      // },\n      // 'liPermission':{\n      //   'ui:widget': 'select'\n      // },\n    }\n  }\n}","// @ts-nocheck\nimport React from 'react'\nimport Form from '@rjsf/material-ui'\nimport * as API from '../API'\nimport { Modal, Button, Box, Typography, TextField, Paper,IconButton } from '@mui/material'\nimport CloseIcon from '@mui/icons-material/Close'\nimport { getQueryBuilderSchema } from './constants'\n\nexport type QueryBuilderProps = {\n  query: any;\n  onStart: () => void;\n  onError: (e: Error) => void;\n  onFinish: (data: any) => void;\n  onClose: () => void;\n  isOpen: boolean;\n}\n\nconst transformData = (data) => {\n  const date = data.Date;\n  console.log(date)\n  return {\n    \"DateStart\": `${date[0]}-01-01`,\n    \"DateEnd\": `${date[1]}-12-31`,\n    ...data\n  }\n}\n\nexport const QueryBuilder = (props: QueryBuilderProps) => {\n  const {\n    isOpen,\n    onStart,\n    onError,\n    onFinish,\n    query,\n    onClose\n  } = props\n\n  const [state, setState] = React.useState(query)\n  return (\n    <Modal\n      open={isOpen}\n      // onClose={onClose}\n      style={{\n        display: 'flex',\n        // flexDirection: 'column-reverse',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n      BackdropProps={{\n        // style: {\n        //   backgroundColor: 'rgba(0, 0, 0, 0)',\n        // },\n        // onClick: () => {\n        // },\n      }}\n    >\n      <Paper style={{\n        display: 'flex',\n        flexDirection: 'column',\n        width: '80%',\n        height: '80%',\n        padding: 10,\n        overflow: 'scroll'\n      }}\n      >\n        \n        <Box\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'space-between',\n            marginBottom: 10\n          }}\n        >\n          <Typography variant=\"h6\">Query Builder</Typography>\n          <IconButton \n            aria-label=\"Example\"\n            onClick={onClose}\n            // style={{\n            //   position: 'absolute',\n            //   right: 24,\n            //   top: 24\n            // }}\n          >\n            <CloseIcon  />\n          </IconButton>\n        </Box>\n        <Box\n          style={{\n            display: 'flex',\n            flexDirection: 'column'\n          }}\n        >\n          <Form\n            schema={getQueryBuilderSchema().schema}\n            uiSchema={getQueryBuilderSchema().uiSchema}\n            onChange={e => setState(e.formData)}\n            formData={state}\n            onSubmit={async e => {\n              onStart()\n              \n              try {\n                let casesData = await API.listCases(transformData(e.formData))\n                // let casesData = prepareData(cases)\n                // console.log('logCasesData',casesData)\n                if (casesData.nodes.length == 0) {\n                  throw new Error(\"No cases returned\")\n                }\n                else {\n                  onFinish({\n                    nodes: casesData.nodes,\n                    edges: casesData.edges,\n                    networkStatistics: casesData.networkStatistics,\n                    message: casesData.message,\n                  })\n                }\n              } catch (e) {\n                console.log(e)\n                onError(e)\n              }\n            }}\n          />\n        </Box>\n      </Paper>\n    </Modal>\n\n  )\n\n}\n\n\n","import {\n  Modal\n} from '@mui/material';\nimport React from 'react';\n\n\ntype HelpModalProps = {\n  isOpen: boolean\n  videoId: string\n  onClose: () => void\n}\n\nexport const HelpModal = (props: HelpModalProps) => {\n  const {\n    isOpen,\n    videoId,\n    onClose\n  } = props\n  return (\n    <Modal\n      open={isOpen}\n      onClose={onClose}\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <iframe\n        width=\"853\"\n        height=\"480\"\n        src={`https://www.youtube.com/embed/${videoId}`}\n        frameBorder=\"0\"\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n        allowFullScreen\n        title=\"Embedded youtube\"\n      />\n    </Modal>\n  )\n}","/* eslint-disable */\n// @ts-nocheck\nimport React from 'react'\nimport * as R from 'colay/ramda'\nimport {\n  useTheme as useMuiTheme,\n  ThemeProvider as MuiThemeProvider,\n  createTheme as createMuiTheme,\n  Button,\n  Typography,\n  Backdrop,\n  CircularProgress,\n  Modal,\n  Slide,\n  Snackbar,\n  Alert,\n  AlertTitle,\n} from '@mui/material'\nimport { View, useForwardRef, useMeasure } from 'colay-ui'\nimport { useImmer } from 'colay-ui/hooks/useImmer'\nimport {\n  DarkTheme,\n  DefaultTheme,\n  ThemeProvider,\n  useTheme\n} from '../../src/core/theme'\nimport { GraphRef } from '../../src/type'\nimport { GraphEditorProps, GraphEditor } from '../../src/components/GraphEditor'\nimport { Graph } from '../../src/components'\nimport { UseEffect } from '../../src/components/UseEffect'\nimport { drawLine } from '../../src/components/Graphics'\nimport defaultData from './data'\nimport * as C from 'colay/color'\nimport { getFilterSchema, getFetchSchema, VIEW_CONFIG_SCHEMA, RECORDED_EVENTS } from './constants'\nimport { EVENT } from '../../src/constants'\nimport { useController } from '../../src/plugins/controller'\nimport { createSchema } from '../../src/plugins/createSchema'\nimport { getSelectedItemByElement, getSelectedElementInfo } from '../../src/utils'\nimport { calculateStatistics } from './utils/networkStatistics'\nimport { RenderNode } from './RenderNode'\nimport { RenderEdge } from './RenderEdge'\nimport * as API from './API'\nimport { QueryBuilder } from './QueryBuilder'\nimport { HelpModal } from './HelpModal'\nimport { TermsOfService } from './TermsOfService'\n// import { Data } from '../../components/Graph/Default'\n// import { Auth } from 'aws-amplify'\nimport { useUser } from './useUser'\nimport GraphLayouts from '../../src/core/layouts'\n\nexport const ACTIONS = {\n  TEST_API: 'TEST_API',\n}\n\nconst HELP_VIDEO_ID = \"OrzMIhLpVps\"\n\nconst MUIDarkTheme = createMuiTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\nconst MUILightTheme = createMuiTheme({\n  palette: {\n    mode: 'light',\n  },\n});\nconst filterEdges = (nodes: { id: string }[]) => (edges: { source: string; target: string }[]) => {\n  const nodeMap = R.groupBy(R.prop('id'))(nodes)\n  return R.filter(\n    (edge) => nodeMap[edge.source] && nodeMap[edge.target]\n  )(edges)\n}\nconst CHUNK_COUNT = 3\nconst prepareData = (data) => {\n  const {\n    nodes,\n    edges\n  } = data\n  const preNodes = R.splitEvery(Math.ceil(nodes.length / CHUNK_COUNT))(nodes)[0]\n  const preEdges = filterEdges(preNodes)(edges)\n  return {\n    nodes: preNodes,\n    edges: preEdges\n  }\n}\n\nconst populate = (times, data) => ({\n  nodes: R.concatAll(R.times(()=>R.clone(data.nodes), times)).map(\n    (n, i) => i<data.nodes.length ? n : ({\n    ...n,\n    id: i, \n  })\n  ),\n  edges: R.concatAll(R.times(()=>R.clone(data.edges), times)).map(\n    (n, i) => i<data.edges.length ? n : ({\n    ...n,\n    id: i,\n  })\n  )\n})\n\nexport const createMockData = (nodeSize: number, edgeSize: number) => {\n  const nodes = R.range(0, nodeSize).map((index) => ({ id: `node-${index}` }) )\n  const edges = R.range(0, edgeSize).map((index) => ({ \n    id: `edge-${index}`,\n    source: `node-${Math.floor(Math.random() * nodeSize)}`,\n    target: `node-${Math.floor(Math.random() * nodeSize)}`,\n  }))\n  return {\n    nodes,\n    edges\n  }\n}\nconst COUNT = 1000\nconst data = createMockData(COUNT, COUNT)\n\n// const data = prepareData(defaultData)\n// const data = populate(4,prepareData(defaultData))\n\nconsole.log('NODES:', data.nodes.length, )\nconsole.log('EDGES:', data.edges.length, )\ntype Props = Partial<GraphEditorProps>\n\nconst NODE_SIZE = {\n  width: 80,\n  height: 80,\n}\n\nconst NODE_SIZE_RANGE_MAP = {\n  size: [60, 250],\n  community: [0, 10],\n  in_degree: [0, 10],\n  out_degree: [0, 10],\n  degree: [0, 20],\n  year: [\n    1969,\n    2015\n  ],\n}\nconst calculateNodeSize = (data: object, fieldName?: keyof typeof NODE_SIZE_RANGE_MAP) => {\n  if (!fieldName) {\n    return NODE_SIZE_RANGE_MAP.size[0]\n  }\n  const fieldRange = NODE_SIZE_RANGE_MAP[fieldName]\n  const sizeRangeGap = NODE_SIZE_RANGE_MAP.size[1] - NODE_SIZE_RANGE_MAP.size[0]\n  const fieldRangeGap = fieldRange[1] - fieldRange[0]\n  const fieldRangeValue = (data[fieldName] ?? fieldRange[0]) - fieldRange[0]\n  return ((fieldRangeValue / fieldRangeGap) * sizeRangeGap) + NODE_SIZE_RANGE_MAP.size[0]\n}\nconst calculateColor = (data: object, fieldName?: keyof typeof NODE_SIZE_RANGE_MAP) => {\n  if (!fieldName) {\n    return perc2color(0)\n  }\n  const fieldRange = NODE_SIZE_RANGE_MAP[fieldName]\n  const sizeRangeGap = NODE_SIZE_RANGE_MAP.size[1] - NODE_SIZE_RANGE_MAP.size[0]\n  const fieldRangeGap = fieldRange[1] - fieldRange[0]\n  const fieldRangeValue = (data[fieldName] ?? fieldRange[0]) - fieldRange[0]\n  return perc2color((fieldRangeValue / fieldRangeGap) * 100)\n}\nconst perc2color = (\n  perc: number,\n  min = 20,\n  max = 80\n) => {\n  var base = (max - min);\n\n  if (base === 0) { perc = 100; }\n  else {\n    perc = (perc - min) / base * 100;\n  }\n  var r, g, b = 0;\n  if (perc < 50) {\n    r = 255;\n    g = Math.round(5.1 * perc);\n  }\n  else {\n    g = 255;\n    r = Math.round(510 - 5.10 * perc);\n  }\n  var h = r * 0x10000 + g * 0x100 + b * 0x1;\n  return '#' + ('000000' + h.toString(16)).slice(-6);\n}\n\nconst AUTO_CREATED_SCHEMA = {\n  schema: createSchema(data.nodes)\n}\n\n\n\nconst DataBarHeader = () => {\n  // const [user] = useUser()\n  return (\n    <View\n      style={{ flexDirection: 'row', justifyContent: 'space-between' }}\n    >\n      {/* <Typography>{user?.attributes?.email}</Typography> */}\n      <Button\n        color=\"secondary\"\n        // onClick={() => Auth.signOut()}\n      >\n        Signout\n      </Button>\n    </View>\n  )\n}\n\nconst AppContainer = ({\n  changeMUITheme,\n  dispatch,\n  width,\n  height,\n  ...rest\n}) => {\n  const alertRef= React.useRef(null)\n  const configRef = React.useRef({\n    visualization: {\n      nodeSize: null,\n      nodeColor: null\n    },\n    fetching: {\n      source: [\n        \"Rechtspraak\"\n      ],\n      year: [\n        1969,\n        2015\n      ],\n      instances: [\n        \"Hoge Raad\",\n        \"Raad van State\",\n        \"Centrale Raad van Beroep\",\n        \"College van Beroep voor het bedrijfsleven\",\n        \"Gerechtshof Arnhem-Leeuwarden\"\n      ],\n      domains: [\n        \"Not\"\n      ],\n      doctypes: [\n        \"DEC\",\n        \"OPI\"\n      ],\n      degreesSources: 3,\n      popup: false,\n      liPermission: false,\n      keywords: \"test\",\n      degreesTargets: 3,\n      eclis: \"\",\n      articles: \"\"\n    },\n    filtering: {\n      year: [1960, 2021],\n      degree: [0, 100],\n      indegree: [0, 100],\n      outdegree: [0, 100]\n    }\n  })\n\n  const FILTER_SCHEMA = React.useMemo(() => getFilterSchema(), [])\n  const FETCH_SCHEMA = React.useMemo(() => getFetchSchema({\n    onPopupPress: async () => {\n      updateState((draft) => {\n        draft.queryBuilder.visible = true\n      })\n    }\n  }), [])\n  const THEMES = {\n    Dark: DarkTheme,\n    Default: DefaultTheme\n  }\n  const NODE_ID = 'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2014:3519'\n  const filteredDataRef = React.useRef({})\n  const [state, updateState] = useImmer({\n    queryBuilder: {\n      visible: false,\n      query: {\n        DataSources: [\n          \"RS\"\n        ],\n        Date: [\n          1969,\n          2015\n        ],\n        Instances: [\n          \"Hoge Raad\", \"Raad van State\",\n        ],\n        Domains: [\n          \"\"\n        ],\n        Doctypes: [\n          \"DEC\",\n          \"OPI\"\n        ],\n        DegreesSources: 1,\n        Keywords: \"\",\n        DegreesTargets: 1,\n        Eclis: \"ECLI:NL:GHSGR:1972:AB4988\",\n        Articles: \"\"\n      },\n    },\n    helpModal: {\n      isOpen: false,\n    }\n  })\n  const ActionBarRight = React.useMemo(() => () => (\n    <View\n      style={{ flexDirection: 'row' }}\n    >\n      <Button\n        onClick={() => updateState((draft) => {\n          draft.helpModal.isOpen = true\n        })}\n      >\n        Help\n      </Button>\n      <Button\n        onClick={() => dispatch({\n          type: ACTIONS.TEST_API\n        })}\n      >\n        Test the API\n      </Button>\n    </View>\n  ), [dispatch])\n  const [controllerProps, controller] = useController({\n    ...data,\n    // nodes: [],\n    // edges: [],\n    // events: RECORDED_EVENTS,\n    graphConfig: {\n      layout: Graph.Layouts.circle,\n      zoom: 0.2,\n      nodes: {},\n      clusters: [\n        // {\n        //   id: '123',\n        //   name: 'SimpleCluster',\n        //   ids: [\n        //      'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:XX:2010:BL0510'\n        //     // 'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2015:3019',\n        //     // 'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2015:644',\n        //     // 'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2014:3519'\n        //   ],\n        //   childClusterIds: []\n        // },\n        // {\n        //   id: '1234',\n        //   name: 'SimpleCluster2',\n        //   ids: [\n        //     'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2015:3019',\n        //     'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2015:644',\n        //     'http://deeplink.rechtspraak.nl/uitspraak?id=ECLI:NL:HR:2014:3519'\n        //   ],\n        //   childClusterIds: []\n        // }\n      ]\n    },\n    // modals: {\n    //   ElementSettings: {\n    //     form: {\n    //       schema: FILTER_SCHEMA.schema,\n    //     },\n    //     isOpen: false\n    //   }\n    // },\n    preferencesModal: {\n      // isOpen: true,\n    },\n    settingsBar: {\n      opened: true,\n      // forms: [AUTO_CREATED_SCHEMA,FETCH_SCHEMA, VIEW_CONFIG_SCHEMA, {...FILTER_SCHEMA,  formData: configRef.current.filtering}, ],\n      forms: [{ ...FETCH_SCHEMA, formData: configRef.current.fetching }, VIEW_CONFIG_SCHEMA, { ...FILTER_SCHEMA, formData: configRef.current.filtering },],\n      createClusterForm: {\n        ...FILTER_SCHEMA,\n        schema: { ...FILTER_SCHEMA.schema, title: 'Create Cluster', },\n        formData: configRef.current.filtering\n      },\n    },\n    dataBar: {\n      // isOpen: true,\n      editable: true,\n      header: DataBarHeader,\n    },\n    actionBar: {\n      // isOpen: true,\n      right: ActionBarRight,\n      // autoOpen: true,\n      eventRecording: false,\n      actions: {\n        // add: { visible: false },\n        // delete: { visible: false },\n      },\n      theming: {\n        options: [\n          {\n            name: 'Dark',\n            value: 'Dark',\n          },\n          {\n            name: 'Default',\n            value: 'Default',\n          }\n        ],\n        value: 'Default'\n      },\n    },\n    onEvent: async ({\n      type,\n      payload,\n      elementId,\n      graphRef,\n      graphEditor,\n      update,\n      state,\n    }, draft) => {\n      const {\n        cy,\n      } = graphEditor\n      const element = cy.$id(elementId)\n      // const {\n      //   item: eventRelatedItem,\n      // } = (element && getSelectedItemByElement(element, draft)) ?? {}\n      switch (type) {\n        case EVENT.ELEMENT_SELECTED: {\n          // draft.isLoading = true\n          const {\n            itemIds,\n          } = payload\n          draft.selectedElementIds = itemIds\n          const {\n            selectedItem\n          } = getSelectedElementInfo(draft, graphEditor)\n          let elementData = null\n          // try {\n          //   elementData = await API.getElementData({ id: selectedItem.data.ecli });\n          // } catch (error) {\n          //   alertRef.current.alert({\n          //     text: JSON.stringify(error),\n          //     type: 'error'\n          //   })\n          //   console.error(error)\n          // }\n          if (elementData && !R.isEmpty(elementData)) {\n            selectedItem.data = elementData\n          } else {\n            // alertRef.current.alert({\n            //   type: 'warning',\n            //   text: 'Data is not available!'\n            // })\n          }\n          break\n        }\n        case EVENT.CREATE_CLUSTER_FORM_SUBMIT: {\n          const {\n            name,\n            formData,\n          } = payload\n          const {\n            year,\n            degree,\n            indegree,\n            outdegree\n          } = formData\n          const clusterItemIds = draft.nodes.filter((item) => {\n            const element = cy.$id(item.id)\n            return (\n              R.inBetween(year[0], year[1])(item.data.year)\n              && R.inBetween(degree[0], degree[1])(element.degree())\n              && R.inBetween(indegree[0], indegree[1])(element.indegree())\n              && R.inBetween(outdegree[0], outdegree[1])(element.outdegree())\n\n            )\n          }).map((item) => item.id)\n          draft.graphConfig.clusters.push({\n            id: R.uuid(),\n            name,\n            ids: clusterItemIds,\n            childClusterIds: []\n          })\n          return false\n        }\n        case EVENT.SETTINGS_FORM_CHANGED: {\n          draft.settingsBar.forms[payload.index].formData = payload.value\n          if (payload.form.schema.title === FILTER_SCHEMA.schema.title) {\n            configRef.current = {\n              ...configRef.current,\n              filtering: payload.value\n            }\n            draft.graphConfig.nodes.filter = {\n              test: ({ element, item }) => {\n                const {\n                  year,\n                  degree,\n                  indegree,\n                  outdegree\n                } = payload.value\n                return (\n                  R.inBetween(year[0], year[1])(item.data.year)\n                  && R.inBetween(degree[0], degree[1])(element.degree())\n                  && R.inBetween(indegree[0], indegree[1])(element.indegree())\n                  && R.inBetween(outdegree[0], outdegree[1])(element.outdegree())\n\n                )\n              },\n              settings: {\n                opacity: 0.2\n              }\n            }\n\n          } else {\n            configRef.current = {\n              ...configRef.current,\n              visualization: payload.value\n            }\n          }\n          return false\n          break\n        }\n\n        case EVENT.CHANGE_THEME: {\n          const {\n            value\n          } = payload\n          draft.graphConfig.theme = THEMES[value]\n          changeMUITheme(value)\n          draft.actionBar.theming.value = value\n          return false\n          break\n        }\n        // case EVENT.LAYOUT_CHANGED: {\n        //   const {\n        //     value\n        //   } = payload\n        //   let layout: any\n        //     if (value.name) {\n        //       layout = R.pickBy((val) => R.isNotNil(val))({\n        //         // @ts-ignore\n        //         ...GraphLayouts[value.name],\n        //         ...value,\n        //       })\n        //     }\n        //     const { hitArea } = graphEditorRef.current.viewport\n        //     console.log(graphEditorRef.current.viewport)\n        //   const boundingBox = {\n        //     x1: hitArea.x + 300,\n        //     y1: hitArea.y + 300,\n        //     w: hitArea.width,\n        //     h: hitArea.height,\n        //   }\n        //     draft.graphConfig!.layout = {\n        //       ...layout,\n        //       boundingBox\n        //     }\n          \n        //   return false\n        //   break\n        // }\n        // case EVENT.ELEMENT_SELECTED: {\n        //   if (element.isNode()) {\n        //     // const TARGET_SIZE = 700\n        //     // const {\n        //     //   viewport\n        //     // } = graphRef.current\n        //     // const currentBoundingBox = {\n        //     //   x1: viewport.hitArea.x,\n        //     //   y1: viewport.hitArea.y,\n        //     //   w: viewport.hitArea.width,\n        //     //   h: viewport.hitArea.height,\n        //     // }\n        //     // const zoom = (currentBoundingBox.w / TARGET_SIZE ) * graphRef.current.viewport.scale.x\n        //     // const position = element.position()\n        //     // graphRef.current.viewport.snapZoom({\n        //     //   center: position, \n        //     //   width: TARGET_SIZE,\n        //     //   height: TARGET_SIZE,\n        //     //   time: Graph.Layouts.grid.animationDuration\n        //     // })\n        //     // element.connectedEdges().connectedNodes().layout({\n        //     //   ...Graph.Layouts.random,\n        //     //   boundingBox: {\n        //     //     ...currentBoundingBox,\n        //     //     h: TARGET_SIZE,\n        //     //     w: TARGET_SIZE,\n        //     //     // x1: element.position().x,\n        //     //     // y1: element.position().y,\n        //     //   }\n        //     // }).start()\n        //   }\n        //   // return false\n        //   break\n        // }\n\n        default:\n          break;\n      }\n      return null\n    }\n  })\n  // React.useEffect(() => {\n  //    if (user){\n  //     Auth.updateUserAttributes(user, {\n  //       'custom:isOldUser': 'no'\n  //     })\n  //    }\n  // }, [user])\n  // React.useEffect(() => {\n  //   const call = async () =>{\n  //     const results = await listCases()\n  //     const nodes = results.map(({id, ...data}) => ({\n  //       id: `${data.doctype}:${id}`,\n  //       data\n  //     }))\n  //     controller.update((draft) => {\n  //       draft.nodes = nodes\n  //       draft.edges = []\n  //     })\n  //   }\n  //   call()\n  // }, [])\n  \n  // React.useEffect(() => {\n  //   setTimeout(() => {\n  //     controller.update((draft) => {\n  //       draft.graphConfig.clusters[0].visible = true\n  //     })\n  //   }, 9000)\n  // }, [])\n  React.useEffect(() => {\n    // setTimeout(() => {\n    //   controller.update((draft, { graphEditorRef }) => {\n    //     try {\n    //       const { hitArea } = graphEditorRef.current.viewport\n    //       const margin = 500\n    //       const boundingBox = {\n    //         x1: hitArea.x + margin,\n    //         y1: hitArea.y + margin,\n    //         w: hitArea.width - 2*margin,\n    //         h: hitArea.height - 2*margin,\n    //       }\n    //       const layout = Graph.Layouts.cose\n    //       draft.graphConfig!.layout = {\n    //         ...layout,\n    //         animationDuration: 0,\n    //         boundingBox,\n    //       } \n    //     } catch (error) {\n    //       console.log('error',error)\n    //     }\n    //   })\n    // }, 1000)\n}, [])\n\n  return (\n    <View\n      style={{ display: 'flex', flexDirection: 'column', width: '100%', height: '100%' }}\n    >\n      <GraphEditor\n        {...controllerProps}\n        // {...R.omit(['eventHistory', ])(controllerProps)}\n        payload={[configRef.current]}\n        style={{ width, height }}\n        renderNode={(props) => (\n          <RenderNode\n            {...props}\n            {...configRef.current}\n          />\n        )}\n        renderEdge={RenderEdge}\n        {...rest}\n      />\n      <QueryBuilder\n        isOpen={state.queryBuilder.visible}\n        query={state.queryBuilder.query}\n        onClose={() => updateState((draft) => {\n          draft.queryBuilder.visible = false\n        })}\n        onStart={() => {\n          controller.update((draft) => {\n            draft.isLoading = true\n          })\n          updateState((draft) => {\n            draft.queryBuilder.visible = false\n          })\n        }}\n        onError={(error) => {\n          controller.update((draft) => {\n            draft.isLoading = false\n          })\n          updateState((draft) => {\n            draft.queryBuilder.visible = true\n          })\n          alertRef.current.alert({\n            type: 'warning',\n            text: error.message\n          })\n        }}\n        onFinish={({\n          nodes = [],\n          edges= [],\n          networkStatistics,\n          message\n        } = {}) => {\n          controller.update((draft) => {\n            draft.nodes = nodes\n            draft.edges = edges\n            draft.networkStatistics = {\n              local: networkStatistics\n            }\n            draft.isLoading = false\n            draft.graphConfig!.layout = Graph.Layouts.circle\n          })\n          if (message) {\n            alertRef.current.alert({\n              type: 'warning',\n              text: message\n            })\n          }\n        }}\n      />\n      <HelpModal \n        isOpen={state.helpModal.isOpen}\n        onClose={() => updateState((draft) => {\n          draft.helpModal.isOpen = false\n        })}\n        videoId={HELP_VIDEO_ID}\n      />\n      {/* <TermsOfService\n          user={user}\n          onAgree={async () => {\n            updateState((draft) => {\n              draft.helpModal.isOpen = true\n            })\n            await Auth.updateUserAttributes(user, {\n              'custom:isOldUser': 'yes'\n            })\n          }}\n          // onDisagree={() => {\n          //   alert('To proceed on signin, you need to accept the Terms of Usage!')\n          // }}\n        /> */}\n        <AlertContent \n          ref={alertRef}\n        />\n      <Backdrop\n        sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n        open={controllerProps.isLoading}\n      >\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </View>\n  )\n}\n\nconst AlertContent = React.forwardRef((props,forwardedRef) => {\n    const [open, setOpen] = React.useState(false);\n    const [messageInfo, setMessageInfo] = React.useState(undefined);\n    const ref = useForwardRef(\n      forwardedRef,\n      {},\n      ()=> ({\n        alert: (message) => {\n          setMessageInfo({\n            key: R.uuid(),\n            ...message,\n          })\n          setOpen(true)\n        }\n      })\n    )\n    const handleClose = (event, reason) => {\n      // if (reason === 'clickaway') {\n      //   return;\n      // }\n      setOpen(false);\n    }\n    const TransitionUp = React.useCallback((props) =>(\n      <Slide \n        {...props}\n        direction=\"down\"\n          handleExited={() => {\n          setMessageInfo(undefined);\n        }}\n      />\n    ), [])\n    return (\n      <Snackbar\n        key={messageInfo?.key}\n        anchorOrigin={{\n          vertical: 'top',\n          horizontal: 'right',\n        }}\n        open={open}\n        autoHideDuration={4000}\n        TransitionComponent={TransitionUp}\n        onClose={handleClose}\n      >\n        <Alert \n          onClose={handleClose}\n          severity={messageInfo?.type ?? 'error'}\n        >\n          <AlertTitle>{messageInfo ? R.upperFirst(messageInfo.type): ''}</AlertTitle>\n          {\n            messageInfo?.text\n          }\n        </Alert>\n      </Snackbar>\n    )\n})\n\nconst MUI_THEMES = {\n  Dark: MUIDarkTheme,\n  Light: MUILightTheme,\n}\n\nexport default (props: Props) => {\n  const [theme, setTheme] = React.useState(MUI_THEMES.Light)\n  return (\n    <MuiThemeProvider theme={theme}>\n      <AppContainer\n        changeMUITheme={(name) => setTheme(MUI_THEMES[name])}\n        {...props}\n      />\n    </MuiThemeProvider>\n  )\n}\n\n// type Node = {\n//   id: string;\n//   data: {\n//     year: string;\n//     ...\n//   },\n// }\n\n// type Edge = {\n//   id: string;\n//   source: string;\n//   target: string;\n//   data: {\n//     year: string;\n//     ...\n//   },\n// }","import React from 'react'\nimport App from './_examples/CaseLawExplorerExample'\nimport ProfilesApp from './_examples/Profiles'\nimport { ThemeProvider, createTheme } from '@mui/material'\nimport { useMeasure,View } from 'colay-ui'\n\nconst theme = createTheme()\n\n\nexport default () => {\n  const [containerRef, { width, height, initialized }] = useMeasure()\n  return (\n    <ThemeProvider theme={theme}>\n          <View \n      ref={containerRef}\n      style={{\n        width: '100%', height: '100%'\n      }}\n    >\n      {\n        initialized && (\n          <App\n            dispatch={() => {}}\n            {...{width, height}}\n          />\n        )\n      }\n    </View>\n    </ThemeProvider>\n    \n  )\n}\n"],"sourceRoot":""}